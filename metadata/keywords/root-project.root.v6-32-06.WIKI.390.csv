id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://root.cern/root/html534/TDataType.html:6994,Deployability,Update,UpdateListOfTypes,6994,"CheckInfo(); voidSetType(const char* name). Data Members; public:. enum TDictionary::ESTLType { kNone; kVector; kList; kDeque; kMap; kMultimap; kSet; kMultiset; kBitset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TypedefInfo_t*fInfopointer to CINT typedef info; Long_tfPropertyThe property information for the (potential) underlying class; Int_tfSizesize of type; TStringfTrueNameTrue name of the (potential) underlying class ; EDataTypefTypetype id; static TDataType*fgBuiltins[22]Array of builtins. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataType(TypedefInfo_t* info = 0); Default TDataType ctor. TDataTypes are constructed in TROOT via; a call to TCint::UpdateListOfTypes(). TDataType(const char* typenam); Constructor for basic data types, like ""char"", ""unsigned char"", etc. TDataType(const TDataType& ); copy constructor. TDataType& operator=(const TDataType& ); assignement operator. ~TDataType(); TDataType dtor deletes adopted CINT TypedefInfo object. const char * GetTypeName(EDataType type); Return the name of the type. const char * GetTypeName() const; Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"".; Result needs to be used or copied immediately. const char * GetFullTypeName() const; Get full type description of typedef, e,g.: ""class TDirectory*"". EDataType GetType(const type_info& typeinfo); Set type id depending on name. const char * AsString(void* buf) const; Return string containing value in buffer formatted according to; the basic data type. The result needs to be used or copied immediately. Long_t Property() const; Get property description word. For meaning of bits see EProperty. void Se",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDataType.html:7681,Integrability,depend,depending,7681,"NameTrue name of the (potential) underlying class ; EDataTypefTypetype id; static TDataType*fgBuiltins[22]Array of builtins. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataType(TypedefInfo_t* info = 0); Default TDataType ctor. TDataTypes are constructed in TROOT via; a call to TCint::UpdateListOfTypes(). TDataType(const char* typenam); Constructor for basic data types, like ""char"", ""unsigned char"", etc. TDataType(const TDataType& ); copy constructor. TDataType& operator=(const TDataType& ); assignement operator. ~TDataType(); TDataType dtor deletes adopted CINT TypedefInfo object. const char * GetTypeName(EDataType type); Return the name of the type. const char * GetTypeName() const; Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"".; Result needs to be used or copied immediately. const char * GetFullTypeName() const; Get full type description of typedef, e,g.: ""class TDirectory*"". EDataType GetType(const type_info& typeinfo); Set type id depending on name. const char * AsString(void* buf) const; Return string containing value in buffer formatted according to; the basic data type. The result needs to be used or copied immediately. Long_t Property() const; Get property description word. For meaning of bits see EProperty. void SetType(const char* name); Set type id depending on name. Int_t Size() const; Get size of basic typedef'ed type. void CheckInfo(); Refresh the underlying information. void AddBuiltins(TCollection* types); Create the TDataType objects for builtins. TDataType* GetDataType(EDataType type); Given a EDataType type, get the TDataType* that represents it. Int_t GetType() const; { return (Int_t)fType; }. » Author: Rene Brun 04/02/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/meta:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDataType.html:8012,Integrability,depend,depending,8012,"ential) underlying class ; EDataTypefTypetype id; static TDataType*fgBuiltins[22]Array of builtins. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataType(TypedefInfo_t* info = 0); Default TDataType ctor. TDataTypes are constructed in TROOT via; a call to TCint::UpdateListOfTypes(). TDataType(const char* typenam); Constructor for basic data types, like ""char"", ""unsigned char"", etc. TDataType(const TDataType& ); copy constructor. TDataType& operator=(const TDataType& ); assignement operator. ~TDataType(); TDataType dtor deletes adopted CINT TypedefInfo object. const char * GetTypeName(EDataType type); Return the name of the type. const char * GetTypeName() const; Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"".; Result needs to be used or copied immediately. const char * GetFullTypeName() const; Get full type description of typedef, e,g.: ""class TDirectory*"". EDataType GetType(const type_info& typeinfo); Set type id depending on name. const char * AsString(void* buf) const; Return string containing value in buffer formatted according to; the basic data type. The result needs to be used or copied immediately. Long_t Property() const; Get property description word. For meaning of bits see EProperty. void SetType(const char* name); Set type id depending on name. Int_t Size() const; Get size of basic typedef'ed type. void CheckInfo(); Refresh the underlying information. void AddBuiltins(TCollection* types); Create the TDataType objects for builtins. TDataType* GetDataType(EDataType type); Given a EDataType type, get the TDataType* that represents it. Int_t GetType() const; { return (Int_t)fType; }. » Author: Rene Brun 04/02/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/meta:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDataType.html:3141,Modifiability,Inherit,InheritsFrom,3141,"ttributeMap() const; static TDataType*GetDataType(EDataType type); static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; Int_tGetType() const; static EDataTypeGetType(const type_info& typeinfo); const char*GetTypeName() const; static const char*GetTypeName(EDataType type); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDataType.html:3207,Modifiability,Inherit,InheritsFrom,3207," static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; Int_tGetType() const; static EDataTypeGetType(const type_info& typeinfo); const char*GetTypeName() const; static const char*GetTypeName(EDataType type); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pain",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDataType.html:6799,Modifiability,Inherit,Inheritance,6799,"(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TDataType&operator=(const TDataType&). private:. voidCheckInfo(); voidSetType(const char* name). Data Members; public:. enum TDictionary::ESTLType { kNone; kVector; kList; kDeque; kMap; kMultimap; kSet; kMultiset; kBitset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TypedefInfo_t*fInfopointer to CINT typedef info; Long_tfPropertyThe property information for the (potential) underlying class; Int_tfSizesize of type; TStringfTrueNameTrue name of the (potential) underlying class ; EDataTypefTypetype id; static TDataType*fgBuiltins[22]Array of builtins. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataType(TypedefInfo_t* info = 0); Default TDataType ctor. TDataTypes are constructed in TROOT via; a call to TCint::UpdateListOfTypes(). TDataType(const char* typenam); Constructor for basic data types, like ""char"", ""unsigned char"", etc. TDataType(const TDataType& ); copy constructor. TDataType& operator=(const TDataType& ); assignement operator. ~TDataType(); TDataType dtor deletes adopted CINT TypedefInfo object. const char * GetTypeName(EDataType type); Return the name of the type. const char * GetTypeName() const; Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"".; Result needs to be used or copied immediately. const char * GetFullTypeName() const; Get full type description of typedef, e,g.: ""class TDirectory*"". EDataType GetType(const type_info& typeinfo); Set type id depending on name. const char * AsString(void* buf) const; Return string containing value in buffer formatted according to; the basic data type.",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDataType.html:6812,Modifiability,Inherit,Inherited,6812,"(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TDataType&operator=(const TDataType&). private:. voidCheckInfo(); voidSetType(const char* name). Data Members; public:. enum TDictionary::ESTLType { kNone; kVector; kList; kDeque; kMap; kMultimap; kSet; kMultiset; kBitset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TypedefInfo_t*fInfopointer to CINT typedef info; Long_tfPropertyThe property information for the (potential) underlying class; Int_tfSizesize of type; TStringfTrueNameTrue name of the (potential) underlying class ; EDataTypefTypetype id; static TDataType*fgBuiltins[22]Array of builtins. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataType(TypedefInfo_t* info = 0); Default TDataType ctor. TDataTypes are constructed in TROOT via; a call to TCint::UpdateListOfTypes(). TDataType(const char* typenam); Constructor for basic data types, like ""char"", ""unsigned char"", etc. TDataType(const TDataType& ); copy constructor. TDataType& operator=(const TDataType& ); assignement operator. ~TDataType(); TDataType dtor deletes adopted CINT TypedefInfo object. const char * GetTypeName(EDataType type); Return the name of the type. const char * GetTypeName() const; Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"".; Result needs to be used or copied immediately. const char * GetFullTypeName() const; Get full type description of typedef, e,g.: ""class TDirectory*"". EDataType GetType(const type_info& typeinfo); Set type id depending on name. const char * AsString(void* buf) const; Return string containing value in buffer formatted according to; the basic data type.",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDataType.html:501,Security,access,accessible,501,". TDataType. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » META; » TDataType. class TDataType: public TDictionary. Basic data type descriptor (datatype information is obtained from; CINT). This class describes the attributes of type definitions; (typedef's). The TROOT class contains a list of all currently; defined types (accessible via TROOT::GetListOfTypes()). Function Members (Methods); public:. TDataType(TypedefInfo_t* info = 0); TDataType(const char* typenam); virtual~TDataType(); voidTObject::AbstractMethod(const char* method) const; static voidAddBuiltins(TCollection* types); virtual voidTObject::AppendPad(Option_t* option = """"); const char*AsString(void* buf) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidTDictionary::CreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObje",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDataType.html:3031,Security,Hash,Hash,3031,"r* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDictAttributeMap*TDictionary::GetAttributeMap() const; static TDataType*GetDataType(EDataType type); static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; Int_tGetType() const; static EDataTypeGetType(const type_info& typeinfo); const char*GetTypeName() const; static const char*GetTypeName(EDataType type); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDataType.html:5392,Testability,Test,TestBit,5392,"rs, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Long_tProperty() const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); Int_tSize() const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDataType.html:5431,Testability,Test,TestBits,5431,"rs, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Long_tProperty() const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); Int_tSize() const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDataType.html:992,Usability,Clear,Clear,992," TDataType(TypedefInfo_t* info = 0); TDataType(const char* typenam); virtual~TDataType(); voidTObject::AbstractMethod(const char* method) const; static voidAddBuiltins(TCollection* types); virtual voidTObject::AppendPad(Option_t* option = """"); const char*AsString(void* buf) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidTDictionary::CreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObje",MatchSource.WIKI,root/html534/TDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDataType.html
https://root.cern/root/html534/TDatime.html:3034,Energy Efficiency,allocate,allocated,3034,") const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. UInt_tfDatimeDate (relative to 1995) + time. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDatime(); Create a TDatime and set it to the current time. TDatime(Int_t date, Int_t time); Create a TDatime and set it to the specified date and time.; See Set(Int_t, Int_t) about the date, time format. TDatime(Int_t year, Int_t month, Int_t day, Int_t hour, Int_t min, Int_t sec); Create a TDatime and set it to the specified year, month,; day, time, hour, minute and second. See Set() about the format. TDatime(const char* sqlDateTime); Expects as input a string in SQL date/time compatible format, like:; yyyy-mm-dd hh:mm:ss. Int_t GetDayOfWeek() const; Returns day of week, with Monday being day 1 and Sunday day 7. const char * AsString() const; Return the date & time as a string (ctime() format).; Copy result because it points to a statically allocated string. const char * AsString(char* out) const; Return the date & time as a string (ctime() format).; Result is copied into out (and out is returned). Make sure; out can at least contain 26 characters. Thread safe. const char * AsSQLString() const; Return the date & time in SQL compatible string format, like:; 1997-01-15 20:16:28. The returned string buffer is static and; will be reused. UInt_t Convert(Bool_t toGMT = kFALSE) const; Convert fDatime from TDatime format to the standard time_t format.; If toGMT is true, the time offset of the current local time zone is; subtracted from the returned time_t. One use of such a non-standard time_t; value is to convert a TDatime object that contains local time to GMT,; as in this example:. TDatime now;; now.Set(now.Convert(kTRUE));. Caution: the time_t returned from Convert(kTRUE) is incompatible with; regular Unix time - it contains an artificial, locale-dependent offset. void Copy(TDatime& datime) const; Copy this to ",MatchSource.WIKI,root/html534/TDatime.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDatime.html
https://root.cern/root/html534/TDatime.html:3954,Integrability,depend,dependent,3954," 7. const char * AsString() const; Return the date & time as a string (ctime() format).; Copy result because it points to a statically allocated string. const char * AsString(char* out) const; Return the date & time as a string (ctime() format).; Result is copied into out (and out is returned). Make sure; out can at least contain 26 characters. Thread safe. const char * AsSQLString() const; Return the date & time in SQL compatible string format, like:; 1997-01-15 20:16:28. The returned string buffer is static and; will be reused. UInt_t Convert(Bool_t toGMT = kFALSE) const; Convert fDatime from TDatime format to the standard time_t format.; If toGMT is true, the time offset of the current local time zone is; subtracted from the returned time_t. One use of such a non-standard time_t; value is to convert a TDatime object that contains local time to GMT,; as in this example:. TDatime now;; now.Set(now.Convert(kTRUE));. Caution: the time_t returned from Convert(kTRUE) is incompatible with; regular Unix time - it contains an artificial, locale-dependent offset. void Copy(TDatime& datime) const; Copy this to datime. void FillBuffer(char*& buffer); Encode Date/Time into buffer, used by I/O system. UInt_t Get() const; Return raw date/time as encoded by TDatime. Note, this value cannot; be used to e.g. calculate time differences, as it is an encoded value.; To calculate time differences use the Convert() method to get a time; in seconds and then subtract the values. Int_t GetDate() const; Return date in form of 19971224 (i.e. 24/12/1997). Int_t GetTime() const; Return time in form of 123623 (i.e. 12:36:23). void Print(Option_t* option = """") const; Print date and time. void ReadBuffer(char*& buffer); Decode Date/Time from output buffer, used by I/O system. void Set(); Set Date/Time to current time as reported by the system.; Date and Time are encoded into one single unsigned 32 bit word.; Date is stored with the origin being the 1st january 1995.; Time has 1 second precision. ",MatchSource.WIKI,root/html534/TDatime.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDatime.html
https://root.cern/root/html534/TDatime.html:626,Modifiability,portab,portable,626,". TDatime. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TDatime. class TDatime. TDatime. This class stores the date and time with a precision of one second; in an unsigned 32 bit word (e.g. 950130 124559). The date is stored; with the origin being the 1st january 1995. This class has no support for time zones. The time is assumed; to be in the local time of the machine where the object was created.; As a result, TDatime objects are not portable between machines; operating in different time zones and unsuitable for storing the; date/time of data taking events and the like. If absolute time is; required, use TTimeStamp. Function Members (Methods); public:. TDatime(); TDatime(const TDatime& d); TDatime(const char* sqlDateTime); TDatime(UInt_t tloc, Bool_t dosDate = kFALSE); TDatime(Int_t date, Int_t time); TDatime(Int_t year, Int_t month, Int_t day, Int_t hour, Int_t min, Int_t sec); virtual~TDatime(); const char*AsSQLString() const; const char*AsString() const; const char*AsString(char* out) const; static TClass*Class(); UInt_tConvert(Bool_t toGMT = kFALSE) const; voidCopy(TDatime& datime) const; voidFillBuffer(char*& buffer); UInt_tGet() const; Int_tGetDate() const; static voidGetDateTime(UInt_t datetime, Int_t& date, Int_t& time); Int_tGetDay() const; Int_tGetDayOfWeek() const; Int_tGetHour() const; Int_tGetMinute() const; Int_tGetMonth() const; Int_tGetSecond() const; Int_tGetTime() const; Int_tGetYear() const; virtual TClass*IsA() const; TDatime&operator=(const TDatime& d); voidPrint(Option_t* option = """") const; voidReadBuffer(char*& buffer); voidSet(); voidSet(const char* sqlDateTime); voidSet(UInt_t tloc, Bool_t dosDate = kFALSE); voidSet(Int_t date, Int_t time); voidSet(Int_t year, Int_t month, Int_t day, Int_t hour, Int_t min, Int_t sec); virtual voidShowMembers(TMemberInspecto",MatchSource.WIKI,root/html534/TDatime.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDatime.html
https://root.cern/root/html534/TDatime.html:2204,Modifiability,Inherit,Inheritance,2204,"nvert(Bool_t toGMT = kFALSE) const; voidCopy(TDatime& datime) const; voidFillBuffer(char*& buffer); UInt_tGet() const; Int_tGetDate() const; static voidGetDateTime(UInt_t datetime, Int_t& date, Int_t& time); Int_tGetDay() const; Int_tGetDayOfWeek() const; Int_tGetHour() const; Int_tGetMinute() const; Int_tGetMonth() const; Int_tGetSecond() const; Int_tGetTime() const; Int_tGetYear() const; virtual TClass*IsA() const; TDatime&operator=(const TDatime& d); voidPrint(Option_t* option = """") const; voidReadBuffer(char*& buffer); voidSet(); voidSet(const char* sqlDateTime); voidSet(UInt_t tloc, Bool_t dosDate = kFALSE); voidSet(Int_t date, Int_t time); voidSet(Int_t year, Int_t month, Int_t day, Int_t hour, Int_t min, Int_t sec); virtual voidShowMembers(TMemberInspector&); Int_tSizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. UInt_tfDatimeDate (relative to 1995) + time. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDatime(); Create a TDatime and set it to the current time. TDatime(Int_t date, Int_t time); Create a TDatime and set it to the specified date and time.; See Set(Int_t, Int_t) about the date, time format. TDatime(Int_t year, Int_t month, Int_t day, Int_t hour, Int_t min, Int_t sec); Create a TDatime and set it to the specified year, month,; day, time, hour, minute and second. See Set() about the format. TDatime(const char* sqlDateTime); Expects as input a string in SQL date/time compatible format, like:; yyyy-mm-dd hh:mm:ss. Int_t GetDayOfWeek() const; Returns day of week, with Monday being day 1 and Sunday day 7. const char * AsString() const; Return the date & time as a string (ctime() format).; Copy result because it points to a statically allocated string. const char * AsString(char* out) const; Return the date & time as a string (ctime() format).; Result is copied into out (and out is returned). Make sure; out can at least contain",MatchSource.WIKI,root/html534/TDatime.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDatime.html
https://root.cern/root/html534/TDatime.html:2217,Modifiability,Inherit,Inherited,2217,"nvert(Bool_t toGMT = kFALSE) const; voidCopy(TDatime& datime) const; voidFillBuffer(char*& buffer); UInt_tGet() const; Int_tGetDate() const; static voidGetDateTime(UInt_t datetime, Int_t& date, Int_t& time); Int_tGetDay() const; Int_tGetDayOfWeek() const; Int_tGetHour() const; Int_tGetMinute() const; Int_tGetMonth() const; Int_tGetSecond() const; Int_tGetTime() const; Int_tGetYear() const; virtual TClass*IsA() const; TDatime&operator=(const TDatime& d); voidPrint(Option_t* option = """") const; voidReadBuffer(char*& buffer); voidSet(); voidSet(const char* sqlDateTime); voidSet(UInt_t tloc, Bool_t dosDate = kFALSE); voidSet(Int_t date, Int_t time); voidSet(Int_t year, Int_t month, Int_t day, Int_t hour, Int_t min, Int_t sec); virtual voidShowMembers(TMemberInspector&); Int_tSizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. UInt_tfDatimeDate (relative to 1995) + time. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDatime(); Create a TDatime and set it to the current time. TDatime(Int_t date, Int_t time); Create a TDatime and set it to the specified date and time.; See Set(Int_t, Int_t) about the date, time format. TDatime(Int_t year, Int_t month, Int_t day, Int_t hour, Int_t min, Int_t sec); Create a TDatime and set it to the specified year, month,; day, time, hour, minute and second. See Set() about the format. TDatime(const char* sqlDateTime); Expects as input a string in SQL date/time compatible format, like:; yyyy-mm-dd hh:mm:ss. Int_t GetDayOfWeek() const; Returns day of week, with Monday being day 1 and Sunday day 7. const char * AsString() const; Return the date & time as a string (ctime() format).; Copy result because it points to a statically allocated string. const char * AsString(char* out) const; Return the date & time as a string (ctime() format).; Result is copied into out (and out is returned). Make sure; out can at least contain",MatchSource.WIKI,root/html534/TDatime.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDatime.html
https://root.cern/root/html534/TDatime.html:3253,Safety,safe,safe,3253,"ries. Function documentation; TDatime(); Create a TDatime and set it to the current time. TDatime(Int_t date, Int_t time); Create a TDatime and set it to the specified date and time.; See Set(Int_t, Int_t) about the date, time format. TDatime(Int_t year, Int_t month, Int_t day, Int_t hour, Int_t min, Int_t sec); Create a TDatime and set it to the specified year, month,; day, time, hour, minute and second. See Set() about the format. TDatime(const char* sqlDateTime); Expects as input a string in SQL date/time compatible format, like:; yyyy-mm-dd hh:mm:ss. Int_t GetDayOfWeek() const; Returns day of week, with Monday being day 1 and Sunday day 7. const char * AsString() const; Return the date & time as a string (ctime() format).; Copy result because it points to a statically allocated string. const char * AsString(char* out) const; Return the date & time as a string (ctime() format).; Result is copied into out (and out is returned). Make sure; out can at least contain 26 characters. Thread safe. const char * AsSQLString() const; Return the date & time in SQL compatible string format, like:; 1997-01-15 20:16:28. The returned string buffer is static and; will be reused. UInt_t Convert(Bool_t toGMT = kFALSE) const; Convert fDatime from TDatime format to the standard time_t format.; If toGMT is true, the time offset of the current local time zone is; subtracted from the returned time_t. One use of such a non-standard time_t; value is to convert a TDatime object that contains local time to GMT,; as in this example:. TDatime now;; now.Set(now.Convert(kTRUE));. Caution: the time_t returned from Convert(kTRUE) is incompatible with; regular Unix time - it contains an artificial, locale-dependent offset. void Copy(TDatime& datime) const; Copy this to datime. void FillBuffer(char*& buffer); Encode Date/Time into buffer, used by I/O system. UInt_t Get() const; Return raw date/time as encoded by TDatime. Note, this value cannot; be used to e.g. calculate time differences, as it is a",MatchSource.WIKI,root/html534/TDatime.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDatime.html
https://root.cern/root/html534/TDecayChannel.html:1436,Availability,Error,Error,1436,"Channel&); TDecayChannel(Int_t Number, Int_t MatrixElementCode, Double_t BranchingRatio, Int_t NDaughters, Int_t* DaughterPdgCode); virtual~TDecayChannel(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Double_tBranchingRatio(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; Int_tDaughterPdgCode(Int_t i); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtua",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecayChannel.html:1565,Availability,error,error,1565,"); virtual~TDecayChannel(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Double_tBranchingRatio(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; Int_tDaughterPdgCode(Int_t i); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) con",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecayChannel.html:1649,Availability,error,error,1649,"irtual voidTObject::AppendPad(Option_t* option = """"); Double_tBranchingRatio(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; Int_tDaughterPdgCode(Int_t i); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecayChannel.html:2529,Modifiability,Inherit,InheritsFrom,2529,"d, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; Int_tMatrixElementCode(); voidTObject::MayNotUse(const char* method) const; Int_tNDaughters(); virtual Bool_tTObject::Notify(); Int_tNumber(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, ",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecayChannel.html:2595,Modifiability,Inherit,InheritsFrom,2595,"cute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; Int_tMatrixElementCode(); voidTObject::MayNotUse(const char* method) const; Int_tNDaughters(); virtual Bool_tTObject::Notify(); Int_tNumber(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecayChannel.html:5601,Modifiability,Inherit,Inheritance,5601,"rNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfBranchingRatiobranching ratio ( < 1); TArrayIfDaughtersPDG codes of the daughters; Int_tfMatrixElementCodematrix element for this decay mode; Int_tfNumberchannel number. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecayChannel(); default constructor. TDecayChannel(Int_t Number, Int_t MatrixElementCode, Double_t BranchingRatio, Int_t NDaughters, Int_t* DaughterPdgCode); constructor. ~TDecayChannel(). TDecayChannel(); ****** constructors and destructor. Int_t Number(); ****** accessors. { return fNumber; }. Int_t MatrixElementCode(); { return fMatrixElementCode; }. Int_t NDaughters(); { return fDaughters.fN; }. Double_t BranchingRatio(); { return fBranchingRatio; }. Int_t DaughterPdgCode(Int_t i); { return fDaughters.fArray[i]; }. » Author: P.Murat 15/02/2001 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/eg:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecayChannel.html:5614,Modifiability,Inherit,Inherited,5614,"rNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfBranchingRatiobranching ratio ( < 1); TArrayIfDaughtersPDG codes of the daughters; Int_tfMatrixElementCodematrix element for this decay mode; Int_tfNumberchannel number. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecayChannel(); default constructor. TDecayChannel(Int_t Number, Int_t MatrixElementCode, Double_t BranchingRatio, Int_t NDaughters, Int_t* DaughterPdgCode); constructor. ~TDecayChannel(). TDecayChannel(); ****** constructors and destructor. Int_t Number(); ****** accessors. { return fNumber; }. Int_t MatrixElementCode(); { return fMatrixElementCode; }. Int_t NDaughters(); { return fDaughters.fN; }. Double_t BranchingRatio(); { return fBranchingRatio; }. Int_t DaughterPdgCode(Int_t i); { return fDaughters.fArray[i]; }. » Author: P.Murat 15/02/2001 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/eg:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecayChannel.html:2419,Security,Hash,Hash,2419,"l voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; Int_tMatrixElementCode(); voidTObject::MayNotUse(const char* method) const; Int_tNDaughters(); virtual Bool_tTObject::Notify(); Int_tNumber(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::ope",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecayChannel.html:5944,Security,access,accessors,5944,"rNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfBranchingRatiobranching ratio ( < 1); TArrayIfDaughtersPDG codes of the daughters; Int_tfMatrixElementCodematrix element for this decay mode; Int_tfNumberchannel number. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecayChannel(); default constructor. TDecayChannel(Int_t Number, Int_t MatrixElementCode, Double_t BranchingRatio, Int_t NDaughters, Int_t* DaughterPdgCode); constructor. ~TDecayChannel(). TDecayChannel(); ****** constructors and destructor. Int_t Number(); ****** accessors. { return fNumber; }. Int_t MatrixElementCode(); { return fMatrixElementCode; }. Int_t NDaughters(); { return fDaughters.fN; }. Double_t BranchingRatio(); { return fBranchingRatio; }. Int_t DaughterPdgCode(Int_t i); { return fDaughters.fArray[i]; }. » Author: P.Murat 15/02/2001 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/eg:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecayChannel.html:4620,Testability,Test,TestBit,4620,"ption = """") const; Int_tMatrixElementCode(); voidTObject::MayNotUse(const char* method) const; Int_tNDaughters(); virtual Bool_tTObject::Notify(); Int_tNumber(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecayChannel&operator=(const TDecayChannel&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecayChannel.html:4659,Testability,Test,TestBits,4659,"ption = """") const; Int_tMatrixElementCode(); voidTObject::MayNotUse(const char* method) const; Int_tNDaughters(); virtual Bool_tTObject::Notify(); Int_tNumber(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecayChannel&operator=(const TDecayChannel&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecayChannel.html:865,Usability,Clear,Clear,865," TDecayChannel(); TDecayChannel(const TDecayChannel&); TDecayChannel(Int_t Number, Int_t MatrixElementCode, Double_t BranchingRatio, Int_t NDaughters, Int_t* DaughterPdgCode); virtual~TDecayChannel(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Double_tBranchingRatio(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; Int_tDaughterPdgCode(Int_t i); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::Get",MatchSource.WIKI,root/html534/TDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecayChannel.html
https://root.cern/root/html534/TDecompBase.html:617,Availability,avail,available,617,". TDecompBase. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATRIX; » TDecompBase. class TDecompBase: public TObject. Decomposition Base class. This class forms the base for all the decompositions methods in the; linear algebra package .; It or its derived classes have installed the methods to solve; equations,invert matrices and calculate determinants while monitoring; the accuracy. Each derived class has always the following methods available:. Condition() :; In an iterative scheme the condition number for matrix inversion is; calculated . This number is of interest for estimating the accuracy; of x in the equation Ax=b; For example:; A is a (10x10) Hilbert matrix which looks deceivingly innocent; and simple, A(i,j) = 1/(i+j+1); b(i) = Sum_j A(i,j), so a sum of a row in A. the solution is x(i) = 1. i=0,.,9. However,; TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); gives,. {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}. Looking at the condition number, this is in line with expected the; accuracy . The condition number is 3.957e+12 . As a simple rule of; thumb, a condition number of 1.0e+n means that you lose up to n; digits of accuracy in a solution . Since doubles are stored with 15; digits, we can expect the accuracy to be as small as 3 digits . Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supp",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:2386,Availability,Toler,Tolerances,2386,"a solution . Since doubles are stored with 15; digits, we can expect the accuracy to be as small as 3 digits . Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:2414,Availability,toler,tolerance,2414,"cy to be as small as 3 digits . Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, o",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:2797,Availability,toler,tolerance,2797,"omposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the ",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:2855,Availability,toler,tolerance,2855,"; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; const Double_t max_abs ",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:3293,Availability,toler,tolerance,3293,"l to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);. For usage examples see $ROOTSYS/test/stressLinear.cxx. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. vir",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:3349,Availability,toler,tolerance,3349,"s calculated . Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);. For usage examples see $ROOTSYS/test/stressLinear.cxx. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDecompBase(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* op",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:3761,Availability,toler,tolerance,3761,"ther linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);. For usage examples see $ROOTSYS/test/stressLinear.cxx. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDecompBase(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tCondition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tD",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:4216,Availability,avail,available,4216,"ad to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);. For usage examples see $ROOTSYS/test/stressLinear.cxx. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDecompBase(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tCondition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const;",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:5157,Availability,Error,Error,5157,,MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:5286,Availability,error,error,5286,"tractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tCondition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetColLwb() const; Double_tGetCondition() const; Double_tGetDet1() const; Double_tGetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tGetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bo",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:5370,Availability,error,error,5370,"on = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tCondition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetColLwb() const; Double_tGetCondition() const; Double_tGetDet1() const; Double_tGetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tGetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtu",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:448,Deployability,install,installed,448,". TDecompBase. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATRIX; » TDecompBase. class TDecompBase: public TObject. Decomposition Base class. This class forms the base for all the decompositions methods in the; linear algebra package .; It or its derived classes have installed the methods to solve; equations,invert matrices and calculate determinants while monitoring; the accuracy. Each derived class has always the following methods available:. Condition() :; In an iterative scheme the condition number for matrix inversion is; calculated . This number is of interest for estimating the accuracy; of x in the equation Ax=b; For example:; A is a (10x10) Hilbert matrix which looks deceivingly innocent; and simple, A(i,j) = 1/(i+j+1); b(i) = Sum_j A(i,j), so a sum of a row in A. the solution is x(i) = 1. i=0,.,9. However,; TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); gives,. {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}. Looking at the condition number, this is in line with expected the; accuracy . The condition number is 3.957e+12 . As a simple rule of; thumb, a condition number of 1.0e+n means that you lose up to n; digits of accuracy in a solution . Since doubles are stored with 15; digits, we can expect the accuracy to be as small as 3 digits . Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supp",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:539,Energy Efficiency,monitor,monitoring,539,". TDecompBase. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATRIX; » TDecompBase. class TDecompBase: public TObject. Decomposition Base class. This class forms the base for all the decompositions methods in the; linear algebra package .; It or its derived classes have installed the methods to solve; equations,invert matrices and calculate determinants while monitoring; the accuracy. Each derived class has always the following methods available:. Condition() :; In an iterative scheme the condition number for matrix inversion is; calculated . This number is of interest for estimating the accuracy; of x in the equation Ax=b; For example:; A is a (10x10) Hilbert matrix which looks deceivingly innocent; and simple, A(i,j) = 1/(i+j+1); b(i) = Sum_j A(i,j), so a sum of a row in A. the solution is x(i) = 1. i=0,.,9. However,; TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); gives,. {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}. Looking at the condition number, this is in line with expected the; accuracy . The condition number is 3.957e+12 . As a simple rule of; thumb, a condition number of 1.0e+n means that you lose up to n; digits of accuracy in a solution . Since doubles are stored with 15; digits, we can expect the accuracy to be as small as 3 digits . Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supp",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:1569,Energy Efficiency,Power,Power,1569,"itoring; the accuracy. Each derived class has always the following methods available:. Condition() :; In an iterative scheme the condition number for matrix inversion is; calculated . This number is of interest for estimating the accuracy; of x in the equation Ax=b; For example:; A is a (10x10) Hilbert matrix which looks deceivingly innocent; and simple, A(i,j) = 1/(i+j+1); b(i) = Sum_j A(i,j), so a sum of a row in A. the solution is x(i) = 1. i=0,.,9. However,; TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); gives,. {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}. Looking at the condition number, this is in line with expected the; accuracy . The condition number is 3.957e+12 . As a simple rule of; thumb, a condition number of 1.0e+n means that you lose up to n; digits of accuracy in a solution . Since doubles are stored with 15; digits, we can expect the accuracy to be as small as 3 digits . Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes ",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:2565,Energy Efficiency,power,powerful,2565,"nt this way makes under/over-flow very; unlikely . Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice t",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:2582,Energy Efficiency,monitor,monitor,2582,"nt this way makes under/over-flow very; unlikely . Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice t",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:3750,Energy Efficiency,reduce,reduce,3750,"ther linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);. For usage examples see $ROOTSYS/test/stressLinear.cxx. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDecompBase(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tCondition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tD",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:10128,Energy Efficiency,power,powers,10128,"ct::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static voidDiagProd(const TVectorD& diag, Double_t tol, Double_t& d1, Double_t& d2); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual const TMatrixDBase&GetDecompMatrix() const; Int_tHager(Double_t& est, Int_t iter = 5); voidTObject::MakeZombie(); voidResetStatus(). Data Members; public:. enum EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfColLwbColumn lower bound of decomposed matrix; Double_tfConditionmatrix condition number; Double_tfDet1determinant mantissa; Double_tfDet2determinant exponent for powers of 2; Int_tfRowLwbRow lower bound of decomposed matrix; Double_tfTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t Hager(Double_t& est, Int_t iter = 5). void DiagProd(const TVectorD& diag, Double_t tol, Double_t& d1, Double_t& d2). Double_t Condition(); Matrix condition number. Bool_t MultiSolve(TMatrixD& B); Solve set of equations with RHS in columns of B. void Det(Double_t& d1, Double_t& d2); Matrix determinant det = d1*TMath::Power(2.,d2). void Print(Option_t* opt = """") const; Print class members. TDecompBase & operator=(const TDecompBase& source); Assignment operator. Double_t SetTol(Double_t newTol). void ResetStatus(); { for (Int_t i = 14; i < 22; i++) ResetBit(BIT(i)); }. const TMatrixDBase & GetDecompMatrix() const. virtual ~TDecompBase(); {}. Double_t GetTol() const; { return fTol; }. Double_t GetDet1() const; { return fDet1; }. Double_t ",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:10690,Energy Efficiency,Power,Power,10690," kSingular; };; enum { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfColLwbColumn lower bound of decomposed matrix; Double_tfConditionmatrix condition number; Double_tfDet1determinant mantissa; Double_tfDet2determinant exponent for powers of 2; Int_tfRowLwbRow lower bound of decomposed matrix; Double_tfTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t Hager(Double_t& est, Int_t iter = 5). void DiagProd(const TVectorD& diag, Double_t tol, Double_t& d1, Double_t& d2). Double_t Condition(); Matrix condition number. Bool_t MultiSolve(TMatrixD& B); Solve set of equations with RHS in columns of B. void Det(Double_t& d1, Double_t& d2); Matrix determinant det = d1*TMath::Power(2.,d2). void Print(Option_t* opt = """") const; Print class members. TDecompBase & operator=(const TDecompBase& source); Assignment operator. Double_t SetTol(Double_t newTol). void ResetStatus(); { for (Int_t i = 14; i < 22; i++) ResetBit(BIT(i)); }. const TMatrixDBase & GetDecompMatrix() const. virtual ~TDecompBase(); {}. Double_t GetTol() const; { return fTol; }. Double_t GetDet1() const; { return fDet1; }. Double_t GetDet2() const; { return fDet2; }. Double_t GetCondition() const; { return fCondition; }. Int_t GetNrows() const. Int_t GetNcols() const. Int_t GetRowLwb() const; { return fRowLwb; }. Int_t GetColLwb() const; { return fColLwb; }. Bool_t Decompose(). Bool_t Solve(TVectorD& b). TVectorD Solve(const TVectorD& b, Bool_t& ok). Bool_t Solve(TMatrixDColumn& b). Bool_t TransSolve(TVectorD& b). TVectorD TransSolve(const TVectorD& b, Bool_t& ok). Bool_t TransSolve(TMatrixDColumn& b). » Last changed: root/matrix:$Id$ » Last generated: 2015-03-12",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:6464,Modifiability,Inherit,InheritsFrom,6464,":Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetColLwb() const; Double_tGetCondition() const; Double_tGetDet1() const; Double_tGetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tGetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tMultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObje",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:6530,Modifiability,Inherit,InheritsFrom,6530,"ect*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetColLwb() const; Double_tGetCondition() const; Double_tGetDet1() const; Double_tGetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tGetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tMultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:10289,Modifiability,Inherit,Inheritance,10289,"ror(int level, const char* location, const char* fmt, va_list va) const; virtual const TMatrixDBase&GetDecompMatrix() const; Int_tHager(Double_t& est, Int_t iter = 5); voidTObject::MakeZombie(); voidResetStatus(). Data Members; public:. enum EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfColLwbColumn lower bound of decomposed matrix; Double_tfConditionmatrix condition number; Double_tfDet1determinant mantissa; Double_tfDet2determinant exponent for powers of 2; Int_tfRowLwbRow lower bound of decomposed matrix; Double_tfTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t Hager(Double_t& est, Int_t iter = 5). void DiagProd(const TVectorD& diag, Double_t tol, Double_t& d1, Double_t& d2). Double_t Condition(); Matrix condition number. Bool_t MultiSolve(TMatrixD& B); Solve set of equations with RHS in columns of B. void Det(Double_t& d1, Double_t& d2); Matrix determinant det = d1*TMath::Power(2.,d2). void Print(Option_t* opt = """") const; Print class members. TDecompBase & operator=(const TDecompBase& source); Assignment operator. Double_t SetTol(Double_t newTol). void ResetStatus(); { for (Int_t i = 14; i < 22; i++) ResetBit(BIT(i)); }. const TMatrixDBase & GetDecompMatrix() const. virtual ~TDecompBase(); {}. Double_t GetTol() const; { return fTol; }. Double_t GetDet1() const; { return fDet1; }. Double_t GetDet2() const; { return fDet2; }. Double_t GetCondition() const; { return fCondition; }. Int_t GetNrows() const. Int_t GetNcols() const. Int_t GetRowLwb() const; { return fRowLwb; }. Int_t GetColLw",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:10302,Modifiability,Inherit,Inherited,10302,"ror(int level, const char* location, const char* fmt, va_list va) const; virtual const TMatrixDBase&GetDecompMatrix() const; Int_tHager(Double_t& est, Int_t iter = 5); voidTObject::MakeZombie(); voidResetStatus(). Data Members; public:. enum EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfColLwbColumn lower bound of decomposed matrix; Double_tfConditionmatrix condition number; Double_tfDet1determinant mantissa; Double_tfDet2determinant exponent for powers of 2; Int_tfRowLwbRow lower bound of decomposed matrix; Double_tfTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t Hager(Double_t& est, Int_t iter = 5). void DiagProd(const TVectorD& diag, Double_t tol, Double_t& d1, Double_t& d2). Double_t Condition(); Matrix condition number. Bool_t MultiSolve(TMatrixD& B); Solve set of equations with RHS in columns of B. void Det(Double_t& d1, Double_t& d2); Matrix determinant det = d1*TMath::Power(2.,d2). void Print(Option_t* opt = """") const; Print class members. TDecompBase & operator=(const TDecompBase& source); Assignment operator. Double_t SetTol(Double_t newTol). void ResetStatus(); { for (Int_t i = 14; i < 22; i++) ResetBit(BIT(i)); }. const TMatrixDBase & GetDecompMatrix() const. virtual ~TDecompBase(); {}. Double_t GetTol() const; { return fTol; }. Double_t GetDet1() const; { return fDet1; }. Double_t GetDet2() const; { return fDet2; }. Double_t GetCondition() const; { return fCondition; }. Int_t GetNrows() const. Int_t GetNcols() const. Int_t GetRowLwb() const; { return fRowLwb; }. Int_t GetColLw",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:1706,Performance,perform,performed,1706," for matrix inversion is; calculated . This number is of interest for estimating the accuracy; of x in the equation Ax=b; For example:; A is a (10x10) Hilbert matrix which looks deceivingly innocent; and simple, A(i,j) = 1/(i+j+1); b(i) = Sum_j A(i,j), so a sum of a row in A. the solution is x(i) = 1. i=0,.,9. However,; TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); gives,. {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}. Looking at the condition number, this is in line with expected the; accuracy . The condition number is 3.957e+12 . As a simple rule of; thumb, a condition number of 1.0e+n means that you lose up to n; digits of accuracy in a solution . Since doubles are stored with 15; digits, we can expect the accuracy to be as small as 3 digits . Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not w",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:3687,Safety,detect,detect,3687,"epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);. For usage examples see $ROOTSYS/test/stressLinear.cxx. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDecompBase(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObj",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:6354,Security,Hash,Hash,6354,"arams, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetColLwb() const; Double_tGetCondition() const; Double_tGetDet1() const; Double_tGetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tGetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tMultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:4059,Testability,test,test,4059,"e checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);. For usage examples see $ROOTSYS/test/stressLinear.cxx. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDecompBase(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tCondition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::D",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:8686,Testability,Test,TestBit,8686,"te(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompBase&operator=(const TDecompBase& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); Double_tSetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:8725,Testability,Test,TestBits,8725,"te(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompBase&operator=(const TDecompBase& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); Double_tSetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:891,Usability,simpl,simple,891,". TDecompBase. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATRIX; » TDecompBase. class TDecompBase: public TObject. Decomposition Base class. This class forms the base for all the decompositions methods in the; linear algebra package .; It or its derived classes have installed the methods to solve; equations,invert matrices and calculate determinants while monitoring; the accuracy. Each derived class has always the following methods available:. Condition() :; In an iterative scheme the condition number for matrix inversion is; calculated . This number is of interest for estimating the accuracy; of x in the equation Ax=b; For example:; A is a (10x10) Hilbert matrix which looks deceivingly innocent; and simple, A(i,j) = 1/(i+j+1); b(i) = Sum_j A(i,j), so a sum of a row in A. the solution is x(i) = 1. i=0,.,9. However,; TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); gives,. {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}. Looking at the condition number, this is in line with expected the; accuracy . The condition number is 3.957e+12 . As a simple rule of; thumb, a condition number of 1.0e+n means that you lose up to n; digits of accuracy in a solution . Since doubles are stored with 15; digits, we can expect the accuracy to be as small as 3 digits . Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supp",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:1294,Usability,simpl,simple,1294," class. This class forms the base for all the decompositions methods in the; linear algebra package .; It or its derived classes have installed the methods to solve; equations,invert matrices and calculate determinants while monitoring; the accuracy. Each derived class has always the following methods available:. Condition() :; In an iterative scheme the condition number for matrix inversion is; calculated . This number is of interest for estimating the accuracy; of x in the equation Ax=b; For example:; A is a (10x10) Hilbert matrix which looks deceivingly innocent; and simple, A(i,j) = 1/(i+j+1); b(i) = Sum_j A(i,j), so a sum of a row in A. the solution is x(i) = 1. i=0,.,9. However,; TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); gives,. {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}. Looking at the condition number, this is in line with expected the; accuracy . The condition number is 3.957e+12 . As a simple rule of; thumb, a condition number of 1.0e+n means that you lose up to n; digits of accuracy in a solution . Since doubles are stored with 15; digits, we can expect the accuracy to be as small as 3 digits . Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:3381,Usability,clear,clear,3381,"s calculated . Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);. For usage examples see $ROOTSYS/test/stressLinear.cxx. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDecompBase(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* op",MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBase.html:4516,Usability,Clear,Clear,4516,,MatchSource.WIKI,root/html534/TDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBase.html
https://root.cern/root/html534/TDecompBK.html:2862,Availability,Error,Error,2862,0); virtual~TDecompBK(); voidTObject::AbstractMethod(co,MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompBK.html:2991,Availability,error,error,2991,"thod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t&, Double_t&); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDeco",MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompBK.html:3075,Availability,error,error,3075,"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t&, Double_t&); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU(); virtual UInt_tTObject::GetUniqueID() ",MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompBK.html:8221,Energy Efficiency,power,powers,8221,"d2); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual const TMatrixDBase&GetDecompMatrix() const; Int_tTDecompBase::Hager(Double_t& est, Int_t iter = 5); voidTObject::MakeZombie(); voidTDecompBase::ResetStatus(). Data Members; public:. enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_t*fIpiv[fNIpiv] row permutation index; Int_tfNIpivsize of row permutation index; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUdecomposed matrix so that a = u d u^T. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompBK(); Default constructor. TDecompBK(Int_t nrows); Constructor for (nrows x nrows) symmetric matrix. TDecompBK(Int_t row_lwb, Int_t row_upb); Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) symmetric matrix. TDecompBK(const TMatrixDSym& m, Double_t tol = 0.0); Constructor for symmetric matrix A. TDecompBK(const TDecompBK& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in components U and D so that A = U*D*U^T; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. void SetMatrix(const TMatrixDSym& a); Set the matrix to be decomposed, decomposition status is reset. Bool_t Sol",MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompBK.html:4270,Modifiability,Inherit,InheritsFrom,4270," name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDSymInvert(); Bool_tInvert(TMatrixDSym& inv); TMatrixDSymInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp",MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompBK.html:4336,Modifiability,Inherit,InheritsFrom,4336,"bj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDSymInvert(); Bool_tInvert(TMatrixDSym& inv); TMatrixDSymInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator n",MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompBK.html:8542,Modifiability,Inherit,Inheritance,8542,"pBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_t*fIpiv[fNIpiv] row permutation index; Int_tfNIpivsize of row permutation index; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUdecomposed matrix so that a = u d u^T. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompBK(); Default constructor. TDecompBK(Int_t nrows); Constructor for (nrows x nrows) symmetric matrix. TDecompBK(Int_t row_lwb, Int_t row_upb); Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) symmetric matrix. TDecompBK(const TMatrixDSym& m, Double_t tol = 0.0); Constructor for symmetric matrix A. TDecompBK(const TDecompBK& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in components U and D so that A = U*D*U^T; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. void SetMatrix(const TMatrixDSym& a); Set the matrix to be decomposed, decomposition status is reset. Bool_t Solve(TVectorD& b); Solve Ax=b assuming the BK form of A is stored in fU . Solution returned in b. Bool_t Solve(TMatrixDColumn& b); Solve Ax=b assuming the BK form of A is stored in fU . Solution returned in b. Bool_t Invert(TMatrixDSym& inv); For a symmetric matrix A(m,m), its inverse A_inv(m,m) is returne",MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompBK.html:8555,Modifiability,Inherit,Inherited,8555,"pBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_t*fIpiv[fNIpiv] row permutation index; Int_tfNIpivsize of row permutation index; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUdecomposed matrix so that a = u d u^T. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompBK(); Default constructor. TDecompBK(Int_t nrows); Constructor for (nrows x nrows) symmetric matrix. TDecompBK(Int_t row_lwb, Int_t row_upb); Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) symmetric matrix. TDecompBK(const TMatrixDSym& m, Double_t tol = 0.0); Constructor for symmetric matrix A. TDecompBK(const TDecompBK& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in components U and D so that A = U*D*U^T; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. void SetMatrix(const TMatrixDSym& a); Set the matrix to be decomposed, decomposition status is reset. Bool_t Solve(TVectorD& b); Solve Ax=b assuming the BK form of A is stored in fU . Solution returned in b. Bool_t Solve(TMatrixDColumn& b); Solve Ax=b assuming the BK form of A is stored in fU . Solution returned in b. Bool_t Invert(TMatrixDSym& inv); For a symmetric matrix A(m,m), its inverse A_inv(m,m) is returne",MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompBK.html:4160,Security,Hash,Hash,4160," voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDSymInvert(); Bool_tInvert(TMatrixDSym& inv); TMatrixDSymInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void",MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompBK.html:6652,Testability,Test,TestBit,6652,"r, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompBK&operator=(const TDecompBK& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixDSym& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompBK.html:6691,Testability,Test,TestBits,6691,"r, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompBK&operator=(const TDecompBK& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixDSym& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompBK.html:2214,Usability,Clear,Clear,2214,0); virtual~TDecompBK(); voidTObject::AbstractMethod(co,MatchSource.WIKI,root/html534/TDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompBK.html
https://root.cern/root/html534/TDecompChol.html:1785,Availability,Error,Error,1785,"0); virtual~TDecompChol(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* err",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:1914,Availability,error,error,1914,"onst char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDSymGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::G",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:1998,Availability,error,error,1998,"tual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDSymGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU() const; v",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:7184,Energy Efficiency,power,powers,7184,"g, Double_t tol, Double_t& d1, Double_t& d2); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual const TMatrixDBase&GetDecompMatrix() const; Int_tTDecompBase::Hager(Double_t& est, Int_t iter = 5); voidTObject::MakeZombie(); voidTDecompBase::ResetStatus(). Data Members; public:. enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUdecomposed matrix fU so that a = fU^T fU. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompChol(Int_t nrows); Constructor for (nrows x nrows) matrix. TDecompChol(Int_t row_lwb, Int_t row_upb); Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. TDecompChol(const TMatrixDSym& a, Double_t tol = 0.0); Constructor for symmetric matrix A . Matrix should be positive definite. TDecompChol(const TMatrixD& a, Double_t tol = 0.0); Constructor for general matrix A . Matrix should be symmetric positive definite. TDecompChol(const TDecompChol& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in component U so that A = U^T * U; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. const TMatrixDSym GetMatrix(); Rec",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:8888,Energy Efficiency,Power,Power,8888,"Constructor for general matrix A . Matrix should be symmetric positive definite. TDecompChol(const TDecompChol& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in component U so that A = U^T * U; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. const TMatrixDSym GetMatrix(); Reconstruct the original matrix using the decomposition parts. void SetMatrix(const TMatrixDSym& a); Set the matrix to be decomposed, decomposition status is reset. Bool_t Solve(TVectorD& b); Solve equations Ax=b assuming A has been factored by Cholesky. The factor U is; assumed to be in upper triang of fU. fTol is used to determine if diagonal; element is zero. The solution is returned in b. Bool_t Solve(TMatrixDColumn& b); Solve equations Ax=b assuming A has been factored by Cholesky. The factor U is; assumed to be in upper triang of fU. fTol is used to determine if diagonal; element is zero. The solution is returned in b. void Det(Double_t& d1, Double_t& d2); Matrix determinant det = d1*TMath::Power(2.,d2) is square of diagProd; of cholesky factor. Bool_t Invert(TMatrixDSym& inv); For a symmetric matrix A(m,m), its inverse A_inv(m,m) is returned . TMatrixDSym Invert(Bool_t& status); For a symmetric matrix A(m,m), its inverse A_inv(m,m) is returned . void Print(Option_t* opt = """") const; Print class members . TDecompChol & operator=(const TDecompChol& source); Assignment operator. const TMatrixDBase & GetDecompMatrix() const; { return fU; }. TDecompChol(); {}. virtual ~TDecompChol(); {}. Int_t GetNrows() const; { return fU.GetNrows(); }. Int_t GetNcols() const; { return fU.GetNcols(); }. const TMatrixD & GetU() const; { return fU; }. Bool_t Solve(TVectorD& b). Bool_t TransSolve(TVectorD& b); { return Solve(b); }. TVectorD TransSolve(const TVectorD& b, Bool_t& ok); { TVectorD x = b; ok = Solve(x); return x; }. Bool_t TransSolve(TMatrixDColumn& b); { return Solve(b); }. Bool_t Invert(TMatrixDSym& inv). » Last changed: root/matrix:$Id$ » Last gen",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:3229,Modifiability,Inherit,InheritsFrom,3229,"t::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDSymGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDSymInvert(); Bool_tInvert(TMatrixDSym& inv); TMatrixDSymInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:3295,Modifiability,Inherit,InheritsFrom,3295,"wb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDSymGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDSymInvert(); Bool_tInvert(TMatrixDSym& inv); TMatrixDSymInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator n",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:7423,Modifiability,Inherit,Inheritance,7423,"::MakeZombie(); voidTDecompBase::ResetStatus(). Data Members; public:. enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUdecomposed matrix fU so that a = fU^T fU. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompChol(Int_t nrows); Constructor for (nrows x nrows) matrix. TDecompChol(Int_t row_lwb, Int_t row_upb); Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. TDecompChol(const TMatrixDSym& a, Double_t tol = 0.0); Constructor for symmetric matrix A . Matrix should be positive definite. TDecompChol(const TMatrixD& a, Double_t tol = 0.0); Constructor for general matrix A . Matrix should be symmetric positive definite. TDecompChol(const TDecompChol& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in component U so that A = U^T * U; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. const TMatrixDSym GetMatrix(); Reconstruct the original matrix using the decomposition parts. void SetMatrix(const TMatrixDSym& a); Set the matrix to be decomposed, decomposition status is reset. Bool_t Solve(TVectorD& b); Solve equations Ax=b assuming A has been factored by Cholesky. The factor U",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:7436,Modifiability,Inherit,Inherited,7436,"::MakeZombie(); voidTDecompBase::ResetStatus(). Data Members; public:. enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUdecomposed matrix fU so that a = fU^T fU. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompChol(Int_t nrows); Constructor for (nrows x nrows) matrix. TDecompChol(Int_t row_lwb, Int_t row_upb); Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. TDecompChol(const TMatrixDSym& a, Double_t tol = 0.0); Constructor for symmetric matrix A . Matrix should be positive definite. TDecompChol(const TMatrixD& a, Double_t tol = 0.0); Constructor for general matrix A . Matrix should be symmetric positive definite. TDecompChol(const TDecompChol& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in component U so that A = U^T * U; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. const TMatrixDSym GetMatrix(); Reconstruct the original matrix using the decomposition parts. void SetMatrix(const TMatrixDSym& a); Set the matrix to be decomposed, decomposition status is reset. Bool_t Solve(TVectorD& b); Solve equations Ax=b assuming A has been factored by Cholesky. The factor U",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:3119,Security,Hash,Hash,3119,"od, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDSymGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDSymInvert(); Bool_tInvert(TMatrixDSym& inv); TMatrixDSymInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:5615,Testability,Test,TestBit,5615,"oid* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompChol&operator=(const TDecompChol& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixDSym& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:5654,Testability,Test,TestBits,5654,"oid* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompChol&operator=(const TDecompChol& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixDSym& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompChol.html:1131,Usability,Clear,Clear,1131,"0); virtual~TDecompChol(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* err",MatchSource.WIKI,root/html534/TDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompChol.html
https://root.cern/root/html534/TDecompLU.html:2159,Availability,Error,Error,2159,"0, Int_t implicit = 1); virtual~TDecompLU(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObjec",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:2288,Availability,error,error,2288,"onst char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixD&GetLU(); const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual ",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:2372,Availability,error,error,2372,"tual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixD&GetLU(); const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual U",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:7813,Energy Efficiency,power,powers,7813,"ject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual const TMatrixDBase&GetDecompMatrix() const; Int_tTDecompBase::Hager(Double_t& est, Int_t iter = 5); voidTObject::MakeZombie(); voidTDecompBase::ResetStatus(). Data Members; public:. enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tfImplicitPivotcontrol to determine implicit row scale before; Int_t*fIndex[fNIndex] row permutation index; TMatrixDfLUdecomposed matrix so that a = l u where; Int_tfNIndexsize of row permutation index; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tfSign= +/- 1 reflecting even/odd row permutations, resp.; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompLU(); Default constructor. TDecompLU(Int_t nrows); Constructor for (nrows x nrows) matrix. TDecompLU(Int_t row_lwb, Int_t row_upb); Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. TDecompLU(const TMatrixD& m, Double_t tol = 0.0, Int_t implicit = 1); Constructor for matrix a. TDecompLU(const TDecompLU& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in components U and L so that P * A = U * L; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. const",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:9726,Energy Efficiency,Power,Power,9726,"y constructor. Bool_t Decompose(); Matrix A is decomposed in components U and L so that P * A = U * L; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. const TMatrixD GetMatrix(); Reconstruct the original matrix using the decomposition parts. void SetMatrix(const TMatrixD& a); Set matrix to be decomposed. Bool_t Solve(TVectorD& b); Solve Ax=b assuming the LU form of A is stored in fLU, but assume b has *not*; been transformed. Solution returned in b. Bool_t Solve(TMatrixDColumn& b); Solve Ax=b assuming the LU form of A is stored in fLU, but assume b has *not*; been transformed. Solution returned in b. Bool_t TransSolve(TVectorD& b); Solve A^T x=b assuming the LU form of A^T is stored in fLU, but assume b has *not*; been transformed. Solution returned in b. Bool_t TransSolve(TMatrixDColumn& b); Solve A^T x=b assuming the LU form of A^T is stored in fLU, but assume b has *not*; been transformed. Solution returned in b. void Det(Double_t& d1, Double_t& d2); Calculate determinant det = d1*TMath::Power(2.,d2). Bool_t Invert(TMatrixD& inv); For a matrix A(m,m), its inverse A_inv is defined as A * A_inv = A_inv * A = unit; (m x m) Ainv is returned . TMatrixD Invert(Bool_t& status); For a matrix A(m,n), its inverse A_inv is defined as A * A_inv = A_inv * A = unit; (n x m) Ainv is returned . void Print(Option_t* opt = """") const; Print internals of this object. TDecompLU & operator=(const TDecompLU& source); assignement operator. Bool_t DecomposeLUCrout(TMatrixD& lu, Int_t* index, Double_t& sign, Double_t tol, Int_t& nrZeros); Crout/Doolittle algorithm of LU decomposing a square matrix, with implicit partial; pivoting. The decomposition is stored in fLU: U is explicit in the upper triag; and L is in multiplier form in the subdiagionals .; Row permutations are mapped out in fIndex. fSign, used for calculating the; determinant, is +/- 1 for even/odd row permutations. . Bool_t DecomposeLUGauss(TMatrixD& lu, Int_t* index, Double_t& sign, Double_t tol, I",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:3595,Modifiability,Inherit,InheritsFrom,3595,"t*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixD&GetLU(); const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDInvert(); Bool_tInvert(TMatrixD& inv); TMatrixDInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); static Bool_tInvertLU(TMatrixD& a, Double_t tol, Double_t* det = 0); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:3661,Modifiability,Inherit,InheritsFrom,3661,":GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixD&GetLU(); const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDInvert(); Bool_tInvert(TMatrixD& inv); TMatrixDInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); static Bool_tInvertLU(TMatrixD& a, Double_t tol, Double_t* det = 0); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); voi",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:8273,Modifiability,Inherit,Inheritance,8273,"e::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tfImplicitPivotcontrol to determine implicit row scale before; Int_t*fIndex[fNIndex] row permutation index; TMatrixDfLUdecomposed matrix so that a = l u where; Int_tfNIndexsize of row permutation index; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tfSign= +/- 1 reflecting even/odd row permutations, resp.; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompLU(); Default constructor. TDecompLU(Int_t nrows); Constructor for (nrows x nrows) matrix. TDecompLU(Int_t row_lwb, Int_t row_upb); Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. TDecompLU(const TMatrixD& m, Double_t tol = 0.0, Int_t implicit = 1); Constructor for matrix a. TDecompLU(const TDecompLU& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in components U and L so that P * A = U * L; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. const TMatrixD GetMatrix(); Reconstruct the original matrix using the decomposition parts. void SetMatrix(const TMatrixD& a); Set matrix to be decomposed. Bool_t Solve(TVectorD& b); Solve Ax=b assuming the LU form of A is stored in fLU, but assume b has *not*; been transformed. Solution returned in b. Bool_t Solve(TMatrixDColumn& b); Solve Ax=b assuming the LU form of A is stored in fLU, but assume b has *not*; been transfor",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:8286,Modifiability,Inherit,Inherited,8286,"e::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tfImplicitPivotcontrol to determine implicit row scale before; Int_t*fIndex[fNIndex] row permutation index; TMatrixDfLUdecomposed matrix so that a = l u where; Int_tfNIndexsize of row permutation index; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tfSign= +/- 1 reflecting even/odd row permutations, resp.; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompLU(); Default constructor. TDecompLU(Int_t nrows); Constructor for (nrows x nrows) matrix. TDecompLU(Int_t row_lwb, Int_t row_upb); Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. TDecompLU(const TMatrixD& m, Double_t tol = 0.0, Int_t implicit = 1); Constructor for matrix a. TDecompLU(const TDecompLU& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in components U and L so that P * A = U * L; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. const TMatrixD GetMatrix(); Reconstruct the original matrix using the decomposition parts. void SetMatrix(const TMatrixD& a); Set matrix to be decomposed. Bool_t Solve(TVectorD& b); Solve Ax=b assuming the LU form of A is stored in fLU, but assume b has *not*; been transformed. Solution returned in b. Bool_t Solve(TMatrixDColumn& b); Solve Ax=b assuming the LU form of A is stored in fLU, but assume b has *not*; been transfor",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:3485,Security,Hash,Hash,3485,"ar* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixD&GetLU(); const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDInvert(); Bool_tInvert(TMatrixD& inv); TMatrixDInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); static Bool_tInvertLU(TMatrixD& a, Double_t tol, Double_t* det = 0); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(voi",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:6034,Testability,Test,TestBit,6034," ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompLU&operator=(const TDecompLU& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixD& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:6073,Testability,Test,TestBits,6073," ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompLU&operator=(const TDecompLU& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixD& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompLU.html:1505,Usability,Clear,Clear,1505,"0, Int_t implicit = 1); virtual~TDecompLU(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObjec",MatchSource.WIKI,root/html534/TDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompLU.html
https://root.cern/root/html534/TDecompQRH.html:779,Availability,Error,Errors,779,". TDecompQRH. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATRIX; » TDecompQRH. class TDecompQRH: public TDecompBase. QR Decomposition class. Decompose a general (m x n) matrix A into A = fQ fR H where. fQ : (m x n) - orthogonal matrix; fR : (n x n) - upper triangular matrix; H : HouseHolder matrix which is stored through; fUp: (n) - vector with Householder up's; fW : (n) - vector with Householder beta's. If row/column index of A starts at (rowLwb,colLwb) then; the decomposed matrices start from :; fQ : (rowLwb,0); fR : (0,colLwb); and the decomposed vectors start from :; fUp : (0); fW : (0). Errors arise from formation of reflectors i.e. singularity .; Note it attempts to handle the cases where the nRow <= nCol . Function Members (Methods); public:. TDecompQRH(); TDecompQRH(const TDecompQRH& another); TDecompQRH(Int_t nrows, Int_t ncols); TDecompQRH(const TMatrixD& m, Double_t tol = 0.0); TDecompQRH(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); virtual~TDecompQRH(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") c",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:2073,Availability,Error,Error,2073,"0); TDecompQRH(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); virtual~TDecompQRH(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") c",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:2202,Availability,error,error,2202,"onst char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const TMatrixD&GetQ(); virtual const TMatrixD&GetR(); Int_tTDecompBase::GetRowLwb() cons",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:2286,Availability,error,error,2286,"tual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const TMatrixD&GetQ(); virtual const TMatrixD&GetR(); Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:7634,Energy Efficiency,power,powers,7634,"tDecompMatrix() const; Int_tTDecompBase::Hager(Double_t& est, Int_t iter = 5); voidTObject::MakeZombie(); static Bool_tQRH(TMatrixD& q, TVectorD& diagR, TVectorD& up, TVectorD& w, Double_t tol); voidTDecompBase::ResetStatus(). Data Members; public:. enum { kWorkMax; };; enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; TMatrixDfQ(m x n) - orthogonal matrix; TMatrixDfR(n x n) - upper triangular matrix; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TVectorDfUp(n) - vector with Householder up's; TVectorDfW(n) - vector with Householder beta's. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompQRH(Int_t nrows, Int_t ncols); Constructor for (nrows x ncols) matrix. TDecompQRH(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. TDecompQRH(const TMatrixD& m, Double_t tol = 0.0); Constructor for general matrix A . TDecompQRH(const TDecompQRH& another); Copy constructor. Bool_t Decompose(); QR decomposition of matrix a by Householder transformations,; see Golub & Loan first edition p41 & Sec 6.2.; First fR is returned in upper triang of fQ and diagR. fQ returned in; 'u-form' in lower triang of fQ and fW, the latter containing the",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:9751,Energy Efficiency,Power,Power,9751,"ng the; ""Householder betas"".; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. Bool_t QRH(TMatrixD& q, TVectorD& diagR, TVectorD& up, TVectorD& w, Double_t tol); Decomposition function . void SetMatrix(const TMatrixD& a); Set matrix to be decomposed. Bool_t Solve(TVectorD& b); Solve Ax=b assuming the QR form of A is stored in fR,fQ and fW, but assume b; has *not* been transformed. Solution returned in b. Bool_t Solve(TMatrixDColumn& b); Solve Ax=b assuming the QR form of A is stored in fR,fQ and fW, but assume b; has *not* been transformed. Solution returned in b. Bool_t TransSolve(TVectorD& b); Solve A^T x=b assuming the QR form of A is stored in fR,fQ and fW, but assume b; has *not* been transformed. Solution returned in b. Bool_t TransSolve(TMatrixDColumn& b); Solve A^T x=b assuming the QR form of A is stored in fR,fQ and fW, but assume b; has *not* been transformed. Solution returned in b. void Det(Double_t& d1, Double_t& d2); This routine calculates the absolute (!) value of the determinant; |det| = d1*TMath::Power(2.,d2). Bool_t Invert(TMatrixD& inv); For a matrix A(m,n), its inverse A_inv is defined as A * A_inv = A_inv * A = unit; The user should always supply a matrix of size (m x m) !; If m > n , only the (n x m) part of the returned (pseudo inverse) matrix; should be used . TMatrixD Invert(Bool_t& status); For a matrix A(m,n), its inverse A_inv is defined as A * A_inv = A_inv * A = unit; (n x m) Ainv is returned . void Print(Option_t* opt = """") const; Print the class members. TDecompQRH & operator=(const TDecompQRH& source); Assignment operator. const TMatrixDBase & GetDecompMatrix() const; { return fR; }. TDecompQRH(); {}. virtual ~TDecompQRH(); {}. Int_t GetNrows() const; { return fQ.GetNrows(); }. Int_t GetNcols() const; { return fQ.GetNcols(); }. const TMatrixD & GetQ(). const TMatrixD & GetR(). const TVectorD & GetUp(). const TVectorD & GetW(). Bool_t Solve(TVectorD& b). Bool_t TransSolve(TVectorD& b). Bool_t Invert(TMatri",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:9671,Integrability,rout,routine,9671,"ng the; ""Householder betas"".; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. Bool_t QRH(TMatrixD& q, TVectorD& diagR, TVectorD& up, TVectorD& w, Double_t tol); Decomposition function . void SetMatrix(const TMatrixD& a); Set matrix to be decomposed. Bool_t Solve(TVectorD& b); Solve Ax=b assuming the QR form of A is stored in fR,fQ and fW, but assume b; has *not* been transformed. Solution returned in b. Bool_t Solve(TMatrixDColumn& b); Solve Ax=b assuming the QR form of A is stored in fR,fQ and fW, but assume b; has *not* been transformed. Solution returned in b. Bool_t TransSolve(TVectorD& b); Solve A^T x=b assuming the QR form of A is stored in fR,fQ and fW, but assume b; has *not* been transformed. Solution returned in b. Bool_t TransSolve(TMatrixDColumn& b); Solve A^T x=b assuming the QR form of A is stored in fR,fQ and fW, but assume b; has *not* been transformed. Solution returned in b. void Det(Double_t& d1, Double_t& d2); This routine calculates the absolute (!) value of the determinant; |det| = d1*TMath::Power(2.,d2). Bool_t Invert(TMatrixD& inv); For a matrix A(m,n), its inverse A_inv is defined as A * A_inv = A_inv * A = unit; The user should always supply a matrix of size (m x m) !; If m > n , only the (n x m) part of the returned (pseudo inverse) matrix; should be used . TMatrixD Invert(Bool_t& status); For a matrix A(m,n), its inverse A_inv is defined as A * A_inv = A_inv * A = unit; (n x m) Ainv is returned . void Print(Option_t* opt = """") const; Print the class members. TDecompQRH & operator=(const TDecompQRH& source); Assignment operator. const TMatrixDBase & GetDecompMatrix() const; { return fR; }. TDecompQRH(); {}. virtual ~TDecompQRH(); {}. Int_t GetNrows() const; { return fQ.GetNrows(); }. Int_t GetNcols() const; { return fQ.GetNcols(); }. const TMatrixD & GetQ(). const TMatrixD & GetR(). const TVectorD & GetUp(). const TVectorD & GetW(). Bool_t Solve(TVectorD& b). Bool_t TransSolve(TVectorD& b). Bool_t Invert(TMatri",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:3583,Modifiability,Inherit,InheritsFrom,3583,"wb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const TMatrixD&GetQ(); virtual const TMatrixD&GetR(); Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual const TVectorD&GetUp(); virtual const TVectorD&GetW(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDInvert(); Bool_tInvert(TMatrixD& inv); TMatrixDInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*T",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:3649,Modifiability,Inherit,InheritsFrom,3649,"compBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const TMatrixD&GetQ(); virtual const TMatrixD&GetR(); Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual const TVectorD&GetUp(); virtual const TVectorD&GetW(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDInvert(); Bool_tInvert(TMatrixD& inv); TMatrixDInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:8000,Modifiability,Inherit,Inheritance,8000,"; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; TMatrixDfQ(m x n) - orthogonal matrix; TMatrixDfR(n x n) - upper triangular matrix; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TVectorDfUp(n) - vector with Householder up's; TVectorDfW(n) - vector with Householder beta's. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompQRH(Int_t nrows, Int_t ncols); Constructor for (nrows x ncols) matrix. TDecompQRH(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. TDecompQRH(const TMatrixD& m, Double_t tol = 0.0); Constructor for general matrix A . TDecompQRH(const TDecompQRH& another); Copy constructor. Bool_t Decompose(); QR decomposition of matrix a by Householder transformations,; see Golub & Loan first edition p41 & Sec 6.2.; First fR is returned in upper triang of fQ and diagR. fQ returned in; 'u-form' in lower triang of fQ and fW, the latter containing the; ""Householder betas"".; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. Bool_t QRH(TMatrixD& q, TVectorD& diagR, TVectorD& up, TVectorD& w, Double_t tol); Decomposition function . void SetMatrix(const TMatrixD& a); Set matrix to be decomposed. Bool_t Solve(TVectorD& b); Solve Ax=b assuming the QR ",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:8013,Modifiability,Inherit,Inherited,8013,"; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; TMatrixDfQ(m x n) - orthogonal matrix; TMatrixDfR(n x n) - upper triangular matrix; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TVectorDfUp(n) - vector with Householder up's; TVectorDfW(n) - vector with Householder beta's. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompQRH(Int_t nrows, Int_t ncols); Constructor for (nrows x ncols) matrix. TDecompQRH(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. TDecompQRH(const TMatrixD& m, Double_t tol = 0.0); Constructor for general matrix A . TDecompQRH(const TDecompQRH& another); Copy constructor. Bool_t Decompose(); QR decomposition of matrix a by Householder transformations,; see Golub & Loan first edition p41 & Sec 6.2.; First fR is returned in upper triang of fQ and diagR. fQ returned in; 'u-form' in lower triang of fQ and fW, the latter containing the; ""Householder betas"".; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. Bool_t QRH(TMatrixD& q, TVectorD& diagR, TVectorD& up, TVectorD& w, Double_t tol); Decomposition function . void SetMatrix(const TMatrixD& a); Set matrix to be decomposed. Bool_t Solve(TVectorD& b); Solve Ax=b assuming the QR ",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:3473,Security,Hash,Hash,3473,"(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const TMatrixD&GetQ(); virtual const TMatrixD&GetR(); Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual const TVectorD&GetUp(); virtual const TVectorD&GetW(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDInvert(); Bool_tInvert(TMatrixD& inv); TMatrixDInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); st",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:5955,Testability,Test,TestBit,5955,"tr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompQRH&operator=(const TDecompQRH& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixD& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:5994,Testability,Test,TestBits,5994,"tr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompQRH&operator=(const TDecompQRH& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixD& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompQRH.html:1419,Usability,Clear,Clear,1419,"0); TDecompQRH(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); virtual~TDecompQRH(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") c",MatchSource.WIKI,root/html534/TDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompQRH.html
https://root.cern/root/html534/TDecompSparse.html:1730,Availability,Error,Error,1730,"; TDecompSparse(Int_t row_lwb, Int_t row_upb, Int_t nr_nonZeros, Int_t verbose); virtual~TDecompSparse(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t&, Double_t&); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Opti",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:1859,Availability,error,error,1859,"thod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t&, Double_t&); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDeco",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:1943,Availability,error,error,1943,"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t&, Double_t&); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTO",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:15982,Availability,Error,ErrorFlag,15982,"_t* a, Int_t* iw, Int_t& j1, Int_t& j2, const Int_t itop, const Int_t ireal, Int_t& ncmpbr, Int_t& ncmpbi); Help routine for factorization. void Solve_sub1(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, Int_t& latop, Int_t* icntl); Help routine for solving. void Solve_sub2(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, const Int_t latop, Int_t* icntl); Help routine for solving. void Print(Option_t* opt = """") const; Print class members. TDecompSparse & operator=(const TDecompSparse& source); Assignment operator. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info). Int_t IDiag(Int_t ix, Int_t iy); { return ((iy-1)*(2*ix-iy+2))/2; }. Int_t IError(); { return fInfo[2]; }. Int_t MinRealWorkspace(); { return fInfo[5]; }. Int_t MinIntWorkspace(); { return fInfo[6]; }. Int_t ErrorFlag(); { return fInfo[1]; }. Double_t GetThresholdPivoting(); Takes values in the range [0,1]. Larger values enforce greater stability in; the factorization as they insist on larger pivots. Smaller values preserve; sparsity at the cost of using smaller pivots. { return fCntl[1]; }. Double_t GetTreatAsZero(); { return fCntl[3]; }. void SetThresholdPivoting(Double_t piv); The factorization will not accept a pivot whose absolute value is less than fCntl[3] as; a 1x1 pivot or as the off-diagonal in a 2x2 pivot. { fCntl[1] = piv; }. void SetTreatAsZero(Double_t tol); { fCntl[3] = tol; }. const TMatrixDBase & GetDecompMatrix() const; { MayNotUse(""GetDecompMatrix()""); return fA; }. virtual ~TDecompSparse(); {}. void SetVerbose(Int_t v). Int_t GetNrows() const; { return fA.GetNrows(); }. Int_t GetNcols() const; { return fA.GetNcols(); }. Bool_t Solve(TVectorD& b). Bool_t TransSolve(TVectorD& b); { return Solve(b); }. TVectorD TransSolve(const TVectorD& b, Bool_t& ok); { TVectorD x = b; ok = Solve(x); ",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:10209,Energy Efficiency,power,powers,10209,"t_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, const Int_t latop, Int_t* icntl). Data Members; public:. enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMatrixDSparsefAoriginal matrix; needed for the iterative solving procedure; Double_tfCntl[6]float control numbers; TArrayIfColFact; Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; TArrayDfFactsize of fFact array; may be increased during the numerical factorization; Double_tfIPessimismamounts by which to increase allocated factorization space when; Int_tfIcntl[31]integer control numbers; TArrayIfIkeeppivot sequence and temporary storage information; Int_tfInfo[21]array used for communication between programs; TArrayIfIw; TArrayIfIw1; TArrayIfIw2; Int_tfMaxfrt; Int_tfNnonZeros; Int_tfNrows; Int_tfNsteps; Double_tfPrecisionprecision we demand from the linear system solver. If it isn't; Double_tfRPessimisminadequate space is detected. fIPessimism is for array ""fIw"",; TArrayIfRowFact; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; Int_tfVerbose; TArrayDfWtemporary storage for the factorization. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompSparse(); Default constructor. TDecompSparse(Int_t nRows, Int_t nr_nonZeros, Int_t verbose); Constructor for a matrix with nrows an",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:10356,Energy Efficiency,allocate,allocated,10356,"t_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, const Int_t latop, Int_t* icntl). Data Members; public:. enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMatrixDSparsefAoriginal matrix; needed for the iterative solving procedure; Double_tfCntl[6]float control numbers; TArrayIfColFact; Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; TArrayDfFactsize of fFact array; may be increased during the numerical factorization; Double_tfIPessimismamounts by which to increase allocated factorization space when; Int_tfIcntl[31]integer control numbers; TArrayIfIkeeppivot sequence and temporary storage information; Int_tfInfo[21]array used for communication between programs; TArrayIfIw; TArrayIfIw1; TArrayIfIw2; Int_tfMaxfrt; Int_tfNnonZeros; Int_tfNrows; Int_tfNsteps; Double_tfPrecisionprecision we demand from the linear system solver. If it isn't; Double_tfRPessimisminadequate space is detected. fIPessimism is for array ""fIw"",; TArrayIfRowFact; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; Int_tfVerbose; TArrayDfWtemporary storage for the factorization. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompSparse(); Default constructor. TDecompSparse(Int_t nRows, Int_t nr_nonZeros, Int_t verbose); Constructor for a matrix with nrows an",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:12071,Energy Efficiency,allocate,allocate,12071,"e; Inherited Members; Includes; Libraries. Function documentation; TDecompSparse(); Default constructor. TDecompSparse(Int_t nRows, Int_t nr_nonZeros, Int_t verbose); Constructor for a matrix with nrows and unspecified number of columns .; nr_nonZeros is the total number of non-zero entries in the matrix . TDecompSparse(Int_t row_lwb, Int_t row_upb, Int_t nr_nonZeros, Int_t verbose); Constructor for a matrix with row range, [row_lwb..row_upb] and unspecified column; range . nr_nonZeros is the total number of non-zero entries in the matrix . TDecompSparse(const TMatrixDSparse& a, Int_t verbose); Constructor for matrix A . TDecompSparse(const TDecompSparse& another); Copy constructor. Int_t NonZerosUpperTriang(const TMatrixDSparse& a); Static function, returning the number of non-zero entries in the upper triangular matrix . void CopyUpperTriang(const TMatrixDSparse& a, Double_t* b); Static function, copying the non-zero entries in the upper triangle to; array b . User should allocate enough memory for array b . void SetMatrix(const TMatrixDSparse& a); Set matrix to be decomposed . Bool_t Decompose(); Decomposition engine .; If the decomposition succeeds, bit kDecomposed is set . Bool_t Solve(TVectorD& b); Solve Ax=b . Solution returned in b. void InitParam(); initializing control parameters. void InitPivot(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayI& Aiw, TArrayI& Aikeep, TArrayI& Aiw1, Int_t& nsteps, const Int_t iflag, Int_t* icntl, Double_t* cntl, Int_t* info, Double_t& ops); Setup Pivoting variables. void Factor(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayD& Aa, TArrayI& Aiw, TArrayI& Aikeep, const Int_t nsteps, Int_t& maxfrt, TArrayI& Aiw1, Int_t* icntl, Double_t* cntl, Int_t* info); Factorization routine, the workhorse for the decompostion step. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info); Main routin",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:12860,Integrability,rout,routine,12860,"r. Int_t NonZerosUpperTriang(const TMatrixDSparse& a); Static function, returning the number of non-zero entries in the upper triangular matrix . void CopyUpperTriang(const TMatrixDSparse& a, Double_t* b); Static function, copying the non-zero entries in the upper triangle to; array b . User should allocate enough memory for array b . void SetMatrix(const TMatrixDSparse& a); Set matrix to be decomposed . Bool_t Decompose(); Decomposition engine .; If the decomposition succeeds, bit kDecomposed is set . Bool_t Solve(TVectorD& b); Solve Ax=b . Solution returned in b. void InitParam(); initializing control parameters. void InitPivot(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayI& Aiw, TArrayI& Aikeep, TArrayI& Aiw1, Int_t& nsteps, const Int_t iflag, Int_t* icntl, Double_t* cntl, Int_t* info, Double_t& ops); Setup Pivoting variables. void Factor(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayD& Aa, TArrayI& Aiw, TArrayI& Aikeep, const Int_t nsteps, Int_t& maxfrt, TArrayI& Aiw1, Int_t* icntl, Double_t* cntl, Int_t* info); Factorization routine, the workhorse for the decompostion step. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info); Main routine for solving Ax=b. void InitPivot_sub1(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub2(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* nv, Int_t* nxt, Int_t* lst, Int_t* ipd, Int_t* flag, const Int_t iovflo, Int_t& ncmpa, const Double_t fratio); Help routine for pivoting setup. void InitPivot_sub2a(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub3(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* iw, ",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:13077,Integrability,rout,routine,13077," non-zero entries in the upper triangle to; array b . User should allocate enough memory for array b . void SetMatrix(const TMatrixDSparse& a); Set matrix to be decomposed . Bool_t Decompose(); Decomposition engine .; If the decomposition succeeds, bit kDecomposed is set . Bool_t Solve(TVectorD& b); Solve Ax=b . Solution returned in b. void InitParam(); initializing control parameters. void InitPivot(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayI& Aiw, TArrayI& Aikeep, TArrayI& Aiw1, Int_t& nsteps, const Int_t iflag, Int_t* icntl, Double_t* cntl, Int_t* info, Double_t& ops); Setup Pivoting variables. void Factor(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayD& Aa, TArrayI& Aiw, TArrayI& Aikeep, const Int_t nsteps, Int_t& maxfrt, TArrayI& Aiw1, Int_t* icntl, Double_t* cntl, Int_t* info); Factorization routine, the workhorse for the decompostion step. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info); Main routine for solving Ax=b. void InitPivot_sub1(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub2(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* nv, Int_t* nxt, Int_t* lst, Int_t* ipd, Int_t* flag, const Int_t iovflo, Int_t& ncmpa, const Double_t fratio); Help routine for pivoting setup. void InitPivot_sub2a(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub3(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub4(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* ips, Int_t* ipv, Int_t* nv, In",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:13271,Integrability,rout,routine,13271,"ecomposition engine .; If the decomposition succeeds, bit kDecomposed is set . Bool_t Solve(TVectorD& b); Solve Ax=b . Solution returned in b. void InitParam(); initializing control parameters. void InitPivot(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayI& Aiw, TArrayI& Aikeep, TArrayI& Aiw1, Int_t& nsteps, const Int_t iflag, Int_t* icntl, Double_t* cntl, Int_t* info, Double_t& ops); Setup Pivoting variables. void Factor(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayD& Aa, TArrayI& Aiw, TArrayI& Aikeep, const Int_t nsteps, Int_t& maxfrt, TArrayI& Aiw1, Int_t* icntl, Double_t* cntl, Int_t* info); Factorization routine, the workhorse for the decompostion step. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info); Main routine for solving Ax=b. void InitPivot_sub1(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub2(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* nv, Int_t* nxt, Int_t* lst, Int_t* ipd, Int_t* flag, const Int_t iovflo, Int_t& ncmpa, const Double_t fratio); Help routine for pivoting setup. void InitPivot_sub2a(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub3(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub4(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* ips, Int_t* ipv, Int_t* nv, Int_t* flag, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub5(const Int_t n, Int_t* ipe, Int_t* nv, Int_t* ips, Int_t* ne, Int_t* na, Int_t* nd, Int_t& nsteps, const Int_t nemin",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:13509,Integrability,rout,routine,13509,"t_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayI& Aiw, TArrayI& Aikeep, TArrayI& Aiw1, Int_t& nsteps, const Int_t iflag, Int_t* icntl, Double_t* cntl, Int_t* info, Double_t& ops); Setup Pivoting variables. void Factor(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayD& Aa, TArrayI& Aiw, TArrayI& Aikeep, const Int_t nsteps, Int_t& maxfrt, TArrayI& Aiw1, Int_t* icntl, Double_t* cntl, Int_t* info); Factorization routine, the workhorse for the decompostion step. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info); Main routine for solving Ax=b. void InitPivot_sub1(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub2(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* nv, Int_t* nxt, Int_t* lst, Int_t* ipd, Int_t* flag, const Int_t iovflo, Int_t& ncmpa, const Double_t fratio); Help routine for pivoting setup. void InitPivot_sub2a(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub3(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub4(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* ips, Int_t* ipv, Int_t* nv, Int_t* flag, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub5(const Int_t n, Int_t* ipe, Int_t* nv, Int_t* ips, Int_t* ne, Int_t* na, Int_t* nd, Int_t& nsteps, const Int_t nemin); Help routine for pivoting setup. void InitPivot_sub6(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* na, Int_t* ne, Int_t* nd, const Int_t nsteps, Int_t* lstki, Int_t* lstkr, Int_t* iw, I",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:13645,Integrability,rout,routine,13645,"ps); Setup Pivoting variables. void Factor(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayD& Aa, TArrayI& Aiw, TArrayI& Aikeep, const Int_t nsteps, Int_t& maxfrt, TArrayI& Aiw1, Int_t* icntl, Double_t* cntl, Int_t* info); Factorization routine, the workhorse for the decompostion step. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info); Main routine for solving Ax=b. void InitPivot_sub1(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub2(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* nv, Int_t* nxt, Int_t* lst, Int_t* ipd, Int_t* flag, const Int_t iovflo, Int_t& ncmpa, const Double_t fratio); Help routine for pivoting setup. void InitPivot_sub2a(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub3(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub4(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* ips, Int_t* ipv, Int_t* nv, Int_t* flag, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub5(const Int_t n, Int_t* ipe, Int_t* nv, Int_t* ips, Int_t* ne, Int_t* na, Int_t* nd, Int_t& nsteps, const Int_t nemin); Help routine for pivoting setup. void InitPivot_sub6(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* na, Int_t* ne, Int_t* nd, const Int_t nsteps, Int_t* lstki, Int_t* lstkr, Int_t* iw, Int_t* info, Double_t& ops); Help routine for pivoting setup. void Factor_sub1(const Int_t n, const Int_t nz, Int_t& nz1, Double_t* a, const Int_t la, Int_t* irn, Int_t* icn, Int_t* iw, co",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:13854,Integrability,rout,routine,13854,"t& maxfrt, TArrayI& Aiw1, Int_t* icntl, Double_t* cntl, Int_t* info); Factorization routine, the workhorse for the decompostion step. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info); Main routine for solving Ax=b. void InitPivot_sub1(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub2(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* nv, Int_t* nxt, Int_t* lst, Int_t* ipd, Int_t* flag, const Int_t iovflo, Int_t& ncmpa, const Double_t fratio); Help routine for pivoting setup. void InitPivot_sub2a(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub3(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub4(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* ips, Int_t* ipv, Int_t* nv, Int_t* flag, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub5(const Int_t n, Int_t* ipe, Int_t* nv, Int_t* ips, Int_t* ne, Int_t* na, Int_t* nd, Int_t& nsteps, const Int_t nemin); Help routine for pivoting setup. void InitPivot_sub6(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* na, Int_t* ne, Int_t* nd, const Int_t nsteps, Int_t* lstki, Int_t* lstkr, Int_t* iw, Int_t* info, Double_t& ops); Help routine for pivoting setup. void Factor_sub1(const Int_t n, const Int_t nz, Int_t& nz1, Double_t* a, const Int_t la, Int_t* irn, Int_t* icn, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* iw2, Int_t* icntl, Int_t* info); Help routine for factorization. void Factor_sub2(const Int_t n, const Int_t nz, Double_t* a, const Int_t ",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:14037,Integrability,rout,routine,14037,"Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info); Main routine for solving Ax=b. void InitPivot_sub1(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub2(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* nv, Int_t* nxt, Int_t* lst, Int_t* ipd, Int_t* flag, const Int_t iovflo, Int_t& ncmpa, const Double_t fratio); Help routine for pivoting setup. void InitPivot_sub2a(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub3(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub4(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* ips, Int_t* ipv, Int_t* nv, Int_t* flag, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub5(const Int_t n, Int_t* ipe, Int_t* nv, Int_t* ips, Int_t* ne, Int_t* na, Int_t* nd, Int_t& nsteps, const Int_t nemin); Help routine for pivoting setup. void InitPivot_sub6(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* na, Int_t* ne, Int_t* nd, const Int_t nsteps, Int_t* lstki, Int_t* lstkr, Int_t* iw, Int_t* info, Double_t& ops); Help routine for pivoting setup. void Factor_sub1(const Int_t n, const Int_t nz, Int_t& nz1, Double_t* a, const Int_t la, Int_t* irn, Int_t* icn, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* iw2, Int_t* icntl, Int_t* info); Help routine for factorization. void Factor_sub2(const Int_t n, const Int_t nz, Double_t* a, const Int_t la, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* nstk, const Int_t nsteps, Int_t& maxfrt, Int_t* nelim, Int_t* iw2, Int_t* icntl, Double_t* cntl, Int_t* info); Help routine for factorization. v",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:14208,Integrability,rout,routine,14208," nz, Int_t* irn, Int_t* icn, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub2(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* nv, Int_t* nxt, Int_t* lst, Int_t* ipd, Int_t* flag, const Int_t iovflo, Int_t& ncmpa, const Double_t fratio); Help routine for pivoting setup. void InitPivot_sub2a(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub3(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub4(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* ips, Int_t* ipv, Int_t* nv, Int_t* flag, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub5(const Int_t n, Int_t* ipe, Int_t* nv, Int_t* ips, Int_t* ne, Int_t* na, Int_t* nd, Int_t& nsteps, const Int_t nemin); Help routine for pivoting setup. void InitPivot_sub6(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* na, Int_t* ne, Int_t* nd, const Int_t nsteps, Int_t* lstki, Int_t* lstkr, Int_t* iw, Int_t* info, Double_t& ops); Help routine for pivoting setup. void Factor_sub1(const Int_t n, const Int_t nz, Int_t& nz1, Double_t* a, const Int_t la, Int_t* irn, Int_t* icn, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* iw2, Int_t* icntl, Int_t* info); Help routine for factorization. void Factor_sub2(const Int_t n, const Int_t nz, Double_t* a, const Int_t la, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* nstk, const Int_t nsteps, Int_t& maxfrt, Int_t* nelim, Int_t* iw2, Int_t* icntl, Double_t* cntl, Int_t* info); Help routine for factorization. void Factor_sub3(Double_t* a, Int_t* iw, Int_t& j1, Int_t& j2, const Int_t itop, const Int_t ireal, Int_t& ncmpbr, Int_t& ncmpbi); Help routine for factorization. void Solve_sub1",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:14450,Integrability,rout,routine,14450," const Int_t lw, Int_t& iwfr, Int_t* nv, Int_t* nxt, Int_t* lst, Int_t* ipd, Int_t* flag, const Int_t iovflo, Int_t& ncmpa, const Double_t fratio); Help routine for pivoting setup. void InitPivot_sub2a(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub3(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub4(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* ips, Int_t* ipv, Int_t* nv, Int_t* flag, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub5(const Int_t n, Int_t* ipe, Int_t* nv, Int_t* ips, Int_t* ne, Int_t* na, Int_t* nd, Int_t& nsteps, const Int_t nemin); Help routine for pivoting setup. void InitPivot_sub6(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* na, Int_t* ne, Int_t* nd, const Int_t nsteps, Int_t* lstki, Int_t* lstkr, Int_t* iw, Int_t* info, Double_t& ops); Help routine for pivoting setup. void Factor_sub1(const Int_t n, const Int_t nz, Int_t& nz1, Double_t* a, const Int_t la, Int_t* irn, Int_t* icn, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* iw2, Int_t* icntl, Int_t* info); Help routine for factorization. void Factor_sub2(const Int_t n, const Int_t nz, Double_t* a, const Int_t la, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* nstk, const Int_t nsteps, Int_t& maxfrt, Int_t* nelim, Int_t* iw2, Int_t* icntl, Double_t* cntl, Int_t* info); Help routine for factorization. void Factor_sub3(Double_t* a, Int_t* iw, Int_t& j1, Int_t& j2, const Int_t itop, const Int_t ireal, Int_t& ncmpbr, Int_t& ncmpbi); Help routine for factorization. void Solve_sub1(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, Int_t& latop, Int_t* icntl); Help routine for solving. void Solve_sub2(const Int_t n, Double_t* a, Int_t* iw",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:14677,Integrability,rout,routine,14677,"* iw, const Int_t lw, Int_t& iwfr, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub3(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub4(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* ips, Int_t* ipv, Int_t* nv, Int_t* flag, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub5(const Int_t n, Int_t* ipe, Int_t* nv, Int_t* ips, Int_t* ne, Int_t* na, Int_t* nd, Int_t& nsteps, const Int_t nemin); Help routine for pivoting setup. void InitPivot_sub6(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* na, Int_t* ne, Int_t* nd, const Int_t nsteps, Int_t* lstki, Int_t* lstkr, Int_t* iw, Int_t* info, Double_t& ops); Help routine for pivoting setup. void Factor_sub1(const Int_t n, const Int_t nz, Int_t& nz1, Double_t* a, const Int_t la, Int_t* irn, Int_t* icn, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* iw2, Int_t* icntl, Int_t* info); Help routine for factorization. void Factor_sub2(const Int_t n, const Int_t nz, Double_t* a, const Int_t la, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* nstk, const Int_t nsteps, Int_t& maxfrt, Int_t* nelim, Int_t* iw2, Int_t* icntl, Double_t* cntl, Int_t* info); Help routine for factorization. void Factor_sub3(Double_t* a, Int_t* iw, Int_t& j1, Int_t& j2, const Int_t itop, const Int_t ireal, Int_t& ncmpbr, Int_t& ncmpbi); Help routine for factorization. void Solve_sub1(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, Int_t& latop, Int_t* icntl); Help routine for solving. void Solve_sub2(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, const Int_t latop, Int_t* icntl); Help routine for solving. void Print(Option_t* opt = """") const; Print class members. TDecompSparse & operator=(const TDecompSparse& source);",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:14945,Integrability,rout,routine,14945,"t_t* info); Help routine for pivoting setup. void InitPivot_sub4(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* ips, Int_t* ipv, Int_t* nv, Int_t* flag, Int_t& ncmpa); Help routine for pivoting setup. void InitPivot_sub5(const Int_t n, Int_t* ipe, Int_t* nv, Int_t* ips, Int_t* ne, Int_t* na, Int_t* nd, Int_t& nsteps, const Int_t nemin); Help routine for pivoting setup. void InitPivot_sub6(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* na, Int_t* ne, Int_t* nd, const Int_t nsteps, Int_t* lstki, Int_t* lstkr, Int_t* iw, Int_t* info, Double_t& ops); Help routine for pivoting setup. void Factor_sub1(const Int_t n, const Int_t nz, Int_t& nz1, Double_t* a, const Int_t la, Int_t* irn, Int_t* icn, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* iw2, Int_t* icntl, Int_t* info); Help routine for factorization. void Factor_sub2(const Int_t n, const Int_t nz, Double_t* a, const Int_t la, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* nstk, const Int_t nsteps, Int_t& maxfrt, Int_t* nelim, Int_t* iw2, Int_t* icntl, Double_t* cntl, Int_t* info); Help routine for factorization. void Factor_sub3(Double_t* a, Int_t* iw, Int_t& j1, Int_t& j2, const Int_t itop, const Int_t ireal, Int_t& ncmpbr, Int_t& ncmpbi); Help routine for factorization. void Solve_sub1(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, Int_t& latop, Int_t* icntl); Help routine for solving. void Solve_sub2(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, const Int_t latop, Int_t* icntl); Help routine for solving. void Print(Option_t* opt = """") const; Print class members. TDecompSparse & operator=(const TDecompSparse& source); Assignment operator. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info). Int_t IDiag(Int_t ix, Int_t iy); { return ((iy-1)*(2*ix-iy+2))/",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:15108,Integrability,rout,routine,15108,"oting setup. void InitPivot_sub5(const Int_t n, Int_t* ipe, Int_t* nv, Int_t* ips, Int_t* ne, Int_t* na, Int_t* nd, Int_t& nsteps, const Int_t nemin); Help routine for pivoting setup. void InitPivot_sub6(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* na, Int_t* ne, Int_t* nd, const Int_t nsteps, Int_t* lstki, Int_t* lstkr, Int_t* iw, Int_t* info, Double_t& ops); Help routine for pivoting setup. void Factor_sub1(const Int_t n, const Int_t nz, Int_t& nz1, Double_t* a, const Int_t la, Int_t* irn, Int_t* icn, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* iw2, Int_t* icntl, Int_t* info); Help routine for factorization. void Factor_sub2(const Int_t n, const Int_t nz, Double_t* a, const Int_t la, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* nstk, const Int_t nsteps, Int_t& maxfrt, Int_t* nelim, Int_t* iw2, Int_t* icntl, Double_t* cntl, Int_t* info); Help routine for factorization. void Factor_sub3(Double_t* a, Int_t* iw, Int_t& j1, Int_t& j2, const Int_t itop, const Int_t ireal, Int_t& ncmpbr, Int_t& ncmpbi); Help routine for factorization. void Solve_sub1(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, Int_t& latop, Int_t* icntl); Help routine for solving. void Solve_sub2(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, const Int_t latop, Int_t* icntl); Help routine for solving. void Print(Option_t* opt = """") const; Print class members. TDecompSparse & operator=(const TDecompSparse& source); Assignment operator. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info). Int_t IDiag(Int_t ix, Int_t iy); { return ((iy-1)*(2*ix-iy+2))/2; }. Int_t IError(); { return fInfo[2]; }. Int_t MinRealWorkspace(); { return fInfo[5]; }. Int_t MinIntWorkspace(); { return fInfo[6]; }. Int_t ErrorFlag(); { return fInfo[1]; }. Double_t GetThresholdPivoting(); Tak",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:15282,Integrability,rout,routine,15282,"r pivoting setup. void InitPivot_sub6(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* perm, Int_t* na, Int_t* ne, Int_t* nd, const Int_t nsteps, Int_t* lstki, Int_t* lstkr, Int_t* iw, Int_t* info, Double_t& ops); Help routine for pivoting setup. void Factor_sub1(const Int_t n, const Int_t nz, Int_t& nz1, Double_t* a, const Int_t la, Int_t* irn, Int_t* icn, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* iw2, Int_t* icntl, Int_t* info); Help routine for factorization. void Factor_sub2(const Int_t n, const Int_t nz, Double_t* a, const Int_t la, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* nstk, const Int_t nsteps, Int_t& maxfrt, Int_t* nelim, Int_t* iw2, Int_t* icntl, Double_t* cntl, Int_t* info); Help routine for factorization. void Factor_sub3(Double_t* a, Int_t* iw, Int_t& j1, Int_t& j2, const Int_t itop, const Int_t ireal, Int_t& ncmpbr, Int_t& ncmpbi); Help routine for factorization. void Solve_sub1(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, Int_t& latop, Int_t* icntl); Help routine for solving. void Solve_sub2(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, const Int_t latop, Int_t* icntl); Help routine for solving. void Print(Option_t* opt = """") const; Print class members. TDecompSparse & operator=(const TDecompSparse& source); Assignment operator. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info). Int_t IDiag(Int_t ix, Int_t iy); { return ((iy-1)*(2*ix-iy+2))/2; }. Int_t IError(); { return fInfo[2]; }. Int_t MinRealWorkspace(); { return fInfo[5]; }. Int_t MinIntWorkspace(); { return fInfo[6]; }. Int_t ErrorFlag(); { return fInfo[1]; }. Double_t GetThresholdPivoting(); Takes values in the range [0,1]. Larger values enforce greater stability in; the factorization as they insist on larger pivots. Smaller values preserve; sparsity at the",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:15455,Integrability,rout,routine,15455,"i, Int_t* lstkr, Int_t* iw, Int_t* info, Double_t& ops); Help routine for pivoting setup. void Factor_sub1(const Int_t n, const Int_t nz, Int_t& nz1, Double_t* a, const Int_t la, Int_t* irn, Int_t* icn, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* iw2, Int_t* icntl, Int_t* info); Help routine for factorization. void Factor_sub2(const Int_t n, const Int_t nz, Double_t* a, const Int_t la, Int_t* iw, const Int_t liw, Int_t* perm, Int_t* nstk, const Int_t nsteps, Int_t& maxfrt, Int_t* nelim, Int_t* iw2, Int_t* icntl, Double_t* cntl, Int_t* info); Help routine for factorization. void Factor_sub3(Double_t* a, Int_t* iw, Int_t& j1, Int_t& j2, const Int_t itop, const Int_t ireal, Int_t& ncmpbr, Int_t& ncmpbi); Help routine for factorization. void Solve_sub1(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, Int_t& latop, Int_t* icntl); Help routine for solving. void Solve_sub2(const Int_t n, Double_t* a, Int_t* iw, Double_t* w, Double_t* rhs, Int_t* iw2, const Int_t nblk, const Int_t latop, Int_t* icntl); Help routine for solving. void Print(Option_t* opt = """") const; Print class members. TDecompSparse & operator=(const TDecompSparse& source); Assignment operator. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info). Int_t IDiag(Int_t ix, Int_t iy); { return ((iy-1)*(2*ix-iy+2))/2; }. Int_t IError(); { return fInfo[2]; }. Int_t MinRealWorkspace(); { return fInfo[5]; }. Int_t MinIntWorkspace(); { return fInfo[6]; }. Int_t ErrorFlag(); { return fInfo[1]; }. Double_t GetThresholdPivoting(); Takes values in the range [0,1]. Larger values enforce greater stability in; the factorization as they insist on larger pivots. Smaller values preserve; sparsity at the cost of using smaller pivots. { return fCntl[1]; }. Double_t GetTreatAsZero(); { return fCntl[3]; }. void SetThresholdPivoting(Double_t piv); The factorization will not a",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:3115,Modifiability,Inherit,InheritsFrom,3115,":FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:3181,Modifiability,Inherit,InheritsFrom,3181,"Object(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:11072,Modifiability,Inherit,Inheritance,11072,"tion number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; TArrayDfFactsize of fFact array; may be increased during the numerical factorization; Double_tfIPessimismamounts by which to increase allocated factorization space when; Int_tfIcntl[31]integer control numbers; TArrayIfIkeeppivot sequence and temporary storage information; Int_tfInfo[21]array used for communication between programs; TArrayIfIw; TArrayIfIw1; TArrayIfIw2; Int_tfMaxfrt; Int_tfNnonZeros; Int_tfNrows; Int_tfNsteps; Double_tfPrecisionprecision we demand from the linear system solver. If it isn't; Double_tfRPessimisminadequate space is detected. fIPessimism is for array ""fIw"",; TArrayIfRowFact; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; Int_tfVerbose; TArrayDfWtemporary storage for the factorization. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompSparse(); Default constructor. TDecompSparse(Int_t nRows, Int_t nr_nonZeros, Int_t verbose); Constructor for a matrix with nrows and unspecified number of columns .; nr_nonZeros is the total number of non-zero entries in the matrix . TDecompSparse(Int_t row_lwb, Int_t row_upb, Int_t nr_nonZeros, Int_t verbose); Constructor for a matrix with row range, [row_lwb..row_upb] and unspecified column; range . nr_nonZeros is the total number of non-zero entries in the matrix . TDecompSparse(const TMatrixDSparse& a, Int_t verbose); Constructor for matrix A . TDecompSparse(const TDecompSparse& another); Copy constructor. Int_t NonZerosUpperTriang(const TMatrixDSparse& a); Static function, returning the number of non-zero entries in the upper triangular matrix . void CopyUpperTriang(const TMatrixDSparse& a, Double_t* b); Static function, copying the non-zero entries in the upper triangle to; array b . User should allocate enough memory for ",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:11085,Modifiability,Inherit,Inherited,11085,"tion number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; TArrayDfFactsize of fFact array; may be increased during the numerical factorization; Double_tfIPessimismamounts by which to increase allocated factorization space when; Int_tfIcntl[31]integer control numbers; TArrayIfIkeeppivot sequence and temporary storage information; Int_tfInfo[21]array used for communication between programs; TArrayIfIw; TArrayIfIw1; TArrayIfIw2; Int_tfMaxfrt; Int_tfNnonZeros; Int_tfNrows; Int_tfNsteps; Double_tfPrecisionprecision we demand from the linear system solver. If it isn't; Double_tfRPessimisminadequate space is detected. fIPessimism is for array ""fIw"",; TArrayIfRowFact; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; Int_tfVerbose; TArrayDfWtemporary storage for the factorization. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompSparse(); Default constructor. TDecompSparse(Int_t nRows, Int_t nr_nonZeros, Int_t verbose); Constructor for a matrix with nrows and unspecified number of columns .; nr_nonZeros is the total number of non-zero entries in the matrix . TDecompSparse(Int_t row_lwb, Int_t row_upb, Int_t nr_nonZeros, Int_t verbose); Constructor for a matrix with row range, [row_lwb..row_upb] and unspecified column; range . nr_nonZeros is the total number of non-zero entries in the matrix . TDecompSparse(const TMatrixDSparse& a, Int_t verbose); Constructor for matrix A . TDecompSparse(const TDecompSparse& another); Copy constructor. Int_t NonZerosUpperTriang(const TMatrixDSparse& a); Static function, returning the number of non-zero entries in the upper triangular matrix . void CopyUpperTriang(const TMatrixDSparse& a, Double_t* b); Static function, copying the non-zero entries in the upper triangle to; array b . User should allocate enough memory for ",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:12624,Modifiability,variab,variables,12624,"w_lwb..row_upb] and unspecified column; range . nr_nonZeros is the total number of non-zero entries in the matrix . TDecompSparse(const TMatrixDSparse& a, Int_t verbose); Constructor for matrix A . TDecompSparse(const TDecompSparse& another); Copy constructor. Int_t NonZerosUpperTriang(const TMatrixDSparse& a); Static function, returning the number of non-zero entries in the upper triangular matrix . void CopyUpperTriang(const TMatrixDSparse& a, Double_t* b); Static function, copying the non-zero entries in the upper triangle to; array b . User should allocate enough memory for array b . void SetMatrix(const TMatrixDSparse& a); Set matrix to be decomposed . Bool_t Decompose(); Decomposition engine .; If the decomposition succeeds, bit kDecomposed is set . Bool_t Solve(TVectorD& b); Solve Ax=b . Solution returned in b. void InitParam(); initializing control parameters. void InitPivot(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayI& Aiw, TArrayI& Aikeep, TArrayI& Aiw1, Int_t& nsteps, const Int_t iflag, Int_t* icntl, Double_t* cntl, Int_t* info, Double_t& ops); Setup Pivoting variables. void Factor(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayD& Aa, TArrayI& Aiw, TArrayI& Aikeep, const Int_t nsteps, Int_t& maxfrt, TArrayI& Aiw1, Int_t* icntl, Double_t* cntl, Int_t* info); Factorization routine, the workhorse for the decompostion step. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info); Main routine for solving Ax=b. void InitPivot_sub1(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub2(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* nv, Int_t* nxt, Int_t* lst, Int_t* ipd, Int_t* flag, const Int_t iovflo, Int_t& ncmpa, const Double_t fratio); Help routi",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:10773,Safety,detect,detected,10773,"med] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMatrixDSparsefAoriginal matrix; needed for the iterative solving procedure; Double_tfCntl[6]float control numbers; TArrayIfColFact; Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; TArrayDfFactsize of fFact array; may be increased during the numerical factorization; Double_tfIPessimismamounts by which to increase allocated factorization space when; Int_tfIcntl[31]integer control numbers; TArrayIfIkeeppivot sequence and temporary storage information; Int_tfInfo[21]array used for communication between programs; TArrayIfIw; TArrayIfIw1; TArrayIfIw2; Int_tfMaxfrt; Int_tfNnonZeros; Int_tfNrows; Int_tfNsteps; Double_tfPrecisionprecision we demand from the linear system solver. If it isn't; Double_tfRPessimisminadequate space is detected. fIPessimism is for array ""fIw"",; TArrayIfRowFact; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; Int_tfVerbose; TArrayDfWtemporary storage for the factorization. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompSparse(); Default constructor. TDecompSparse(Int_t nRows, Int_t nr_nonZeros, Int_t verbose); Constructor for a matrix with nrows and unspecified number of columns .; nr_nonZeros is the total number of non-zero entries in the matrix . TDecompSparse(Int_t row_lwb, Int_t row_upb, Int_t nr_nonZeros, Int_t verbose); Constructor for a matrix with row range, [row_lwb..row_upb] and unspecified column; range . nr_nonZeros is the total number of non-zero entries in the matrix . TDecompSparse(const TMatrixDSparse& a, Int_t verbose); Constructor for matrix A . TDecompSparse(const TDecompSparse& anoth",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:3005,Security,Hash,Hash,3005," px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator de",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:5443,Testability,Test,TestBit,5443,"::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompSparse&operator=(const TDecompSparse& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixDSparse& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVerbose(Int_t v); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn&); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn&); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:5482,Testability,Test,TestBits,5482,"::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompSparse&operator=(const TDecompSparse& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixDSparse& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVerbose(Int_t v); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn&); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn&); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSparse.html:1082,Usability,Clear,Clear,1082," TDecompSparse(); TDecompSparse(const TDecompSparse& another); TDecompSparse(const TMatrixDSparse& a, Int_t verbose); TDecompSparse(Int_t nRows, Int_t nr_nonZeros, Int_t verbose); TDecompSparse(Int_t row_lwb, Int_t row_upb, Int_t nr_nonZeros, Int_t verbose); virtual~TDecompSparse(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t&, Double_t&); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event,",MatchSource.WIKI,root/html534/TDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSparse.html
https://root.cern/root/html534/TDecompSVD.html:2330,Availability,Error,Error,2330,"0); TDecompSVD(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); virtual~TDecompSVD(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tCondition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtu",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:2459,Availability,error,error,2459,"tractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tCondition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; const TVectorD&GetSig(); virtual",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:2543,Availability,error,error,2543,"on = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tCondition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t& d1, Double_t& d2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; const TVectorD&GetSig(); virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TM",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:8260,Energy Efficiency,power,powers,8260,"t char* fmt, va_list va) const; virtual const TMatrixDBase&GetDecompMatrix() const; Int_tTDecompBase::Hager(Double_t& est, Int_t iter = 5); voidTObject::MakeZombie(); voidTDecompBase::ResetStatus(); static voidSortSingular(TMatrixD& v, TMatrixD& u, TVectorD& sDiag). Data Members; public:. enum { kWorkMax; };; enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; TVectorDfSigdiagonal of diagonal matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUorthogonal matrix; TMatrixDfVorthogonal matrix. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompSVD(Int_t nrows, Int_t ncols); Constructor for (nrows x ncols) matrix. TDecompSVD(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. TDecompSVD(const TMatrixD& m, Double_t tol = 0.0); Constructor for general matrix A . TDecompSVD(const TDecompSVD& another); Copy constructor. Bool_t Decompose(); SVD decomposition of matrix; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. Bool_t Bidiagonalize(TMatrixD& v, TMatrixD& u, TVectorD& sDiag, TVectorD& oDiag); Bidiagonalize the (m x n) - matrix a (stored in v) through a series of Householder; transformat",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:13082,Energy Efficiency,Power,Power,13082,"atrix(const TMatrixD& a); Set matrix to be decomposed. Bool_t Solve(TVectorD& b); Solve Ax=b assuming the SVD form of A is stored . Solution returned in b.; If A is of size (m x n), input vector b should be of size (m), however,; the solution, returned in b, will be in the first (n) elements . For m > n , x is the least-squares solution of min(A . x - b). Bool_t Solve(TMatrixDColumn& b); Solve Ax=b assuming the SVD form of A is stored . Solution returned in the; matrix column cb b.; If A is of size (m x n), input vector b should be of size (m), however,; the solution, returned in b, will be in the first (n) elements . For m > n , x is the least-squares solution of min(A . x - b). Bool_t TransSolve(TVectorD& b); Solve A^T x=b assuming the SVD form of A is stored . Solution returned in b. Bool_t TransSolve(TMatrixDColumn& b); Solve A^T x=b assuming the SVD form of A is stored . Solution returned in b. Double_t Condition(); Matrix condition number. void Det(Double_t& d1, Double_t& d2); Matrix determinant det = d1*TMath::Power(2.,d2). Int_t GetNrows() const. Int_t GetNcols() const. Bool_t Invert(TMatrixD& inv); For a matrix A(m,n), its inverse A_inv is defined as A * A_inv = A_inv * A = unit; The user should always supply a matrix of size (m x m) !; If m > n , only the (n x m) part of the returned (pseudo inverse) matrix; should be used . TMatrixD Invert(Bool_t& status); For a matrix A(m,n), its inverse A_inv is defined as A * A_inv = A_inv * A = unit; (n x m) Ainv is returned . void Print(Option_t* opt = """") const; Print class members. TDecompSVD & operator=(const TDecompSVD& source); Assignment operator. const TMatrixDBase & GetDecompMatrix() const; { return fU; }. TDecompSVD(); {}. virtual ~TDecompSVD(); {}. const TMatrixD & GetU(). const TMatrixD & GetV(). const TVectorD & GetSig(). Bool_t Solve(TVectorD& b). Bool_t TransSolve(TVectorD& b). Bool_t Invert(TMatrixD& inv). » Last changed: root/matrix:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatic",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:3813,Modifiability,Inherit,InheritsFrom,3813,"; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; const TVectorD&GetSig(); virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU(); virtual UInt_tTObject::GetUniqueID() const; const TMatrixD&GetV(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDInvert(); Bool_tInvert(TMatrixD& inv); TMatrixDInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*T",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:3879,Modifiability,Inherit,InheritsFrom,3879,"dition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; const TVectorD&GetSig(); virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU(); virtual UInt_tTObject::GetUniqueID() const; const TMatrixD&GetV(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDInvert(); Bool_tInvert(TMatrixD& inv); TMatrixDInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:8546,Modifiability,Inherit,Inheritance,8546,":. enum { kWorkMax; };; enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; TVectorDfSigdiagonal of diagonal matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUorthogonal matrix; TMatrixDfVorthogonal matrix. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompSVD(Int_t nrows, Int_t ncols); Constructor for (nrows x ncols) matrix. TDecompSVD(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. TDecompSVD(const TMatrixD& m, Double_t tol = 0.0); Constructor for general matrix A . TDecompSVD(const TDecompSVD& another); Copy constructor. Bool_t Decompose(); SVD decomposition of matrix; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. Bool_t Bidiagonalize(TMatrixD& v, TMatrixD& u, TVectorD& sDiag, TVectorD& oDiag); Bidiagonalize the (m x n) - matrix a (stored in v) through a series of Householder; transformations applied to the left (Q^T) and to the right (H) of a ,; so that A = Q . C . H^T with matrix C bidiagonal. Q and H are orthogonal matrices . Output:; v - (n x n) - matrix H in the (n x n) part of v; u - (m x m) - matrix Q^T; sDiag - diagonal of the (m x n) C; oDiag - off-diagonal ele",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:8559,Modifiability,Inherit,Inherited,8559,":. enum { kWorkMax; };; enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; TVectorDfSigdiagonal of diagonal matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUorthogonal matrix; TMatrixDfVorthogonal matrix. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompSVD(Int_t nrows, Int_t ncols); Constructor for (nrows x ncols) matrix. TDecompSVD(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. TDecompSVD(const TMatrixD& m, Double_t tol = 0.0); Constructor for general matrix A . TDecompSVD(const TDecompSVD& another); Copy constructor. Bool_t Decompose(); SVD decomposition of matrix; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. Bool_t Bidiagonalize(TMatrixD& v, TMatrixD& u, TVectorD& sDiag, TVectorD& oDiag); Bidiagonalize the (m x n) - matrix a (stored in v) through a series of Householder; transformations applied to the left (Q^T) and to the right (H) of a ,; so that A = Q . C . H^T with matrix C bidiagonal. Q and H are orthogonal matrices . Output:; v - (n x n) - matrix H in the (n x n) part of v; u - (m x m) - matrix Q^T; sDiag - diagonal of the (m x n) C; oDiag - off-diagonal ele",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:11636,Performance,Perform,Perform,11636,"(m x n) S'. return convergence flag: 0 -> no convergence; 1 -> convergence. Test code for the output:; const Int_t nRow = v.GetNrows();; const Int_t nCol = v.GetNcols();; TMatrixD tmp = v; tmp.ResizeTo(nCol,nCol);; TMatrixD Vprime = Ht*tmp;; TMatrixD Vprimet(TMatrixDBase::kTransposed,Vprime);; TMatrixD Uprimet = u*Q;; TMatrixD Uprime(TMatrixDBase::kTransposed,Uprimet);; TMatrixD Sprime(nRow,nCol);; TMatrixDDiag(Sprime) = sDiag;; ok &= VerifyMatrixIdentity(Uprimet * C * Vprime,Sprime,kTRUE,1.0e-13);; ok &= VerifyMatrixIdentity(Q*Uprime * Sprime * Vprimet * Ht,a,kTRUE,1.0e-13);. void Diag_1(TMatrixD& v, TVectorD& sDiag, TVectorD& oDiag, Int_t k); Step 1 in the matrix diagonalization. void Diag_2(TVectorD& sDiag, TVectorD& oDiag, Int_t k, Int_t l); Step 2 in the matrix diagonalization. void Diag_3(TMatrixD& v, TMatrixD& u, TVectorD& sDiag, TVectorD& oDiag, Int_t k, Int_t l); Step 3 in the matrix diagonalization. void SortSingular(TMatrixD& v, TMatrixD& u, TVectorD& sDiag); Perform a permutation transformation on the diagonal matrix S', so that; matrix S'' = U''^T . S' . V'' has diagonal elements ordered such that they; do not increase. Output:; v - (n x n) - matrix H . V' . V'' in the (n x n) part of v; u - (m x m) - matrix U''^T . U'^T . Q^T; sDiag - diagonal of the (m x n) S''. const TMatrixD GetMatrix(); Reconstruct the original matrix using the decomposition parts. void SetMatrix(const TMatrixD& a); Set matrix to be decomposed. Bool_t Solve(TVectorD& b); Solve Ax=b assuming the SVD form of A is stored . Solution returned in b.; If A is of size (m x n), input vector b should be of size (m), however,; the solution, returned in b, will be in the first (n) elements . For m > n , x is the least-squares solution of min(A . x - b). Bool_t Solve(TMatrixDColumn& b); Solve Ax=b assuming the SVD form of A is stored . Solution returned in the; matrix column cb b.; If A is of size (m x n), input vector b should be of size (m), however,; the solution, returned in b, will be in t",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:3703,Security,Hash,Hash,3703,"TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; const TVectorD&GetSig(); virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU(); virtual UInt_tTObject::GetUniqueID() const; const TMatrixD&GetV(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDInvert(); Bool_tInvert(TMatrixD& inv); TMatrixDInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); st",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:6185,Testability,Test,TestBit,6185,"tr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompSVD&operator=(const TDecompSVD& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixD& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:6224,Testability,Test,TestBits,6224,"tr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompSVD&operator=(const TDecompSVD& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixD& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:9591,Testability,Test,Test,9591,"ntation; TDecompSVD(Int_t nrows, Int_t ncols); Constructor for (nrows x ncols) matrix. TDecompSVD(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. TDecompSVD(const TMatrixD& m, Double_t tol = 0.0); Constructor for general matrix A . TDecompSVD(const TDecompSVD& another); Copy constructor. Bool_t Decompose(); SVD decomposition of matrix; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. Bool_t Bidiagonalize(TMatrixD& v, TMatrixD& u, TVectorD& sDiag, TVectorD& oDiag); Bidiagonalize the (m x n) - matrix a (stored in v) through a series of Householder; transformations applied to the left (Q^T) and to the right (H) of a ,; so that A = Q . C . H^T with matrix C bidiagonal. Q and H are orthogonal matrices . Output:; v - (n x n) - matrix H in the (n x n) part of v; u - (m x m) - matrix Q^T; sDiag - diagonal of the (m x n) C; oDiag - off-diagonal elements of matrix C. Test code for the output:; const Int_t nRow = v.GetNrows();; const Int_t nCol = v.GetNcols();; TMatrixD H(v); H.ResizeTo(nCol,nCol);; TMatrixD E1(nCol,nCol); E1.UnitMatrix();; TMatrixD Ht(TMatrixDBase::kTransposed,H);; Bool_t ok = kTRUE;; ok &= VerifyMatrixIdentity(Ht * H,E1,kTRUE,1.0e-13);; ok &= VerifyMatrixIdentity(H * Ht,E1,kTRUE,1.0e-13);; TMatrixD E2(nRow,nRow); E2.UnitMatrix();; TMatrixD Qt(u);; TMatrixD Q(TMatrixDBase::kTransposed,Qt);; ok &= VerifyMatrixIdentity(Q * Qt,E2,kTRUE,1.0e-13);; TMatrixD C(nRow,nCol);; TMatrixDDiag(C) = sDiag;; for (Int_t i = 0; i < nCol-1; i++); C(i,i+1) = oDiag(i+1);; TMatrixD A = Q*C*Ht;; ok &= VerifyMatrixIdentity(A,a,kTRUE,1.0e-13);. Bool_t Diagonalize(TMatrixD& v, TMatrixD& u, TVectorD& sDiag, TVectorD& oDiag); Diagonalizes in an iterative fashion the bidiagonal matrix C as described through; sDiag and oDiag, so that S' = U'^T . C . V' is diagonal. U' and V' are orthogonal; matrices . Output:; v - (n x n) - matrix H . V' in the (n x n) part of v; u - (m x m) - matrix ",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:10727,Testability,Test,Test,10727,"1.UnitMatrix();; TMatrixD Ht(TMatrixDBase::kTransposed,H);; Bool_t ok = kTRUE;; ok &= VerifyMatrixIdentity(Ht * H,E1,kTRUE,1.0e-13);; ok &= VerifyMatrixIdentity(H * Ht,E1,kTRUE,1.0e-13);; TMatrixD E2(nRow,nRow); E2.UnitMatrix();; TMatrixD Qt(u);; TMatrixD Q(TMatrixDBase::kTransposed,Qt);; ok &= VerifyMatrixIdentity(Q * Qt,E2,kTRUE,1.0e-13);; TMatrixD C(nRow,nCol);; TMatrixDDiag(C) = sDiag;; for (Int_t i = 0; i < nCol-1; i++); C(i,i+1) = oDiag(i+1);; TMatrixD A = Q*C*Ht;; ok &= VerifyMatrixIdentity(A,a,kTRUE,1.0e-13);. Bool_t Diagonalize(TMatrixD& v, TMatrixD& u, TVectorD& sDiag, TVectorD& oDiag); Diagonalizes in an iterative fashion the bidiagonal matrix C as described through; sDiag and oDiag, so that S' = U'^T . C . V' is diagonal. U' and V' are orthogonal; matrices . Output:; v - (n x n) - matrix H . V' in the (n x n) part of v; u - (m x m) - matrix U'^T . Q^T; sDiag - diagonal of the (m x n) S'. return convergence flag: 0 -> no convergence; 1 -> convergence. Test code for the output:; const Int_t nRow = v.GetNrows();; const Int_t nCol = v.GetNcols();; TMatrixD tmp = v; tmp.ResizeTo(nCol,nCol);; TMatrixD Vprime = Ht*tmp;; TMatrixD Vprimet(TMatrixDBase::kTransposed,Vprime);; TMatrixD Uprimet = u*Q;; TMatrixD Uprime(TMatrixDBase::kTransposed,Uprimet);; TMatrixD Sprime(nRow,nCol);; TMatrixDDiag(Sprime) = sDiag;; ok &= VerifyMatrixIdentity(Uprimet * C * Vprime,Sprime,kTRUE,1.0e-13);; ok &= VerifyMatrixIdentity(Q*Uprime * Sprime * Vprimet * Ht,a,kTRUE,1.0e-13);. void Diag_1(TMatrixD& v, TVectorD& sDiag, TVectorD& oDiag, Int_t k); Step 1 in the matrix diagonalization. void Diag_2(TVectorD& sDiag, TVectorD& oDiag, Int_t k, Int_t l); Step 2 in the matrix diagonalization. void Diag_3(TMatrixD& v, TMatrixD& u, TVectorD& sDiag, TVectorD& oDiag, Int_t k, Int_t l); Step 3 in the matrix diagonalization. void SortSingular(TMatrixD& v, TMatrixD& u, TVectorD& sDiag); Perform a permutation transformation on the diagonal matrix S', so that; matrix S'' = U''^T . S' . V'' has diagonal",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDecompSVD.html:1689,Usability,Clear,Clear,1689,"0); TDecompSVD(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); virtual~TDecompSVD(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tCondition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtu",MatchSource.WIKI,root/html534/TDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDecompSVD.html
https://root.cern/root/html534/TDialogCanvas.html:6506,Availability,Error,Error,6506,"g_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTCanvas::EnterLeave(TPad* prevSelPad, TObject* prevSelObj); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTPad::EventPave()SIGNAL ; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTPad::ExecuteEventAxis(Int_t event, Int_t px, Int_t py, TAxis* axis); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidTCanvas::FeedbackMode(Bool_t set); virtual TObject*TPad::FindObject(const char* name) const; virtual TObject*TPad::FindObject(const TObject* obj) const; voidTCanvas::Flush(); voidTCanvas::ForceUpdate(); virtual Double_tTPad::GetAbsHNDC() const; virtual Double_tTPad::GetAbsWNDC() const; virtual Double_tTPad::GetAbsXlowNDC() const; virtual Double_tTPad::GetAbsYlowNDC() const; Float_tTAttPad::GetAfile() const; virtual Double_tTPad::GetAspectRatio() const; Float_tTAttPad::GetAstat() const; Bool_tTCanvas::GetAutoExec() const; virtual Rectangle_tTPad::GetBBox(); virtual TPointTPa",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:6673,Availability,error,error,6673,"al, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTCanvas::EnterLeave(TPad* prevSelPad, TObject* prevSelObj); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTPad::EventPave()SIGNAL ; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTPad::ExecuteEventAxis(Int_t event, Int_t px, Int_t py, TAxis* axis); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidTCanvas::FeedbackMode(Bool_t set); virtual TObject*TPad::FindObject(const char* name) const; virtual TObject*TPad::FindObject(const TObject* obj) const; voidTCanvas::Flush(); voidTCanvas::ForceUpdate(); virtual Double_tTPad::GetAbsHNDC() const; virtual Double_tTPad::GetAbsWNDC() const; virtual Double_tTPad::GetAbsXlowNDC() const; virtual Double_tTPad::GetAbsYlowNDC() const; Float_tTAttPad::GetAfile() const; virtual Double_tTPad::GetAspectRatio() const; Float_tTAttPad::GetAstat() const; Bool_tTCanvas::GetAutoExec() const; virtual Rectangle_tTPad::GetBBox(); virtual TPointTPad::GetBBoxCenter(); virtual Short_tTPad::GetBorderMode() const; virtual Short_tTPad::GetBorderSize() const; Float_tTAttPad::GetBottomMargin() const; virtual TCanvas*TP",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:6757,Availability,error,error,6757,"ect::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTCanvas::EnterLeave(TPad* prevSelPad, TObject* prevSelObj); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTPad::EventPave()SIGNAL ; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTPad::ExecuteEventAxis(Int_t event, Int_t px, Int_t py, TAxis* axis); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidTCanvas::FeedbackMode(Bool_t set); virtual TObject*TPad::FindObject(const char* name) const; virtual TObject*TPad::FindObject(const TObject* obj) const; voidTCanvas::Flush(); voidTCanvas::ForceUpdate(); virtual Double_tTPad::GetAbsHNDC() const; virtual Double_tTPad::GetAbsWNDC() const; virtual Double_tTPad::GetAbsXlowNDC() const; virtual Double_tTPad::GetAbsYlowNDC() const; Float_tTAttPad::GetAfile() const; virtual Double_tTPad::GetAspectRatio() const; Float_tTAttPad::GetAstat() const; Bool_tTCanvas::GetAutoExec() const; virtual Rectangle_tTPad::GetBBox(); virtual TPointTPad::GetBBoxCenter(); virtual Short_tTPad::GetBorderMode() const; virtual Short_tTPad::GetBorderSize() const; Float_tTAttPad::GetBottomMargin() const; virtual TCanvas*TPad::GetCanvas() const; virtual Int_tTCanvas::GetCanvasID() const; virtual TCanvasImp",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:29526,Availability,down,down,29526,,MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:21112,Deployability,TOGGLE,TOGGLE,21112,"Pad::SetAttTextPS(Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize); virtual voidTCanvas::SetBatch(Bool_t batch = kTRUE); virtual voidTPad::SetBBoxCenter(const TPoint& p); virtual voidTPad::SetBBoxCenterX(const Int_t x); virtual voidTPad::SetBBoxCenterY(const Int_t y); virtual voidTPad::SetBBoxX1(const Int_t x); virtual voidTPad::SetBBoxX2(const Int_t x); virtual voidTPad::SetBBoxY1(const Int_t y); virtual voidTPad::SetBBoxY2(const Int_t y); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetBorderMode(Short_t bordermode); virtual voidTPad::SetBorderSize(Short_t bordersize)MENU ; virtual voidTAttPad::SetBottomMargin(Float_t bottommargin); virtual voidTPad::SetCanvas(TCanvas* c); virtual voidTCanvas::SetCanvasSize(UInt_t ww, UInt_t wh)MENU ; voidTCanvas::SetClickSelected(TObject* obj); voidTCanvas::SetClickSelectedPad(TPad* pad); virtual voidTPad::SetCopyGLDevice(Bool_t copy); virtual voidTPad::SetCrosshair(Int_t crhair = 1)TOGGLE ; virtual voidTCanvas::SetCursor(ECursor cursor); virtual voidTCanvas::SetDoubleBuffer(Int_t mode = 1); virtual voidTPad::SetDrawOption(Option_t* option = """"); static voidTObject::SetDtorOnly(void* obj); virtual voidTPad::SetEditable(Bool_t mode = kTRUE)TOGGLE ; virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTPad::SetFillStyle(Style_t fstyle); virtual voidTCanvas::SetFixedAspectRatio(Bool_t fixed = kTRUE)TOGGLE ; static voidTCanvas::SetFolder(Bool_t isfolder = kTRUE); voidTAttPad::SetFrameBorderMode(Int_t mode = 1); voidTAttPad::SetFrameBorderSize(Width_t size = 1); voidTAttPad::SetFrameFillColor(Color_t color = 1); voidTAttPad::SetFrameFillStyle(Style_t styl = 0); voidTAttPad::SetFrameLineColor(Color_t color = 1); voidTAttPad::SetFrameLineStyle(Style_t styl = 0); voidTAttPad::SetFrameLineWidth(Width_t width = 1); virtual voidTPad::SetGLDevice(Int",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:21373,Deployability,TOGGLE,TOGGLE,21373,"SetBBoxCenterY(const Int_t y); virtual voidTPad::SetBBoxX1(const Int_t x); virtual voidTPad::SetBBoxX2(const Int_t x); virtual voidTPad::SetBBoxY1(const Int_t y); virtual voidTPad::SetBBoxY2(const Int_t y); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetBorderMode(Short_t bordermode); virtual voidTPad::SetBorderSize(Short_t bordersize)MENU ; virtual voidTAttPad::SetBottomMargin(Float_t bottommargin); virtual voidTPad::SetCanvas(TCanvas* c); virtual voidTCanvas::SetCanvasSize(UInt_t ww, UInt_t wh)MENU ; voidTCanvas::SetClickSelected(TObject* obj); voidTCanvas::SetClickSelectedPad(TPad* pad); virtual voidTPad::SetCopyGLDevice(Bool_t copy); virtual voidTPad::SetCrosshair(Int_t crhair = 1)TOGGLE ; virtual voidTCanvas::SetCursor(ECursor cursor); virtual voidTCanvas::SetDoubleBuffer(Int_t mode = 1); virtual voidTPad::SetDrawOption(Option_t* option = """"); static voidTObject::SetDtorOnly(void* obj); virtual voidTPad::SetEditable(Bool_t mode = kTRUE)TOGGLE ; virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTPad::SetFillStyle(Style_t fstyle); virtual voidTCanvas::SetFixedAspectRatio(Bool_t fixed = kTRUE)TOGGLE ; static voidTCanvas::SetFolder(Bool_t isfolder = kTRUE); voidTAttPad::SetFrameBorderMode(Int_t mode = 1); voidTAttPad::SetFrameBorderSize(Width_t size = 1); voidTAttPad::SetFrameFillColor(Color_t color = 1); voidTAttPad::SetFrameFillStyle(Style_t styl = 0); voidTAttPad::SetFrameLineColor(Color_t color = 1); voidTAttPad::SetFrameLineStyle(Style_t styl = 0); voidTAttPad::SetFrameLineWidth(Width_t width = 1); virtual voidTPad::SetGLDevice(Int_t dev); voidTCanvas::SetGrayscale(Bool_t set = kTRUE)TOGGLE GETTER ; virtual voidSetGrid(Int_t valuex = 1, Int_t valuey = 1); virtual voidTPad::SetGridx(Int_t value = 1)TOGGLE ; virtual voidTPad::SetGridy(Int_t value = 1)TOGGLE ; voidTCanvas::SetHighLightColor",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:21665,Deployability,TOGGLE,TOGGLE,21665,"dSetBorderMode(Short_t bordermode); virtual voidTPad::SetBorderSize(Short_t bordersize)MENU ; virtual voidTAttPad::SetBottomMargin(Float_t bottommargin); virtual voidTPad::SetCanvas(TCanvas* c); virtual voidTCanvas::SetCanvasSize(UInt_t ww, UInt_t wh)MENU ; voidTCanvas::SetClickSelected(TObject* obj); voidTCanvas::SetClickSelectedPad(TPad* pad); virtual voidTPad::SetCopyGLDevice(Bool_t copy); virtual voidTPad::SetCrosshair(Int_t crhair = 1)TOGGLE ; virtual voidTCanvas::SetCursor(ECursor cursor); virtual voidTCanvas::SetDoubleBuffer(Int_t mode = 1); virtual voidTPad::SetDrawOption(Option_t* option = """"); static voidTObject::SetDtorOnly(void* obj); virtual voidTPad::SetEditable(Bool_t mode = kTRUE)TOGGLE ; virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTPad::SetFillStyle(Style_t fstyle); virtual voidTCanvas::SetFixedAspectRatio(Bool_t fixed = kTRUE)TOGGLE ; static voidTCanvas::SetFolder(Bool_t isfolder = kTRUE); voidTAttPad::SetFrameBorderMode(Int_t mode = 1); voidTAttPad::SetFrameBorderSize(Width_t size = 1); voidTAttPad::SetFrameFillColor(Color_t color = 1); voidTAttPad::SetFrameFillStyle(Style_t styl = 0); voidTAttPad::SetFrameLineColor(Color_t color = 1); voidTAttPad::SetFrameLineStyle(Style_t styl = 0); voidTAttPad::SetFrameLineWidth(Width_t width = 1); virtual voidTPad::SetGLDevice(Int_t dev); voidTCanvas::SetGrayscale(Bool_t set = kTRUE)TOGGLE GETTER ; virtual voidSetGrid(Int_t valuex = 1, Int_t valuey = 1); virtual voidTPad::SetGridx(Int_t value = 1)TOGGLE ; virtual voidTPad::SetGridy(Int_t value = 1)TOGGLE ; voidTCanvas::SetHighLightColor(Color_t col); virtual voidTAttPad::SetLeftMargin(Float_t leftmargin); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyl",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:22170,Deployability,TOGGLE,TOGGLE,22170,"ual voidTCanvas::SetDoubleBuffer(Int_t mode = 1); virtual voidTPad::SetDrawOption(Option_t* option = """"); static voidTObject::SetDtorOnly(void* obj); virtual voidTPad::SetEditable(Bool_t mode = kTRUE)TOGGLE ; virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTPad::SetFillStyle(Style_t fstyle); virtual voidTCanvas::SetFixedAspectRatio(Bool_t fixed = kTRUE)TOGGLE ; static voidTCanvas::SetFolder(Bool_t isfolder = kTRUE); voidTAttPad::SetFrameBorderMode(Int_t mode = 1); voidTAttPad::SetFrameBorderSize(Width_t size = 1); voidTAttPad::SetFrameFillColor(Color_t color = 1); voidTAttPad::SetFrameFillStyle(Style_t styl = 0); voidTAttPad::SetFrameLineColor(Color_t color = 1); voidTAttPad::SetFrameLineStyle(Style_t styl = 0); voidTAttPad::SetFrameLineWidth(Width_t width = 1); virtual voidTPad::SetGLDevice(Int_t dev); voidTCanvas::SetGrayscale(Bool_t set = kTRUE)TOGGLE GETTER ; virtual voidSetGrid(Int_t valuex = 1, Int_t valuey = 1); virtual voidTPad::SetGridx(Int_t value = 1)TOGGLE ; virtual voidTPad::SetGridy(Int_t value = 1)TOGGLE ; voidTCanvas::SetHighLightColor(Color_t col); virtual voidTAttPad::SetLeftMargin(Float_t leftmargin); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidSetLogx(Int_t value = 1); virtual voidSetLogy(Int_t value = 1); virtual voidTPad::SetLogz(Int_t value = 1)TOGGLE ; virtual voidTAttPad::SetMargin(Float_t left, Float_t right, Float_t bottom, Float_t top); static voidTPad::SetMaxPickDistance(Int_t maxPick = 5); virtual voidSetName(const char* name); virtual voidTPad::SetNumber(Int_t number); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTPad::SetPad(Double_t xlow, Double",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:22286,Deployability,TOGGLE,TOGGLE,22286,"dTObject::SetDtorOnly(void* obj); virtual voidTPad::SetEditable(Bool_t mode = kTRUE)TOGGLE ; virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTPad::SetFillStyle(Style_t fstyle); virtual voidTCanvas::SetFixedAspectRatio(Bool_t fixed = kTRUE)TOGGLE ; static voidTCanvas::SetFolder(Bool_t isfolder = kTRUE); voidTAttPad::SetFrameBorderMode(Int_t mode = 1); voidTAttPad::SetFrameBorderSize(Width_t size = 1); voidTAttPad::SetFrameFillColor(Color_t color = 1); voidTAttPad::SetFrameFillStyle(Style_t styl = 0); voidTAttPad::SetFrameLineColor(Color_t color = 1); voidTAttPad::SetFrameLineStyle(Style_t styl = 0); voidTAttPad::SetFrameLineWidth(Width_t width = 1); virtual voidTPad::SetGLDevice(Int_t dev); voidTCanvas::SetGrayscale(Bool_t set = kTRUE)TOGGLE GETTER ; virtual voidSetGrid(Int_t valuex = 1, Int_t valuey = 1); virtual voidTPad::SetGridx(Int_t value = 1)TOGGLE ; virtual voidTPad::SetGridy(Int_t value = 1)TOGGLE ; voidTCanvas::SetHighLightColor(Color_t col); virtual voidTAttPad::SetLeftMargin(Float_t leftmargin); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidSetLogx(Int_t value = 1); virtual voidSetLogy(Int_t value = 1); virtual voidTPad::SetLogz(Int_t value = 1)TOGGLE ; virtual voidTAttPad::SetMargin(Float_t left, Float_t right, Float_t bottom, Float_t top); static voidTPad::SetMaxPickDistance(Int_t maxPick = 5); virtual voidSetName(const char* name); virtual voidTPad::SetNumber(Int_t number); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTPad::SetPad(Double_t xlow, Double_t ylow, Double_t xup, Double_t yup); virtual voidTPad::SetPad(const char* name, const char* title, Double_t xlow, D",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:22338,Deployability,TOGGLE,TOGGLE,22338,"SetEditable(Bool_t mode = kTRUE)TOGGLE ; virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTPad::SetFillStyle(Style_t fstyle); virtual voidTCanvas::SetFixedAspectRatio(Bool_t fixed = kTRUE)TOGGLE ; static voidTCanvas::SetFolder(Bool_t isfolder = kTRUE); voidTAttPad::SetFrameBorderMode(Int_t mode = 1); voidTAttPad::SetFrameBorderSize(Width_t size = 1); voidTAttPad::SetFrameFillColor(Color_t color = 1); voidTAttPad::SetFrameFillStyle(Style_t styl = 0); voidTAttPad::SetFrameLineColor(Color_t color = 1); voidTAttPad::SetFrameLineStyle(Style_t styl = 0); voidTAttPad::SetFrameLineWidth(Width_t width = 1); virtual voidTPad::SetGLDevice(Int_t dev); voidTCanvas::SetGrayscale(Bool_t set = kTRUE)TOGGLE GETTER ; virtual voidSetGrid(Int_t valuex = 1, Int_t valuey = 1); virtual voidTPad::SetGridx(Int_t value = 1)TOGGLE ; virtual voidTPad::SetGridy(Int_t value = 1)TOGGLE ; voidTCanvas::SetHighLightColor(Color_t col); virtual voidTAttPad::SetLeftMargin(Float_t leftmargin); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidSetLogx(Int_t value = 1); virtual voidSetLogy(Int_t value = 1); virtual voidTPad::SetLogz(Int_t value = 1)TOGGLE ; virtual voidTAttPad::SetMargin(Float_t left, Float_t right, Float_t bottom, Float_t top); static voidTPad::SetMaxPickDistance(Int_t maxPick = 5); virtual voidSetName(const char* name); virtual voidTPad::SetNumber(Int_t number); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTPad::SetPad(Double_t xlow, Double_t ylow, Double_t xup, Double_t yup); virtual voidTPad::SetPad(const char* name, const char* title, Double_t xlow, Double_t ylow, Double_t xup, Double_t yup, Color_t co",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:22843,Deployability,TOGGLE,TOGGLE,22843,"FrameFillColor(Color_t color = 1); voidTAttPad::SetFrameFillStyle(Style_t styl = 0); voidTAttPad::SetFrameLineColor(Color_t color = 1); voidTAttPad::SetFrameLineStyle(Style_t styl = 0); voidTAttPad::SetFrameLineWidth(Width_t width = 1); virtual voidTPad::SetGLDevice(Int_t dev); voidTCanvas::SetGrayscale(Bool_t set = kTRUE)TOGGLE GETTER ; virtual voidSetGrid(Int_t valuex = 1, Int_t valuey = 1); virtual voidTPad::SetGridx(Int_t value = 1)TOGGLE ; virtual voidTPad::SetGridy(Int_t value = 1)TOGGLE ; voidTCanvas::SetHighLightColor(Color_t col); virtual voidTAttPad::SetLeftMargin(Float_t leftmargin); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidSetLogx(Int_t value = 1); virtual voidSetLogy(Int_t value = 1); virtual voidTPad::SetLogz(Int_t value = 1)TOGGLE ; virtual voidTAttPad::SetMargin(Float_t left, Float_t right, Float_t bottom, Float_t top); static voidTPad::SetMaxPickDistance(Int_t maxPick = 5); virtual voidSetName(const char* name); virtual voidTPad::SetNumber(Int_t number); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTPad::SetPad(Double_t xlow, Double_t ylow, Double_t xup, Double_t yup); virtual voidTPad::SetPad(const char* name, const char* title, Double_t xlow, Double_t ylow, Double_t xup, Double_t yup, Color_t color = 35, Short_t bordersize = 5, Short_t bordermode = -1); voidTCanvas::SetPadSave(TPad* pad); virtual voidTPad::SetPhi(Double_t phi = 30); virtual voidSetRefObject(TObject* obj); virtual voidSetRefPad(TPad* pad); voidTCanvas::SetRetained(Bool_t retained = kTRUE); virtual voidTAttPad::SetRightMargin(Float_t rightmargin); virtual voidTCanvas::SetSelected(TObject* obj); voidTCanvas::SetSelectedPad(TPad* pad); voidTCanvas::SetSupportGL(Bool_t support); virtual voidTAttText::SetTextAlign(Short_t align =",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:24411,Deployability,TOGGLE,TOGGLE,24411,":SetPadSave(TPad* pad); virtual voidTPad::SetPhi(Double_t phi = 30); virtual voidSetRefObject(TObject* obj); virtual voidSetRefPad(TPad* pad); voidTCanvas::SetRetained(Bool_t retained = kTRUE); virtual voidTAttPad::SetRightMargin(Float_t rightmargin); virtual voidTCanvas::SetSelected(TObject* obj); voidTCanvas::SetSelectedPad(TPad* pad); voidTCanvas::SetSupportGL(Bool_t support); virtual voidTAttText::SetTextAlign(Short_t align = 11); virtual voidTAttText::SetTextAngle(Float_t tangle = 0)MENU ; virtual voidTAttText::SetTextAttributes()MENU ; virtual voidTAttText::SetTextColor(Color_t tcolor = 1); virtual voidTAttText::SetTextColorAlpha(Color_t tcolor, Float_t talpha); virtual voidTAttText::SetTextFont(Font_t tfont = 62); virtual voidTAttText::SetTextSize(Float_t tsize = 1); virtual voidTAttText::SetTextSizePixels(Int_t npixels); virtual voidTPad::SetTheta(Double_t theta = 30); virtual voidTPad::SetTicks(Int_t valuex = 1, Int_t valuey = 1); virtual voidTPad::SetTickx(Int_t value = 1)TOGGLE ; virtual voidTPad::SetTicky(Int_t value = 1)TOGGLE ; virtual voidTCanvas::SetTitle(const char* title = """"); virtual voidTPad::SetToolTipText(const char* text, Long_t delayms = 1000); virtual voidTAttPad::SetTopMargin(Float_t topmargin); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTPad::SetVertical(Bool_t vert = kTRUE); virtual voidTPad::SetView(TView* view = 0); virtual voidTPad::SetViewer3D(TVirtualViewer3D* viewer3d); voidTCanvas::SetWindowPosition(Int_t x, Int_t y); voidTCanvas::SetWindowSize(UInt_t ww, UInt_t wh); virtual voidTAttPad::SetXfile(Float_t xfile); virtual voidTAttPad::SetXstat(Float_t xstat); virtual voidTAttPad::SetYfile(Float_t yfile); virtual voidTAttPad::SetYstat(Float_t ystat); voidTCanvas::Show(); virtual voidTPad::ShowGuidelines(TObject* object, const Int_t event, const char mode = 'i', const bool cling = true); virtual voidShowMembers(TMemberInspector&); virtual voidTCanvas::Size(Float_t xsizeuser = 0, Float_t ysizeuser = 0); virtual voidTPad::",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:24463,Deployability,TOGGLE,TOGGLE,24463,"ble_t phi = 30); virtual voidSetRefObject(TObject* obj); virtual voidSetRefPad(TPad* pad); voidTCanvas::SetRetained(Bool_t retained = kTRUE); virtual voidTAttPad::SetRightMargin(Float_t rightmargin); virtual voidTCanvas::SetSelected(TObject* obj); voidTCanvas::SetSelectedPad(TPad* pad); voidTCanvas::SetSupportGL(Bool_t support); virtual voidTAttText::SetTextAlign(Short_t align = 11); virtual voidTAttText::SetTextAngle(Float_t tangle = 0)MENU ; virtual voidTAttText::SetTextAttributes()MENU ; virtual voidTAttText::SetTextColor(Color_t tcolor = 1); virtual voidTAttText::SetTextColorAlpha(Color_t tcolor, Float_t talpha); virtual voidTAttText::SetTextFont(Font_t tfont = 62); virtual voidTAttText::SetTextSize(Float_t tsize = 1); virtual voidTAttText::SetTextSizePixels(Int_t npixels); virtual voidTPad::SetTheta(Double_t theta = 30); virtual voidTPad::SetTicks(Int_t valuex = 1, Int_t valuey = 1); virtual voidTPad::SetTickx(Int_t value = 1)TOGGLE ; virtual voidTPad::SetTicky(Int_t value = 1)TOGGLE ; virtual voidTCanvas::SetTitle(const char* title = """"); virtual voidTPad::SetToolTipText(const char* text, Long_t delayms = 1000); virtual voidTAttPad::SetTopMargin(Float_t topmargin); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTPad::SetVertical(Bool_t vert = kTRUE); virtual voidTPad::SetView(TView* view = 0); virtual voidTPad::SetViewer3D(TVirtualViewer3D* viewer3d); voidTCanvas::SetWindowPosition(Int_t x, Int_t y); voidTCanvas::SetWindowSize(UInt_t ww, UInt_t wh); virtual voidTAttPad::SetXfile(Float_t xfile); virtual voidTAttPad::SetXstat(Float_t xstat); virtual voidTAttPad::SetYfile(Float_t yfile); virtual voidTAttPad::SetYstat(Float_t ystat); voidTCanvas::Show(); virtual voidTPad::ShowGuidelines(TObject* object, const Int_t event, const char mode = 'i', const bool cling = true); virtual voidShowMembers(TMemberInspector&); virtual voidTCanvas::Size(Float_t xsizeuser = 0, Float_t ysizeuser = 0); virtual voidTPad::StartEditing()SIGNAL ; virtual voidStreamer(TBuffer&",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:25746,Deployability,Toggle,ToggleAutoExec,25746," virtual voidTPad::SetView(TView* view = 0); virtual voidTPad::SetViewer3D(TVirtualViewer3D* viewer3d); voidTCanvas::SetWindowPosition(Int_t x, Int_t y); voidTCanvas::SetWindowSize(UInt_t ww, UInt_t wh); virtual voidTAttPad::SetXfile(Float_t xfile); virtual voidTAttPad::SetXstat(Float_t xstat); virtual voidTAttPad::SetYfile(Float_t yfile); virtual voidTAttPad::SetYstat(Float_t ystat); voidTCanvas::Show(); virtual voidTPad::ShowGuidelines(TObject* object, const Int_t event, const char mode = 'i', const bool cling = true); virtual voidShowMembers(TMemberInspector&); virtual voidTCanvas::Size(Float_t xsizeuser = 0, Float_t ysizeuser = 0); virtual voidTPad::StartEditing()SIGNAL ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static Bool_tTCanvas::SupportAlpha(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTCanvas::ToggleAutoExec(); virtual voidTCanvas::ToggleEditor(); virtual voidTCanvas::ToggleEventStatus(); virtual voidTCanvas::ToggleToolBar(); virtual voidTCanvas::ToggleToolTips(); virtual voidTCanvas::Update(); virtual voidTCanvas::UseCurrentStyle()MENU ; Bool_tTCanvas::UseGL() const; virtual Int_tTPad::UtoAbsPixel(Double_t u) const; virtual Int_tTPad::UtoPixel(Double_t u) const; virtual Int_tTPad::VtoAbsPixel(Double_t v) const; virtual Int_tTPad::VtoPixel(Double_t v) const; virtual TObject*TPad::WaitPrimitive(const char* pname = """", const char* emode = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidx3d(Option_t* option = """"); virtual Int_tTPad::XtoAbsPixel(Double_t x) const; virtual Double_tTPad::XtoPad(Double_t x) const; virtual Int_tTPad::XtoPixel(Double_t x) const; virtua",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:25785,Deployability,Toggle,ToggleEditor,25785," = 0); virtual voidTPad::SetViewer3D(TVirtualViewer3D* viewer3d); voidTCanvas::SetWindowPosition(Int_t x, Int_t y); voidTCanvas::SetWindowSize(UInt_t ww, UInt_t wh); virtual voidTAttPad::SetXfile(Float_t xfile); virtual voidTAttPad::SetXstat(Float_t xstat); virtual voidTAttPad::SetYfile(Float_t yfile); virtual voidTAttPad::SetYstat(Float_t ystat); voidTCanvas::Show(); virtual voidTPad::ShowGuidelines(TObject* object, const Int_t event, const char mode = 'i', const bool cling = true); virtual voidShowMembers(TMemberInspector&); virtual voidTCanvas::Size(Float_t xsizeuser = 0, Float_t ysizeuser = 0); virtual voidTPad::StartEditing()SIGNAL ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static Bool_tTCanvas::SupportAlpha(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTCanvas::ToggleAutoExec(); virtual voidTCanvas::ToggleEditor(); virtual voidTCanvas::ToggleEventStatus(); virtual voidTCanvas::ToggleToolBar(); virtual voidTCanvas::ToggleToolTips(); virtual voidTCanvas::Update(); virtual voidTCanvas::UseCurrentStyle()MENU ; Bool_tTCanvas::UseGL() const; virtual Int_tTPad::UtoAbsPixel(Double_t u) const; virtual Int_tTPad::UtoPixel(Double_t u) const; virtual Int_tTPad::VtoAbsPixel(Double_t v) const; virtual Int_tTPad::VtoPixel(Double_t v) const; virtual TObject*TPad::WaitPrimitive(const char* pname = """", const char* emode = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidx3d(Option_t* option = """"); virtual Int_tTPad::XtoAbsPixel(Double_t x) const; virtual Double_tTPad::XtoPad(Double_t x) const; virtual Int_tTPad::XtoPixel(Double_t x) const; virtual voidTPad::XYtoAbsPixel(Double_t x, D",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:25822,Deployability,Toggle,ToggleEventStatus,25822,"rtualViewer3D* viewer3d); voidTCanvas::SetWindowPosition(Int_t x, Int_t y); voidTCanvas::SetWindowSize(UInt_t ww, UInt_t wh); virtual voidTAttPad::SetXfile(Float_t xfile); virtual voidTAttPad::SetXstat(Float_t xstat); virtual voidTAttPad::SetYfile(Float_t yfile); virtual voidTAttPad::SetYstat(Float_t ystat); voidTCanvas::Show(); virtual voidTPad::ShowGuidelines(TObject* object, const Int_t event, const char mode = 'i', const bool cling = true); virtual voidShowMembers(TMemberInspector&); virtual voidTCanvas::Size(Float_t xsizeuser = 0, Float_t ysizeuser = 0); virtual voidTPad::StartEditing()SIGNAL ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static Bool_tTCanvas::SupportAlpha(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTCanvas::ToggleAutoExec(); virtual voidTCanvas::ToggleEditor(); virtual voidTCanvas::ToggleEventStatus(); virtual voidTCanvas::ToggleToolBar(); virtual voidTCanvas::ToggleToolTips(); virtual voidTCanvas::Update(); virtual voidTCanvas::UseCurrentStyle()MENU ; Bool_tTCanvas::UseGL() const; virtual Int_tTPad::UtoAbsPixel(Double_t u) const; virtual Int_tTPad::UtoPixel(Double_t u) const; virtual Int_tTPad::VtoAbsPixel(Double_t v) const; virtual Int_tTPad::VtoPixel(Double_t v) const; virtual TObject*TPad::WaitPrimitive(const char* pname = """", const char* emode = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidx3d(Option_t* option = """"); virtual Int_tTPad::XtoAbsPixel(Double_t x) const; virtual Double_tTPad::XtoPad(Double_t x) const; virtual Int_tTPad::XtoPixel(Double_t x) const; virtual voidTPad::XYtoAbsPixel(Double_t x, Double_t y, Int_t& xpixel, Int_t& ypixel",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:25864,Deployability,Toggle,ToggleToolBar,25864,"etWindowPosition(Int_t x, Int_t y); voidTCanvas::SetWindowSize(UInt_t ww, UInt_t wh); virtual voidTAttPad::SetXfile(Float_t xfile); virtual voidTAttPad::SetXstat(Float_t xstat); virtual voidTAttPad::SetYfile(Float_t yfile); virtual voidTAttPad::SetYstat(Float_t ystat); voidTCanvas::Show(); virtual voidTPad::ShowGuidelines(TObject* object, const Int_t event, const char mode = 'i', const bool cling = true); virtual voidShowMembers(TMemberInspector&); virtual voidTCanvas::Size(Float_t xsizeuser = 0, Float_t ysizeuser = 0); virtual voidTPad::StartEditing()SIGNAL ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static Bool_tTCanvas::SupportAlpha(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTCanvas::ToggleAutoExec(); virtual voidTCanvas::ToggleEditor(); virtual voidTCanvas::ToggleEventStatus(); virtual voidTCanvas::ToggleToolBar(); virtual voidTCanvas::ToggleToolTips(); virtual voidTCanvas::Update(); virtual voidTCanvas::UseCurrentStyle()MENU ; Bool_tTCanvas::UseGL() const; virtual Int_tTPad::UtoAbsPixel(Double_t u) const; virtual Int_tTPad::UtoPixel(Double_t u) const; virtual Int_tTPad::VtoAbsPixel(Double_t v) const; virtual Int_tTPad::VtoPixel(Double_t v) const; virtual TObject*TPad::WaitPrimitive(const char* pname = """", const char* emode = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidx3d(Option_t* option = """"); virtual Int_tTPad::XtoAbsPixel(Double_t x) const; virtual Double_tTPad::XtoPad(Double_t x) const; virtual Int_tTPad::XtoPixel(Double_t x) const; virtual voidTPad::XYtoAbsPixel(Double_t x, Double_t y, Int_t& xpixel, Int_t& ypixel) const; virtual voidTPad::XYtoPixel(Dou",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:25902,Deployability,Toggle,ToggleToolTips,25902,"idTCanvas::SetWindowSize(UInt_t ww, UInt_t wh); virtual voidTAttPad::SetXfile(Float_t xfile); virtual voidTAttPad::SetXstat(Float_t xstat); virtual voidTAttPad::SetYfile(Float_t yfile); virtual voidTAttPad::SetYstat(Float_t ystat); voidTCanvas::Show(); virtual voidTPad::ShowGuidelines(TObject* object, const Int_t event, const char mode = 'i', const bool cling = true); virtual voidShowMembers(TMemberInspector&); virtual voidTCanvas::Size(Float_t xsizeuser = 0, Float_t ysizeuser = 0); virtual voidTPad::StartEditing()SIGNAL ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static Bool_tTCanvas::SupportAlpha(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTCanvas::ToggleAutoExec(); virtual voidTCanvas::ToggleEditor(); virtual voidTCanvas::ToggleEventStatus(); virtual voidTCanvas::ToggleToolBar(); virtual voidTCanvas::ToggleToolTips(); virtual voidTCanvas::Update(); virtual voidTCanvas::UseCurrentStyle()MENU ; Bool_tTCanvas::UseGL() const; virtual Int_tTPad::UtoAbsPixel(Double_t u) const; virtual Int_tTPad::UtoPixel(Double_t u) const; virtual Int_tTPad::VtoAbsPixel(Double_t v) const; virtual Int_tTPad::VtoPixel(Double_t v) const; virtual TObject*TPad::WaitPrimitive(const char* pname = """", const char* emode = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidx3d(Option_t* option = """"); virtual Int_tTPad::XtoAbsPixel(Double_t x) const; virtual Double_tTPad::XtoPad(Double_t x) const; virtual Int_tTPad::XtoPixel(Double_t x) const; virtual voidTPad::XYtoAbsPixel(Double_t x, Double_t y, Int_t& xpixel, Int_t& ypixel) const; virtual voidTPad::XYtoPixel(Double_t x, Double_t y, Int_t& xpixel, Int",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:25941,Deployability,Update,Update,25941," UInt_t wh); virtual voidTAttPad::SetXfile(Float_t xfile); virtual voidTAttPad::SetXstat(Float_t xstat); virtual voidTAttPad::SetYfile(Float_t yfile); virtual voidTAttPad::SetYstat(Float_t ystat); voidTCanvas::Show(); virtual voidTPad::ShowGuidelines(TObject* object, const Int_t event, const char mode = 'i', const bool cling = true); virtual voidShowMembers(TMemberInspector&); virtual voidTCanvas::Size(Float_t xsizeuser = 0, Float_t ysizeuser = 0); virtual voidTPad::StartEditing()SIGNAL ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static Bool_tTCanvas::SupportAlpha(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTCanvas::ToggleAutoExec(); virtual voidTCanvas::ToggleEditor(); virtual voidTCanvas::ToggleEventStatus(); virtual voidTCanvas::ToggleToolBar(); virtual voidTCanvas::ToggleToolTips(); virtual voidTCanvas::Update(); virtual voidTCanvas::UseCurrentStyle()MENU ; Bool_tTCanvas::UseGL() const; virtual Int_tTPad::UtoAbsPixel(Double_t u) const; virtual Int_tTPad::UtoPixel(Double_t u) const; virtual Int_tTPad::VtoAbsPixel(Double_t v) const; virtual Int_tTPad::VtoPixel(Double_t v) const; virtual TObject*TPad::WaitPrimitive(const char* pname = """", const char* emode = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidx3d(Option_t* option = """"); virtual Int_tTPad::XtoAbsPixel(Double_t x) const; virtual Double_tTPad::XtoPad(Double_t x) const; virtual Int_tTPad::XtoPixel(Double_t x) const; virtual voidTPad::XYtoAbsPixel(Double_t x, Double_t y, Int_t& xpixel, Int_t& ypixel) const; virtual voidTPad::XYtoPixel(Double_t x, Double_t y, Int_t& xpixel, Int_t& ypixel) const; virtual Int_tTPa",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:14306,Integrability,Message,Message,14306,"const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTCanvas::IsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tTPad::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCanvas::IsFolder() const; Bool_tTCanvas::IsGrayscale(); virtual Bool_tTPad::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTCanvas::IsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tTPad::IsVertical() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTCanvas::ls(Option_t* option = """") const; static TCanvas*TCanvas::MakeDefCanvas(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTPad::Modified(Bool_t flag = 1)SIGNAL ; virtual voidTAttLine::Modify(); voidTCanvas::MoveOpaque(Int_t set = 1); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Bool_tTCanvas::OpaqueMoving() const; virtual Bool_tTCanvas::OpaqueResizing() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); static TVirtualPad*&TVirtualPad::Pad(); virtual Bool_tTVirtualPad::PadInHighlightMode() const; virtual Bool_tTVirtualPad::PadI",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:13274,Modifiability,Inherit,InheritsFrom,13274,"TCanvas::GetXsizeUser() const; Float_tTAttPad::GetXstat() const; virtual Double_tTPad::GetY1() const; virtual Double_tTPad::GetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tTPad::GetYlowNDC() const; Size_tTCanvas::GetYsizeReal() const; Size_tTCanvas::GetYsizeUser() const; Float_tTAttPad::GetYstat() const; virtual voidTCanvas::HandleInput(EEventType button, Int_t x, Int_t y); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tTPad::HasCrosshair() const; virtual Bool_tTPad::HasFixedAspectRatio() const; virtual ULong_tTPad::Hash() const; Bool_tTCanvas::HasMenuBar() const; virtual Bool_tTPad::HasViewer3D() const; virtual voidTPad::HighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTCanvas::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTCanvas::IsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tTPad::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCanvas::IsFolder() const; Bool_tTCanvas::IsGrayscale(); virtual Bool_tTPad::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTCanvas::IsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tTPad::IsVertical() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTCanvas::ls(Option_t* option = """") const; static TCanvas*TCanvas::MakeDefCanvas(); voidTObject::MayNotUse(const char* method) cons",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:13340,Modifiability,Inherit,InheritsFrom,13340,"irtual Double_tTPad::GetY1() const; virtual Double_tTPad::GetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tTPad::GetYlowNDC() const; Size_tTCanvas::GetYsizeReal() const; Size_tTCanvas::GetYsizeUser() const; Float_tTAttPad::GetYstat() const; virtual voidTCanvas::HandleInput(EEventType button, Int_t x, Int_t y); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tTPad::HasCrosshair() const; virtual Bool_tTPad::HasFixedAspectRatio() const; virtual ULong_tTPad::Hash() const; Bool_tTCanvas::HasMenuBar() const; virtual Bool_tTPad::HasViewer3D() const; virtual voidTPad::HighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTCanvas::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTCanvas::IsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tTPad::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCanvas::IsFolder() const; Bool_tTCanvas::IsGrayscale(); virtual Bool_tTPad::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTCanvas::IsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tTPad::IsVertical() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTCanvas::ls(Option_t* option = """") const; static TCanvas*TCanvas::MakeDefCanvas(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual ",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:36606,Modifiability,Inherit,Inheritance,36606,"oPixelk + fXtoPixel*xworld; Double_tTPad::fXtoPixelkConversion coefficient for X World to pixel; Double_tTPad::fY1Y of lower Y coordinate; Double_tTPad::fY2Y of upper Y coordinate; Double_tTPad::fYUpNDC; Float_tTAttPad::fYfileY position where to draw the file name; Double_tTPad::fYlowNDCY bottom left corner of pad in NDC [0,1]; Size_tTCanvas::fYsizeRealCurrent size of canvas along Y in CM; Size_tTCanvas::fYsizeUserUser specified size of canvas along Y in CM; Float_tTAttPad::fYstatY position where to draw the statistics; Double_tTPad::fYtoAbsPixelkConversion coefficient for Y World to absolute pixel; Double_tTPad::fYtoPixelypixel = fYtoPixelk + fYtoPixel*yworld; Double_tTPad::fYtoPixelkConversion coefficient for Y World to pixel; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Bool_tTCanvas::fgIsFolderIndicates if canvas can be browsed as a folder; static Int_tTPad::fgMaxPickDistanceMaximum Pick Distance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDialogCanvas(); DialogCanvas default constructor. TDialogCanvas(const char* name, const char* title, Int_t ww, Int_t wh); DialogCanvas constructor. TDialogCanvas(const char* name, const char* title, Int_t wtopx, Int_t wtopy, UInt_t ww, UInt_t wh); DialogCanvas constructor. ~TDialogCanvas(); DialogCanvas default destructor. void Apply(const char* action = """"); Called when the APPLY button is executed. void BuildStandardButtons(); Create APPLY, gStyle and CLOSE buttons. void Range(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Set world coordinate system for the pad. void RecursiveRemove(TObject* obj); Recursively remove object from a pad and its subpads. void Divide(Int_t nx = 1, Int_t ny = 1, Float_t xmargin = 0.01, Float_t ymargin = 0.01, Int_t color = 0); { }. void SetGrid(Int_t valuex = 1, Int_t valuey = 1); { }. void SetLogx(Int_t value = 1); { }. void SetLogy(Int_t value = 1); { }. void x3d(Option_t* option = """"); { }. TDia",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:36619,Modifiability,Inherit,Inherited,36619,"oPixelk + fXtoPixel*xworld; Double_tTPad::fXtoPixelkConversion coefficient for X World to pixel; Double_tTPad::fY1Y of lower Y coordinate; Double_tTPad::fY2Y of upper Y coordinate; Double_tTPad::fYUpNDC; Float_tTAttPad::fYfileY position where to draw the file name; Double_tTPad::fYlowNDCY bottom left corner of pad in NDC [0,1]; Size_tTCanvas::fYsizeRealCurrent size of canvas along Y in CM; Size_tTCanvas::fYsizeUserUser specified size of canvas along Y in CM; Float_tTAttPad::fYstatY position where to draw the statistics; Double_tTPad::fYtoAbsPixelkConversion coefficient for Y World to absolute pixel; Double_tTPad::fYtoPixelypixel = fYtoPixelk + fYtoPixel*yworld; Double_tTPad::fYtoPixelkConversion coefficient for Y World to pixel; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Bool_tTCanvas::fgIsFolderIndicates if canvas can be browsed as a folder; static Int_tTPad::fgMaxPickDistanceMaximum Pick Distance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDialogCanvas(); DialogCanvas default constructor. TDialogCanvas(const char* name, const char* title, Int_t ww, Int_t wh); DialogCanvas constructor. TDialogCanvas(const char* name, const char* title, Int_t wtopx, Int_t wtopy, UInt_t ww, UInt_t wh); DialogCanvas constructor. ~TDialogCanvas(); DialogCanvas default destructor. void Apply(const char* action = """"); Called when the APPLY button is executed. void BuildStandardButtons(); Create APPLY, gStyle and CLOSE buttons. void Range(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Set world coordinate system for the pad. void RecursiveRemove(TObject* obj); Recursively remove object from a pad and its subpads. void Divide(Int_t nx = 1, Int_t ny = 1, Float_t xmargin = 0.01, Float_t ymargin = 0.01, Int_t color = 0); { }. void SetGrid(Int_t valuex = 1, Int_t valuey = 1); { }. void SetLogx(Int_t value = 1); { }. void SetLogy(Int_t value = 1); { }. void x3d(Option_t* option = """"); { }. TDia",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:12907,Security,Hash,Hash,12907,"Int_tTCanvas::GetWindowTopX(); Int_tTCanvas::GetWindowTopY(); UInt_tTCanvas::GetWindowWidth() const; virtual Double_tTPad::GetWNDC() const; virtual UInt_tTCanvas::GetWw() const; virtual Double_tTPad::GetX1() const; virtual Double_tTPad::GetX2() const; Float_tTAttPad::GetXfile() const; virtual Double_tTPad::GetXlowNDC() const; Size_tTCanvas::GetXsizeReal() const; Size_tTCanvas::GetXsizeUser() const; Float_tTAttPad::GetXstat() const; virtual Double_tTPad::GetY1() const; virtual Double_tTPad::GetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tTPad::GetYlowNDC() const; Size_tTCanvas::GetYsizeReal() const; Size_tTCanvas::GetYsizeUser() const; Float_tTAttPad::GetYstat() const; virtual voidTCanvas::HandleInput(EEventType button, Int_t x, Int_t y); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tTPad::HasCrosshair() const; virtual Bool_tTPad::HasFixedAspectRatio() const; virtual ULong_tTPad::Hash() const; Bool_tTCanvas::HasMenuBar() const; virtual Bool_tTPad::HasViewer3D() const; virtual voidTPad::HighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTCanvas::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTCanvas::IsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tTPad::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCanvas::IsFolder() const; Bool_tTCanvas::IsGrayscale(); virtual Bool_tTPad::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTCanvas::IsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTA",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:25660,Testability,Test,TestBit,25660,"voidTObject::SetUniqueID(UInt_t uid); virtual voidTPad::SetVertical(Bool_t vert = kTRUE); virtual voidTPad::SetView(TView* view = 0); virtual voidTPad::SetViewer3D(TVirtualViewer3D* viewer3d); voidTCanvas::SetWindowPosition(Int_t x, Int_t y); voidTCanvas::SetWindowSize(UInt_t ww, UInt_t wh); virtual voidTAttPad::SetXfile(Float_t xfile); virtual voidTAttPad::SetXstat(Float_t xstat); virtual voidTAttPad::SetYfile(Float_t yfile); virtual voidTAttPad::SetYstat(Float_t ystat); voidTCanvas::Show(); virtual voidTPad::ShowGuidelines(TObject* object, const Int_t event, const char mode = 'i', const bool cling = true); virtual voidShowMembers(TMemberInspector&); virtual voidTCanvas::Size(Float_t xsizeuser = 0, Float_t ysizeuser = 0); virtual voidTPad::StartEditing()SIGNAL ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static Bool_tTCanvas::SupportAlpha(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTCanvas::ToggleAutoExec(); virtual voidTCanvas::ToggleEditor(); virtual voidTCanvas::ToggleEventStatus(); virtual voidTCanvas::ToggleToolBar(); virtual voidTCanvas::ToggleToolTips(); virtual voidTCanvas::Update(); virtual voidTCanvas::UseCurrentStyle()MENU ; Bool_tTCanvas::UseGL() const; virtual Int_tTPad::UtoAbsPixel(Double_t u) const; virtual Int_tTPad::UtoPixel(Double_t u) const; virtual Int_tTPad::VtoAbsPixel(Double_t v) const; virtual Int_tTPad::VtoPixel(Double_t v) const; virtual TObject*TPad::WaitPrimitive(const char* pname = """", const char* emode = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidx3d(Option_t* option = """"); virtual Int_tTPad::XtoAbsPixel(Double_t x) const; virtual Dou",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:25699,Testability,Test,TestBits,25699,"irtual voidTPad::SetVertical(Bool_t vert = kTRUE); virtual voidTPad::SetView(TView* view = 0); virtual voidTPad::SetViewer3D(TVirtualViewer3D* viewer3d); voidTCanvas::SetWindowPosition(Int_t x, Int_t y); voidTCanvas::SetWindowSize(UInt_t ww, UInt_t wh); virtual voidTAttPad::SetXfile(Float_t xfile); virtual voidTAttPad::SetXstat(Float_t xstat); virtual voidTAttPad::SetYfile(Float_t yfile); virtual voidTAttPad::SetYstat(Float_t ystat); voidTCanvas::Show(); virtual voidTPad::ShowGuidelines(TObject* object, const Int_t event, const char mode = 'i', const bool cling = true); virtual voidShowMembers(TMemberInspector&); virtual voidTCanvas::Size(Float_t xsizeuser = 0, Float_t ysizeuser = 0); virtual voidTPad::StartEditing()SIGNAL ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static Bool_tTCanvas::SupportAlpha(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTCanvas::ToggleAutoExec(); virtual voidTCanvas::ToggleEditor(); virtual voidTCanvas::ToggleEventStatus(); virtual voidTCanvas::ToggleToolBar(); virtual voidTCanvas::ToggleToolTips(); virtual voidTCanvas::Update(); virtual voidTCanvas::UseCurrentStyle()MENU ; Bool_tTCanvas::UseGL() const; virtual Int_tTPad::UtoAbsPixel(Double_t u) const; virtual Int_tTPad::UtoPixel(Double_t u) const; virtual Int_tTPad::VtoAbsPixel(Double_t v) const; virtual Int_tTPad::VtoPixel(Double_t v) const; virtual TObject*TPad::WaitPrimitive(const char* pname = """", const char* emode = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidx3d(Option_t* option = """"); virtual Int_tTPad::XtoAbsPixel(Double_t x) const; virtual Double_tTPad::XtoPad(Double_t x) const; vir",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:31929,Testability,log,log,31929,":fEmbeddedGL!; Int_tTCanvas::fEvent!Type of current or last handled event; Int_tTCanvas::fEventX!Last X mouse position in canvas; Int_tTCanvas::fEventY!Last Y mouse position in canvas; TList*TPad::fExecsList of commands to be executed when a pad event occurs; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Bool_tTPad::fFixedAspectRatioTrue if fixed aspect ratio; TFrame*TPad::fFrame! Pointer to 2-D frame (if one exists); Int_tTAttPad::fFrameBorderModepad frame border mode; Width_tTAttPad::fFrameBorderSizepad frame border size; Color_tTAttPad::fFrameFillColorpad frame fill color; Style_tTAttPad::fFrameFillStylepad frame fill style; Color_tTAttPad::fFrameLineColorpad frame line color; Style_tTAttPad::fFrameLineStylepad frame line style; Width_tTAttPad::fFrameLineWidthpad frame line width; Int_tTPad::fGLDevice! OpenGL off-screen pixmap identifier; Bool_tTPad::fGridxSet to true if grid along X; Bool_tTPad::fGridySet to true if grid along Y; Double_tTPad::fHNDCHeight of pad along Y in NDC; Color_tTCanvas::fHighLightColorHighlight color of active pad; Float_tTAttPad::fLeftMarginLeftMargin; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTPad::fLogx(=0 if X linear scale, =1 if log scale); Int_tTPad::fLogy(=0 if Y linear scale, =1 if log scale); Int_tTPad::fLogz(=0 if Z linear scale, =1 if log scale); Bool_tTPad::fModifiedSet to true when pad is modified; TPad*TPad::fMother! pointer to mother of the list; TStringTPad::fNamePad name; Int_tTPad::fNumberpad number identifier; Int_tTPad::fPadPaintSet to 1 while painting the pad; TObject*TPad::fPadPointer! free pointer; TPad*TCanvas::fPadSave!Pointer to saved pad in HandleInput; TObject*TPad::fPadView3D! 3D View of this TPad; TVirtualPadPainter*TCanvas::fPainter!Canvas (pad) painter.",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:31986,Testability,log,log,31986,":fEmbeddedGL!; Int_tTCanvas::fEvent!Type of current or last handled event; Int_tTCanvas::fEventX!Last X mouse position in canvas; Int_tTCanvas::fEventY!Last Y mouse position in canvas; TList*TPad::fExecsList of commands to be executed when a pad event occurs; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Bool_tTPad::fFixedAspectRatioTrue if fixed aspect ratio; TFrame*TPad::fFrame! Pointer to 2-D frame (if one exists); Int_tTAttPad::fFrameBorderModepad frame border mode; Width_tTAttPad::fFrameBorderSizepad frame border size; Color_tTAttPad::fFrameFillColorpad frame fill color; Style_tTAttPad::fFrameFillStylepad frame fill style; Color_tTAttPad::fFrameLineColorpad frame line color; Style_tTAttPad::fFrameLineStylepad frame line style; Width_tTAttPad::fFrameLineWidthpad frame line width; Int_tTPad::fGLDevice! OpenGL off-screen pixmap identifier; Bool_tTPad::fGridxSet to true if grid along X; Bool_tTPad::fGridySet to true if grid along Y; Double_tTPad::fHNDCHeight of pad along Y in NDC; Color_tTCanvas::fHighLightColorHighlight color of active pad; Float_tTAttPad::fLeftMarginLeftMargin; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTPad::fLogx(=0 if X linear scale, =1 if log scale); Int_tTPad::fLogy(=0 if Y linear scale, =1 if log scale); Int_tTPad::fLogz(=0 if Z linear scale, =1 if log scale); Bool_tTPad::fModifiedSet to true when pad is modified; TPad*TPad::fMother! pointer to mother of the list; TStringTPad::fNamePad name; Int_tTPad::fNumberpad number identifier; Int_tTPad::fPadPaintSet to 1 while painting the pad; TObject*TPad::fPadPointer! free pointer; TPad*TCanvas::fPadSave!Pointer to saved pad in HandleInput; TObject*TPad::fPadView3D! 3D View of this TPad; TVirtualPadPainter*TCanvas::fPainter!Canvas (pad) painter.",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:32043,Testability,log,log,32043,":fEmbeddedGL!; Int_tTCanvas::fEvent!Type of current or last handled event; Int_tTCanvas::fEventX!Last X mouse position in canvas; Int_tTCanvas::fEventY!Last Y mouse position in canvas; TList*TPad::fExecsList of commands to be executed when a pad event occurs; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Bool_tTPad::fFixedAspectRatioTrue if fixed aspect ratio; TFrame*TPad::fFrame! Pointer to 2-D frame (if one exists); Int_tTAttPad::fFrameBorderModepad frame border mode; Width_tTAttPad::fFrameBorderSizepad frame border size; Color_tTAttPad::fFrameFillColorpad frame fill color; Style_tTAttPad::fFrameFillStylepad frame fill style; Color_tTAttPad::fFrameLineColorpad frame line color; Style_tTAttPad::fFrameLineStylepad frame line style; Width_tTAttPad::fFrameLineWidthpad frame line width; Int_tTPad::fGLDevice! OpenGL off-screen pixmap identifier; Bool_tTPad::fGridxSet to true if grid along X; Bool_tTPad::fGridySet to true if grid along Y; Double_tTPad::fHNDCHeight of pad along Y in NDC; Color_tTCanvas::fHighLightColorHighlight color of active pad; Float_tTAttPad::fLeftMarginLeftMargin; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTPad::fLogx(=0 if X linear scale, =1 if log scale); Int_tTPad::fLogy(=0 if Y linear scale, =1 if log scale); Int_tTPad::fLogz(=0 if Z linear scale, =1 if log scale); Bool_tTPad::fModifiedSet to true when pad is modified; TPad*TPad::fMother! pointer to mother of the list; TStringTPad::fNamePad name; Int_tTPad::fNumberpad number identifier; Int_tTPad::fPadPaintSet to 1 while painting the pad; TObject*TPad::fPadPointer! free pointer; TPad*TCanvas::fPadSave!Pointer to saved pad in HandleInput; TObject*TPad::fPadView3D! 3D View of this TPad; TVirtualPadPainter*TCanvas::fPainter!Canvas (pad) painter.",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:1958,Usability,Clear,Clear,1958,"88, const char* title = """")MENU ; virtual voidBuildStandardButtons(); virtual TVirtualPad*TCanvas::cd(Int_t subpadnumber = 0); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTCanvas::Clear(Option_t* option = """"); virtual voidT",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:2009,Usability,Clear,Cleared,2009,"88, const char* title = """")MENU ; virtual voidBuildStandardButtons(); virtual TVirtualPad*TCanvas::cd(Int_t subpadnumber = 0); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTCanvas::Clear(Option_t* option = """"); virtual voidT",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:2056,Usability,Clear,ClearPadSave,2056,"88, const char* title = """")MENU ; virtual voidBuildStandardButtons(); virtual TVirtualPad*TCanvas::cd(Int_t subpadnumber = 0); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTCanvas::Clear(Option_t* option = """"); virtual voidT",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDialogCanvas.html:6938,Usability,Feedback,FeedbackMode,6938," signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTCanvas::EnterLeave(TPad* prevSelPad, TObject* prevSelObj); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTPad::EventPave()SIGNAL ; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTPad::ExecuteEventAxis(Int_t event, Int_t px, Int_t py, TAxis* axis); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidTCanvas::FeedbackMode(Bool_t set); virtual TObject*TPad::FindObject(const char* name) const; virtual TObject*TPad::FindObject(const TObject* obj) const; voidTCanvas::Flush(); voidTCanvas::ForceUpdate(); virtual Double_tTPad::GetAbsHNDC() const; virtual Double_tTPad::GetAbsWNDC() const; virtual Double_tTPad::GetAbsXlowNDC() const; virtual Double_tTPad::GetAbsYlowNDC() const; Float_tTAttPad::GetAfile() const; virtual Double_tTPad::GetAspectRatio() const; Float_tTAttPad::GetAstat() const; Bool_tTCanvas::GetAutoExec() const; virtual Rectangle_tTPad::GetBBox(); virtual TPointTPad::GetBBoxCenter(); virtual Short_tTPad::GetBorderMode() const; virtual Short_tTPad::GetBorderSize() const; Float_tTAttPad::GetBottomMargin() const; virtual TCanvas*TPad::GetCanvas() const; virtual Int_tTCanvas::GetCanvasID() const; virtual TCanvasImp*TCanvas::GetCanvasImp() const; TVirtualPadPainter*TCanvas::GetCanvasPainter(); virtual voidTCanvas::GetCanvasPar(Int_t& wtopx, Int_t& wtopy, UInt_t& ww, UInt_t& wh); TObject*TCanvas::G",MatchSource.WIKI,root/html534/TDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDialogCanvas.html
https://root.cern/root/html534/TDiamond.html:2345,Availability,Error,Error,2345,"ject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPave::ConvertNDCtoPad(); virtual voidTPave::Copy(TObject& pave) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTPaveText::DeleteText()MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTPaveText::DrawFile(const char* filename, Option_t* option = """"); virtual voidTPave::DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize = 4, Option_t* option = ""br""); virtual voidTObject::Dump() constMENU ; virtual voidTPaveText::EditText()MENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tTBox::GetBBox(); virtual TPointTBox::GetBBoxCenter(); Int_tTPave::GetBorderSize() const; Double_tTPave::GetCornerRadius() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; const char*TPaveText::GetLabel() const; virtual TText*TPaveText::GetLine(Int_t number) const; virtual Color_tTAttLine::GetLineColor() const; vir",MatchSource.WIKI,root/html534/TDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDiamond.html
https://root.cern/root/html534/TDiamond.html:2474,Availability,error,error,2474,"ConvertNDCtoPad(); virtual voidTPave::Copy(TObject& pave) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTPaveText::DeleteText()MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTPaveText::DrawFile(const char* filename, Option_t* option = """"); virtual voidTPave::DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize = 4, Option_t* option = ""br""); virtual voidTObject::Dump() constMENU ; virtual voidTPaveText::EditText()MENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tTBox::GetBBox(); virtual TPointTBox::GetBBoxCenter(); Int_tTPave::GetBorderSize() const; Double_tTPave::GetCornerRadius() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; const char*TPaveText::GetLabel() const; virtual TText*TPaveText::GetLine(Int_t number) const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual TText*TPaveText::GetLineWith(c",MatchSource.WIKI,root/html534/TDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDiamond.html
https://root.cern/root/html534/TDiamond.html:2558,Availability,error,error,2558,"::Delete(Option_t* option = """")MENU ; virtual voidTPaveText::DeleteText()MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTPaveText::DrawFile(const char* filename, Option_t* option = """"); virtual voidTPave::DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize = 4, Option_t* option = ""br""); virtual voidTObject::Dump() constMENU ; virtual voidTPaveText::EditText()MENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tTBox::GetBBox(); virtual TPointTBox::GetBBoxCenter(); Int_tTPave::GetBorderSize() const; Double_tTPave::GetCornerRadius() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; const char*TPaveText::GetLabel() const; virtual TText*TPaveText::GetLine(Int_t number) const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual TText*TPaveText::GetLineWith(const char* text) const; virtual TList*TPaveText::GetListOfLines() const; Float_tTPav",MatchSource.WIKI,root/html534/TDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDiamond.html
https://root.cern/root/html534/TDiamond.html:4725,Modifiability,Inherit,InheritsFrom,4725,"ObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPave::GetOption() const; Int_tTPave::GetShadowColor() const; virtual Int_tTPaveText::GetSize() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTPave::GetX1NDC() const; Double_tTBox::GetX2() const; Double_tTPave::GetX2NDC() const; Double_tTBox::GetY1() const; Double_tTPave::GetY1NDC() const; Double_tTBox::GetY2() const; Double_tTPave::GetY2NDC() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTPave::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTPaveText::InsertLine()MENU ; virtual voidTPaveText::InsertText(const char* label)MENU ; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPave::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPave::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delet",MatchSource.WIKI,root/html534/TDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDiamond.html
https://root.cern/root/html534/TDiamond.html:4791,Modifiability,Inherit,InheritsFrom,4791,"ectStat(); virtual Option_t*TPave::GetOption() const; Int_tTPave::GetShadowColor() const; virtual Int_tTPaveText::GetSize() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTPave::GetX1NDC() const; Double_tTBox::GetX2() const; Double_tTPave::GetX2NDC() const; Double_tTBox::GetY1() const; Double_tTPave::GetY1NDC() const; Double_tTBox::GetY2() const; Double_tTPave::GetY2NDC() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTPave::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTPaveText::InsertLine()MENU ; virtual voidTPaveText::InsertText(const char* label)MENU ; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPave::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPave::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void",MatchSource.WIKI,root/html534/TDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDiamond.html
https://root.cern/root/html534/TDiamond.html:12549,Modifiability,Inherit,Inheritance,12549,"avetext; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TPaveText::fLinesList of labels; Int_tTPaveText::fLongestLength of the longest line; Float_tTPaveText::fMarginText margin; TStringTPave::fNamePave name; TStringTPave::fOptionPave style; Bool_tTBox::fResizing!True if box is being resized; Int_tTPave::fShadowColorColor of the pave's shadow; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size; Double_tTBox::fX1X of 1st point; Double_tTPave::fX1NDCX1 point in NDC coordinates; Double_tTBox::fX2X of 2nd point; Double_tTPave::fX2NDCX2 point in NDC coordinates; Double_tTBox::fY1Y of 1st point; Double_tTPave::fY1NDCY1 point in NDC coordinates; Double_tTBox::fY2Y of 2nd point; Double_tTPave::fY2NDCY2 point in NDC coordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDiamond(); Diamond default constructor. TDiamond(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Diamond standard constructor. ~TDiamond(); Diamond destructor. TDiamond(const TDiamond& diamond); Copy constructor. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to a diamond. Compute the closest distance of approach from point px,py to the; edges of this diamond.; The distance is computed in pixels units. void Draw(Option_t* option = """"); Draw this diamond with its current attributes. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when a Diamond object is clicked. If the mouse is clicked inside the diamond, the diamond is moved. If the mouse is clicked on the 4 tops (pL,pR,pTop,pBot), the diamond is rscaled. pTop; +---------+; | / \ |; | / \ |; | / \ |; pL|/pinside\|pR; |\ /|; | \ / |; | \ / |; | \ / |; +---------+; pBot.",MatchSource.WIKI,root/html534/TDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDiamond.html
https://root.cern/root/html534/TDiamond.html:12562,Modifiability,Inherit,Inherited,12562,"avetext; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TPaveText::fLinesList of labels; Int_tTPaveText::fLongestLength of the longest line; Float_tTPaveText::fMarginText margin; TStringTPave::fNamePave name; TStringTPave::fOptionPave style; Bool_tTBox::fResizing!True if box is being resized; Int_tTPave::fShadowColorColor of the pave's shadow; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size; Double_tTBox::fX1X of 1st point; Double_tTPave::fX1NDCX1 point in NDC coordinates; Double_tTBox::fX2X of 2nd point; Double_tTPave::fX2NDCX2 point in NDC coordinates; Double_tTBox::fY1Y of 1st point; Double_tTPave::fY1NDCY1 point in NDC coordinates; Double_tTBox::fY2Y of 2nd point; Double_tTPave::fY2NDCY2 point in NDC coordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDiamond(); Diamond default constructor. TDiamond(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Diamond standard constructor. ~TDiamond(); Diamond destructor. TDiamond(const TDiamond& diamond); Copy constructor. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to a diamond. Compute the closest distance of approach from point px,py to the; edges of this diamond.; The distance is computed in pixels units. void Draw(Option_t* option = """"); Draw this diamond with its current attributes. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when a Diamond object is clicked. If the mouse is clicked inside the diamond, the diamond is moved. If the mouse is clicked on the 4 tops (pL,pR,pTop,pBot), the diamond is rscaled. pTop; +---------+; | / \ |; | / \ |; | / \ |; pL|/pinside\|pR; |\ /|; | \ / |; | \ / |; | \ / |; +---------+; pBot.",MatchSource.WIKI,root/html534/TDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDiamond.html
https://root.cern/root/html534/TDiamond.html:4571,Security,Hash,Hash,4571,"rgin() const; virtual Option_t*TPave::GetName() const; virtual TObject*TPaveText::GetObject(Double_t& ymouse, Double_t& yobj) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPave::GetOption() const; Int_tTPave::GetShadowColor() const; virtual Int_tTPaveText::GetSize() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTPave::GetX1NDC() const; Double_tTBox::GetX2() const; Double_tTPave::GetX2NDC() const; Double_tTBox::GetY1() const; Double_tTPave::GetY1NDC() const; Double_tTBox::GetY2() const; Double_tTPave::GetY2NDC() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTPave::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTPaveText::InsertLine()MENU ; virtual voidTPaveText::InsertText(const char* label)MENU ; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPave::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPave::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(co",MatchSource.WIKI,root/html534/TDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDiamond.html
https://root.cern/root/html534/TDiamond.html:10374,Testability,Test,TestBit,10374,"ttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTPaveText::SetMargin(Float_t margin = 0.05)MENU ; virtual voidTPave::SetName(const char* name = """")MENU ; static voidTObject::SetObjectStat(Bool_t stat); virtual voidTPave::SetOption(Option_t* option = ""br""); virtual voidTPave::SetShadowColor(Int_t color)MENU ; virtual voidTAttText::SetTextAlign(Short_t align = 11); virtual voidTAttText::SetTextAngle(Float_t tangle = 0)MENU ; virtual voidTAttText::SetTextAttributes()MENU ; virtual voidTAttText::SetTextColor(Color_t tcolor = 1); virtual voidTAttText::SetTextColorAlpha(Color_t tcolor, Float_t talpha); virtual voidTAttText::SetTextFont(Font_t tfont = 62); virtual voidTAttText::SetTextSize(Float_t tsize = 1); virtual voidTAttText::SetTextSizePixels(Int_t npixels); virtual voidTBox::SetToolTipText(const char* text, Long_t delayms = 1000); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTPave::SetX1(Double_t x1); virtual voidTPave::SetX1NDC(Double_t x1); virtual voidTPave::SetX2(Double_t x2); virtual voidTPave::SetX2NDC(Double_t x2); virtual voidTPave::SetY1(Double_t y1); virtual voidTPave::SetY1NDC(Double_t y1); virtual voidTPave::SetY2(Double_t y2); virtual voidTPave::SetY2NDC(Double_t y2); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTPaveText::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data",MatchSource.WIKI,root/html534/TDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDiamond.html
https://root.cern/root/html534/TDiamond.html:10413,Testability,Test,TestBits,10413,"ttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTPaveText::SetMargin(Float_t margin = 0.05)MENU ; virtual voidTPave::SetName(const char* name = """")MENU ; static voidTObject::SetObjectStat(Bool_t stat); virtual voidTPave::SetOption(Option_t* option = ""br""); virtual voidTPave::SetShadowColor(Int_t color)MENU ; virtual voidTAttText::SetTextAlign(Short_t align = 11); virtual voidTAttText::SetTextAngle(Float_t tangle = 0)MENU ; virtual voidTAttText::SetTextAttributes()MENU ; virtual voidTAttText::SetTextColor(Color_t tcolor = 1); virtual voidTAttText::SetTextColorAlpha(Color_t tcolor, Float_t talpha); virtual voidTAttText::SetTextFont(Font_t tfont = 62); virtual voidTAttText::SetTextSize(Float_t tsize = 1); virtual voidTAttText::SetTextSizePixels(Int_t npixels); virtual voidTBox::SetToolTipText(const char* text, Long_t delayms = 1000); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTPave::SetX1(Double_t x1); virtual voidTPave::SetX1NDC(Double_t x1); virtual voidTPave::SetX2(Double_t x2); virtual voidTPave::SetX2NDC(Double_t x2); virtual voidTPave::SetY1(Double_t y1); virtual voidTPave::SetY1NDC(Double_t y1); virtual voidTPave::SetY2(Double_t y2); virtual voidTPave::SetY2NDC(Double_t y2); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTPaveText::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data",MatchSource.WIKI,root/html534/TDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDiamond.html
https://root.cern/root/html534/TDiamond.html:1302,Usability,Clear,Clear,1302," TDiamond(); TDiamond(const TDiamond& diamond); TDiamond(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual~TDiamond(); voidTObject::AbstractMethod(const char* method) const; virtual TBox*TPaveText::AddBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual TLine*TPaveText::AddLine(Double_t x1 = 0, Double_t y1 = 0, Double_t x2 = 0, Double_t y2 = 0); virtual TText*TPaveText::AddText(const char* label); virtual TText*TPaveText::AddText(Double_t x1, Double_t y1, const char* label); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTPaveText::Clear(Option_t* option = """")MENU ; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPave::ConvertNDCtoPad(); virtual voidTPave::Copy(TObject& pave) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTPaveText::DeleteText()MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClon",MatchSource.WIKI,root/html534/TDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDiamond.html
https://root.cern/root/html534/TDictAttributeMap.html:1404,Availability,Error,Error,1404," TDictAttributeMap(); virtual~TDictAttributeMap(); voidTObject::AbstractMethod(const char* method) const; voidAddProperty(const char* key, const char* value); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*T",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictAttributeMap.html:1533,Availability,error,error,1533,"p(); virtual~TDictAttributeMap(); voidTObject::AbstractMethod(const char* method) const; voidAddProperty(const char* key, const char* value); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetPropertyAsString(const char* key) const; Int_tGetPropertySize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasKey(const char* key) const; virtual voidT",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictAttributeMap.html:1617,Availability,error,error,1617,"nst; voidAddProperty(const char* key, const char* value); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetPropertyAsString(const char* key) const; Int_tGetPropertySize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasKey(const char* key) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::I",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictAttributeMap.html:2619,Modifiability,Inherit,InheritsFrom,2619,"0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetPropertyAsString(const char* key) const; Int_tGetPropertySize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasKey(const char* key) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictAttributeMap.html:2685,Modifiability,Inherit,InheritsFrom,2685," py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetPropertyAsString(const char* key) const; Int_tGetPropertySize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasKey(const char* key) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operat",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictAttributeMap.html:5592,Modifiability,Inherit,Inheritance,5592,"ssDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. THashTablefStringPropertyall properties of String type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDictAttributeMap(); Default constructor. ~TDictAttributeMap(); Default destructor. void AddProperty(const char* key, const char* value); Add a property with a String value to the TDictAttributeMap.; Parameters: key and char* value of the property. Bool_t HasKey(const char* key) const. const char* GetPropertyAsString(const char* key) const; Access the value of a String property using the key. TString RemovePropertyString(const char* key); Remove a String property from the attribute map specified by the key.; Returns the TString property removed or NULL if the property does not exist. Bool_t RemoveProperty(const char* key); Remove a property from the attribute map specified by the key.; Returns true if property exists and was removed, false if property; does not exist. void Clear(Option_t* option = """"); Deletes all the properties of the class. Int_t GetPropertySize() const; { return fStringProperty.GetSize(); }. » Author: Bianca-Cristin",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictAttributeMap.html:5605,Modifiability,Inherit,Inherited,5605,"ssDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. THashTablefStringPropertyall properties of String type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDictAttributeMap(); Default constructor. ~TDictAttributeMap(); Default destructor. void AddProperty(const char* key, const char* value); Add a property with a String value to the TDictAttributeMap.; Parameters: key and char* value of the property. Bool_t HasKey(const char* key) const. const char* GetPropertyAsString(const char* key) const; Access the value of a String property using the key. TString RemovePropertyString(const char* key); Remove a String property from the attribute map specified by the key.; Returns the TString property removed or NULL if the property does not exist. Bool_t RemoveProperty(const char* key); Remove a property from the attribute map specified by the key.; Returns true if property exists and was removed, false if property; does not exist. void Clear(Option_t* option = """"); Deletes all the properties of the class. Int_t GetPropertySize() const; { return fStringProperty.GetSize(); }. » Author: Bianca-Cristin",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictAttributeMap.html:2472,Security,Hash,Hash,2472,"ct::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetPropertyAsString(const char* key) const; Int_tGetPropertySize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasKey(const char* key) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* pt",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictAttributeMap.html:6012,Security,Access,Access,6012,"al Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. THashTablefStringPropertyall properties of String type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDictAttributeMap(); Default constructor. ~TDictAttributeMap(); Default destructor. void AddProperty(const char* key, const char* value); Add a property with a String value to the TDictAttributeMap.; Parameters: key and char* value of the property. Bool_t HasKey(const char* key) const. const char* GetPropertyAsString(const char* key) const; Access the value of a String property using the key. TString RemovePropertyString(const char* key); Remove a String property from the attribute map specified by the key.; Returns the TString property removed or NULL if the property does not exist. Bool_t RemoveProperty(const char* key); Remove a property from the attribute map specified by the key.; Returns true if property exists and was removed, false if property; does not exist. void Clear(Option_t* option = """"); Deletes all the properties of the class. Int_t GetPropertySize() const; { return fStringProperty.GetSize(); }. » Author: Bianca-Cristina Cristescu 03/07/13 » Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; » Last changed: root/meta:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictAttributeMap.html:4736,Testability,Test,TestBit,4736,"ject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRemoveProperty(const char* key); TStringRemovePropertyString(const char* key); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictAttributeMap.html:4775,Testability,Test,TestBits,4775,"ject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRemoveProperty(const char* key); TStringRemovePropertyString(const char* key); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictAttributeMap.html:6453,Usability,Clear,Clear,6453,"al Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. THashTablefStringPropertyall properties of String type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDictAttributeMap(); Default constructor. ~TDictAttributeMap(); Default destructor. void AddProperty(const char* key, const char* value); Add a property with a String value to the TDictAttributeMap.; Parameters: key and char* value of the property. Bool_t HasKey(const char* key) const. const char* GetPropertyAsString(const char* key) const; Access the value of a String property using the key. TString RemovePropertyString(const char* key); Remove a String property from the attribute map specified by the key.; Returns the TString property removed or NULL if the property does not exist. Bool_t RemoveProperty(const char* key); Remove a property from the attribute map specified by the key.; Returns true if property exists and was removed, false if property; does not exist. void Clear(Option_t* option = """"); Deletes all the properties of the class. Int_t GetPropertySize() const; { return fStringProperty.GetSize(); }. » Author: Bianca-Cristina Cristescu 03/07/13 » Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; » Last changed: root/meta:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html
https://root.cern/root/html534/TDictionary.html:1013,Availability,avail,available,1013,"ctionary. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » META; » TDictionary. class TDictionary: public TNamed. TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the followling classes:; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments). All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment). /*. */. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDictionary(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidCreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:1881,Availability,Error,Error,1881," virtual~TDictionary(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidCreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:2010,Availability,error,error,2010," virtual~TDictionary(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidCreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:2094,Availability,error,error,2094,"(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidCreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDictAttributeMap*GetAttributeMap() const; static TDictionary*GetDictionary(const char* name); static TDictionary*GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:337,Integrability,interface,interface,337,". TDictionary. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » META; » TDictionary. class TDictionary: public TNamed. TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the followling classes:; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments). All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment). /*. */. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDictionary(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidCreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:763,Integrability,interface,interface,763,". TDictionary. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » META; » TDictionary. class TDictionary: public TNamed. TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the followling classes:; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments). All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment). /*. */. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDictionary(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidCreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:528,Modifiability,variab,variables,528,". TDictionary. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » META; » TDictionary. class TDictionary: public TNamed. TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the followling classes:; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments). All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment). /*. */. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDictionary(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidCreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:819,Modifiability,inherit,inheritance,819,". TDictionary. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » META; » TDictionary. class TDictionary: public TNamed. TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the followling classes:; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments). All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment). /*. */. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TDictionary(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidCreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:3174,Modifiability,Inherit,InheritsFrom,3174,"l voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDictAttributeMap*GetAttributeMap() const; static TDictionary*GetDictionary(const char* name); static TDictionary*GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:3240,Modifiability,Inherit,InheritsFrom,3240,"; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDictAttributeMap*GetAttributeMap() const; static TDictionary*GetDictionary(const char* name); static TDictionary*GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDictionary&operator=(con",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:6505,Modifiability,Inherit,Inheritance,6505,"idTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum ESTLType { kNone; kVector; kList; kDeque; kMap; kMultimap; kSet; kMultiset; kBitset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TDictAttributeMap*fAttributeMappointer to a dictionary attribute map. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TDictionary(); Destruct a TDictionary, delete the attribute map. TDictionary & operator=(const TDictionary& other); Assignment op, cloning fAttributeMap. void CreateAttributeMap(); Create a TDictAttributeMap for a TClass to be able to add attribute pairs; key-value to the TClass. TDictionary* GetDictionary(const char* name); Retrieve the type (class, fundamental type, typedef etc); named ""name"". Returned object is either a TClass or TDataType.; Returns 0 if the type is unknown. TDictionary* GetDictionary(const type_info& typeinfo); Retrieve the type (class, fundamental type, typedef etc); with typeid typeinfo. Returned object is either a TClass or TDataType.; Returns 0 if the type is unknown. TDictAttributeMap * GetAttributeMap() const; Get the TDictAttributeMap pointer to be able to add attribute; pairs key-value to the TClass. Long_t Property() const. » Author: Fons Rademakers 20/06/96 » Copyright (C) 1995-2000, Rene Brun and Fons R",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:6518,Modifiability,Inherit,Inherited,6518,"idTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum ESTLType { kNone; kVector; kList; kDeque; kMap; kMultimap; kSet; kMultiset; kBitset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TDictAttributeMap*fAttributeMappointer to a dictionary attribute map. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TDictionary(); Destruct a TDictionary, delete the attribute map. TDictionary & operator=(const TDictionary& other); Assignment op, cloning fAttributeMap. void CreateAttributeMap(); Create a TDictAttributeMap for a TClass to be able to add attribute pairs; key-value to the TClass. TDictionary* GetDictionary(const char* name); Retrieve the type (class, fundamental type, typedef etc); named ""name"". Returned object is either a TClass or TDataType.; Returns 0 if the type is unknown. TDictionary* GetDictionary(const type_info& typeinfo); Retrieve the type (class, fundamental type, typedef etc); with typeid typeinfo. Returned object is either a TClass or TDataType.; Returns 0 if the type is unknown. TDictAttributeMap * GetAttributeMap() const; Get the TDictAttributeMap pointer to be able to add attribute; pairs key-value to the TClass. Long_t Property() const. » Author: Fons Rademakers 20/06/96 » Copyright (C) 1995-2000, Rene Brun and Fons R",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:3064,Security,Hash,Hash,3064,", TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDictAttributeMap*GetAttributeMap() const; static TDictionary*GetDictionary(const char* name); static TDictionary*GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:5455,Testability,Test,TestBit,5455,"s) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDictionary&operator=(const TDictionary& other); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Long_tProperty() const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:5494,Testability,Test,TestBits,5494,"s) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDictionary&operator=(const TDictionary& other); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Long_tProperty() const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDictionary.html:1312,Usability,Clear,Clear,1312," virtual~TDictionary(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidCreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params",MatchSource.WIKI,root/html534/TDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDictionary.html
https://root.cern/root/html534/TDirectory.html:1957,Availability,Error,Error,1957,"tCd(const char* path); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TObject*CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static TDirectory*&CurrentDirectory(); static voidDecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); virtual voidDelete(const char* namecycle = """"); virtual voidDeleteAll(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static voidEncodeNameCycle(char* buffer, const char* name, Short_t cycle); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TKey*FindKey(const char*) const; virtual TKey*FindKeyAny(const char*) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*FindObjectAny(const char* name) const; virtual TObject*FindObjectAnyFile(const char*) const; virtual TObject*Get(const char* namecycle); virtual Int_tGetBufferSize() const; virtual TDirectory*GetDirectory(const char* namecycle, Bool_t printError = false, const char* funcname = ""GetDirectory""); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); v",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:2086,Availability,error,error,2086," """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TObject*CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static TDirectory*&CurrentDirectory(); static voidDecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); virtual voidDelete(const char* namecycle = """"); virtual voidDeleteAll(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static voidEncodeNameCycle(char* buffer, const char* name, Short_t cycle); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TKey*FindKey(const char*) const; virtual TKey*FindKeyAny(const char*) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*FindObjectAny(const char* name) const; virtual TObject*FindObjectAnyFile(const char*) const; virtual TObject*Get(const char* namecycle); virtual Int_tGetBufferSize() const; virtual TDirectory*GetDirectory(const char* namecycle, Bool_t printError = false, const char* funcname = ""GetDirectory""); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TFile*GetFile() const; virtual const char*TObject::GetIconName() const; virtual TKey*GetKey(const char*, Short_t = 9999) c",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:2170,Availability,error,error,2170,"*CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static TDirectory*&CurrentDirectory(); static voidDecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); virtual voidDelete(const char* namecycle = """"); virtual voidDeleteAll(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static voidEncodeNameCycle(char* buffer, const char* name, Short_t cycle); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TKey*FindKey(const char*) const; virtual TKey*FindKeyAny(const char*) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*FindObjectAny(const char* name) const; virtual TObject*FindObjectAnyFile(const char*) const; virtual TObject*Get(const char* namecycle); virtual Int_tGetBufferSize() const; virtual TDirectory*GetDirectory(const char* namecycle, Bool_t printError = false, const char* funcname = ""GetDirectory""); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TFile*GetFile() const; virtual const char*TObject::GetIconName() const; virtual TKey*GetKey(const char*, Short_t = 9999) const; virtual TList*GetList() const; virtual TList*GetListOfKeys() const; virtual TO",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:12119,Availability,Error,Error,12119,"toadd = kTRUE); Clone an object.; This function is called when the directory is not a TDirectoryFile.; This version has to load the I/O package, hence via CINT. If autoadd is true and if the object class has a; DirectoryAutoAdd function, it will be called at the end of the; function with the parameter gDirector. This usually means that; the object will be appended to the current ROOT directory. TDirectory *& CurrentDirectory(); Return the current directory for the current thread. TDirectory * GetDirectory(const char* namecycle, Bool_t printError = false, const char* funcname = ""GetDirectory""); Find a directory using apath.; It apath is null or empty, returns ""this"" directory.; Otherwie use apath to find a directory.; The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa.; Returns 0 in case path does not exist.; If printError is true, use Error with 'funcname' to issue an error message. Bool_t cd(const char* path = 0); Change current directory to ""this"" directory . Using path one can; change the current directory to ""path"". The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa. Returns kTRUE in case of success. Bool_t cd1(const char* path); Change current directory to ""this"" directory . Using path one can; change the current directory to ""path"". The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa. Returns kFALSE in case path does not exist. Bool_t Cd(const char* path); Change current directory to ""path"". The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:12153,Availability,error,error,12153,"toadd = kTRUE); Clone an object.; This function is called when the directory is not a TDirectoryFile.; This version has to load the I/O package, hence via CINT. If autoadd is true and if the object class has a; DirectoryAutoAdd function, it will be called at the end of the; function with the parameter gDirector. This usually means that; the object will be appended to the current ROOT directory. TDirectory *& CurrentDirectory(); Return the current directory for the current thread. TDirectory * GetDirectory(const char* namecycle, Bool_t printError = false, const char* funcname = ""GetDirectory""); Find a directory using apath.; It apath is null or empty, returns ""this"" directory.; Otherwie use apath to find a directory.; The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa.; Returns 0 in case path does not exist.; If printError is true, use Error with 'funcname' to issue an error message. Bool_t cd(const char* path = 0); Change current directory to ""this"" directory . Using path one can; change the current directory to ""path"". The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa. Returns kTRUE in case of success. Bool_t cd1(const char* path); Change current directory to ""this"" directory . Using path one can; change the current directory to ""path"". The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa. Returns kFALSE in case path does not exist. Bool_t Cd(const char* path); Change current directory to ""path"". The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:18765,Availability,error,error,18765," to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned pointer to; the type described by the 2 arguments (i.e. cl):; MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));. Note: We recommend using the method TDirectory::GetObject:; MyClass *obj = 0;; directory->GetObject(""some object inheriting from MyClass"",obj);; if (obj) { ... we found what we are looking for ... }. const char * GetPathStatic() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). const char * GetPath() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). void FillFullPath(TString& buf) const; recursive method to fill full path for directory. TDirectory * mkdir(const char* name, const char* title = """"); Create a sub-directory and return a pointer to the created directory.; Returns 0 in case of error.; Returns 0 if a directory with the same name already exists.; Note that the directory name may be of the form ""a/b/c"" to create a hierarchy of directories.; In this case, the function returns the pointer to the ""a"" directory if the operation is successful. For example the step to the steps to create first a/b/c and then a/b/d without receiving; and errors are:; TFile * file = new TFile(""afile"",""RECREATE"");; file->mkdir(""a"");; file->cd(""a"");; gDirectory->mkdir(""b"");; gDirectory->cd(""b"");; gDirectory->mkdir(""d"");. void ls(Option_t* option = """") const; List Directory contents. Indentation is used to identify the directory tree; Subdirectories are listed first, then objects in memory. The option can has the following format:; [<regexp>]; The <regexp> will be used to match the name of the objects.; By default memory and disk objects are listed. void Paint(Option_t* option = """"); Paint all objects in the directory. void Print(Option_t* option = """") const; Print all objects in ",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:19123,Availability,error,errors,19123,". we found what we are looking for ... }. const char * GetPathStatic() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). const char * GetPath() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). void FillFullPath(TString& buf) const; recursive method to fill full path for directory. TDirectory * mkdir(const char* name, const char* title = """"); Create a sub-directory and return a pointer to the created directory.; Returns 0 in case of error.; Returns 0 if a directory with the same name already exists.; Note that the directory name may be of the form ""a/b/c"" to create a hierarchy of directories.; In this case, the function returns the pointer to the ""a"" directory if the operation is successful. For example the step to the steps to create first a/b/c and then a/b/d without receiving; and errors are:; TFile * file = new TFile(""afile"",""RECREATE"");; file->mkdir(""a"");; file->cd(""a"");; gDirectory->mkdir(""b"");; gDirectory->cd(""b"");; gDirectory->mkdir(""d"");. void ls(Option_t* option = """") const; List Directory contents. Indentation is used to identify the directory tree; Subdirectories are listed first, then objects in memory. The option can has the following format:; [<regexp>]; The <regexp> will be used to match the name of the objects.; By default memory and disk objects are listed. void Paint(Option_t* option = """"); Paint all objects in the directory. void Print(Option_t* option = """") const; Print all objects in the directory. void pwd() const; Print the path of the directory. void RecursiveRemove(TObject* obj); Recursively remove object from a Directory. TObject * Remove(TObject* ); Remove an object from the in-memory list. void rmdir(const char* name); Removes subdirectory from the directory; When directory is deleted, all keys in all subdirectories will be; read first and deleted from file (if exists); E",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:18883,Deployability,a/b,a/b,18883," the 2 arguments (i.e. cl):; MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));. Note: We recommend using the method TDirectory::GetObject:; MyClass *obj = 0;; directory->GetObject(""some object inheriting from MyClass"",obj);; if (obj) { ... we found what we are looking for ... }. const char * GetPathStatic() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). const char * GetPath() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). void FillFullPath(TString& buf) const; recursive method to fill full path for directory. TDirectory * mkdir(const char* name, const char* title = """"); Create a sub-directory and return a pointer to the created directory.; Returns 0 in case of error.; Returns 0 if a directory with the same name already exists.; Note that the directory name may be of the form ""a/b/c"" to create a hierarchy of directories.; In this case, the function returns the pointer to the ""a"" directory if the operation is successful. For example the step to the steps to create first a/b/c and then a/b/d without receiving; and errors are:; TFile * file = new TFile(""afile"",""RECREATE"");; file->mkdir(""a"");; file->cd(""a"");; gDirectory->mkdir(""b"");; gDirectory->cd(""b"");; gDirectory->mkdir(""d"");. void ls(Option_t* option = """") const; List Directory contents. Indentation is used to identify the directory tree; Subdirectories are listed first, then objects in memory. The option can has the following format:; [<regexp>]; The <regexp> will be used to match the name of the objects.; By default memory and disk objects are listed. void Paint(Option_t* option = """"); Paint all objects in the directory. void Print(Option_t* option = """") const; Print all objects in the directory. void pwd() const; Print the path of the directory. void RecursiveRemove(TObject* obj); Recursively remove ob",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:19079,Deployability,a/b,a/b,19079,". we found what we are looking for ... }. const char * GetPathStatic() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). const char * GetPath() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). void FillFullPath(TString& buf) const; recursive method to fill full path for directory. TDirectory * mkdir(const char* name, const char* title = """"); Create a sub-directory and return a pointer to the created directory.; Returns 0 in case of error.; Returns 0 if a directory with the same name already exists.; Note that the directory name may be of the form ""a/b/c"" to create a hierarchy of directories.; In this case, the function returns the pointer to the ""a"" directory if the operation is successful. For example the step to the steps to create first a/b/c and then a/b/d without receiving; and errors are:; TFile * file = new TFile(""afile"",""RECREATE"");; file->mkdir(""a"");; file->cd(""a"");; gDirectory->mkdir(""b"");; gDirectory->cd(""b"");; gDirectory->mkdir(""d"");. void ls(Option_t* option = """") const; List Directory contents. Indentation is used to identify the directory tree; Subdirectories are listed first, then objects in memory. The option can has the following format:; [<regexp>]; The <regexp> will be used to match the name of the objects.; By default memory and disk objects are listed. void Paint(Option_t* option = """"); Paint all objects in the directory. void Print(Option_t* option = """") const; Print all objects in the directory. void pwd() const; Print the path of the directory. void RecursiveRemove(TObject* obj); Recursively remove object from a Directory. TObject * Remove(TObject* ); Remove an object from the in-memory list. void rmdir(const char* name); Removes subdirectory from the directory; When directory is deleted, all keys in all subdirectories will be; read first and deleted from file (if exists); E",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:19094,Deployability,a/b,a/b,19094,". we found what we are looking for ... }. const char * GetPathStatic() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). const char * GetPath() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). void FillFullPath(TString& buf) const; recursive method to fill full path for directory. TDirectory * mkdir(const char* name, const char* title = """"); Create a sub-directory and return a pointer to the created directory.; Returns 0 in case of error.; Returns 0 if a directory with the same name already exists.; Note that the directory name may be of the form ""a/b/c"" to create a hierarchy of directories.; In this case, the function returns the pointer to the ""a"" directory if the operation is successful. For example the step to the steps to create first a/b/c and then a/b/d without receiving; and errors are:; TFile * file = new TFile(""afile"",""RECREATE"");; file->mkdir(""a"");; file->cd(""a"");; gDirectory->mkdir(""b"");; gDirectory->cd(""b"");; gDirectory->mkdir(""d"");. void ls(Option_t* option = """") const; List Directory contents. Indentation is used to identify the directory tree; Subdirectories are listed first, then objects in memory. The option can has the following format:; [<regexp>]; The <regexp> will be used to match the name of the objects.; By default memory and disk objects are listed. void Paint(Option_t* option = """"); Paint all objects in the directory. void Print(Option_t* option = """") const; Print all objects in the directory. void pwd() const; Print the path of the directory. void RecursiveRemove(TObject* obj); Recursively remove object from a Directory. TObject * Remove(TObject* ); Remove an object from the in-memory list. void rmdir(const char* name); Removes subdirectory from the directory; When directory is deleted, all keys in all subdirectories will be; read first and deleted from file (if exists); E",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:12159,Integrability,message,message,12159,"toadd = kTRUE); Clone an object.; This function is called when the directory is not a TDirectoryFile.; This version has to load the I/O package, hence via CINT. If autoadd is true and if the object class has a; DirectoryAutoAdd function, it will be called at the end of the; function with the parameter gDirector. This usually means that; the object will be appended to the current ROOT directory. TDirectory *& CurrentDirectory(); Return the current directory for the current thread. TDirectory * GetDirectory(const char* namecycle, Bool_t printError = false, const char* funcname = ""GetDirectory""); Find a directory using apath.; It apath is null or empty, returns ""this"" directory.; Otherwie use apath to find a directory.; The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa.; Returns 0 in case path does not exist.; If printError is true, use Error with 'funcname' to issue an error message. Bool_t cd(const char* path = 0); Change current directory to ""this"" directory . Using path one can; change the current directory to ""path"". The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa. Returns kTRUE in case of success. Bool_t cd1(const char* path); Change current directory to ""this"" directory . Using path one can; change the current directory to ""path"". The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa. Returns kFALSE in case path does not exist. Bool_t Cd(const char* path); Change current directory to ""path"". The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:20529,Integrability,message,message,20529,"ll be used to match the name of the objects.; By default memory and disk objects are listed. void Paint(Option_t* option = """"); Paint all objects in the directory. void Print(Option_t* option = """") const; Print all objects in the directory. void pwd() const; Print the path of the directory. void RecursiveRemove(TObject* obj); Recursively remove object from a Directory. TObject * Remove(TObject* ); Remove an object from the in-memory list. void rmdir(const char* name); Removes subdirectory from the directory; When directory is deleted, all keys in all subdirectories will be; read first and deleted from file (if exists); Equivalent call is Delete(""name;*"");. Int_t SaveObjectAs(const TObject* , const char* = """", Option_t* = """") const; Save object in filename,; if filename is 0 or """", a file with ""objectname.root"" is created.; The name of the key is the object name.; If the operation is successful, it returns the number of bytes written to the file; otherwise it returns 0.; By default a message is printed. Use option ""q"" to not print the message. void SetName(const char* newname); Set the name for directory; If the directory name is changed after the directory was written once,; ROOT currently would NOT change the name of correspondent key in the; mother directory.; DO NOT use this method to 'rename a directory'.; Renaming a directory is currently NOT supported. void EncodeNameCycle(char* buffer, const char* name, Short_t cycle); Encode the name and cycle into buffer like: ""aap;2"". void DecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". Destination; buffer size for name (including string terminator) should be specified in; namesize. void RegisterContext(TDirectory::TContext* ctxt); Register a TContext pointing to this TDirectory object. Int_t WriteTObject(const TObject* obj, const char* name = 0, Option_t* = """", Int_t = 0); See TDirectoryFile::WriteTObject for details. ",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:20581,Integrability,message,message,20581,"bjects.; By default memory and disk objects are listed. void Paint(Option_t* option = """"); Paint all objects in the directory. void Print(Option_t* option = """") const; Print all objects in the directory. void pwd() const; Print the path of the directory. void RecursiveRemove(TObject* obj); Recursively remove object from a Directory. TObject * Remove(TObject* ); Remove an object from the in-memory list. void rmdir(const char* name); Removes subdirectory from the directory; When directory is deleted, all keys in all subdirectories will be; read first and deleted from file (if exists); Equivalent call is Delete(""name;*"");. Int_t SaveObjectAs(const TObject* , const char* = """", Option_t* = """") const; Save object in filename,; if filename is 0 or """", a file with ""objectname.root"" is created.; The name of the key is the object name.; If the operation is successful, it returns the number of bytes written to the file; otherwise it returns 0.; By default a message is printed. Use option ""q"" to not print the message. void SetName(const char* newname); Set the name for directory; If the directory name is changed after the directory was written once,; ROOT currently would NOT change the name of correspondent key in the; mother directory.; DO NOT use this method to 'rename a directory'.; Renaming a directory is currently NOT supported. void EncodeNameCycle(char* buffer, const char* name, Short_t cycle); Encode the name and cycle into buffer like: ""aap;2"". void DecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". Destination; buffer size for name (including string terminator) should be specified in; namesize. void RegisterContext(TDirectory::TContext* ctxt); Register a TContext pointing to this TDirectory object. Int_t WriteTObject(const TObject* obj, const char* name = 0, Option_t* = """", Int_t = 0); See TDirectoryFile::WriteTObject for details. void UnregisterContext(TDirectory::TCo",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:4237,Modifiability,Inherit,InheritsFrom,4237,"ual const char*TNamed::GetName() const; virtual Int_tGetNbytesKeys() const; virtual Int_tGetNkeys() const; voidGetObject(const char* namecycle, void*& ptr); virtual void*GetObjectChecked(const char* namecycle, const char* classname); virtual void*GetObjectChecked(const char* namecycle, const TClass* cl); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual void*GetObjectUnchecked(const char* namecycle); virtual Option_t*TObject::GetOption() const; virtual const char*GetPath() const; virtual const char*GetPathStatic() const; virtual Long64_tGetSeekDir() const; virtual Long64_tGetSeekKeys() const; virtual Long64_tGetSeekParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TUUIDGetUUID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsWritable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDirectory*mkdir(const char* name, const char* title = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual TFile*OpenFile(const char*, Option_t* = """", const char* = """", Int_t = 1, Int_t = 0); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[]",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:4303,Modifiability,Inherit,InheritsFrom,4303,"() const; virtual Int_tGetNkeys() const; voidGetObject(const char* namecycle, void*& ptr); virtual void*GetObjectChecked(const char* namecycle, const char* classname); virtual void*GetObjectChecked(const char* namecycle, const TClass* cl); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual void*GetObjectUnchecked(const char* namecycle); virtual Option_t*TObject::GetOption() const; virtual const char*GetPath() const; virtual const char*GetPathStatic() const; virtual Long64_tGetSeekDir() const; virtual Long64_tGetSeekKeys() const; virtual Long64_tGetSeekParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TUUIDGetUUID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsWritable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDirectory*mkdir(const char* name, const char* title = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual TFile*OpenFile(const char*, Option_t* = """", const char* = """", Int_t = 1, Int_t = 0); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:9122,Modifiability,Inherit,Inheritance,9122,"st char* location, const char* fmt, va_list va) const; voidFillFullPath(TString& buf) const; voidTObject::MakeZombie(); voidoperator=(const TDirectory&); voidRegisterContext(TDirectory::TContext* ctxt); voidUnregisterContext(TDirectory::TContext* ctxt). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TDirectory::TContext*fContext!Pointer to a list of TContext object pointing to this TDirectory; TList*fListList of objects in memory; TObject*fMotherpointer to mother of the directory; TStringTNamed::fNameobject identifier; TStringfPathBuffer!Buffer for GetPath() function; TStringTNamed::fTitleobject title; TUUIDfUUIDUnique identifier; static Bool_tfgAddDirectory!flag to add histograms, graphs,etc to the directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDirectory(); Directory default constructor-; *-* =============================. TDirectory(const char* name, const char* title, Option_t* option = """", TDirectory* motherDir = 0); Create a new Directory *-*-; *-* ======================; A new directory with name,title is created in the current directory; The directory header information is immediately saved in the file; A new key is added in the parent directory. When this constructor is called from a class directly derived; from TDirectory, the third argument classname MUST be specified.; In this case, classname must be the name of the derived class. Note that the directory name cannot contain slashes. TDirectory(const TDirectory& directory); Copy constructor. ~TDirectory(); -- Destructor. void AddDirectory(Bool_t add = kTRUE); Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc; in memory. By default (fAddDirectory = kTRUE), these objects are automatica",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:9135,Modifiability,Inherit,Inherited,9135,"st char* location, const char* fmt, va_list va) const; voidFillFullPath(TString& buf) const; voidTObject::MakeZombie(); voidoperator=(const TDirectory&); voidRegisterContext(TDirectory::TContext* ctxt); voidUnregisterContext(TDirectory::TContext* ctxt). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TDirectory::TContext*fContext!Pointer to a list of TContext object pointing to this TDirectory; TList*fListList of objects in memory; TObject*fMotherpointer to mother of the directory; TStringTNamed::fNameobject identifier; TStringfPathBuffer!Buffer for GetPath() function; TStringTNamed::fTitleobject title; TUUIDfUUIDUnique identifier; static Bool_tfgAddDirectory!flag to add histograms, graphs,etc to the directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDirectory(); Directory default constructor-; *-* =============================. TDirectory(const char* name, const char* title, Option_t* option = """", TDirectory* motherDir = 0); Create a new Directory *-*-; *-* ======================; A new directory with name,title is created in the current directory; The directory header information is immediately saved in the file; A new key is added in the parent directory. When this constructor is called from a class directly derived; from TDirectory, the third argument classname MUST be specified.; In this case, classname must be the name of the derived class. Note that the directory name cannot contain slashes. TDirectory(const TDirectory& directory); Copy constructor. ~TDirectory(); -- Destructor. void AddDirectory(Bool_t add = kTRUE); Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc; in memory. By default (fAddDirectory = kTRUE), these objects are automatica",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:16147,Modifiability,inherit,inherits,16147," current directory is not changed.; To automatically set the current directory where the object is found,; use FindKeyAny(aname)->ReadObj(). TObject * Get(const char* namecycle); return pointer to object identified by namecycle. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory; if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject.; If not, the function TDirectory::GetObject should be called.; However, this function will still work for a non-TObject, providing that; the calling application cast the return type to the correct type (which; is the actual type of the object). NOTE:; The method GetObject offer better protection and avoid the need; for any cast:; MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }. VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not; as a first inheritance, one must use dynamic_cast<>().; Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; then on return, one can do:; MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");. Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do:; MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));. Of course, dynamic_cast<> can also be used in the example 1. void * GetObjectUnchecked(const char* namecycle); return pointer to object identified by namecycle.; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned object to; the final type, e.g.; MyClass ",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:16272,Modifiability,inherit,inheritance,16272," found,; use FindKeyAny(aname)->ReadObj(). TObject * Get(const char* namecycle); return pointer to object identified by namecycle. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory; if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject.; If not, the function TDirectory::GetObject should be called.; However, this function will still work for a non-TObject, providing that; the calling application cast the return type to the correct type (which; is the actual type of the object). NOTE:; The method GetObject offer better protection and avoid the need; for any cast:; MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }. VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not; as a first inheritance, one must use dynamic_cast<>().; Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; then on return, one can do:; MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");. Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do:; MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));. Of course, dynamic_cast<> can also be used in the example 1. void * GetObjectUnchecked(const char* namecycle); return pointer to object identified by namecycle.; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned object to; the final type, e.g.; MyClass *obj = (MyClass*)directory->GetObject(""some object of MyClass"");. void * GetObjectChecked(const c",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:18113,Modifiability,inherit,inheriting,18113,"ation must cast the returned object to; the final type, e.g.; MyClass *obj = (MyClass*)directory->GetObject(""some object of MyClass"");. void * GetObjectChecked(const char* namecycle, const char* classname); See documentation of TDirectory::GetObjectCheck(const char *namecycle, const TClass *cl). void * GetObjectChecked(const char* namecycle, const TClass* cl); return pointer to object identified by namecycle if and only if the actual; object is a type suitable to be stored as a pointer to a ""expectedClass""; If expectedClass is null, no check is performed. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned pointer to; the type described by the 2 arguments (i.e. cl):; MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));. Note: We recommend using the method TDirectory::GetObject:; MyClass *obj = 0;; directory->GetObject(""some object inheriting from MyClass"",obj);; if (obj) { ... we found what we are looking for ... }. const char * GetPathStatic() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). const char * GetPath() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). void FillFullPath(TString& buf) const; recursive method to fill full path for directory. TDirectory * mkdir(const char* name, const char* title = """"); Create a sub-directory and return a pointer to the created directory.; Returns 0 in case of error.; Returns 0 if a directory with the same name already exists.; Note that the directory name may be of the form ""a/b/c"" to create a hierarchy of directories.; In this case, the function returns the pointer to the ""a"" directory if the operation is successful. For example the step to the steps to create first",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:11251,Performance,load,load,11251,"lity,; one object can be removed from its support directory; by calling object->SetDirectory(0) or object->SetDirectory(dir) to add it; to the list of objects in the directory dir. NOTE that this is a static function. To call it, use;; TDirectory::AddDirectory. Bool_t AddDirectoryStatus(); static function: see TDirectory::AddDirectory for more comments. void Append(TObject* obj, Bool_t replace = kFALSE); Append object to this directory. If replace is true:; remove any existing objects with the same same (if the name is not """". void Browse(TBrowser* b); Browse the content of the directory. void Build(TFile* motherFile = 0, TDirectory* motherDir = 0); -*-*Initialise directory to defaults; *-* ================================. void CleanTargets(); Clean the pointers to this object (gDirectory, TContext, etc.). TObject * CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); Clone an object.; This function is called when the directory is not a TDirectoryFile.; This version has to load the I/O package, hence via CINT. If autoadd is true and if the object class has a; DirectoryAutoAdd function, it will be called at the end of the; function with the parameter gDirector. This usually means that; the object will be appended to the current ROOT directory. TDirectory *& CurrentDirectory(); Return the current directory for the current thread. TDirectory * GetDirectory(const char* namecycle, Bool_t printError = false, const char* funcname = ""GetDirectory""); Find a directory using apath.; It apath is null or empty, returns ""this"" directory.; Otherwie use apath to find a directory.; The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa.; Returns 0 in case path does not exist.; If printError is true, use Error with 'funcname' to issue an error message. Bool_t cd(const char* path = 0); Change current directory to ""this"" directory . Using path ",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:17629,Performance,perform,performed,17629,"cial case:; class MyClass : public AnotherClass, public TObject; then on return, one must do:; MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));. Of course, dynamic_cast<> can also be used in the example 1. void * GetObjectUnchecked(const char* namecycle); return pointer to object identified by namecycle.; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned object to; the final type, e.g.; MyClass *obj = (MyClass*)directory->GetObject(""some object of MyClass"");. void * GetObjectChecked(const char* namecycle, const char* classname); See documentation of TDirectory::GetObjectCheck(const char *namecycle, const TClass *cl). void * GetObjectChecked(const char* namecycle, const TClass* cl); return pointer to object identified by namecycle if and only if the actual; object is a type suitable to be stored as a pointer to a ""expectedClass""; If expectedClass is null, no check is performed. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned pointer to; the type described by the 2 arguments (i.e. cl):; MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));. Note: We recommend using the method TDirectory::GetObject:; MyClass *obj = 0;; directory->GetObject(""some object inheriting from MyClass"",obj);; if (obj) { ... we found what we are looking for ... }. const char * GetPathStatic() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call to GetPath(). const char * GetPath() const; Returns the full path of the directory. E.g. file:/dir1/dir2.; The returned path will be re-used by the next call",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:16023,Safety,avoid,avoid,16023,"me in the list of memory objects of the current; directory or its sub-directories.; After this call the current directory is not changed.; To automatically set the current directory where the object is found,; use FindKeyAny(aname)->ReadObj(). TObject * Get(const char* namecycle); return pointer to object identified by namecycle. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory; if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject.; If not, the function TDirectory::GetObject should be called.; However, this function will still work for a non-TObject, providing that; the calling application cast the return type to the correct type (which; is the actual type of the object). NOTE:; The method GetObject offer better protection and avoid the need; for any cast:; MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }. VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not; as a first inheritance, one must use dynamic_cast<>().; Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; then on return, one can do:; MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");. Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do:; MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));. Of course, dynamic_cast<> can also be used in the example 1. void * GetObjectUnchecked(const char* namecycle); return pointer to object identified by namecycle.; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IM",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:4127,Security,Hash,Hash,4127,"tual TList*GetListOfKeys() const; virtual TObject*GetMother() const; virtual TDirectory*GetMotherDir() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNbytesKeys() const; virtual Int_tGetNkeys() const; voidGetObject(const char* namecycle, void*& ptr); virtual void*GetObjectChecked(const char* namecycle, const char* classname); virtual void*GetObjectChecked(const char* namecycle, const TClass* cl); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual void*GetObjectUnchecked(const char* namecycle); virtual Option_t*TObject::GetOption() const; virtual const char*GetPath() const; virtual const char*GetPathStatic() const; virtual Long64_tGetSeekDir() const; virtual Long64_tGetSeekKeys() const; virtual Long64_tGetSeekParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TUUIDGetUUID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsWritable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDirectory*mkdir(const char* name, const char* title = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual TFile*OpenFile(const char*, Option_t* = """", const char* = """", Int_t = 1, Int_t = 0); static voidTObject::operator ",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:7215,Testability,Test,TestBit,7215,"tual voidrmdir(const char* name); virtual voidSave(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual Int_tSaveObjectAs(const TObject*, const char* = """", Option_t* = """") const; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSaveSelf(Bool_t = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetBufferSize(Int_t); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetModified(); virtual voidSetMother(TObject* mother); virtual voidSetName(const char* newname); virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetSeekDir(Long64_t); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTRefAction(TObject*, TObject*); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetWritable(Bool_t); virtual voidShowMembers(TMemberInspector&); virtual Int_tSizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tWrite(const char* = 0, Int_t = 0, Int_t = 0); virtual Int_tWrite(const char* = 0, Int_t = 0, Int_t = 0) const; virtual voidWriteDirHeader(); virtual voidWriteKeys(); Int_tWriteObject(const void* obj, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual Int_tWriteObjectAny(const void*, const char*, const char*, Option_t* = """", Int_t = 0); virtual Int_tWriteObjectAny(const void*, const TClass*, const char*, Option_t* = """", Int_t = 0); virtual Int_tWriteTObject(const TObject* obj, const char* name = 0, Option_t* = """", Int_t = 0).",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:7254,Testability,Test,TestBits,7254,"tual voidrmdir(const char* name); virtual voidSave(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual Int_tSaveObjectAs(const TObject*, const char* = """", Option_t* = """") const; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSaveSelf(Bool_t = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetBufferSize(Int_t); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetModified(); virtual voidSetMother(TObject* mother); virtual voidSetName(const char* newname); virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetSeekDir(Long64_t); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTRefAction(TObject*, TObject*); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetWritable(Bool_t); virtual voidShowMembers(TMemberInspector&); virtual Int_tSizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tWrite(const char* = 0, Int_t = 0, Int_t = 0); virtual Int_tWrite(const char* = 0, Int_t = 0, Int_t = 0) const; virtual voidWriteDirHeader(); virtual voidWriteKeys(); Int_tWriteObject(const void* obj, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual Int_tWriteObjectAny(const void*, const char*, const char*, Option_t* = """", Int_t = 0); virtual Int_tWriteObjectAny(const void*, const TClass*, const char*, Option_t* = """", Int_t = 0); virtual Int_tWriteTObject(const TObject* obj, const char* name = 0, Option_t* = """", Int_t = 0).",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectory.html:13467,Usability,Clear,Clear,13467,"se of success. Bool_t cd1(const char* path); Change current directory to ""this"" directory . Using path one can; change the current directory to ""path"". The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa. Returns kFALSE in case path does not exist. Bool_t Cd(const char* path); Change current directory to ""path"". The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to the current directory; gDirectory, e.g.: ../aa. Returns kTRUE in case of success. Bool_t Cd1(const char* path); Change current directory to ""path"". The path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Returns kFALSE in case path does not exist. void Clear(Option_t* option = """"); Delete all objects from a Directory list-*-; *-* =======================================. void Close(Option_t* option = """"); -- Delete all objects from memory and directory structure itself. void DeleteAll(Option_t* option = """"); -- Delete all objects from memory. void Delete(const char* namecycle = """"); Delete Objects or/and keys in a directory; *-* =========================================; namecycle has the format name;cycle; namecycle = """" same as namecycle =""T*""; name = * means all; cycle = * means all cycles (memory and keys); cycle = """" or cycle = 9999 ==> apply to a memory object; When name=* use T* to delete subdirectories also. To delete one directory, you must specify the directory cycle,; eg. file.Delete(""dir1;1"");. examples:; foo : delete object named foo in memory; foo* : delete all objects with a name starting with foo; foo;1 : delete cycle 1 of foo on file; foo;* : delete all cycles of foo on file and also from memory; *;2 : delete all objects on file having the cycle 2; *;* : delete all objects ",MatchSource.WIKI,root/html534/TDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectory.html
https://root.cern/root/html534/TDirectoryFile.html:2425,Availability,Error,Error,2425,"::ClassName() const; virtual voidTDirectory::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TObject*CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static TDirectory*&TDirectory::CurrentDirectory(); static voidTDirectory::DecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); virtual voidDelete(const char* namecycle = """"); virtual voidTDirectory::DeleteAll(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDirectory::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static voidTDirectory::EncodeNameCycle(char* buffer, const char* name, Short_t cycle); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidFillBuffer(char*& buffer); virtual TKey*FindKey(const char* keyname) const; virtual TKey*FindKeyAny(const char* keyname) const; virtual TObject*TDirectory::FindObject(const char* name) const; virtual TObject*TDirectory::FindObject(const TObject* obj) const; virtual TObject*FindObjectAny(const char* name) const; virtual TObject*FindObjectAnyFile(const char* name) const; virtual TObject*Get(const char* namecycle); virtual Int_tGetBufferSize() const; const TDatime&GetCreationDate() const; virtual TDirectory*GetDirectory(const char* apath, Bool_t printError = false, const char* funcname = ""GetDirectory""); virtual Option_",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:2554,Availability,error,error,2554,") const; virtual TObject*CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static TDirectory*&TDirectory::CurrentDirectory(); static voidTDirectory::DecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); virtual voidDelete(const char* namecycle = """"); virtual voidTDirectory::DeleteAll(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDirectory::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static voidTDirectory::EncodeNameCycle(char* buffer, const char* name, Short_t cycle); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidFillBuffer(char*& buffer); virtual TKey*FindKey(const char* keyname) const; virtual TKey*FindKeyAny(const char* keyname) const; virtual TObject*TDirectory::FindObject(const char* name) const; virtual TObject*TDirectory::FindObject(const TObject* obj) const; virtual TObject*FindObjectAny(const char* name) const; virtual TObject*FindObjectAnyFile(const char* name) const; virtual TObject*Get(const char* namecycle); virtual Int_tGetBufferSize() const; const TDatime&GetCreationDate() const; virtual TDirectory*GetDirectory(const char* apath, Bool_t printError = false, const char* funcname = ""GetDirectory""); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TFile*GetFile() const; virtual const char*TObject:",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:2638,Availability,error,error,2638,"rtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static TDirectory*&TDirectory::CurrentDirectory(); static voidTDirectory::DecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); virtual voidDelete(const char* namecycle = """"); virtual voidTDirectory::DeleteAll(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDirectory::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static voidTDirectory::EncodeNameCycle(char* buffer, const char* name, Short_t cycle); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidFillBuffer(char*& buffer); virtual TKey*FindKey(const char* keyname) const; virtual TKey*FindKeyAny(const char* keyname) const; virtual TObject*TDirectory::FindObject(const char* name) const; virtual TObject*TDirectory::FindObject(const TObject* obj) const; virtual TObject*FindObjectAny(const char* name) const; virtual TObject*FindObjectAnyFile(const char* name) const; virtual TObject*Get(const char* namecycle); virtual Int_tGetBufferSize() const; const TDatime&GetCreationDate() const; virtual TDirectory*GetDirectory(const char* apath, Bool_t printError = false, const char* funcname = ""GetDirectory""); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TFile*GetFile() const; virtual const char*TObject::GetIconName() const; virtual TKey*GetKey(const char* name, Short_t cycle = 9999) co",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:14134,Availability,Error,Error,14134,"s called; by TNamed::Clone. TNamed::Clone uses the optional argument newname to set; a new name to the newly created object. If autoadd is true and if the object class has a; DirectoryAutoAdd function, it will be called at the end of the; function with the parameter gDirector. This usually means that; the object will be appended to the current ROOT directory. TObject * FindObjectAnyFile(const char* name) const; Scan the memory lists of all files for an object with name. TDirectory * GetDirectory(const char* apath, Bool_t printError = false, const char* funcname = ""GetDirectory""); Find a directory named ""apath"".; It apath is null or empty, returns ""this"" directory.; Otherwise use the name ""apath"" to find a directory.; The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa.; Returns 0 in case path does not exist.; If printError is true, use Error with 'funcname' to issue an error message. void Close(Option_t* option = """"); -- Delete all objects from memory and directory structure itself. void Delete(const char* namecycle = """"); Delete Objects or/and keys in a directory; *-* =========================================; namecycle has the format name;cycle; namecycle = """" same as namecycle =""T*""; name = * means all; cycle = * means all cycles (memory and keys); cycle = """" or cycle = 9999 ==> apply to a memory object; When name=* use T* to delete subdirectories also. To delete one directory, you must specify the directory cycle,; eg. file.Delete(""dir1;1"");. examples:; foo : delete object named foo in memory; foo* : delete all objects with a name starting with foo; foo;1 : delete cycle 1 of foo on file; foo;* : delete all cycles of foo on file and also from memory; *;2 : delete all objects on file having the cycle 2; *;* : delete all objects from memory and file; T*;* : delete all objects from memory and file and all subdirectories; WARNI",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:14168,Availability,error,error,14168,"s called; by TNamed::Clone. TNamed::Clone uses the optional argument newname to set; a new name to the newly created object. If autoadd is true and if the object class has a; DirectoryAutoAdd function, it will be called at the end of the; function with the parameter gDirector. This usually means that; the object will be appended to the current ROOT directory. TObject * FindObjectAnyFile(const char* name) const; Scan the memory lists of all files for an object with name. TDirectory * GetDirectory(const char* apath, Bool_t printError = false, const char* funcname = ""GetDirectory""); Find a directory named ""apath"".; It apath is null or empty, returns ""this"" directory.; Otherwise use the name ""apath"" to find a directory.; The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa.; Returns 0 in case path does not exist.; If printError is true, use Error with 'funcname' to issue an error message. void Close(Option_t* option = """"); -- Delete all objects from memory and directory structure itself. void Delete(const char* namecycle = """"); Delete Objects or/and keys in a directory; *-* =========================================; namecycle has the format name;cycle; namecycle = """" same as namecycle =""T*""; name = * means all; cycle = * means all cycles (memory and keys); cycle = """" or cycle = 9999 ==> apply to a memory object; When name=* use T* to delete subdirectories also. To delete one directory, you must specify the directory cycle,; eg. file.Delete(""dir1;1"");. examples:; foo : delete object named foo in memory; foo* : delete all objects with a name starting with foo; foo;1 : delete cycle 1 of foo on file; foo;* : delete all cycles of foo on file and also from memory; *;2 : delete all objects on file having the cycle 2; *;* : delete all objects from memory and file; T*;* : delete all objects from memory and file and all subdirectories; WARNI",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:20325,Availability,error,error,20325,"of objects in the file so far. TKey * GetKey(const char* name, Short_t cycle = 9999) const; -*-*-*Return pointer to key with name,cycle; *-* =====================================; if cycle = 9999 returns highest cycle. void ls(Option_t* option = """") const; List Directory contents*-*-; *-* =======================; Indentation is used to identify the directory tree; Subdirectories are listed first, then objects in memory, then objects on the file. The option can has the following format:; [-d |-m][<regexp>]; Option -d means: only list objects in the file; -m means: only list objects in memory; The <regexp> will be used to match the name of the objects.; By default memory and disk objects are listed. TFile * OpenFile(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); Interface to TFile::Open. TDirectory * mkdir(const char* name, const char* title = """"); Create a sub-directory and return a pointer to the created directory.; Returns 0 in case of error.; Returns 0 if a directory with the same name already exists.; Note that the directory name may be of the form ""a/b/c"" to create a hierarchy of directories.; In this case, the function returns the pointer to the ""a"" directory if the operation is successful. void Purge(Short_t nkeep = 1); Purge lowest key cycles in a directory.; By default, only the highest cycle of a key is kept. Keys for which; the ""KEEP"" flag has been set are not removed. See TKey::Keep(). void ReadAll(Option_t* option = """"); Read objects from a ROOT db file directory into memory.; If an object is already in memory, the memory copy is deleted; and the object is again read from the file.; If opt==""dirs"", only subdirectories will be read; If opt==""dirs*"" complete directory tree will be read. Int_t ReadKeys(Bool_t forceRead = kTRUE); Read the KEYS linked list; *-* =========================; Every directory has a linked list (fKeys). This linked list has been; written on the file via WriteKeys as a single d",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:20443,Deployability,a/b,a/b,20443,"h name,cycle; *-* =====================================; if cycle = 9999 returns highest cycle. void ls(Option_t* option = """") const; List Directory contents*-*-; *-* =======================; Indentation is used to identify the directory tree; Subdirectories are listed first, then objects in memory, then objects on the file. The option can has the following format:; [-d |-m][<regexp>]; Option -d means: only list objects in the file; -m means: only list objects in memory; The <regexp> will be used to match the name of the objects.; By default memory and disk objects are listed. TFile * OpenFile(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); Interface to TFile::Open. TDirectory * mkdir(const char* name, const char* title = """"); Create a sub-directory and return a pointer to the created directory.; Returns 0 in case of error.; Returns 0 if a directory with the same name already exists.; Note that the directory name may be of the form ""a/b/c"" to create a hierarchy of directories.; In this case, the function returns the pointer to the ""a"" directory if the operation is successful. void Purge(Short_t nkeep = 1); Purge lowest key cycles in a directory.; By default, only the highest cycle of a key is kept. Keys for which; the ""KEEP"" flag has been set are not removed. See TKey::Keep(). void ReadAll(Option_t* option = """"); Read objects from a ROOT db file directory into memory.; If an object is already in memory, the memory copy is deleted; and the object is again read from the file.; If opt==""dirs"", only subdirectories will be read; If opt==""dirs*"" complete directory tree will be read. Int_t ReadKeys(Bool_t forceRead = kTRUE); Read the KEYS linked list; *-* =========================; Every directory has a linked list (fKeys). This linked list has been; written on the file via WriteKeys as a single data record. It is interesting to call this function in the following situation.; Assume another process1 is connecting this",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:21454,Deployability,Update,Update,21454,"es.; In this case, the function returns the pointer to the ""a"" directory if the operation is successful. void Purge(Short_t nkeep = 1); Purge lowest key cycles in a directory.; By default, only the highest cycle of a key is kept. Keys for which; the ""KEEP"" flag has been set are not removed. See TKey::Keep(). void ReadAll(Option_t* option = """"); Read objects from a ROOT db file directory into memory.; If an object is already in memory, the memory copy is deleted; and the object is again read from the file.; If opt==""dirs"", only subdirectories will be read; If opt==""dirs*"" complete directory tree will be read. Int_t ReadKeys(Bool_t forceRead = kTRUE); Read the KEYS linked list; *-* =========================; Every directory has a linked list (fKeys). This linked list has been; written on the file via WriteKeys as a single data record. It is interesting to call this function in the following situation.; Assume another process1 is connecting this directory in Update mode; -Process1 is adding/updating objects in this directory; -You want to see the latest status from process1.; Example Process1:; obj1.Write();; obj2.Write();; gDirectory->SaveSelf();. Example Process2; gDirectory->ReadKeys();; obj1->Draw();. This is an efficient way (without opening/closing files) to view; the latest updates of a file being modified by another process; as it is typically the case in a data acquisition system. Int_t ReadTObject(TObject* obj, const char* keyname); Read object with keyname from the current directory; Read contents of object with specified name from the current directory.; First the key with keyname is searched in the current directory,; next the key buffer is deserialized into the object.; The object must have been created before via the default constructor.; See TObject::Write(). void ResetAfterMerge(TFileMergeInfo* ); Reset the TDirectory after its content has been merged into another; Directory. This returns the TDirectoryFile object back to its state; before any data has",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:21783,Deployability,update,updates,21783,"ReadAll(Option_t* option = """"); Read objects from a ROOT db file directory into memory.; If an object is already in memory, the memory copy is deleted; and the object is again read from the file.; If opt==""dirs"", only subdirectories will be read; If opt==""dirs*"" complete directory tree will be read. Int_t ReadKeys(Bool_t forceRead = kTRUE); Read the KEYS linked list; *-* =========================; Every directory has a linked list (fKeys). This linked list has been; written on the file via WriteKeys as a single data record. It is interesting to call this function in the following situation.; Assume another process1 is connecting this directory in Update mode; -Process1 is adding/updating objects in this directory; -You want to see the latest status from process1.; Example Process1:; obj1.Write();; obj2.Write();; gDirectory->SaveSelf();. Example Process2; gDirectory->ReadKeys();; obj1->Draw();. This is an efficient way (without opening/closing files) to view; the latest updates of a file being modified by another process; as it is typically the case in a data acquisition system. Int_t ReadTObject(TObject* obj, const char* keyname); Read object with keyname from the current directory; Read contents of object with specified name from the current directory.; First the key with keyname is searched in the current directory,; next the key buffer is deserialized into the object.; The object must have been created before via the default constructor.; See TObject::Write(). void ResetAfterMerge(TFileMergeInfo* ); Reset the TDirectory after its content has been merged into another; Directory. This returns the TDirectoryFile object back to its state; before any data has been written to the file.; The object in the in-memory list are assumed to also have been reset. void rmdir(const char* name); Removes subdirectory from the directory; When diredctory is deleted, all keys in all subdirectories will be; read first and deleted from file (if exists); Equivalent call is Delete(""name;",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:23700,Deployability,Update,Update,23700,". void Save(); *-*-*-*-*Save recursively all directory keys and headers; *-* ===============================================. Int_t SaveObjectAs(const TObject* obj, const char* filename = """", Option_t* option = """") const; Save object in filename,; if filename is 0 or """", a file with ""objectname.root"" is created.; The name of the key is the object name.; If the operation is successful, it returns the number of bytes written to the file; otherwise it returns 0.; By default a message is printed. Use option ""q"" to not print the message. void SaveSelf(Bool_t force = kFALSE); Save Directory keys and header*-*-; *-* ==============================; If the directory has been modified (fModified set), write the keys; and the directory header. This function assumes the cd is correctly set. It is recommended to use this function in the following situation:; Assume a process1 using a directory in Update mode; -New objects or modified objects have been written to the directory; -You do not want to close the file; -You want your changes be visible from another process2 already connected; to this directory in read mode; -Call this function; -In process2, use TDirectoryFile::ReadKeys to refresh the directory. void SetBufferSize(Int_t bufsize); set the default buffer size when creating new TKeys; see also TDirectoryFile::GetBufferSize. void SetTRefAction(TObject* ref, TObject* parent); Find the action to be executed in the dictionary of the parent class; and store the corresponding exec number into fBits.; This function searches a data member in the class of parent with an; offset corresponding to this.; If a comment ""TEXEC:"" is found in the comment field of the data member,; the function stores the exec identifier of the exec statement; following this keyword. void SetWritable(Bool_t writable = kTRUE); Set the new value of fWritable recursively. Int_t Sizeof() const; Return the size in bytes of the directory header; *-* ================================================; Int_t nbytes ",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:21717,Energy Efficiency,efficient,efficient,21717,"ReadAll(Option_t* option = """"); Read objects from a ROOT db file directory into memory.; If an object is already in memory, the memory copy is deleted; and the object is again read from the file.; If opt==""dirs"", only subdirectories will be read; If opt==""dirs*"" complete directory tree will be read. Int_t ReadKeys(Bool_t forceRead = kTRUE); Read the KEYS linked list; *-* =========================; Every directory has a linked list (fKeys). This linked list has been; written on the file via WriteKeys as a single data record. It is interesting to call this function in the following situation.; Assume another process1 is connecting this directory in Update mode; -Process1 is adding/updating objects in this directory; -You want to see the latest status from process1.; Example Process1:; obj1.Write();; obj2.Write();; gDirectory->SaveSelf();. Example Process2; gDirectory->ReadKeys();; obj1->Draw();. This is an efficient way (without opening/closing files) to view; the latest updates of a file being modified by another process; as it is typically the case in a data acquisition system. Int_t ReadTObject(TObject* obj, const char* keyname); Read object with keyname from the current directory; Read contents of object with specified name from the current directory.; First the key with keyname is searched in the current directory,; next the key buffer is deserialized into the object.; The object must have been created before via the default constructor.; See TObject::Write(). void ResetAfterMerge(TFileMergeInfo* ); Reset the TDirectory after its content has been merged into another; Directory. This returns the TDirectoryFile object back to its state; before any data has been written to the file.; The object in the in-memory list are assumed to also have been reset. void rmdir(const char* name); Removes subdirectory from the directory; When diredctory is deleted, all keys in all subdirectories will be; read first and deleted from file (if exists); Equivalent call is Delete(""name;",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:14174,Integrability,message,message,14174,"s called; by TNamed::Clone. TNamed::Clone uses the optional argument newname to set; a new name to the newly created object. If autoadd is true and if the object class has a; DirectoryAutoAdd function, it will be called at the end of the; function with the parameter gDirector. This usually means that; the object will be appended to the current ROOT directory. TObject * FindObjectAnyFile(const char* name) const; Scan the memory lists of all files for an object with name. TDirectory * GetDirectory(const char* apath, Bool_t printError = false, const char* funcname = ""GetDirectory""); Find a directory named ""apath"".; It apath is null or empty, returns ""this"" directory.; Otherwise use the name ""apath"" to find a directory.; The absolute path syntax is:; file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory; in the file. Relative syntax is relative to ""this"" directory. E.g:; ../aa.; Returns 0 in case path does not exist.; If printError is true, use Error with 'funcname' to issue an error message. void Close(Option_t* option = """"); -- Delete all objects from memory and directory structure itself. void Delete(const char* namecycle = """"); Delete Objects or/and keys in a directory; *-* =========================================; namecycle has the format name;cycle; namecycle = """" same as namecycle =""T*""; name = * means all; cycle = * means all cycles (memory and keys); cycle = """" or cycle = 9999 ==> apply to a memory object; When name=* use T* to delete subdirectories also. To delete one directory, you must specify the directory cycle,; eg. file.Delete(""dir1;1"");. examples:; foo : delete object named foo in memory; foo* : delete all objects with a name starting with foo; foo;1 : delete cycle 1 of foo on file; foo;* : delete all cycles of foo on file and also from memory; *;2 : delete all objects on file having the cycle 2; *;* : delete all objects from memory and file; T*;* : delete all objects from memory and file and all subdirectories; WARNI",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:20145,Integrability,Interface,Interface,20145,""",obj);; if (obj) { ... we found what we are looking for ... }. Int_t GetBufferSize() const; Return the buffer size to create new TKeys.; If the stored fBufferSize is null, the value returned is the average; buffer size of objects in the file so far. TKey * GetKey(const char* name, Short_t cycle = 9999) const; -*-*-*Return pointer to key with name,cycle; *-* =====================================; if cycle = 9999 returns highest cycle. void ls(Option_t* option = """") const; List Directory contents*-*-; *-* =======================; Indentation is used to identify the directory tree; Subdirectories are listed first, then objects in memory, then objects on the file. The option can has the following format:; [-d |-m][<regexp>]; Option -d means: only list objects in the file; -m means: only list objects in memory; The <regexp> will be used to match the name of the objects.; By default memory and disk objects are listed. TFile * OpenFile(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); Interface to TFile::Open. TDirectory * mkdir(const char* name, const char* title = """"); Create a sub-directory and return a pointer to the created directory.; Returns 0 in case of error.; Returns 0 if a directory with the same name already exists.; Note that the directory name may be of the form ""a/b/c"" to create a hierarchy of directories.; In this case, the function returns the pointer to the ""a"" directory if the operation is successful. void Purge(Short_t nkeep = 1); Purge lowest key cycles in a directory.; By default, only the highest cycle of a key is kept. Keys for which; the ""KEEP"" flag has been set are not removed. See TKey::Keep(). void ReadAll(Option_t* option = """"); Read objects from a ROOT db file directory into memory.; If an object is already in memory, the memory copy is deleted; and the object is again read from the file.; If opt==""dirs"", only subdirectories will be read; If opt==""dirs*"" complete directory tree will be re",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:23281,Integrability,message,message,23281,"(). void ResetAfterMerge(TFileMergeInfo* ); Reset the TDirectory after its content has been merged into another; Directory. This returns the TDirectoryFile object back to its state; before any data has been written to the file.; The object in the in-memory list are assumed to also have been reset. void rmdir(const char* name); Removes subdirectory from the directory; When diredctory is deleted, all keys in all subdirectories will be; read first and deleted from file (if exists); Equivalent call is Delete(""name;*"");. void Save(); *-*-*-*-*Save recursively all directory keys and headers; *-* ===============================================. Int_t SaveObjectAs(const TObject* obj, const char* filename = """", Option_t* option = """") const; Save object in filename,; if filename is 0 or """", a file with ""objectname.root"" is created.; The name of the key is the object name.; If the operation is successful, it returns the number of bytes written to the file; otherwise it returns 0.; By default a message is printed. Use option ""q"" to not print the message. void SaveSelf(Bool_t force = kFALSE); Save Directory keys and header*-*-; *-* ==============================; If the directory has been modified (fModified set), write the keys; and the directory header. This function assumes the cd is correctly set. It is recommended to use this function in the following situation:; Assume a process1 using a directory in Update mode; -New objects or modified objects have been written to the directory; -You do not want to close the file; -You want your changes be visible from another process2 already connected; to this directory in read mode; -Call this function; -In process2, use TDirectoryFile::ReadKeys to refresh the directory. void SetBufferSize(Int_t bufsize); set the default buffer size when creating new TKeys; see also TDirectoryFile::GetBufferSize. void SetTRefAction(TObject* ref, TObject* parent); Find the action to be executed in the dictionary of the parent class; and store the corre",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:23333,Integrability,message,message,23333,"fo* ); Reset the TDirectory after its content has been merged into another; Directory. This returns the TDirectoryFile object back to its state; before any data has been written to the file.; The object in the in-memory list are assumed to also have been reset. void rmdir(const char* name); Removes subdirectory from the directory; When diredctory is deleted, all keys in all subdirectories will be; read first and deleted from file (if exists); Equivalent call is Delete(""name;*"");. void Save(); *-*-*-*-*Save recursively all directory keys and headers; *-* ===============================================. Int_t SaveObjectAs(const TObject* obj, const char* filename = """", Option_t* option = """") const; Save object in filename,; if filename is 0 or """", a file with ""objectname.root"" is created.; The name of the key is the object name.; If the operation is successful, it returns the number of bytes written to the file; otherwise it returns 0.; By default a message is printed. Use option ""q"" to not print the message. void SaveSelf(Bool_t force = kFALSE); Save Directory keys and header*-*-; *-* ==============================; If the directory has been modified (fModified set), write the keys; and the directory header. This function assumes the cd is correctly set. It is recommended to use this function in the following situation:; Assume a process1 using a directory in Update mode; -New objects or modified objects have been written to the directory; -You do not want to close the file; -You want your changes be visible from another process2 already connected; to this directory in read mode; -Call this function; -In process2, use TDirectoryFile::ReadKeys to refresh the directory. void SetBufferSize(Int_t bufsize); set the default buffer size when creating new TKeys; see also TDirectoryFile::GetBufferSize. void SetTRefAction(TObject* ref, TObject* parent); Find the action to be executed in the dictionary of the parent class; and store the corresponding exec number into fBits.; This",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:4915,Modifiability,Inherit,InheritsFrom,4915,"Int_tGetNbytesKeys() const; virtual Int_tGetNkeys() const; voidTDirectory::GetObject(const char* namecycle, void*& ptr); virtual void*GetObjectChecked(const char* namecycle, const char* classname); virtual void*GetObjectChecked(const char* namecycle, const TClass* cl); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual void*GetObjectUnchecked(const char* namecycle); virtual Option_t*TObject::GetOption() const; virtual const char*TDirectory::GetPath() const; virtual const char*TDirectory::GetPathStatic() const; virtual Long64_tGetSeekDir() const; virtual Long64_tGetSeekKeys() const; virtual Long64_tGetSeekParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsWritable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDirectory*mkdir(const char* name, const char* title = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual TFile*OpenFile(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, v",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:4981,Modifiability,Inherit,InheritsFrom,4981,"rectory::GetObject(const char* namecycle, void*& ptr); virtual void*GetObjectChecked(const char* namecycle, const char* classname); virtual void*GetObjectChecked(const char* namecycle, const TClass* cl); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual void*GetObjectUnchecked(const char* namecycle); virtual Option_t*TObject::GetOption() const; virtual const char*TDirectory::GetPath() const; virtual const char*TDirectory::GetPathStatic() const; virtual Long64_tGetSeekDir() const; virtual Long64_tGetSeekKeys() const; virtual Long64_tGetSeekParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsWritable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDirectory*mkdir(const char* name, const char* title = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual TFile*OpenFile(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:11017,Modifiability,Inherit,Inheritance,11017,"ing to this TDirectory; TDatimefDatimeCDate and time when directory is created; TDatimefDatimeMDate and time of last modification; TFile*fFilepointer to current file in memory; TList*fKeysPointer to keys list in memory; TList*TDirectory::fListList of objects in memory; Bool_tfModifiedtrue if directory has been modified; TObject*TDirectory::fMotherpointer to mother of the directory; TStringTNamed::fNameobject identifier; Int_tfNbytesKeysNumber of bytes for the keys; Int_tfNbytesNameNumber of bytes in TNamed at creation time; TStringTDirectory::fPathBuffer!Buffer for GetPath() function; Long64_tfSeekDirLocation of directory on file; Long64_tfSeekKeysLocation of Keys record on file; Long64_tfSeekParentLocation of parent directory on file; TStringTNamed::fTitleobject title; TUUIDTDirectory::fUUIDUnique identifier; Bool_tfWritabletrue if directory is writable; static Bool_tTDirectory::fgAddDirectory!flag to add histograms, graphs,etc to the directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDirectoryFile(); Directory default constructor-; *-* =============================. TDirectoryFile(const char* name, const char* title, Option_t* option = """", TDirectory* motherDir = 0); Create a new DirectoryFile *-*-; *-* ==========================; A new directory with name,title is created in the current directory; The directory header information is immediatly saved on the file; A new key is added in the parent directory. When this constructor is called from a class directly derived; from TDirectoryFile, the third argument classname MUST be specified.; In this case, classname must be the name of the derived class. Note that the directory name cannot contain slashes. void Init(TClass* cl = 0); Initialize the key associated with this directory (and the related; data members. TDirectoryFile(const TDirectoryFile& directory); Copy constructor. ~TDirectoryFile(); -- Destructor. void Append(TObject* obj, Bool_t replace = kFALSE); Append",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:11030,Modifiability,Inherit,Inherited,11030,"ing to this TDirectory; TDatimefDatimeCDate and time when directory is created; TDatimefDatimeMDate and time of last modification; TFile*fFilepointer to current file in memory; TList*fKeysPointer to keys list in memory; TList*TDirectory::fListList of objects in memory; Bool_tfModifiedtrue if directory has been modified; TObject*TDirectory::fMotherpointer to mother of the directory; TStringTNamed::fNameobject identifier; Int_tfNbytesKeysNumber of bytes for the keys; Int_tfNbytesNameNumber of bytes in TNamed at creation time; TStringTDirectory::fPathBuffer!Buffer for GetPath() function; Long64_tfSeekDirLocation of directory on file; Long64_tfSeekKeysLocation of Keys record on file; Long64_tfSeekParentLocation of parent directory on file; TStringTNamed::fTitleobject title; TUUIDTDirectory::fUUIDUnique identifier; Bool_tfWritabletrue if directory is writable; static Bool_tTDirectory::fgAddDirectory!flag to add histograms, graphs,etc to the directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDirectoryFile(); Directory default constructor-; *-* =============================. TDirectoryFile(const char* name, const char* title, Option_t* option = """", TDirectory* motherDir = 0); Create a new DirectoryFile *-*-; *-* ==========================; A new directory with name,title is created in the current directory; The directory header information is immediatly saved on the file; A new key is added in the parent directory. When this constructor is called from a class directly derived; from TDirectoryFile, the third argument classname MUST be specified.; In this case, classname must be the name of the derived class. Note that the directory name cannot contain slashes. void Init(TClass* cl = 0); Initialize the key associated with this directory (and the related; data members. TDirectoryFile(const TDirectoryFile& directory); Copy constructor. ~TDirectoryFile(); -- Destructor. void Append(TObject* obj, Bool_t replace = kFALSE); Append",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:17101,Modifiability,inherit,inherits,17101,"nt directory is not changed.; To automatically set the current directory where the object is found,; use FindKeyAny(aname)->ReadObj(). TObject * Get(const char* namecycle); return pointer to object identified by namecycle. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory; if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject.; If not, the function TDirectoryFile::GetObject should be called.; However, this function will still work for a non-TObject, providing that; the calling application cast the return type to the correct type (which; is the actual type of the object). NOTE:; The method GetObject offers better protection and avoids the need; for any cast:; MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }. VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not; as a first inheritance, one must use dynamic_cast<>().; Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; then on return, one can do:; MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");. Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do:; MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));. Of course, dynamic_cast<> can also be used in the example 1. void * GetObjectUnchecked(const char* namecycle); return pointer to object identified by namecycle.; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned object to; the final type, eg; MyClass *o",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:17226,Modifiability,inherit,inheritance,17226,",; use FindKeyAny(aname)->ReadObj(). TObject * Get(const char* namecycle); return pointer to object identified by namecycle. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory; if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject.; If not, the function TDirectoryFile::GetObject should be called.; However, this function will still work for a non-TObject, providing that; the calling application cast the return type to the correct type (which; is the actual type of the object). NOTE:; The method GetObject offers better protection and avoids the need; for any cast:; MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }. VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not; as a first inheritance, one must use dynamic_cast<>().; Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; then on return, one can do:; MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");. Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do:; MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));. Of course, dynamic_cast<> can also be used in the example 1. void * GetObjectUnchecked(const char* namecycle); return pointer to object identified by namecycle.; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned object to; the final type, eg; MyClass *obj = (MyClass*)directory->GetObject(""some object of MyClass"");. void * GetObjectChecked(const cha",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:19073,Modifiability,inherit,inheriting,19073,"n must cast the returned object to; the final type, eg; MyClass *obj = (MyClass*)directory->GetObject(""some object of MyClass"");. void * GetObjectChecked(const char* namecycle, const char* classname); See documentation of TDirectoryFile::GetObjectCheck(const char *namecycle, const TClass *cl). void * GetObjectChecked(const char* namecycle, const TClass* cl); return pointer to object identified by namecycle if and only if the actual; object is a type suitable to be stored as a pointer to a ""expectedClass""; If expectedClass is null, no check is performed. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned pointer to; the type described by the 2 arguments (i.e. cl):; MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));. Note: We recommend using the method TDirectoryFile::GetObject:; MyClass *obj = 0;; directory->GetObject(""some object inheriting from MyClass"",obj);; if (obj) { ... we found what we are looking for ... }. Int_t GetBufferSize() const; Return the buffer size to create new TKeys.; If the stored fBufferSize is null, the value returned is the average; buffer size of objects in the file so far. TKey * GetKey(const char* name, Short_t cycle = 9999) const; -*-*-*Return pointer to key with name,cycle; *-* =====================================; if cycle = 9999 returns highest cycle. void ls(Option_t* option = """") const; List Directory contents*-*-; *-* =======================; Indentation is used to identify the directory tree; Subdirectories are listed first, then objects in memory, then objects on the file. The option can has the following format:; [-d |-m][<regexp>]; Option -d means: only list objects in the file; -m means: only list objects in memory; The <regexp> will be used to match the name of the objects.; By default memory and disk objects are listed. TFile * OpenF",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:28260,Modifiability,inherit,inheritance,28260,"n; is safer than kOverwrite but it is slower.; The ""SingleKey"" option is only used by TCollection::Write() to write; a container with a single key instead of each object in the container; with its own key. An object is read from this directory via TDirectoryFile::Get. The function returns the total number of bytes written to the directory.; It returns 0 if the object cannot be written. WARNING: in name avoid special characters like '^','$','.' that are used; by the regular expression parser (see TRegexp). Int_t WriteObjectAny(const void* obj, const char* classname, const char* name, Option_t* option = """", Int_t bufsize = 0); Write object from pointer of class classname in this directory; obj may not derive from TObject; see TDirectoryFile::WriteTObject for comments. VERY IMPORTANT NOTE:; The value passed as 'obj' needs to be from a pointer to the type described by classname; For example with:; TopClass *top;; BottomClass *bottom;; top = bottom;; you can do:; directory->WriteObjectAny(top,""top"",""name of object"");; directory->WriteObjectAny(bottom,""bottom"",""name of object"");; BUT YOU CAN NOT DO (it will fail in particular with multiple inheritance):; directory->WriteObjectAny(top,""bottom"",""name of object"");. We STRONGLY recommend to use; TopClass *top = ....;; directory->WriteObject(top,""name of object""). see laso remarks in TDirectoryFile::WriteTObject. Int_t WriteObjectAny(const void* obj, const TClass* cl, const char* name, Option_t* option = """", Int_t bufsize = 0); Write object of class with dictionary cl in this directory; obj may not derive from TObject; To get the TClass* cl pointer, one can use; TClass *cl = TClass::GetClass(""classname"");; An alternative is to call the function WriteObjectAny above.; see TDirectoryFile::WriteTObject for comments. void WriteDirHeader(); -*-*Overwrite the Directory header record; *-* =====================================. void WriteKeys(); -*-*-*-*Write KEYS linked list on the file ; *-* ==================================; The li",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:18585,Performance,perform,performed,18585,"al case:; class MyClass : public AnotherClass, public TObject; then on return, one must do:; MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));. Of course, dynamic_cast<> can also be used in the example 1. void * GetObjectUnchecked(const char* namecycle); return pointer to object identified by namecycle.; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned object to; the final type, eg; MyClass *obj = (MyClass*)directory->GetObject(""some object of MyClass"");. void * GetObjectChecked(const char* namecycle, const char* classname); See documentation of TDirectoryFile::GetObjectCheck(const char *namecycle, const TClass *cl). void * GetObjectChecked(const char* namecycle, const TClass* cl); return pointer to object identified by namecycle if and only if the actual; object is a type suitable to be stored as a pointer to a ""expectedClass""; If expectedClass is null, no check is performed. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned pointer to; the type described by the 2 arguments (i.e. cl):; MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));. Note: We recommend using the method TDirectoryFile::GetObject:; MyClass *obj = 0;; directory->GetObject(""some object inheriting from MyClass"",obj);; if (obj) { ... we found what we are looking for ... }. Int_t GetBufferSize() const; Return the buffer size to create new TKeys.; If the stored fBufferSize is null, the value returned is the average; buffer size of objects in the file so far. TKey * GetKey(const char* name, Short_t cycle = 9999) const; -*-*-*Return pointer to key with name,cycle; *-* ======",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:16976,Safety,avoid,avoids,16976," the list of memory objects of the current; directory or its sub-directories.; After this call the current directory is not changed.; To automatically set the current directory where the object is found,; use FindKeyAny(aname)->ReadObj(). TObject * Get(const char* namecycle); return pointer to object identified by namecycle. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory; if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject.; If not, the function TDirectoryFile::GetObject should be called.; However, this function will still work for a non-TObject, providing that; the calling application cast the return type to the correct type (which; is the actual type of the object). NOTE:; The method GetObject offers better protection and avoids the need; for any cast:; MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }. VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not; as a first inheritance, one must use dynamic_cast<>().; Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; then on return, one can do:; MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");. Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do:; MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));. Of course, dynamic_cast<> can also be used in the example 1. void * GetObjectUnchecked(const char* namecycle); return pointer to object identified by namecycle.; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY I",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:27114,Safety,safe,safer,27114,"fer object is filled via the class::Streamer function. -If the file is compressed (default) a second buffer is created to; hold the compressed buffer. -Reservation of the corresponding space in the file by looking; in the TFree list of free blocks of the file. -The buffer is written to the file. By default, the buffersize will be taken from the average buffer size; of all objects written to the current file so far.; Use TDirectoryFile::SetBufferSize to force a given buffer size. If a name is specified, it will be the name of the key.; If name is not given, the name of the key will be the name as returned; by obj->GetName(). The option can be a combination of:; ""SingleKey"", ""Overwrite"" or ""WriteDelete""; Using the ""Overwrite"" option a previous key with the same name is; overwritten. The previous key is deleted before writing the new object.; Using the ""WriteDelete"" option a previous key with the same name is; deleted only after the new object has been written. This option; is safer than kOverwrite but it is slower.; The ""SingleKey"" option is only used by TCollection::Write() to write; a container with a single key instead of each object in the container; with its own key. An object is read from this directory via TDirectoryFile::Get. The function returns the total number of bytes written to the directory.; It returns 0 if the object cannot be written. WARNING: in name avoid special characters like '^','$','.' that are used; by the regular expression parser (see TRegexp). Int_t WriteObjectAny(const void* obj, const char* classname, const char* name, Option_t* option = """", Int_t bufsize = 0); Write object from pointer of class classname in this directory; obj may not derive from TObject; see TDirectoryFile::WriteTObject for comments. VERY IMPORTANT NOTE:; The value passed as 'obj' needs to be from a pointer to the type described by classname; For example with:; TopClass *top;; BottomClass *bottom;; top = bottom;; you can do:; directory->WriteObjectAny(top,""top"",""name of",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:27514,Safety,avoid,avoid,27514,"rrent file so far.; Use TDirectoryFile::SetBufferSize to force a given buffer size. If a name is specified, it will be the name of the key.; If name is not given, the name of the key will be the name as returned; by obj->GetName(). The option can be a combination of:; ""SingleKey"", ""Overwrite"" or ""WriteDelete""; Using the ""Overwrite"" option a previous key with the same name is; overwritten. The previous key is deleted before writing the new object.; Using the ""WriteDelete"" option a previous key with the same name is; deleted only after the new object has been written. This option; is safer than kOverwrite but it is slower.; The ""SingleKey"" option is only used by TCollection::Write() to write; a container with a single key instead of each object in the container; with its own key. An object is read from this directory via TDirectoryFile::Get. The function returns the total number of bytes written to the directory.; It returns 0 if the object cannot be written. WARNING: in name avoid special characters like '^','$','.' that are used; by the regular expression parser (see TRegexp). Int_t WriteObjectAny(const void* obj, const char* classname, const char* name, Option_t* option = """", Int_t bufsize = 0); Write object from pointer of class classname in this directory; obj may not derive from TObject; see TDirectoryFile::WriteTObject for comments. VERY IMPORTANT NOTE:; The value passed as 'obj' needs to be from a pointer to the type described by classname; For example with:; TopClass *top;; BottomClass *bottom;; top = bottom;; you can do:; directory->WriteObjectAny(top,""top"",""name of object"");; directory->WriteObjectAny(bottom,""bottom"",""name of object"");; BUT YOU CAN NOT DO (it will fail in particular with multiple inheritance):; directory->WriteObjectAny(top,""bottom"",""name of object"");. We STRONGLY recommend to use; TopClass *top = ....;; directory->WriteObject(top,""name of object""). see laso remarks in TDirectoryFile::WriteTObject. Int_t WriteObjectAny(const void* obj, cons",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:4805,Security,Hash,Hash,4805,") const; virtual TDirectory*TDirectory::GetMotherDir() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNbytesKeys() const; virtual Int_tGetNkeys() const; voidTDirectory::GetObject(const char* namecycle, void*& ptr); virtual void*GetObjectChecked(const char* namecycle, const char* classname); virtual void*GetObjectChecked(const char* namecycle, const TClass* cl); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual void*GetObjectUnchecked(const char* namecycle); virtual Option_t*TObject::GetOption() const; virtual const char*TDirectory::GetPath() const; virtual const char*TDirectory::GetPathStatic() const; virtual Long64_tGetSeekDir() const; virtual Long64_tGetSeekKeys() const; virtual Long64_tGetSeekParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsWritable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDirectory*mkdir(const char* name, const char* title = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual TFile*OpenFile(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, I",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:8169,Testability,Test,TestBit,8169," = """", Option_t* option = """") const; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSaveSelf(Bool_t force = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetBufferSize(Int_t bufsize); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetModified(); virtual voidTDirectory::SetMother(TObject* mother); virtual voidTDirectory::SetName(const char* newname); virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetSeekDir(Long64_t v); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTRefAction(TObject* ref, TObject* parent); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetWritable(Bool_t writable = kTRUE); virtual voidShowMembers(TMemberInspector&); virtual Int_tSizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tWrite(const char* name = 0, Int_t opt = 0, Int_t bufsize = 0); virtual Int_tWrite(const char* name = 0, Int_t opt = 0, Int_t bufsize = 0) const; virtual voidWriteDirHeader(); virtual voidWriteKeys(); Int_tTDirectory::WriteObject(const void* obj, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual Int_tWriteObjectAny(const void* obj, const char* classname, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual Int_tWriteObjectAny(const void* obj, const TClass* cl, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual Int_tWriteTObject(const TObject* obj, const char* name = 0, Option_t* option = """", Int_t bufsize = 0).",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:8208,Testability,Test,TestBits,8208," = """", Option_t* option = """") const; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSaveSelf(Bool_t force = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetBufferSize(Int_t bufsize); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetModified(); virtual voidTDirectory::SetMother(TObject* mother); virtual voidTDirectory::SetName(const char* newname); virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetSeekDir(Long64_t v); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTRefAction(TObject* ref, TObject* parent); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetWritable(Bool_t writable = kTRUE); virtual voidShowMembers(TMemberInspector&); virtual Int_tSizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tWrite(const char* name = 0, Int_t opt = 0, Int_t bufsize = 0); virtual Int_tWrite(const char* name = 0, Int_t opt = 0, Int_t bufsize = 0) const; virtual voidWriteDirHeader(); virtual voidWriteKeys(); Int_tTDirectory::WriteObject(const void* obj, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual Int_tWriteObjectAny(const void* obj, const char* classname, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual Int_tWriteObjectAny(const void* obj, const TClass* cl, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual Int_tWriteTObject(const TObject* obj, const char* name = 0, Option_t* option = """", Int_t bufsize = 0).",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDirectoryFile.html:1473,Usability,Clear,Clear,1473," TDirectoryFile(); TDirectoryFile(const char* name, const char* title, Option_t* option = """", TDirectory* motherDir = 0); virtual~TDirectoryFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* obj, Bool_t replace = kFALSE); static voidTDirectory::AddDirectory(Bool_t add = kTRUE); static Bool_tTDirectory::AddDirectoryStatus(); virtual voidAppend(TObject* obj, Bool_t replace = kFALSE); virtual Int_tAppendKey(TKey* key); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); virtual voidBuild(TFile* motherFile = 0, TDirectory* motherDir = 0); virtual Bool_tcd(const char* path = 0); static Bool_tTDirectory::Cd(const char* path); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTDirectory::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TObject*CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static TDirectory*&TDirectory::CurrentDirectory(); static voidTDirectory::DecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); virtual voidDelete(const char* namecycle = """"); virtual voidT",MatchSource.WIKI,root/html534/TDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html
https://root.cern/root/html534/TDNDData.html:1216,Availability,Error,Error,1216," TDNDData(Atom_t dt = kNone, void* d = 0, Int_t len = 0, Atom_t act = kNone); virtual~TDNDData(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Opti",MatchSource.WIKI,root/html534/TDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDNDData.html
https://root.cern/root/html534/TDNDData.html:1345,Availability,error,error,1345,"m_t dt = kNone, void* d = 0, Int_t len = 0, Atom_t act = kNone); virtual~TDNDData(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) con",MatchSource.WIKI,root/html534/TDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDNDData.html
https://root.cern/root/html534/TDNDData.html:1429,Availability,error,error,1429," voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject",MatchSource.WIKI,root/html534/TDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDNDData.html
https://root.cern/root/html534/TDNDData.html:2309,Modifiability,Inherit,InheritsFrom,2309,"d, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root/html534/TDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDNDData.html
https://root.cern/root/html534/TDNDData.html:2375,Modifiability,Inherit,InheritsFrom,2375,"cute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pa",MatchSource.WIKI,root/html534/TDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDNDData.html
https://root.cern/root/html534/TDNDData.html:5292,Modifiability,Inherit,Inheritance,5292,"l_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TDNDData(const TDNDData&); TDNDData&operator=(const TDNDData&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Atom_tfActionAction description; void*fDataActual data; Int_tfDataLengthLength of data; Atom_tfDataTypeData type description. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDNDData(const TDNDData& ). TDNDData& operator=(const TDNDData& ). TDNDData(Atom_t dt = kNone, void* d = 0, Int_t len = 0, Atom_t act = kNone); {}. ~TDNDData(); {}. » Author: Bertrand Bellenot 19/04/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDNDData.html
https://root.cern/root/html534/TDNDData.html:5305,Modifiability,Inherit,Inherited,5305,"l_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TDNDData(const TDNDData&); TDNDData&operator=(const TDNDData&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Atom_tfActionAction description; void*fDataActual data; Int_tfDataLengthLength of data; Atom_tfDataTypeData type description. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDNDData(const TDNDData& ). TDNDData& operator=(const TDNDData& ). TDNDData(Atom_t dt = kNone, void* d = 0, Int_t len = 0, Atom_t act = kNone); {}. ~TDNDData(); {}. » Author: Bertrand Bellenot 19/04/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDNDData.html
https://root.cern/root/html534/TDNDData.html:2199,Security,Hash,Hash,2199,"l voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root/html534/TDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDNDData.html
https://root.cern/root/html534/TDNDData.html:4293,Testability,Test,TestBit,4293,"ual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDNDData.html
https://root.cern/root/html534/TDNDData.html:4332,Testability,Test,TestBits,4332,"ual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDNDData.html
https://root.cern/root/html534/TDNDData.html:676,Usability,Clear,Clear,676," TDNDData(Atom_t dt = kNone, void* d = 0, Int_t len = 0, Atom_t act = kNone); virtual~TDNDData(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Opti",MatchSource.WIKI,root/html534/TDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDNDData.html
https://root.cern/root/html534/TDocDirective.html:1320,Availability,avail,available,1320,"umentation (through TDocParser), it checks for special; words (""begin_something"", ""end_something"", where the begin and end are the; significant part). THtml then searches for a TDocDirective which can handle; these tags (""whatever"" in the example), passes the text enclosed by these; tags to the directive, which in turn processes it. That way, HTML, latex, and C++ macros can be processed by THtml, e.g. to; generate plain HTML or GIF pictures. The classes reposinsible for parsing; that are TDocHtmlDirective, TDocLatexDirective, and TDocMacroDirective,; respecively. Directives can have optional parameters; these are passed as paranthesis; enclosed, comma delimited name=value pairs; see SetParameters(). You can implement your own directive simply by deriving from TDocDirective;; the tag corresponds to TDocDirective's name (e.g. ""HTML"" for ""begin_html""; ""end_html""). Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* m",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:2218,Availability,Error,Error,2218," voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual v",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:2347,Availability,error,error,2347," voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual v",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:2431,Availability,error,error,2431," TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; ",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:3391,Modifiability,Inherit,InheritsFrom,3391,"method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:3457,Modifiability,Inherit,InheritsFrom,3457,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocDirective&operator=(c",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:7218,Modifiability,Inherit,Inheritance,7218,"tput() const; TDocParser*GetDocParser() const; THtml*GetHtml() const; virtual const char*GetName() const; voidGetName(TString& name) const; const char*GetOutputDir() const; voidTObject::MakeZombie(); voidSetCounter(Int_t count); voidSetParameters(const char* params); voidSetParser(TDocParser* parser); voidSetTag(const char* tag). private:. (unknown)(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfCountercounter to generate unique names, -1 to ignore; TDocOutput*fDocOutputparser invoking this handler; TDocParser*fDocParserparser invoking this handler; THtml*fHtmlparser's THtml object; TStringTNamed::fNameobject identifier; TStringfParametersparameters to the directive; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void DeleteOutputFiles(const char* ext) const; Delete all output generated by the directive beginning; with Name() and ending with ext. void GetName(TString& name) const; Get the full name, based on fName, fTitle, fDocParser's tag. const char* GetOutputDir() const; Get the directory for documentation output. void SetParameters(const char* params); Given a string containing parameters in params,; we call AddParameter() for each of them.; This function splits the parameter names and; extracts their values if they are given.; Parameters are separated by "","", values are; separated from parameter names by ""="".; params being; a = ""a, b, c"", b='d,e'; will issue two calls to AddParameter(), one for; a with value ""a, b, c"" and one for b with value; ""d,e"" (each without the quotation marks). void SetParser(TDocParser* parser); Set the parser, and fDocOutput, fHtml from that. void AddParameter(const TString& , const char* = 0); {}. const char* Get",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:7231,Modifiability,Inherit,Inherited,7231,"tput() const; TDocParser*GetDocParser() const; THtml*GetHtml() const; virtual const char*GetName() const; voidGetName(TString& name) const; const char*GetOutputDir() const; voidTObject::MakeZombie(); voidSetCounter(Int_t count); voidSetParameters(const char* params); voidSetParser(TDocParser* parser); voidSetTag(const char* tag). private:. (unknown)(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfCountercounter to generate unique names, -1 to ignore; TDocOutput*fDocOutputparser invoking this handler; TDocParser*fDocParserparser invoking this handler; THtml*fHtmlparser's THtml object; TStringTNamed::fNameobject identifier; TStringfParametersparameters to the directive; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void DeleteOutputFiles(const char* ext) const; Delete all output generated by the directive beginning; with Name() and ending with ext. void GetName(TString& name) const; Get the full name, based on fName, fTitle, fDocParser's tag. const char* GetOutputDir() const; Get the directory for documentation output. void SetParameters(const char* params); Given a string containing parameters in params,; we call AddParameter() for each of them.; This function splits the parameter names and; extracts their values if they are given.; Parameters are separated by "","", values are; separated from parameter names by ""="".; params being; a = ""a, b, c"", b='d,e'; will issue two calls to AddParameter(), one for; a with value ""a, b, c"" and one for b with value; ""d,e"" (each without the quotation marks). void SetParser(TDocParser* parser); Set the parser, and fDocOutput, fHtml from that. void AddParameter(const TString& , const char* = 0); {}. const char* Get",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:3281,Security,Hash,Hash,3281,"TObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:5638,Testability,Test,TestBit,5638,"OfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocDirective&operator=(const TDocDirective&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:5677,Testability,Test,TestBits,5677,"OfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocDirective&operator=(const TDocDirective&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:1058,Usability,simpl,simply,1058,". Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HTML; » TDocDirective. class TDocDirective: public TNamed. When THtml parses documentation (through TDocParser), it checks for special; words (""begin_something"", ""end_something"", where the begin and end are the; significant part). THtml then searches for a TDocDirective which can handle; these tags (""whatever"" in the example), passes the text enclosed by these; tags to the directive, which in turn processes it. That way, HTML, latex, and C++ macros can be processed by THtml, e.g. to; generate plain HTML or GIF pictures. The classes reposinsible for parsing; that are TDocHtmlDirective, TDocLatexDirective, and TDocMacroDirective,; respecively. Directives can have optional parameters; these are passed as paranthesis; enclosed, comma delimited name=value pairs; see SetParameters(). You can implement your own directive simply by deriving from TDocDirective;; the tag corresponds to TDocDirective's name (e.g. ""HTML"" for ""begin_html""; ""end_html""). Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMEN",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocDirective.html:1641,Usability,Clear,Clear,1641," voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual v",MatchSource.WIKI,root/html534/TDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:1463,Availability,Error,Error,1463," TDocHtmlDirective(); TDocHtmlDirective(const TDocHtmlDirective&); virtual~TDocHtmlDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTDocDirective::DeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; ",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:1592,Availability,error,error,1592,"::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTDocDirective::DeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const cha",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:1676,Availability,error,error,1676,"ne); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTDocDirective::DeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; ",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:2636,Modifiability,Inherit,InheritsFrom,2636,"method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:2702,Modifiability,Inherit,InheritsFrom,2702,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocHtmlDirective&operato",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:6801,Modifiability,Inherit,Inheritance,6801,"tive::GetDocOutput() const; TDocParser*TDocDirective::GetDocParser() const; THtml*TDocDirective::GetHtml() const; virtual const char*TDocDirective::GetName() const; voidTDocDirective::GetName(TString& name) const; const char*TDocDirective::GetOutputDir() const; voidTObject::MakeZombie(); voidTDocDirective::SetCounter(Int_t count); voidTDocDirective::SetParameters(const char* params); voidTDocDirective::SetParser(TDocParser* parser); voidTDocDirective::SetTag(const char* tag). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDocDirective::fCountercounter to generate unique names, -1 to ignore; TDocOutput*TDocDirective::fDocOutputparser invoking this handler; TDocParser*TDocDirective::fDocParserparser invoking this handler; THtml*TDocDirective::fHtmlparser's THtml object; TStringTNamed::fNameobject identifier; TStringTDocDirective::fParametersparameters to the directive; TStringTNamed::fTitleobject title. private:. TStringfTextHTML text to be kept; Bool_tfVerbatimwhether we are in a <pre></pre> block. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddLine(const TSubString& line); Add a line of HTML. Bool_t GetResult(TString& result); Set result to the HTML code that was passed in via AddLine().; Prepend a closing </pre>, append an opening <pre>. const char* GetEndTag() const; get the tag ending this directive. TDocHtmlDirective(); {}. virtual ~TDocHtmlDirective(); {}. » Author: Axel Naumann 2007-01-25 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:6814,Modifiability,Inherit,Inherited,6814,"tive::GetDocOutput() const; TDocParser*TDocDirective::GetDocParser() const; THtml*TDocDirective::GetHtml() const; virtual const char*TDocDirective::GetName() const; voidTDocDirective::GetName(TString& name) const; const char*TDocDirective::GetOutputDir() const; voidTObject::MakeZombie(); voidTDocDirective::SetCounter(Int_t count); voidTDocDirective::SetParameters(const char* params); voidTDocDirective::SetParser(TDocParser* parser); voidTDocDirective::SetTag(const char* tag). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDocDirective::fCountercounter to generate unique names, -1 to ignore; TDocOutput*TDocDirective::fDocOutputparser invoking this handler; TDocParser*TDocDirective::fDocParserparser invoking this handler; THtml*TDocDirective::fHtmlparser's THtml object; TStringTNamed::fNameobject identifier; TStringTDocDirective::fParametersparameters to the directive; TStringTNamed::fTitleobject title. private:. TStringfTextHTML text to be kept; Bool_tfVerbatimwhether we are in a <pre></pre> block. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddLine(const TSubString& line); Add a line of HTML. Bool_t GetResult(TString& result); Set result to the HTML code that was passed in via AddLine().; Prepend a closing </pre>, append an opening <pre>. const char* GetEndTag() const; get the tag ending this directive. TDocHtmlDirective(); {}. virtual ~TDocHtmlDirective(); {}. » Author: Axel Naumann 2007-01-25 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:2526,Security,Hash,Hash,2526,"TObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:4891,Testability,Test,TestBit,4891,"const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocHtmlDirective&operator=(const TDocHtmlDirective&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:4930,Testability,Test,TestBits,4930,"const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocHtmlDirective&operator=(const TDocHtmlDirective&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:379,Usability,simpl,simply,379,". TDocHtmlDirective. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HTML; » TDocHtmlDirective. class TDocHtmlDirective: public TDocDirective. Process a ""begin_html"" / ""end_html"" block. Stop linking keywords and simply; copy the text enclosed by the directive to the output HTML file. Function Members (Methods); public:. TDocHtmlDirective(); TDocHtmlDirective(const TDocHtmlDirective&); virtual~TDocHtmlDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTDocDirective::DeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; ",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocHtmlDirective.html:871,Usability,Clear,Clear,871," TDocHtmlDirective(); TDocHtmlDirective(const TDocHtmlDirective&); virtual~TDocHtmlDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTDocDirective::DeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; ",MatchSource.WIKI,root/html534/TDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html
https://root.cern/root/html534/TDocLatexDirective.html:2033,Availability,Error,Error,2033," TDocLatexDirective(); TDocLatexDirective(const TDocLatexDirective&); virtual~TDocLatexDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() c",MatchSource.WIKI,root/html534/TDocLatexDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocLatexDirective.html
https://root.cern/root/html534/TDocLatexDirective.html:2162,Availability,error,error,2162,"(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetAlignment() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; Int_tGetFontSize() const; virtual const char*TObject::GetIconName() const; TList*GetListOfLines() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); const char*GetSeparator() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject",MatchSource.WIKI,root/html534/TDocLatexDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocLatexDirective.html
https://root.cern/root/html534/TDocLatexDirective.html:2246,Availability,error,error,2246," TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetAlignment() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; Int_tGetFontSize() const; virtual const char*TObject::GetIconName() const; TList*GetListOfLines() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); const char*GetSeparator() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObje",MatchSource.WIKI,root/html534/TDocLatexDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocLatexDirective.html
https://root.cern/root/html534/TDocLatexDirective.html:3328,Modifiability,Inherit,InheritsFrom,3328,"voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetAlignment() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; Int_tGetFontSize() const; virtual const char*TObject::GetIconName() const; TList*GetListOfLines() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); const char*GetSeparator() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root/html534/TDocLatexDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocLatexDirective.html
https://root.cern/root/html534/TDocLatexDirective.html:3394,Modifiability,Inherit,InheritsFrom,3394,"virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetAlignment() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; Int_tGetFontSize() const; virtual const char*TObject::GetIconName() const; TList*GetListOfLines() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); const char*GetSeparator() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocLatexDirective&operat",MatchSource.WIKI,root/html534/TDocLatexDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocLatexDirective.html
https://root.cern/root/html534/TDocLatexDirective.html:7915,Modifiability,Inherit,Inheritance,7915,"Cleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfAlignmentcolumn alignment: 'l' for justify left, 'c' for center, 'r' for right; TVirtualPad*fBBCanvascanvas for bounding box determination; Int_tTDocDirective::fCountercounter to generate unique names, -1 to ignore; TDocOutput*TDocDirective::fDocOutputparser invoking this handler; TDocParser*TDocDirective::fDocParserparser invoking this handler; Int_tfFontSizefontsize for current latex block, in pixels; THtml*TDocDirective::fHtmlparser's THtml object; TMacro*fLatexcollection of lines; TStringTNamed::fNameobject identifier; TStringTDocDirective::fParametersparameters to the directive; Bool_tfSepIsRegexpwhether fSeparator is a regexp expression; TStringfSeparatorcolumn separator, often ""=""; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TDocLatexDirective(); Destructor. void AddLine(const TSubString& line); Add a latex line. void CreateLatex(const char* filename); Create a gif file named filename from a latex expression in fLatex.; Called when ""Begin_Latex""/""End_Latex"" is processed. void GetBoundingBox(TLatex& latex, const char* text, Float_t& width, Float_t& height); Determines the bounding box for text as height and width.; Assumes that we are in batch mode. TList* GetListOfLines() const; Get the list of lines as TObjStrings. Bool_t GetResult(TString& result); convert fLatex to a gif by creating a TLatex, drawing it on a; temporary canvas, and saving that to a filename in the output; directory. void AddParameter(const TString& name, const char* value = 0); Parse fParameters, setting fFontSize, fAlignment, and fSeparator. const char* GetEndTag() const; get the tag ending this directive. void DeleteOutput() const; Delete output for the parser's current class or modul",MatchSource.WIKI,root/html534/TDocLatexDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocLatexDirective.html
https://root.cern/root/html534/TDocLatexDirective.html:7928,Modifiability,Inherit,Inherited,7928,"Cleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfAlignmentcolumn alignment: 'l' for justify left, 'c' for center, 'r' for right; TVirtualPad*fBBCanvascanvas for bounding box determination; Int_tTDocDirective::fCountercounter to generate unique names, -1 to ignore; TDocOutput*TDocDirective::fDocOutputparser invoking this handler; TDocParser*TDocDirective::fDocParserparser invoking this handler; Int_tfFontSizefontsize for current latex block, in pixels; THtml*TDocDirective::fHtmlparser's THtml object; TMacro*fLatexcollection of lines; TStringTNamed::fNameobject identifier; TStringTDocDirective::fParametersparameters to the directive; Bool_tfSepIsRegexpwhether fSeparator is a regexp expression; TStringfSeparatorcolumn separator, often ""=""; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TDocLatexDirective(); Destructor. void AddLine(const TSubString& line); Add a latex line. void CreateLatex(const char* filename); Create a gif file named filename from a latex expression in fLatex.; Called when ""Begin_Latex""/""End_Latex"" is processed. void GetBoundingBox(TLatex& latex, const char* text, Float_t& width, Float_t& height); Determines the bounding box for text as height and width.; Assumes that we are in batch mode. TList* GetListOfLines() const; Get the list of lines as TObjStrings. Bool_t GetResult(TString& result); convert fLatex to a gif by creating a TLatex, drawing it on a; temporary canvas, and saving that to a filename in the output; directory. void AddParameter(const TString& name, const char* value = 0); Parse fParameters, setting fFontSize, fAlignment, and fSeparator. const char* GetEndTag() const; get the tag ending this directive. void DeleteOutput() const; Delete output for the parser's current class or modul",MatchSource.WIKI,root/html534/TDocLatexDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocLatexDirective.html
https://root.cern/root/html534/TDocLatexDirective.html:3218,Security,Hash,Hash,3218,"TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetAlignment() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; Int_tGetFontSize() const; virtual const char*TObject::GetIconName() const; TList*GetListOfLines() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); const char*GetSeparator() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root/html534/TDocLatexDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocLatexDirective.html
https://root.cern/root/html534/TDocLatexDirective.html:5618,Testability,Test,TestBit,5618," static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocLatexDirective&operator=(const TDocLatexDirective&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); Bool_tSeparatorIsRegexp() const; voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDocLatexDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocLatexDirective.html
https://root.cern/root/html534/TDocLatexDirective.html:5657,Testability,Test,TestBits,5657," static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocLatexDirective&operator=(const TDocLatexDirective&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); Bool_tSeparatorIsRegexp() const; voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDocLatexDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocLatexDirective.html
https://root.cern/root/html534/TDocLatexDirective.html:1456,Usability,Clear,Clear,1456," TDocLatexDirective(); TDocLatexDirective(const TDocLatexDirective&); virtual~TDocLatexDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() c",MatchSource.WIKI,root/html534/TDocLatexDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocLatexDirective.html
https://root.cern/root/html534/TDocMacroDirective.html:1882,Availability,Error,Error,1882," TDocMacroDirective(); TDocMacroDirective(const TDocMacroDirective&); virtual~TDocMacroDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* param",MatchSource.WIKI,root/html534/TDocMacroDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocMacroDirective.html
https://root.cern/root/html534/TDocMacroDirective.html:2011,Availability,error,error,2011,"(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const cha",MatchSource.WIKI,root/html534/TDocMacroDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocMacroDirective.html
https://root.cern/root/html534/TDocMacroDirective.html:2095,Availability,error,error,2095," TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; ",MatchSource.WIKI,root/html534/TDocMacroDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocMacroDirective.html
https://root.cern/root/html534/TDocMacroDirective.html:3055,Modifiability,Inherit,InheritsFrom,3055,"method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root/html534/TDocMacroDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocMacroDirective.html
https://root.cern/root/html534/TDocMacroDirective.html:3121,Modifiability,Inherit,InheritsFrom,3121,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocMacroDirective&operat",MatchSource.WIKI,root/html534/TDocMacroDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocMacroDirective.html
https://root.cern/root/html534/TDocMacroDirective.html:7361,Modifiability,Inherit,Inheritance,7361,"ter(const TString& name, const char* value = 0). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDocDirective::fCountercounter to generate unique names, -1 to ignore; TDocOutput*TDocDirective::fDocOutputparser invoking this handler; TDocParser*TDocDirective::fDocParserparser invoking this handler; THtml*TDocDirective::fHtmlparser's THtml object; TStringTNamed::fNameobject identifier; TStringTDocDirective::fParametersparameters to the directive; TStringTNamed::fTitleobject title. private:. Bool_tfIsFilenamewhether the directive is a failename to be executed; TMacro*fMacromacro to be executed; Bool_tfNeedGraphicsif set, we cannot switch to batch mode; Bool_tfShowSourcewhether a source tab should be created. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TDocMacroDirective(); Destructor. void AddLine(const TSubString& line); Add a macro line.; Lines ending on ""*HIDE*"" will be executed as part of the; macro, but not shown in the source tab if the parameter; source is supplied. Bool_t GetResult(TString& result); Get the result (i.e. an HTML img tag) for the macro invocation.; If fShowSource is set, a second tab will be created which shows; the source. void AddParameter(const TString& name, const char* value = 0); Setting fNeedGraphics if name is ""GUI"",; setting fShowSource if name is ""SOURCE"". const char* GetEndTag() const; get the tag ending this directive. void DeleteOutput() const; Delete output for the parser's current class or module. {}. TDocMacroDirective(); {}. » Author: Axel Naumann 2007-01-25 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or",MatchSource.WIKI,root/html534/TDocMacroDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocMacroDirective.html
https://root.cern/root/html534/TDocMacroDirective.html:7374,Modifiability,Inherit,Inherited,7374,"ter(const TString& name, const char* value = 0). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDocDirective::fCountercounter to generate unique names, -1 to ignore; TDocOutput*TDocDirective::fDocOutputparser invoking this handler; TDocParser*TDocDirective::fDocParserparser invoking this handler; THtml*TDocDirective::fHtmlparser's THtml object; TStringTNamed::fNameobject identifier; TStringTDocDirective::fParametersparameters to the directive; TStringTNamed::fTitleobject title. private:. Bool_tfIsFilenamewhether the directive is a failename to be executed; TMacro*fMacromacro to be executed; Bool_tfNeedGraphicsif set, we cannot switch to batch mode; Bool_tfShowSourcewhether a source tab should be created. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TDocMacroDirective(); Destructor. void AddLine(const TSubString& line); Add a macro line.; Lines ending on ""*HIDE*"" will be executed as part of the; macro, but not shown in the source tab if the parameter; source is supplied. Bool_t GetResult(TString& result); Get the result (i.e. an HTML img tag) for the macro invocation.; If fShowSource is set, a second tab will be created which shows; the source. void AddParameter(const TString& name, const char* value = 0); Setting fNeedGraphics if name is ""GUI"",; setting fShowSource if name is ""SOURCE"". const char* GetEndTag() const; get the tag ending this directive. void DeleteOutput() const; Delete output for the parser's current class or module. {}. TDocMacroDirective(); {}. » Author: Axel Naumann 2007-01-25 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or",MatchSource.WIKI,root/html534/TDocMacroDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocMacroDirective.html
https://root.cern/root/html534/TDocMacroDirective.html:2945,Security,Hash,Hash,2945,"TObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root/html534/TDocMacroDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocMacroDirective.html
https://root.cern/root/html534/TDocMacroDirective.html:5312,Testability,Test,TestBit,5312,"nst char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocMacroDirective&operator=(const TDocMacroDirective&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDocMacroDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocMacroDirective.html
https://root.cern/root/html534/TDocMacroDirective.html:5351,Testability,Test,TestBits,5351,"nst char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocMacroDirective&operator=(const TDocMacroDirective&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDocMacroDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocMacroDirective.html
https://root.cern/root/html534/TDocMacroDirective.html:1305,Usability,Clear,Clear,1305," TDocMacroDirective(); TDocMacroDirective(const TDocMacroDirective&); virtual~TDocMacroDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* param",MatchSource.WIKI,root/html534/TDocMacroDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocMacroDirective.html
https://root.cern/root/html534/TDocOutput.html:815,Availability,avail,available,815,". TDocOutput. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HTML; » TDocOutput. class TDocOutput: public TObject. THtml generated documentation is written to file by TDocOutput. So far only; output of HTML is implemented. Customization of the output should be done; with THtml's interfaces - TDocOutput should not be used nor re-implemented; directly. TDocOutput generates the index tables:; * classes (THtml invokes TClassDocOutput for each),; * inheritance hierarchy,; * types and typedefs,; * libraries,; * the product index, and; * the module index (including the links to per-module documentation).; It invokes AT&T's GraphViz tool (dot) if available; charts benefit a lot; from it. TDocOutput also writes all pages' header and footer, which can be customized; by calling THtml::SetHeader(), THtml::SetFooter(). Function Members (Methods); public:. TDocOutput(THtml& html); TDocOutput(const TDocOutput&); virtual~TDocOutput(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdjustSourcePath(TString& line, const char* relpath = ""../""); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; voidConvert(istream& in, const char* infilename, const char* outfilename, const char* title, const char* relpath = ""../"", Int_t includeOutput = 0, const char* context = """", TGClient* gclient = 0); virtual voidTObject::Copy(TObject& object) const; Bool_tCopyHtmlFile(const char* sourceName, const char* destName = """"); virtual voidCreateClassIndex(); virtual voidCreateClassTypeDefs(); virtual voidCreateHierarchy(); virtual voidCreateModul",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:2604,Availability,Error,Error,2604,"/"", Int_t includeOutput = 0, const char* context = """", TGClient* gclient = 0); virtual voidTObject::Copy(TObject& object) const; Bool_tCopyHtmlFile(const char* sourceName, const char* destName = """"); virtual voidCreateClassIndex(); virtual voidCreateClassTypeDefs(); virtual voidCreateHierarchy(); virtual voidCreateModul",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:2733,Availability,error,error,2733,"GClient* gclient = 0); virtual voidTObject::Copy(TObject& object) const; Bool_tCopyHtmlFile(const char* sourceName, const char* destName = """"); virtual voidCreateClassIndex(); virtual voidCreateClassTypeDefs(); virtual voidCreateHierarchy(); virtual voidCreateModuleIndex(); virtual voidCreateProductIndex(); virtual voidCreateTypeIndex(); virtual voidDecorateEntityBegin(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); virtual voidDecorateEntityEnd(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFixupAuthorSourceInfo(TString& authors); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetExtension() const; THtml*GetHtml(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const ",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:2817,Availability,error,error,2817,"tmlFile(const char* sourceName, const char* destName = """"); virtual voidCreateClassIndex(); virtual voidCreateClassTypeDefs(); virtual voidCreateHierarchy(); virtual voidCreateModuleIndex(); virtual voidCreateProductIndex(); virtual voidCreateTypeIndex(); virtual voidDecorateEntityBegin(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); virtual voidDecorateEntityEnd(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFixupAuthorSourceInfo(TString& authors); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetExtension() const; THtml*GetHtml(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const c",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:8983,Deployability,Update,Update,8983,", TModuleDocInfo* module, const char* classname = 0); voidWriteModuleLinks(ostream& out); voidWriteModuleLinks(ostream& out, TModuleDocInfo* super); virtual voidWriteSearch(ostream& out); voidWriteTopLinks(ostream& out, TModuleDocInfo* module, const char* classname = 0, Bool_t withLocation = kTRUE). Data Members; public:. enum EGraphvizTool { kDot; kNeato; kFdp; kCirco; };; enum EFileType { kSource; kInclude; kTree; kDoc; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. THtml*fHtmlTHtml object we belong to. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDocOutput(THtml& html); {}. ~TDocOutput(); {}. void AddLink(TSubString& str, TString& link, const char* comment); Add a link around str, with title comment.; Update str so it surrounds the link. void AdjustSourcePath(TString& line, const char* relpath = ""../""); adjust the path of links for source files, which are in src/, but need; to point to relpath (usually ""../""). Simply replaces ""=\""./"" by ""=\""../"". void Convert(istream& in, const char* infilename, const char* outfilename, const char* title, const char* relpath = ""../"", Int_t includeOutput = 0, const char* context = """", TGClient* gclient = 0); Convert a text file into a html file.; outfilename doesn't have an extension yet; up to us to decide.; We generate HTML, so our extension is "".html"".; See THtml::Convert() for the other parameters. Bool_t CopyHtmlFile(const char* sourceName, const char* destName = """"); Copy file to HTML directory. Input: sourceName - source file name (fully qualified i.e. file system path); destName - optional destination name, if not; specified it would be the same; as the source file name. Output: TRUE if file is successfully copied, or; FALSE if it's not. NOTE: The destination",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:11191,Deployability,update,updated,11191,"Mixing classes are displayed several times. void CreateClassIndex(); Create index of all classes. void CreateModuleIndex(); Create the class index for each module, picking up documentation from the; module's TModuleDocInfo::GetInputPath() plus the (possibly relative); THtml::GetModuleDocPath(). Also creates the library dependency plot if dot; exists, see THtml::HaveDot(). void CreateProductIndex(); Fetch documentation from THtml::GetProductDocDir() and put it into the; product index page. void CreateClassTypeDefs(); Create a forwarding page for each typedef pointing to a class. void CreateTypeIndex(); Create index of all data types. void DecorateEntityBegin(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); Add some colors etc to a source entity, contained in str.; The type of what's contained in str is given by type.; It's called e.g. by TDocParser::BeautifyLine().; This function should assume that only str.Begin() is valid.; When inserting into str.String(), str.Begin() must be updated. void DecorateEntityEnd(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); Add some colors etc to a source entity, contained in str.; The type of what's contained in str is given by type.; It's called e.g. by TDocParser::BeautifyLine().; This function should assume that only str.""End()""; (i.e. str.Begin()+str.Length()) is valid.; When inserting into str.String(), str.Length() must be updated. void FixupAuthorSourceInfo(TString& authors); Special author treatment; called when TDocParser::fSourceInfo[kInfoAuthor] is set.; Modifies the author(s) description, which is a comma separated list of tokens; either in the format; (i) ""FirstName LastName "" or; (ii) ""FirstName LastName <link> more stuff""; The first one generates an XWho link (CERN compatible),; the second a http link (WORLD compatible), <link> being e.g.; <mailto:user@host.bla> or <http://www.host.bla/page>. Bool_t IsModified(TClass* classPtr, TDocOutput::EFileType type); Check if file is modified. Input: class",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:11595,Deployability,update,updated,11595,"etch documentation from THtml::GetProductDocDir() and put it into the; product index page. void CreateClassTypeDefs(); Create a forwarding page for each typedef pointing to a class. void CreateTypeIndex(); Create index of all data types. void DecorateEntityBegin(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); Add some colors etc to a source entity, contained in str.; The type of what's contained in str is given by type.; It's called e.g. by TDocParser::BeautifyLine().; This function should assume that only str.Begin() is valid.; When inserting into str.String(), str.Begin() must be updated. void DecorateEntityEnd(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); Add some colors etc to a source entity, contained in str.; The type of what's contained in str is given by type.; It's called e.g. by TDocParser::BeautifyLine().; This function should assume that only str.""End()""; (i.e. str.Begin()+str.Length()) is valid.; When inserting into str.String(), str.Length() must be updated. void FixupAuthorSourceInfo(TString& authors); Special author treatment; called when TDocParser::fSourceInfo[kInfoAuthor] is set.; Modifies the author(s) description, which is a comma separated list of tokens; either in the format; (i) ""FirstName LastName "" or; (ii) ""FirstName LastName <link> more stuff""; The first one generates an XWho link (CERN compatible),; the second a http link (WORLD compatible), <link> being e.g.; <mailto:user@host.bla> or <http://www.host.bla/page>. Bool_t IsModified(TClass* classPtr, TDocOutput::EFileType type); Check if file is modified. Input: classPtr - pointer to the class; type - file type to compare with; values: kSource, kInclude, kTree. Output: TRUE - if file is modified since last time; FALSE - if file is up to date. void NameSpace2FileName(TString& name); Replace ""::"" in name by ""__""; Replace ""<"", "">"", "" "", "","", ""~"", ""="" in name by ""_""; Replace ""A::X<A::Y>"" by ""A::X<-p0Y>"",; ""A::B::X<A::B::Y>"" by ""A::B::X<-p1Y>"", etc. void ProcessDocInDi",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:18213,Deployability,update,update,18213," user; provided header file will be replaced by the value of this method's; parameter ""title"" before written to the output file. %CLASS% is replaced by; the class name, %INCFILE% by the header file name as given by; TClass::GetDeclFileName() and %SRCFILE% by the source file name as given by; TClass::GetImplFileName(). If the header is written for a non-class page,; i.e. cls==0, lines containing %CLASS%, %INCFILE%, or %SRCFILE% will be; skipped. void WriteHtmlFooter(ostream& out, const char* dir, const char* lastUpdate, const char* author, const char* copyright, const char* footer); Write HTML footer. Internal method invoked by the overload. void WriteHtmlFooter(ostream& out, const char* dir = """", const char* lastUpdate = """", const char* author = """", const char* copyright = """"); Write HTML footer. Input: out - output file stream; dir - usually equal to """" or ""../"", depends of; current file directory position, i.e. if; file is in the fHtml->GetOutputDir(), then dir will be """"; lastUpdate - last update string; author - author's name; copyright - copyright note. Allows optional user provided footer to be written. Root.Html.Footer holds; the file name for this footer. For details see THtml::WriteHtmlHeader (here,; the ""+"" means the user's footer is written in front of Root's!) Occurences; of %AUTHOR%, %CHANGED%, %GENERATED%, and %COPYRIGHT% in the user's file are replaced by; their corresponding values (author, lastUpdate, today, and copyright) before; written to out.; If no author is set (author == """", e.g. for ClassIndex.html"") skip the whole; line of the footer template containing %AUTHOR%. Accordingly for %COPYRIGHT%. void WriteModuleLinks(ostream& out); Create a div containing links to all topmost modules. void WriteLineNumbers(ostream& out, Long_t nLines, const TString& infileBase) const; Create a div containing the line numbers (for a source listing) 1 to nLines.; Create links to the source file's line number and anchors, such that one can; jump to SourceFile.cxx.",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:448,Integrability,interface,interfaces,448,". TDocOutput. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HTML; » TDocOutput. class TDocOutput: public TObject. THtml generated documentation is written to file by TDocOutput. So far only; output of HTML is implemented. Customization of the output should be done; with THtml's interfaces - TDocOutput should not be used nor re-implemented; directly. TDocOutput generates the index tables:; * classes (THtml invokes TClassDocOutput for each),; * inheritance hierarchy,; * types and typedefs,; * libraries,; * the product index, and; * the module index (including the links to per-module documentation).; It invokes AT&T's GraphViz tool (dot) if available; charts benefit a lot; from it. TDocOutput also writes all pages' header and footer, which can be customized; by calling THtml::SetHeader(), THtml::SetFooter(). Function Members (Methods); public:. TDocOutput(THtml& html); TDocOutput(const TDocOutput&); virtual~TDocOutput(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdjustSourcePath(TString& line, const char* relpath = ""../""); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; voidConvert(istream& in, const char* infilename, const char* outfilename, const char* title, const char* relpath = ""../"", Int_t includeOutput = 0, const char* context = """", TGClient* gclient = 0); virtual voidTObject::Copy(TObject& object) const; Bool_tCopyHtmlFile(const char* sourceName, const char* destName = """"); virtual voidCreateClassIndex(); virtual voidCreateClassTypeDefs(); virtual voidCreateHierarchy(); virtual voidCreateModul",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:10508,Integrability,depend,dependency,10508," to decide.; We generate HTML, so our extension is "".html"".; See THtml::Convert() for the other parameters. Bool_t CopyHtmlFile(const char* sourceName, const char* destName = """"); Copy file to HTML directory. Input: sourceName - source file name (fully qualified i.e. file system path); destName - optional destination name, if not; specified it would be the same; as the source file name. Output: TRUE if file is successfully copied, or; FALSE if it's not. NOTE: The destination directory is always fHtml->GetOutputDir(). void CreateHierarchy(); Create a hierarchical class list; The algorithm descends from the base classes and branches into; all derived classes. Mixing classes are displayed several times. void CreateClassIndex(); Create index of all classes. void CreateModuleIndex(); Create the class index for each module, picking up documentation from the; module's TModuleDocInfo::GetInputPath() plus the (possibly relative); THtml::GetModuleDocPath(). Also creates the library dependency plot if dot; exists, see THtml::HaveDot(). void CreateProductIndex(); Fetch documentation from THtml::GetProductDocDir() and put it into the; product index page. void CreateClassTypeDefs(); Create a forwarding page for each typedef pointing to a class. void CreateTypeIndex(); Create index of all data types. void DecorateEntityBegin(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); Add some colors etc to a source entity, contained in str.; The type of what's contained in str is given by type.; It's called e.g. by TDocParser::BeautifyLine().; This function should assume that only str.Begin() is valid.; When inserting into str.String(), str.Begin() must be updated. void DecorateEntityEnd(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); Add some colors etc to a source entity, contained in str.; The type of what's contained in str is given by type.; It's called e.g. by TDocParser::BeautifyLine().; This function should assume that only str.""End()""; (i.e. str.Begin()+str.Len",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:18082,Integrability,depend,depends,18082,"stead; of the standard header (USER). Any occurrence of ""%TITLE%"" (without the quotation marks) in the user; provided header file will be replaced by the value of this method's; parameter ""title"" before written to the output file. %CLASS% is replaced by; the class name, %INCFILE% by the header file name as given by; TClass::GetDeclFileName() and %SRCFILE% by the source file name as given by; TClass::GetImplFileName(). If the header is written for a non-class page,; i.e. cls==0, lines containing %CLASS%, %INCFILE%, or %SRCFILE% will be; skipped. void WriteHtmlFooter(ostream& out, const char* dir, const char* lastUpdate, const char* author, const char* copyright, const char* footer); Write HTML footer. Internal method invoked by the overload. void WriteHtmlFooter(ostream& out, const char* dir = """", const char* lastUpdate = """", const char* author = """", const char* copyright = """"); Write HTML footer. Input: out - output file stream; dir - usually equal to """" or ""../"", depends of; current file directory position, i.e. if; file is in the fHtml->GetOutputDir(), then dir will be """"; lastUpdate - last update string; author - author's name; copyright - copyright note. Allows optional user provided footer to be written. Root.Html.Footer holds; the file name for this footer. For details see THtml::WriteHtmlHeader (here,; the ""+"" means the user's footer is written in front of Root's!) Occurences; of %AUTHOR%, %CHANGED%, %GENERATED%, and %COPYRIGHT% in the user's file are replaced by; their corresponding values (author, lastUpdate, today, and copyright) before; written to out.; If no author is set (author == """", e.g. for ClassIndex.html"") skip the whole; line of the footer template containing %AUTHOR%. Accordingly for %COPYRIGHT%. void WriteModuleLinks(ostream& out); Create a div containing links to all topmost modules. void WriteLineNumbers(ostream& out, Long_t nLines, const TString& infileBase) const; Create a div containing the line numbers (for a source listing) 1 to nLines.; ",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:616,Modifiability,inherit,inheritance,616,". TDocOutput. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HTML; » TDocOutput. class TDocOutput: public TObject. THtml generated documentation is written to file by TDocOutput. So far only; output of HTML is implemented. Customization of the output should be done; with THtml's interfaces - TDocOutput should not be used nor re-implemented; directly. TDocOutput generates the index tables:; * classes (THtml invokes TClassDocOutput for each),; * inheritance hierarchy,; * types and typedefs,; * libraries,; * the product index, and; * the module index (including the links to per-module documentation).; It invokes AT&T's GraphViz tool (dot) if available; charts benefit a lot; from it. TDocOutput also writes all pages' header and footer, which can be customized; by calling THtml::SetHeader(), THtml::SetFooter(). Function Members (Methods); public:. TDocOutput(THtml& html); TDocOutput(const TDocOutput&); virtual~TDocOutput(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdjustSourcePath(TString& line, const char* relpath = ""../""); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; voidConvert(istream& in, const char* infilename, const char* outfilename, const char* title, const char* relpath = ""../"", Int_t includeOutput = 0, const char* context = """", TGClient* gclient = 0); virtual voidTObject::Copy(TObject& object) const; Bool_tCopyHtmlFile(const char* sourceName, const char* destName = """"); virtual voidCreateClassIndex(); virtual voidCreateClassTypeDefs(); virtual voidCreateHierarchy(); virtual voidCreateModul",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:3800,Modifiability,Inherit,InheritsFrom,3800,"ms, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFixupAuthorSourceInfo(TString& authors); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetExtension() const; THtml*GetHtml(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified(TClass* classPtr, TDocOutput::EFileType type); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidNameSpace2FileName(TString& name); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::oper",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:3866,Modifiability,Inherit,InheritsFrom,3866,"nt, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFixupAuthorSourceInfo(TString& authors); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetExtension() const; THtml*GetHtml(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified(TClass* classPtr, TDocOutput::EFileType type); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidNameSpace2FileName(TString& name); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* v",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:8747,Modifiability,Inherit,Inheritance,8747,"st char* lastUpdate, const char* author, const char* copyright, const char* footer); voidWriteHtmlHeader(ostream& out, const char* titleNoSpecial, const char* dir, TClass* cls, const char* header); voidWriteLocation(ostream& out, TModuleDocInfo* module, const char* classname = 0); voidWriteModuleLinks(ostream& out); voidWriteModuleLinks(ostream& out, TModuleDocInfo* super); virtual voidWriteSearch(ostream& out); voidWriteTopLinks(ostream& out, TModuleDocInfo* module, const char* classname = 0, Bool_t withLocation = kTRUE). Data Members; public:. enum EGraphvizTool { kDot; kNeato; kFdp; kCirco; };; enum EFileType { kSource; kInclude; kTree; kDoc; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. THtml*fHtmlTHtml object we belong to. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDocOutput(THtml& html); {}. ~TDocOutput(); {}. void AddLink(TSubString& str, TString& link, const char* comment); Add a link around str, with title comment.; Update str so it surrounds the link. void AdjustSourcePath(TString& line, const char* relpath = ""../""); adjust the path of links for source files, which are in src/, but need; to point to relpath (usually ""../""). Simply replaces ""=\""./"" by ""=\""../"". void Convert(istream& in, const char* infilename, const char* outfilename, const char* title, const char* relpath = ""../"", Int_t includeOutput = 0, const char* context = """", TGClient* gclient = 0); Convert a text file into a html file.; outfilename doesn't have an extension yet; up to us to decide.; We generate HTML, so our extension is "".html"".; See THtml::Convert() for the other parameters. Bool_t CopyHtmlFile(const char* sourceName, const char* destName = """"); Copy file to HTML directory. Input: sourceName - source file name (fully",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:8760,Modifiability,Inherit,Inherited,8760,"st char* lastUpdate, const char* author, const char* copyright, const char* footer); voidWriteHtmlHeader(ostream& out, const char* titleNoSpecial, const char* dir, TClass* cls, const char* header); voidWriteLocation(ostream& out, TModuleDocInfo* module, const char* classname = 0); voidWriteModuleLinks(ostream& out); voidWriteModuleLinks(ostream& out, TModuleDocInfo* super); virtual voidWriteSearch(ostream& out); voidWriteTopLinks(ostream& out, TModuleDocInfo* module, const char* classname = 0, Bool_t withLocation = kTRUE). Data Members; public:. enum EGraphvizTool { kDot; kNeato; kFdp; kCirco; };; enum EFileType { kSource; kInclude; kTree; kDoc; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. THtml*fHtmlTHtml object we belong to. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDocOutput(THtml& html); {}. ~TDocOutput(); {}. void AddLink(TSubString& str, TString& link, const char* comment); Add a link around str, with title comment.; Update str so it surrounds the link. void AdjustSourcePath(TString& line, const char* relpath = ""../""); adjust the path of links for source files, which are in src/, but need; to point to relpath (usually ""../""). Simply replaces ""=\""./"" by ""=\""../"". void Convert(istream& in, const char* infilename, const char* outfilename, const char* title, const char* relpath = ""../"", Int_t includeOutput = 0, const char* context = """", TGClient* gclient = 0); Convert a text file into a html file.; outfilename doesn't have an extension yet; up to us to decide.; We generate HTML, so our extension is "".html"".; See THtml::Convert() for the other parameters. Bool_t CopyHtmlFile(const char* sourceName, const char* destName = """"); Copy file to HTML directory. Input: sourceName - source file name (fully",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:3690,Security,Hash,Hash,3690,"char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFixupAuthorSourceInfo(TString& authors); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetExtension() const; THtml*GetHtml(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified(TClass* classPtr, TDocOutput::EFileType type); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidNameSpace2FileName(TString& name); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTOb",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:6565,Testability,Test,TestBit,6565,"ferenceEntity(TSubString& str, TClass* entity, const char* comment = 0); virtual voidReferenceEntity(TSubString& str, TDataMember* entity, const char* comment = 0); virtual voidReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); virtual voidReferenceEntity(TSubString& str, TMethod* entity, const char* comment = 0); virtual Bool_tReferenceIsRelative(const char* reference) const; virtual const char*ReplaceSpecialChars(char c); voidReplaceSpecialChars(TString& text); voidReplaceSpecialChars(ostream& out, const char* string); voidReplaceSpecialChars(TString& text, Ssiz_t& pos); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteHtmlFooter(ostream& out, const char* dir = """", const char* lastUpdate = """", const char* author = """", const char* copyright = """"); virtual voidWriteHtmlHeader(ostream& out, const char* title, const char* dir = """", TClass* cls = 0); voidWriteLineNumbers(ostream& out, Long_t nLines, const TString& infileBase) const.",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:6604,Testability,Test,TestBits,6604,"ferenceEntity(TSubString& str, TClass* entity, const char* comment = 0); virtual voidReferenceEntity(TSubString& str, TDataMember* entity, const char* comment = 0); virtual voidReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); virtual voidReferenceEntity(TSubString& str, TMethod* entity, const char* comment = 0); virtual Bool_tReferenceIsRelative(const char* reference) const; virtual const char*ReplaceSpecialChars(char c); voidReplaceSpecialChars(TString& text); voidReplaceSpecialChars(ostream& out, const char* string); voidReplaceSpecialChars(TString& text, Ssiz_t& pos); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteHtmlFooter(ostream& out, const char* dir = """", const char* lastUpdate = """", const char* author = """", const char* copyright = """"); virtual voidWriteHtmlHeader(ostream& out, const char* title, const char* dir = """", TClass* cls = 0); voidWriteLineNumbers(ostream& out, Long_t nLines, const TString& infileBase) const.",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:13365,Testability,test,test,13365,"ate. void NameSpace2FileName(TString& name); Replace ""::"" in name by ""__""; Replace ""<"", "">"", "" "", "","", ""~"", ""="" in name by ""_""; Replace ""A::X<A::Y>"" by ""A::X<-p0Y>"",; ""A::B::X<A::B::Y>"" by ""A::B::X<-p1Y>"", etc. void ProcessDocInDir(ostream& out, const char* indir, const char* outdir, const char* linkdir); Write links to files indir/*.txt, indir/*.html (non-recursive) to out.; If one of the files is called ""index.{html,txt}"" it will be; included in out (instead of copying it to outdir and generating a link; to linkdir). txt files are passed through Convert().; The files' links are sorted alphabetically. void ReferenceEntity(TSubString& str, TClass* entity, const char* comment = 0); Create a reference to a class documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataMember* entity, const char* comment = 0); Create a reference to a data member documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); Create a reference to a type documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclos",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:13462,Testability,test,test,13462,""","", ""~"", ""="" in name by ""_""; Replace ""A::X<A::Y>"" by ""A::X<-p0Y>"",; ""A::B::X<A::B::Y>"" by ""A::B::X<-p1Y>"", etc. void ProcessDocInDir(ostream& out, const char* indir, const char* outdir, const char* linkdir); Write links to files indir/*.txt, indir/*.html (non-recursive) to out.; If one of the files is called ""index.{html,txt}"" it will be; included in out (instead of copying it to outdir and generating a link; to linkdir). txt files are passed through Convert().; The files' links are sorted alphabetically. void ReferenceEntity(TSubString& str, TClass* entity, const char* comment = 0); Create a reference to a class documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataMember* entity, const char* comment = 0); Create a reference to a data member documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); Create a reference to a type documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin()",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:13908,Testability,test,test,13908,"ed through Convert().; The files' links are sorted alphabetically. void ReferenceEntity(TSubString& str, TClass* entity, const char* comment = 0); Create a reference to a class documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataMember* entity, const char* comment = 0); Create a reference to a data member documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); Create a reference to a type documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TMethod* entity, const char* comment = 0); Create a reference to a method documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the ref",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:14005,Testability,test,test,14005,"& str, TClass* entity, const char* comment = 0); Create a reference to a class documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataMember* entity, const char* comment = 0); Create a reference to a data member documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); Create a reference to a type documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TMethod* entity, const char* comment = 0); Create a reference to a method documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:14442,Testability,test,test,14442,"=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataMember* entity, const char* comment = 0); Create a reference to a data member documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); Create a reference to a type documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TMethod* entity, const char* comment = 0); Create a reference to a method documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. Bool_t ReferenceIsRelative(const char* reference) const; Check whether reference is a relative reference, and can (or should); be prependen by relative paths. For HTML, check that it doesn't start; with ""http://"" or ""https://"". const char* ReplaceSpecialChars(char c); Replace ampersand, less-than and greater-than character",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:14539,Testability,test,test,14539,"str, TDataMember* entity, const char* comment = 0); Create a reference to a data member documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); Create a reference to a type documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TMethod* entity, const char* comment = 0); Create a reference to a method documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. Bool_t ReferenceIsRelative(const char* reference) const; Check whether reference is a relative reference, and can (or should); be prependen by relative paths. For HTML, check that it doesn't start; with ""http://"" or ""https://"". const char* ReplaceSpecialChars(char c); Replace ampersand, less-than and greater-than character, writing to out.; If 0 is returned, no replacement needs to be done. void ReplaceSpecialChars(TStr",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:14976,Testability,test,test,14976,"a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); Create a reference to a type documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TMethod* entity, const char* comment = 0); Create a reference to a method documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. Bool_t ReferenceIsRelative(const char* reference) const; Check whether reference is a relative reference, and can (or should); be prependen by relative paths. For HTML, check that it doesn't start; with ""http://"" or ""https://"". const char* ReplaceSpecialChars(char c); Replace ampersand, less-than and greater-than character, writing to out.; If 0 is returned, no replacement needs to be done. void ReplaceSpecialChars(TString& text, Ssiz_t& pos); Replace ampersand, less-than and greater-than character. Input: text - text where replacement will happen,; pos - index of char to be replaced; will point to next char to be; replaced when function returns. void ReplaceSpecialChars(TString& text); Replace ampersand, less-than and greater-than character. Input: text - text where replacement will happen,. void ReplaceSpecialChars(ostream& out, const char* str",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:15073,Testability,test,test,15073,"bString& str, TDataType* entity, const char* comment = 0); Create a reference to a type documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TMethod* entity, const char* comment = 0); Create a reference to a method documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. Bool_t ReferenceIsRelative(const char* reference) const; Check whether reference is a relative reference, and can (or should); be prependen by relative paths. For HTML, check that it doesn't start; with ""http://"" or ""https://"". const char* ReplaceSpecialChars(char c); Replace ampersand, less-than and greater-than character, writing to out.; If 0 is returned, no replacement needs to be done. void ReplaceSpecialChars(TString& text, Ssiz_t& pos); Replace ampersand, less-than and greater-than character. Input: text - text where replacement will happen,; pos - index of char to be replaced; will point to next char to be; replaced when function returns. void ReplaceSpecialChars(TString& text); Replace ampersand, less-than and greater-than character. Input: text - text where replacement will happen,. void ReplaceSpecialChars(ostream& out, const char* string); Replace ampersand, less-than and greater-than characters, writing to out. Input: out - output",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:1418,Usability,Clear,Clear,1418,"rfaces - TDocOutput should not be used nor re-implemented; directly. TDocOutput generates the index tables:; * classes (THtml invokes TClassDocOutput for each),; * inheritance hierarchy,; * types and typedefs,; * libraries,; * the product index, and; * the module index (including the links to per-module documentation).; It invokes AT&T's GraphViz tool (dot) if available; charts benefit a lot; from it. TDocOutput also writes all pages' header and footer, which can be customized; by calling THtml::SetHeader(), THtml::SetFooter(). Function Members (Methods); public:. TDocOutput(THtml& html); TDocOutput(const TDocOutput&); virtual~TDocOutput(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdjustSourcePath(TString& line, const char* relpath = ""../""); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; voidConvert(istream& in, const char* infilename, const char* outfilename, const char* title, const char* relpath = ""../"", Int_t includeOutput = 0, const char* context = """", TGClient* gclient = 0); virtual voidTObject::Copy(TObject& object) const; Bool_tCopyHtmlFile(const char* sourceName, const char* destName = """"); virtual voidCreateClassIndex(); virtual voidCreateClassTypeDefs(); virtual voidCreateHierarchy(); virtual voidCreateModuleIndex(); virtual voidCreateProductIndex(); virtual voidCreateTypeIndex(); virtual voidDecorateEntityBegin(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); virtual voidDecorateEntityEnd(TString& str, Ssiz_t& pos, TDocParser::EParseContext type); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::Dra",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDocOutput.html:9196,Usability,Simpl,Simply,9196,"ostream& out, TModuleDocInfo* module, const char* classname = 0, Bool_t withLocation = kTRUE). Data Members; public:. enum EGraphvizTool { kDot; kNeato; kFdp; kCirco; };; enum EFileType { kSource; kInclude; kTree; kDoc; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. THtml*fHtmlTHtml object we belong to. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDocOutput(THtml& html); {}. ~TDocOutput(); {}. void AddLink(TSubString& str, TString& link, const char* comment); Add a link around str, with title comment.; Update str so it surrounds the link. void AdjustSourcePath(TString& line, const char* relpath = ""../""); adjust the path of links for source files, which are in src/, but need; to point to relpath (usually ""../""). Simply replaces ""=\""./"" by ""=\""../"". void Convert(istream& in, const char* infilename, const char* outfilename, const char* title, const char* relpath = ""../"", Int_t includeOutput = 0, const char* context = """", TGClient* gclient = 0); Convert a text file into a html file.; outfilename doesn't have an extension yet; up to us to decide.; We generate HTML, so our extension is "".html"".; See THtml::Convert() for the other parameters. Bool_t CopyHtmlFile(const char* sourceName, const char* destName = """"); Copy file to HTML directory. Input: sourceName - source file name (fully qualified i.e. file system path); destName - optional destination name, if not; specified it would be the same; as the source file name. Output: TRUE if file is successfully copied, or; FALSE if it's not. NOTE: The destination directory is always fHtml->GetOutputDir(). void CreateHierarchy(); Create a hierarchical class list; The algorithm descends from the base classes and branches into; all derived classes. Mixing classes are ",MatchSource.WIKI,root/html534/TDocOutput.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDocOutput.html
https://root.cern/root/html534/TDOMParser.html:3673,Availability,Error,Error,3673,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:3802,Availability,error,error,3802,"* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*TXMLParser::GetParseCodeMessage(Int_t parseCode) const; Bool_tTXMLParser::GetReplaceEntities() const; Bool_tTXMLParser::GetStopOn",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:3886,Availability,error,error,3886,"t(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*TXMLParser::GetParseCodeMessage(Int_t parseCode) const; Bool_tTXMLParser::GetReplaceEntities() const; Bool_tTXMLParser::GetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:9905,Availability,error,errorcodes,9905,"rClassName() const; virtual voidTXMLParser::InitializeContext(); voidTObject::MakeZombie(); virtual voidTXMLParser::OnValidateError(const TString& message); virtual voidTXMLParser::OnValidateWarning(const TString& message); virtual voidTXMLParser::SetParseCode(Int_t code). private:. TDOMParser(const TDOMParser&); TDOMParser&operator=(const TDOMParser&); Int_tParseContext(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML docu",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:10084,Availability,error,error,10084,"rClassName() const; virtual voidTXMLParser::InitializeContext(); voidTObject::MakeZombie(); virtual voidTXMLParser::OnValidateError(const TString& message); virtual voidTXMLParser::OnValidateWarning(const TString& message); virtual voidTXMLParser::SetParseCode(Int_t code). private:. TDOMParser(const TDOMParser&); TDOMParser&operator=(const TDOMParser&); Int_tParseContext(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML docu",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:10195,Availability,error,error,10195,"rClassName() const; virtual voidTXMLParser::InitializeContext(); voidTObject::MakeZombie(); virtual voidTXMLParser::OnValidateError(const TString& message); virtual voidTXMLParser::OnValidateWarning(const TString& message); virtual voidTXMLParser::SetParseCode(Int_t code). private:. TDOMParser(const TDOMParser&); TDOMParser&operator=(const TDOMParser&); Int_tParseContext(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML docu",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:10790,Availability,error,error,10790,"gleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML document for the parser.; It returns 0 on success, and; -1 if no XML document was created,; -5 if the document is not well formated,; -6 if document is not valid. TXMLDocument * GetXMLDocument() const; Returns the TXMLDocument. TDOMParser(const TDOMParser& ). TDOMParser& operator=(const TDOMParser& ). » Author: Jose Lo 12/4/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/xmlparser:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:10819,Availability,error,error,10819,"gleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML document for the parser.; It returns 0 on success, and; -1 if no XML document was created,; -5 if the document is not well formated,; -6 if document is not valid. TXMLDocument * GetXMLDocument() const; Returns the TXMLDocument. TDOMParser(const TDOMParser& ). TDOMParser& operator=(const TDOMParser& ). » Author: Jose Lo 12/4/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/xmlparser:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:10842,Availability,error,error,10842,"gleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML document for the parser.; It returns 0 on success, and; -1 if no XML document was created,; -5 if the document is not well formated,; -6 if document is not valid. TXMLDocument * GetXMLDocument() const; Returns the TXMLDocument. TDOMParser(const TDOMParser& ). TDOMParser& operator=(const TDOMParser& ). » Author: Jose Lo 12/4/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/xmlparser:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:552,Deployability,update,update,552,". TDOMParser. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XMLPARSER; » TDOMParser. class TDOMParser: public TXMLParser. TDomParser. DOM stands for the Document Object Model; this is an API for; accessing XML or HTML structured documents.; The Document Object Model is a platform and language-neutral; interface that will allow programs and scripts to dynamically; access and update the content, structure and style of documents. The parser returns a tree built during the document analysis. Function Members (Methods); public:. TDOMParser(); virtual~TDOMParser(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIG",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:10551,Deployability,Release,ReleaseUnderlying,10551,"};; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML document for the parser.; It returns 0 on success, and; -1 if no XML document was created,; -5 if the document is not well formated,; -6 if document is not valid. TXMLDocument * GetXMLDocument() const; Returns the TXMLDocument. TDOMParser(const TDOMParser& ). TDOMParser& operator=(const TDOMParser& ). » Author: Jose Lo 12/4/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/xmlparser:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regard",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:10577,Deployability,Release,ReleaseUnderlying,10577," kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML document for the parser.; It returns 0 on success, and; -1 if no XML document was created,; -5 if the document is not well formated,; -6 if document is not valid. TXMLDocument * GetXMLDocument() const; Returns the TXMLDocument. TDOMParser(const TDOMParser& ). TDOMParser& operator=(const TDOMParser& ). » Author: Jose Lo 12/4/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/xmlparser:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:10598,Deployability,Release,Release,10598," kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML document for the parser.; It returns 0 on success, and; -1 if no XML document was created,; -5 if the document is not well formated,; -6 if document is not valid. TXMLDocument * GetXMLDocument() const; Returns the TXMLDocument. TDOMParser(const TDOMParser& ). TDOMParser& operator=(const TDOMParser& ). » Author: Jose Lo 12/4/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/xmlparser:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:478,Integrability,interface,interface,478,". TDOMParser. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XMLPARSER; » TDOMParser. class TDOMParser: public TXMLParser. TDomParser. DOM stands for the Document Object Model; this is an API for; accessing XML or HTML structured documents.; The Document Object Model is a platform and language-neutral; interface that will allow programs and scripts to dynamically; access and update the content, structure and style of documents. The parser returns a tree built during the document analysis. Function Members (Methods); public:. TDOMParser(); virtual~TDOMParser(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIG",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:6105,Integrability,Message,Message,6105,"Object::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual Int_tParseBuffer(const char* buffer, Int_t len); virtual Int_tParseFile(const char* filename); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtu",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:9146,Integrability,message,message,9146,"Parser(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; virtual voidTXMLParser::InitializeContext(); voidTObject::MakeZombie(); virtual voidTXMLParser::OnValidateError(const TString& message); virtual voidTXMLParser::OnValidateWarning(const TString& message); virtual voidTXMLParser::SetParseCode(Int_t code). private:. TDOMParser(const TDOMParser&); TDOMParser&operator=(const TDOMParser&); Int_tParseContext(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals f",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:9213,Integrability,message,message,9213,"Parser(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; virtual voidTXMLParser::InitializeContext(); voidTObject::MakeZombie(); virtual voidTXMLParser::OnValidateError(const TString& message); virtual voidTXMLParser::OnValidateWarning(const TString& message); virtual voidTXMLParser::SetParseCode(Int_t code). private:. TDOMParser(const TDOMParser&); TDOMParser&operator=(const TDOMParser&); Int_tParseContext(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals f",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:5437,Modifiability,Inherit,InheritsFrom,5437,"onst char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*TXMLParser::GetParseCodeMessage(Int_t parseCode) const; Bool_tTXMLParser::GetReplaceEntities() const; Bool_tTXMLParser::GetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tTXMLParser::GetValidate() const; const char*TXMLParser::GetValidateError() const; const char*TXMLParser::GetValidateWarning() const; virtual TXMLDocument*GetXMLDocument() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::opera",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:5503,Modifiability,Inherit,InheritsFrom,5503,"tInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*TXMLParser::GetParseCodeMessage(Int_t parseCode) const; Bool_tTXMLParser::GetReplaceEntities() const; Bool_tTXMLParser::GetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tTXMLParser::GetValidate() const; const char*TXMLParser::GetValidateError() const; const char*TXMLParser::GetValidateWarning() const; virtual TXMLDocument*GetXMLDocument() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator dele",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:10389,Modifiability,Inherit,Inheritance,10389,"StatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML document for the parser.; It returns 0 on success, and; -1 if no XML document was created,; -5 if the document is not well formated,; -6 if document is not valid. TXMLDocument * GetXMLDocument() const; Returns the TXMLDocument. TDOMParser(const TDOMParser& ). TDOMParser& operator=(const TDOMParser& ). » Author: Jose Lo 12/4/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/xmlpars",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:10402,Modifiability,Inherit,Inherited,10402,"StatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML document for the parser.; It returns 0 on success, and; -1 if no XML document was created,; -5 if the document is not well formated,; -6 if document is not valid. TXMLDocument * GetXMLDocument() const; Returns the TXMLDocument. TDOMParser(const TDOMParser& ). TDOMParser& operator=(const TDOMParser& ). » Author: Jose Lo 12/4/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/xmlpars",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:371,Security,access,accessing,371,". TDOMParser. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XMLPARSER; » TDOMParser. class TDOMParser: public TXMLParser. TDomParser. DOM stands for the Document Object Model; this is an API for; accessing XML or HTML structured documents.; The Document Object Model is a platform and language-neutral; interface that will allow programs and scripts to dynamically; access and update the content, structure and style of documents. The parser returns a tree built during the document analysis. Function Members (Methods); public:. TDOMParser(); virtual~TDOMParser(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIG",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:541,Security,access,access,541,". TDOMParser. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XMLPARSER; » TDOMParser. class TDOMParser: public TXMLParser. TDomParser. DOM stands for the Document Object Model; this is an API for; accessing XML or HTML structured documents.; The Document Object Model is a platform and language-neutral; interface that will allow programs and scripts to dynamically; access and update the content, structure and style of documents. The parser returns a tree built during the document analysis. Function Members (Methods); public:. TDOMParser(); virtual~TDOMParser(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIG",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:5239,Security,Hash,Hash,5239,"rOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*TXMLParser::GetParseCodeMessage(Int_t parseCode) const; Bool_tTXMLParser::GetReplaceEntities() const; Bool_tTXMLParser::GetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tTXMLParser::GetValidate() const; const char*TXMLParser::GetValidateError() const; const char*TXMLParser::GetValidateWarning() const; virtual TXMLDocument*GetXMLDocument() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObje",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:10128,Security,validat,validate,10128,"rClassName() const; virtual voidTXMLParser::InitializeContext(); voidTObject::MakeZombie(); virtual voidTXMLParser::OnValidateError(const TString& message); virtual voidTXMLParser::OnValidateWarning(const TString& message); virtual voidTXMLParser::SetParseCode(Int_t code). private:. TDOMParser(const TDOMParser&); TDOMParser&operator=(const TDOMParser&); Int_tParseContext(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*TXMLParser::fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tTXMLParser::fParseCodeto keep track of the errorcodes; Bool_tTXMLParser::fReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTXMLParser::fStopErrorstop when parse error occurs; Bool_tTXMLParser::fValidateto validate the parse context; TStringTXMLParser::fValidateErrorparse error; TStringTXMLParser::fValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TXMLDocument*fTXMLDocxmlDoc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDOMParser(); TDOMParser constructor. ~TDOMParser(); TDOMParser destructor, it calls ReleaseUnderlying(). void ReleaseUnderlying(); Release any existing document. Int_t ParseFile(const char* filename); Parse the XML file where filename is the XML file name.; It will create a TXMLDocument if the file is parsed without; any error. It returns parse code error in case of parse error,; see TXMLParser. Int_t ParseBuffer(const char* buffer, Int_t len); It parses a buffer, much like ParseFile(). Int_t ParseContext(); Creates a XML docu",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:8033,Testability,Test,TestBit,8033,"rator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual Int_tParseBuffer(const char* buffer, Int_t len); virtual Int_tParseFile(const char* filename); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidReleaseUnderlying(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidTXMLParser::SetReplaceEntities(Bool_t val = kTRUE); voidTXMLParser::SetStopOnError(Bool_t stop = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidTXMLParser::SetValidate(Bool_t val = kTRUE); virtual voidShowMembers(TMemberInspector&); virtual voidTXMLParser::StopParser(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:8072,Testability,Test,TestBits,8072,"rator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual Int_tParseBuffer(const char* buffer, Int_t len); virtual Int_tParseFile(const char* filename); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidReleaseUnderlying(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidTXMLParser::SetReplaceEntities(Bool_t val = kTRUE); voidTXMLParser::SetStopOnError(Bool_t stop = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidTXMLParser::SetValidate(Bool_t val = kTRUE); virtual voidShowMembers(TMemberInspector&); virtual voidTXMLParser::StopParser(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDOMParser.html:1224,Usability,Clear,Clear,1224," TDOMParser(); virtual~TDOMParser(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIG",MatchSource.WIKI,root/html534/TDOMParser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDOMParser.html
https://root.cern/root/html534/TDrawFeedback.html:3660,Availability,Error,Error,3660,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFeedback(TList* objs); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetT",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:3789,Availability,error,error,3789,"* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFeedback(TList* objs); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObje",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:3873,Availability,error,error,3873,"t(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFeedback(TList* objs); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tHash() const; virtu",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:5723,Integrability,Message,Message,5723,"l Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tHash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:5055,Modifiability,Inherit,InheritsFrom,5055," TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tHash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::opera",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:5121,Modifiability,Inherit,InheritsFrom,5121,"ect*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tHash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator dele",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:9198,Modifiability,Inherit,Inheritance,9198," static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Option_t*fOptiondraw option; TProof*fProofhandle to PROOF session; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. Bool_tfAlldraw all or selected objects; TStringfNameIdentfier for this object; THashList*fNamesselected objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); Constructor. ~TDrawFeedback(); Destructor. void Feedback(TList* objs); Display feedback. const char * GetName() const; { return fName.Data(); }. ULong_t Hash() const; { return fName.Hash(); }. void SetOption(Option_t* option); { fOption = option; }. » Author: Maarten Ballintijn 28/10/2003 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:9211,Modifiability,Inherit,Inherited,9211," static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Option_t*fOptiondraw option; TProof*fProofhandle to PROOF session; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. Bool_tfAlldraw all or selected objects; TStringfNameIdentfier for this object; THashList*fNamesselected objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); Constructor. ~TDrawFeedback(); Destructor. void Feedback(TList* objs); Display feedback. const char * GetName() const; { return fName.Data(); }. ULong_t Hash() const; { return fName.Hash(); }. void SetOption(Option_t* option); { fOption = option; }. » Author: Maarten Ballintijn 28/10/2003 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:9489,Security,Hash,Hash,9489," static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Option_t*fOptiondraw option; TProof*fProofhandle to PROOF session; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. Bool_tfAlldraw all or selected objects; TStringfNameIdentfier for this object; THashList*fNamesselected objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); Constructor. ~TDrawFeedback(); Destructor. void Feedback(TList* objs); Display feedback. const char * GetName() const; { return fName.Data(); }. ULong_t Hash() const; { return fName.Hash(); }. void SetOption(Option_t* option); { fOption = option; }. » Author: Maarten Ballintijn 28/10/2003 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:9518,Security,Hash,Hash,9518," static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Option_t*fOptiondraw option; TProof*fProofhandle to PROOF session; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. Bool_tfAlldraw all or selected objects; TStringfNameIdentfier for this object; THashList*fNamesselected objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); Constructor. ~TDrawFeedback(); Destructor. void Feedback(TList* objs); Display feedback. const char * GetName() const; { return fName.Data(); }. ULong_t Hash() const; { return fName.Hash(); }. void SetOption(Option_t* option); { fOption = option; }. » Author: Maarten Ballintijn 28/10/2003 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:7400,Testability,Test,TestBit,7400,"al Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidSetOption(Option_t* option); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:7439,Testability,Test,TestBits,7439,"al Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidSetOption(Option_t* option); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:377,Usability,feedback,feedback,377,". TDrawFeedback. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFPLAYER; » TDrawFeedback. class TDrawFeedback: public TObject, public TQObject. TDrawFeedback. Utility class to draw objects in the feedback list during queries.; Draws histograms in separated canvases and user-defined objects via; Draw(). Users requiring advanced treatment should implement their; own version following this example. See also TStatsFeedback. Function Members (Methods); public:. TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); virtual~TDrawFeedback(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIGNAL ; Bool_tT",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:1211,Usability,Clear,Clear,1211," TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); virtual~TDrawFeedback(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIGNAL ; Bool_tT",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:9384,Usability,Feedback,Feedback,9384," static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Option_t*fOptiondraw option; TProof*fProofhandle to PROOF session; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. Bool_tfAlldraw all or selected objects; TStringfNameIdentfier for this object; THashList*fNamesselected objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); Constructor. ~TDrawFeedback(); Destructor. void Feedback(TList* objs); Display feedback. const char * GetName() const; { return fName.Data(); }. ULong_t Hash() const; { return fName.Hash(); }. void SetOption(Option_t* option); { fOption = option; }. » Author: Maarten Ballintijn 28/10/2003 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDrawFeedback.html:9415,Usability,feedback,feedback,9415," static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Option_t*fOptiondraw option; TProof*fProofhandle to PROOF session; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. Bool_tfAlldraw all or selected objects; TStringfNameIdentfier for this object; THashList*fNamesselected objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); Constructor. ~TDrawFeedback(); Destructor. void Feedback(TList* objs); Display feedback. const char * GetName() const; { return fName.Data(); }. ULong_t Hash() const; { return fName.Hash(); }. void SetOption(Option_t* option); { fOption = option; }. » Author: Maarten Ballintijn 28/10/2003 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDrawFeedback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html
https://root.cern/root/html534/TDSet.html:1547,Availability,avail,availableOnly,1547," TDSet(); TDSet(const TChain& chain, Bool_t withfriends = kTRUE); TDSet(const char* name, const char* objname = ""*"", const char* dir = ""/"", const char* type = 0); virtual~TDSet(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tAdd(TDSet* set); virtual Bool_tAdd(TFileInfo* fileinfo, const char* meta = 0); virtual Bool_tAdd(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); virtual Bool_tAdd(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); virtual voidAddFriend(TDSet* friendset, const char* alias); voidAddInput(TObject* obj); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtu",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:2897,Availability,Error,Error,2897,"ect::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); voidClearInput(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* opt); virtual Long64_tDraw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tDraw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Bool_tElementsValid(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); Int_tExportFileList(const char* filepath, Option_t* opt = """"); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tGetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tGetNumOfFiles(); virtu",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:3026,Availability,error,error,3026,"t* option = """"); voidClearInput(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* opt); virtual Long64_tDraw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tDraw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Bool_tElementsValid(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); Int_tExportFileList(const char* filepath, Option_t* opt = """"); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tGetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tGetNumOfFiles(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*GetObjName() const; v",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:3110,Availability,error,error,3110," = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* opt); virtual Long64_tDraw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tDraw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Bool_tElementsValid(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); Int_tExportFileList(const char* filepath, Option_t* opt = """"); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tGetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tGetNumOfFiles(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*GetObjName() const; virtual Option_t*TObject::GetOption() const; TObject*GetOutput(const char* name); TLi",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:10828,Availability,error,error,10828,"he objects are; to be found, the top level directory (""/"") is the default.; Directories can be specified using wildcards, e.g. ""*"" or ""/*""; means to look in all top level directories, ""/dir/*"" in all; directories under ""/dir"", and ""/*/*"" to look in all directories; two levels deep.; For backward compatibility the type can also be passed via 'name',; in which case 'type' is ignored. TDSet(const TChain& chain, Bool_t withfriends = kTRUE); Create a named TDSet object from existing TChain 'chain'.; If 'withfriends' is kTRUE add also friends.; This constructor substituted the static methods TChain::MakeTDSet; removing any residual dependence of 'tree' on 'proof'. ~TDSet(); Cleanup. Long64_t Process(TSelector* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0); Process TDSet on currently active PROOF session.; The last argument 'enl' specifies an entry- or event-list to be used as; event selection.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Long64_t Process(const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0); Process TDSet on currently active PROOF session.; The last argument 'enl' specifies an entry- or event-list to be used as; event selection.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. void AddInput(TObject* obj); Add objects that might be needed during the processing of; the selector (see Process()). void ClearInput(); Clear input object list. TObject * GetOutput(const char* name); Get specified object that has been produced during the processing; (see Process()). TList * GetOutputList(); Get list with all object created during processing (see Process()). void Print(Option_t* option = """") const; Print TDSet basic or full data. When option=""a"" print full data. void SetObjName(const char* objname); Set/change object name. void SetDirectory(const char* dir); Set/chang",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:11190,Availability,error,error,11190,"ase 'type' is ignored. TDSet(const TChain& chain, Bool_t withfriends = kTRUE); Create a named TDSet object from existing TChain 'chain'.; If 'withfriends' is kTRUE add also friends.; This constructor substituted the static methods TChain::MakeTDSet; removing any residual dependence of 'tree' on 'proof'. ~TDSet(); Cleanup. Long64_t Process(TSelector* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0); Process TDSet on currently active PROOF session.; The last argument 'enl' specifies an entry- or event-list to be used as; event selection.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Long64_t Process(const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0); Process TDSet on currently active PROOF session.; The last argument 'enl' specifies an entry- or event-list to be used as; event selection.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. void AddInput(TObject* obj); Add objects that might be needed during the processing of; the selector (see Process()). void ClearInput(); Clear input object list. TObject * GetOutput(const char* name); Get specified object that has been produced during the processing; (see Process()). TList * GetOutputList(); Get list with all object created during processing (see Process()). void Print(Option_t* option = """") const; Print TDSet basic or full data. When option=""a"" print full data. void SetObjName(const char* objname); Set/change object name. void SetDirectory(const char* dir); Set/change directory. Bool_t Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); Add file to list of files to be analyzed. Optionally with the; objname and dir arguments the default, TDSet wide, objname and; dir can be overridden. Bool_t Add(TDSet* set); Add specified data set to the this set.",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:12264,Availability,avail,availableOnly,12264,"t might be needed during the processing of; the selector (see Process()). void ClearInput(); Clear input object list. TObject * GetOutput(const char* name); Get specified object that has been produced during the processing; (see Process()). TList * GetOutputList(); Get list with all object created during processing (see Process()). void Print(Option_t* option = """") const; Print TDSet basic or full data. When option=""a"" print full data. void SetObjName(const char* objname); Set/change object name. void SetDirectory(const char* dir); Set/change directory. Bool_t Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); Add file to list of files to be analyzed. Optionally with the; objname and dir arguments the default, TDSet wide, objname and; dir can be overridden. Bool_t Add(TDSet* set); Add specified data set to the this set. Bool_t Add(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); Add files passed as list of TFileInfo, TUrl or TObjString objects .; If TFileInfo, the first entry and the number of entries are also filled.; The argument 'meta' can be used to specify one of the subsets in the; file as described in the metadata of TFileInfo. By default the first one; is taken.; If 'availableOnly' is true only files available ('staged' and non corrupted); are taken: those not satisfying this requirement are added to 'badlist', if; the latter is defined. By default availableOnly is false. void SetSrvMaps(TList* srvmaps = 0); Set (or unset) the list for mapping servers coordinate for files.; Reinitialize the related iterator if needed.; Used by TProof. Bool_t Add(TFileInfo* fileinfo, const char* meta = 0); Add file described by 'fi' to list of files to be analyzed.; The argument 'meta' can be used to specify a subsets in the; file as described in the metadata of TFileInfo. By default the first one; is taken. Int_t ExportFileList(const char* filep",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:12617,Availability,avail,availableOnly,12617,"en option=""a"" print full data. void SetObjName(const char* objname); Set/change object name. void SetDirectory(const char* dir); Set/change directory. Bool_t Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); Add file to list of files to be analyzed. Optionally with the; objname and dir arguments the default, TDSet wide, objname and; dir can be overridden. Bool_t Add(TDSet* set); Add specified data set to the this set. Bool_t Add(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); Add files passed as list of TFileInfo, TUrl or TObjString objects .; If TFileInfo, the first entry and the number of entries are also filled.; The argument 'meta' can be used to specify one of the subsets in the; file as described in the metadata of TFileInfo. By default the first one; is taken.; If 'availableOnly' is true only files available ('staged' and non corrupted); are taken: those not satisfying this requirement are added to 'badlist', if; the latter is defined. By default availableOnly is false. void SetSrvMaps(TList* srvmaps = 0); Set (or unset) the list for mapping servers coordinate for files.; Reinitialize the related iterator if needed.; Used by TProof. Bool_t Add(TFileInfo* fileinfo, const char* meta = 0); Add file described by 'fi' to list of files to be analyzed.; The argument 'meta' can be used to specify a subsets in the; file as described in the metadata of TFileInfo. By default the first one; is taken. Int_t ExportFileList(const char* filepath, Option_t* opt = """"); Export TDSetElements files as list of TFileInfo objects in file; 'fpath'. If the file exists already the action fails, unless; 'opt == ""F""'.; Return 0 on success, -1 otherwise. void AddFriend(TDSet* friendset, const char* alias); Add friend dataset to this set. Only possible if the TDSet type is; a TTree or derived class. The friendset will be owned by this class; and deleted in it",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:12651,Availability,avail,available,12651,"en option=""a"" print full data. void SetObjName(const char* objname); Set/change object name. void SetDirectory(const char* dir); Set/change directory. Bool_t Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); Add file to list of files to be analyzed. Optionally with the; objname and dir arguments the default, TDSet wide, objname and; dir can be overridden. Bool_t Add(TDSet* set); Add specified data set to the this set. Bool_t Add(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); Add files passed as list of TFileInfo, TUrl or TObjString objects .; If TFileInfo, the first entry and the number of entries are also filled.; The argument 'meta' can be used to specify one of the subsets in the; file as described in the metadata of TFileInfo. By default the first one; is taken.; If 'availableOnly' is true only files available ('staged' and non corrupted); are taken: those not satisfying this requirement are added to 'badlist', if; the latter is defined. By default availableOnly is false. void SetSrvMaps(TList* srvmaps = 0); Set (or unset) the list for mapping servers coordinate for files.; Reinitialize the related iterator if needed.; Used by TProof. Bool_t Add(TFileInfo* fileinfo, const char* meta = 0); Add file described by 'fi' to list of files to be analyzed.; The argument 'meta' can be used to specify a subsets in the; file as described in the metadata of TFileInfo. By default the first one; is taken. Int_t ExportFileList(const char* filepath, Option_t* opt = """"); Export TDSetElements files as list of TFileInfo objects in file; 'fpath'. If the file exists already the action fails, unless; 'opt == ""F""'.; Return 0 on success, -1 otherwise. void AddFriend(TDSet* friendset, const char* alias); Add friend dataset to this set. Only possible if the TDSet type is; a TTree or derived class. The friendset will be owned by this class; and deleted in it",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:12802,Availability,avail,availableOnly,12802,"ory(const char* dir); Set/change directory. Bool_t Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); Add file to list of files to be analyzed. Optionally with the; objname and dir arguments the default, TDSet wide, objname and; dir can be overridden. Bool_t Add(TDSet* set); Add specified data set to the this set. Bool_t Add(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); Add files passed as list of TFileInfo, TUrl or TObjString objects .; If TFileInfo, the first entry and the number of entries are also filled.; The argument 'meta' can be used to specify one of the subsets in the; file as described in the metadata of TFileInfo. By default the first one; is taken.; If 'availableOnly' is true only files available ('staged' and non corrupted); are taken: those not satisfying this requirement are added to 'badlist', if; the latter is defined. By default availableOnly is false. void SetSrvMaps(TList* srvmaps = 0); Set (or unset) the list for mapping servers coordinate for files.; Reinitialize the related iterator if needed.; Used by TProof. Bool_t Add(TFileInfo* fileinfo, const char* meta = 0); Add file described by 'fi' to list of files to be analyzed.; The argument 'meta' can be used to specify a subsets in the; file as described in the metadata of TFileInfo. By default the first one; is taken. Int_t ExportFileList(const char* filepath, Option_t* opt = """"); Export TDSetElements files as list of TFileInfo objects in file; 'fpath'. If the file exists already the action fails, unless; 'opt == ""F""'.; Return 0 on success, -1 otherwise. void AddFriend(TDSet* friendset, const char* alias); Add friend dataset to this set. Only possible if the TDSet type is; a TTree or derived class. The friendset will be owned by this class; and deleted in its destructor. void Reset(); Reset or initialize access to the elements. Long64_t GetEntries(Bool_t isTree, ",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:13944,Availability,error,error,13944,"tialize the related iterator if needed.; Used by TProof. Bool_t Add(TFileInfo* fileinfo, const char* meta = 0); Add file described by 'fi' to list of files to be analyzed.; The argument 'meta' can be used to specify a subsets in the; file as described in the metadata of TFileInfo. By default the first one; is taken. Int_t ExportFileList(const char* filepath, Option_t* opt = """"); Export TDSetElements files as list of TFileInfo objects in file; 'fpath'. If the file exists already the action fails, unless; 'opt == ""F""'.; Return 0 on success, -1 otherwise. void AddFriend(TDSet* friendset, const char* alias); Add friend dataset to this set. Only possible if the TDSet type is; a TTree or derived class. The friendset will be owned by this class; and deleted in its destructor. void Reset(); Reset or initialize access to the elements. Long64_t GetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); Returns number of entries in tree or objects in file. Returns -1 in; case of error. Long64_t Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; This function accepts a TCut objects as argument.; Use the operator+ to concatenate cuts.; Example:; dset.Draw(""x"",cut1+cut2+cut3);. Long64_t Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; For more see TTree::Draw(). void StartViewer(); Start the TTreeViewer on this TTree. TTree* GetTreeHeader(TProof* proof); Returns a tree header containing the branches' structure of the dataset. Bool_t ElementsValid(); Check if all elements are valid. Int_t Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); Remove TDSetElement 'elem' f",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:14150,Availability,error,error,14150,"he; file as described in the metadata of TFileInfo. By default the first one; is taken. Int_t ExportFileList(const char* filepath, Option_t* opt = """"); Export TDSetElements files as list of TFileInfo objects in file; 'fpath'. If the file exists already the action fails, unless; 'opt == ""F""'.; Return 0 on success, -1 otherwise. void AddFriend(TDSet* friendset, const char* alias); Add friend dataset to this set. Only possible if the TDSet type is; a TTree or derived class. The friendset will be owned by this class; and deleted in its destructor. void Reset(); Reset or initialize access to the elements. Long64_t GetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); Returns number of entries in tree or objects in file. Returns -1 in; case of error. Long64_t Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; This function accepts a TCut objects as argument.; Use the operator+ to concatenate cuts.; Example:; dset.Draw(""x"",cut1+cut2+cut3);. Long64_t Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; For more see TTree::Draw(). void StartViewer(); Start the TTreeViewer on this TTree. TTree* GetTreeHeader(TProof* proof); Returns a tree header containing the branches' structure of the dataset. Bool_t ElementsValid(); Check if all elements are valid. Int_t Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); Remove TDSetElement 'elem' from the list.; Return 0 on success, -1 if the element is not in the list. void Validate(); Validate the TDSet by opening files. void Lookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); Resolve the end-point URL for th",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:14538,Availability,error,error,14538,"iend dataset to this set. Only possible if the TDSet type is; a TTree or derived class. The friendset will be owned by this class; and deleted in its destructor. void Reset(); Reset or initialize access to the elements. Long64_t GetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); Returns number of entries in tree or objects in file. Returns -1 in; case of error. Long64_t Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; This function accepts a TCut objects as argument.; Use the operator+ to concatenate cuts.; Example:; dset.Draw(""x"",cut1+cut2+cut3);. Long64_t Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; For more see TTree::Draw(). void StartViewer(); Start the TTreeViewer on this TTree. TTree* GetTreeHeader(TProof* proof); Returns a tree header containing the branches' structure of the dataset. Bool_t ElementsValid(); Check if all elements are valid. Int_t Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); Remove TDSetElement 'elem' from the list.; Return 0 on success, -1 if the element is not in the list. void Validate(); Validate the TDSet by opening files. void Lookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); Resolve the end-point URL for the current elements of this data set; If the removeMissing option is set to kTRUE, remove the TDSetElements; that can not be located.; The method returns the list of removed TDSetElements in *listOfMissingFiles; if the latter is defined (the list must be created outside). void SetLookedUp(); Flag all the elements as looked-up, so to avoid opening the files; if the functionality is not s",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:714,Integrability,interface,interface,714,". TDSet. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOF; » TDSet. class TDSet: public TNamed. TDSet. This class implements a data set to be used for PROOF processing.; The TDSet defines the class of which objects will be processed,; the directory in the file where the objects of that type can be; found and the list of files to be processed. The files can be; specified as logical file names (LFN's) or as physical file names; (PFN's). In case of LFN's the resolution to PFN's will be done; according to the currently active GRID interface.; Examples:; TDSet treeset(""TTree"", ""AOD"");; treeset.Add(""lfn:/alien.cern.ch/alice/prod2002/file1"");. treeset.AddFriend(friendset);. or. TDSet objset(""MyEvent"", ""*"", ""/events"");; objset.Add(""root://cms.cern.ch/user/prod2002/hprod_1.root"");. objset.Add(set2003);. Validity of file names will only be checked at processing time; (typically on the PROOF master server), not at creation time. Function Members (Methods); public:. TDSet(); TDSet(const TChain& chain, Bool_t withfriends = kTRUE); TDSet(const char* name, const char* objname = ""*"", const char* dir = ""/"", const char* type = 0); virtual~TDSet(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tAdd(TDSet* set); virtual Bool_tAdd(TFileInfo* fileinfo, const char* meta = 0); virtual Bool_tAdd(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); virtual Bool_tAdd(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); virtual voidAddFriend(TDSet* friendset, const char* alias); voidAddInput(TObject* obj); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtu",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:9632,Integrability,depend,depends,9632,"Namename of objects to be analyzed (e.g. TTree name); TList*fSrvMaps! list for mapping server coordinates for files; TIter*fSrvMapsIter! iterator on fSrvMaps; TStringTNamed::fTitleobject title; TStringfTypetype of objects (e.g. TTree);. private:. TObject*fEntryList! entry (or event) list for processing; Bool_tfIsTreetrue if type is a TTree (or TTree derived); TProofChain*fProofChain! for browsing purposes. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDSetElement * Next(Long64_t totalEntries = -1); Returns next TDSetElement. TDSet(); Default ctor. TDSet(const char* name, const char* objname = ""*"", const char* dir = ""/"", const char* type = 0); Create a named TDSet object. The ""type"" defines the class of which objects; will be processed (default 'TTree'). The optional ""objname"" argument; specifies the name of the objects of the specified class.; If the ""objname"" is not given the behaviour depends on the 'type':; for 'TTree' the first TTree is analyzed; for other types, all objects of; the class found in the specified directory are processed.; The ""dir"" argument specifies in which directory the objects are; to be found, the top level directory (""/"") is the default.; Directories can be specified using wildcards, e.g. ""*"" or ""/*""; means to look in all top level directories, ""/dir/*"" in all; directories under ""/dir"", and ""/*/*"" to look in all directories; two levels deep.; For backward compatibility the type can also be passed via 'name',; in which case 'type' is ignored. TDSet(const TChain& chain, Bool_t withfriends = kTRUE); Create a named TDSet object from existing TChain 'chain'.; If 'withfriends' is kTRUE add also friends.; This constructor substituted the static methods TChain::MakeTDSet; removing any residual dependence of 'tree' on 'proof'. ~TDSet(); Cleanup. Long64_t Process(TSelector* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0); Process TDSet on currently active ",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:10472,Integrability,depend,dependence,10472,"f which objects; will be processed (default 'TTree'). The optional ""objname"" argument; specifies the name of the objects of the specified class.; If the ""objname"" is not given the behaviour depends on the 'type':; for 'TTree' the first TTree is analyzed; for other types, all objects of; the class found in the specified directory are processed.; The ""dir"" argument specifies in which directory the objects are; to be found, the top level directory (""/"") is the default.; Directories can be specified using wildcards, e.g. ""*"" or ""/*""; means to look in all top level directories, ""/dir/*"" in all; directories under ""/dir"", and ""/*/*"" to look in all directories; two levels deep.; For backward compatibility the type can also be passed via 'name',; in which case 'type' is ignored. TDSet(const TChain& chain, Bool_t withfriends = kTRUE); Create a named TDSet object from existing TChain 'chain'.; If 'withfriends' is kTRUE add also friends.; This constructor substituted the static methods TChain::MakeTDSet; removing any residual dependence of 'tree' on 'proof'. ~TDSet(); Cleanup. Long64_t Process(TSelector* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0); Process TDSet on currently active PROOF session.; The last argument 'enl' specifies an entry- or event-list to be used as; event selection.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Long64_t Process(const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0); Process TDSet on currently active PROOF session.; The last argument 'enl' specifies an entry- or event-list to be used as; event selection.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. void AddInput(TObject* obj); Add objects that might be needed during the processing of; the selector (see Process()). void ClearInput(); Clear input object list. TObject * GetOutput(const char* na",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:4478,Modifiability,Inherit,InheritsFrom,4478,"* obj) const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tGetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tGetNumOfFiles(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*GetObjName() const; virtual Option_t*TObject::GetOption() const; TObject*GetOutput(const char* name); TList*GetOutputList(); virtual const char*TNamed::GetTitle() const; virtual TTree*GetTreeHeader(TProof* proof); const char*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsTree() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; voidLookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDSetElement*Next(Long64_t totalEntries = -1); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator d",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:4544,Modifiability,Inherit,InheritsFrom,4544,"bject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tGetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tGetNumOfFiles(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*GetObjName() const; virtual Option_t*TObject::GetOption() const; TObject*GetOutput(const char* name); TList*GetOutputList(); virtual const char*TNamed::GetTitle() const; virtual TTree*GetTreeHeader(TProof* proof); const char*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsTree() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; voidLookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDSetElement*Next(Long64_t totalEntries = -1); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:9110,Modifiability,Inherit,Inheritance,9110,"ecked; kSomeInvalid; kMultiDSet; kIsLocal; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TDSetElement*fCurrent! current element; TStringfDirname of the directory; THashList*fElements-> list of TDSetElements (or TDSets, if in multi mode); TIter*fIterator! iterator on fElements; TStringTNamed::fNameobject identifier; TStringfObjNamename of objects to be analyzed (e.g. TTree name); TList*fSrvMaps! list for mapping server coordinates for files; TIter*fSrvMapsIter! iterator on fSrvMaps; TStringTNamed::fTitleobject title; TStringfTypetype of objects (e.g. TTree);. private:. TObject*fEntryList! entry (or event) list for processing; Bool_tfIsTreetrue if type is a TTree (or TTree derived); TProofChain*fProofChain! for browsing purposes. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDSetElement * Next(Long64_t totalEntries = -1); Returns next TDSetElement. TDSet(); Default ctor. TDSet(const char* name, const char* objname = ""*"", const char* dir = ""/"", const char* type = 0); Create a named TDSet object. The ""type"" defines the class of which objects; will be processed (default 'TTree'). The optional ""objname"" argument; specifies the name of the objects of the specified class.; If the ""objname"" is not given the behaviour depends on the 'type':; for 'TTree' the first TTree is analyzed; for other types, all objects of; the class found in the specified directory are processed.; The ""dir"" argument specifies in which directory the objects are; to be found, the top level directory (""/"") is the default.; Directories can be specified using wildcards, e.g. ""*"" or ""/*""; means to look in all top level directories, ""/dir/*"" in all; directories under ""/dir"", and ""/*/*"" to look in all directories; two levels deep.; For backward c",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:9123,Modifiability,Inherit,Inherited,9123,"ecked; kSomeInvalid; kMultiDSet; kIsLocal; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TDSetElement*fCurrent! current element; TStringfDirname of the directory; THashList*fElements-> list of TDSetElements (or TDSets, if in multi mode); TIter*fIterator! iterator on fElements; TStringTNamed::fNameobject identifier; TStringfObjNamename of objects to be analyzed (e.g. TTree name); TList*fSrvMaps! list for mapping server coordinates for files; TIter*fSrvMapsIter! iterator on fSrvMaps; TStringTNamed::fTitleobject title; TStringfTypetype of objects (e.g. TTree);. private:. TObject*fEntryList! entry (or event) list for processing; Bool_tfIsTreetrue if type is a TTree (or TTree derived); TProofChain*fProofChain! for browsing purposes. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDSetElement * Next(Long64_t totalEntries = -1); Returns next TDSetElement. TDSet(); Default ctor. TDSet(const char* name, const char* objname = ""*"", const char* dir = ""/"", const char* type = 0); Create a named TDSet object. The ""type"" defines the class of which objects; will be processed (default 'TTree'). The optional ""objname"" argument; specifies the name of the objects of the specified class.; If the ""objname"" is not given the behaviour depends on the 'type':; for 'TTree' the first TTree is analyzed; for other types, all objects of; the class found in the specified directory are processed.; The ""dir"" argument specifies in which directory the objects are; to be found, the top level directory (""/"") is the default.; Directories can be specified using wildcards, e.g. ""*"" or ""/*""; means to look in all top level directories, ""/dir/*"" in all; directories under ""/dir"", and ""/*/*"" to look in all directories; two levels deep.; For backward c",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:15499,Safety,avoid,avoid,15499,"cified entries.; Returns -1 in case of error or number of selected events in case of success.; For more see TTree::Draw(). void StartViewer(); Start the TTreeViewer on this TTree. TTree* GetTreeHeader(TProof* proof); Returns a tree header containing the branches' structure of the dataset. Bool_t ElementsValid(); Check if all elements are valid. Int_t Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); Remove TDSetElement 'elem' from the list.; Return 0 on success, -1 if the element is not in the list. void Validate(); Validate the TDSet by opening files. void Lookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); Resolve the end-point URL for the current elements of this data set; If the removeMissing option is set to kTRUE, remove the TDSetElements; that can not be located.; The method returns the list of removed TDSetElements in *listOfMissingFiles; if the latter is defined (the list must be created outside). void SetLookedUp(); Flag all the elements as looked-up, so to avoid opening the files; if the functionality is not supported. void Validate(TDSet* dset); Validate the TDSet against another TDSet.; Only validates elements in common from input TDSet. void Streamer(TBuffer& ); Stream an object of class TDSet. void SetWriteV3(Bool_t on = kTRUE); Set/Reset the 'OldStreamer' bit in this instance and its elements.; Needed for backward compatibility in talking to old client / masters. void SetEntryList(TObject* aList); Set entry (or event) list for this data set. void SplitEntryList(); Splits the main entry (or event) list into sub-lists for the elements of; thet data set. Int_t GetNumOfFiles(); Return the number of files in the dataset. TDSetElement& operator=(const TDSet& ). const char * GetObjName() const; { return GetTitle(); }. const char * GetDirectory() const. TObject * GetEntryList() const; { return fEntryList; }. TDSet(const TDSet& ). Long64_t Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:4368,Security,Hash,Hash,4368,"r); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tGetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tGetNumOfFiles(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*GetObjName() const; virtual Option_t*TObject::GetOption() const; TObject*GetOutput(const char* name); TList*GetOutputList(); virtual const char*TNamed::GetTitle() const; virtual TTree*GetTreeHeader(TProof* proof); const char*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsTree() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; voidLookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDSetElement*Next(Long64_t totalEntries = -1); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::oper",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:13749,Security,access,access,13749," added to 'badlist', if; the latter is defined. By default availableOnly is false. void SetSrvMaps(TList* srvmaps = 0); Set (or unset) the list for mapping servers coordinate for files.; Reinitialize the related iterator if needed.; Used by TProof. Bool_t Add(TFileInfo* fileinfo, const char* meta = 0); Add file described by 'fi' to list of files to be analyzed.; The argument 'meta' can be used to specify a subsets in the; file as described in the metadata of TFileInfo. By default the first one; is taken. Int_t ExportFileList(const char* filepath, Option_t* opt = """"); Export TDSetElements files as list of TFileInfo objects in file; 'fpath'. If the file exists already the action fails, unless; 'opt == ""F""'.; Return 0 on success, -1 otherwise. void AddFriend(TDSet* friendset, const char* alias); Add friend dataset to this set. Only possible if the TDSet type is; a TTree or derived class. The friendset will be owned by this class; and deleted in its destructor. void Reset(); Reset or initialize access to the elements. Long64_t GetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); Returns number of entries in tree or objects in file. Returns -1 in; case of error. Long64_t Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; This function accepts a TCut objects as argument.; Use the operator+ to concatenate cuts.; Example:; dset.Draw(""x"",cut1+cut2+cut3);. Long64_t Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; For more see TTree::Draw(). void StartViewer(); Start the TTreeViewer on this TTree. TTree* GetTreeHeader(TProof* proof); Returns a tree header conta",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:15014,Security,Validat,Validate,15014,"64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; This function accepts a TCut objects as argument.; Use the operator+ to concatenate cuts.; Example:; dset.Draw(""x"",cut1+cut2+cut3);. Long64_t Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; For more see TTree::Draw(). void StartViewer(); Start the TTreeViewer on this TTree. TTree* GetTreeHeader(TProof* proof); Returns a tree header containing the branches' structure of the dataset. Bool_t ElementsValid(); Check if all elements are valid. Int_t Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); Remove TDSetElement 'elem' from the list.; Return 0 on success, -1 if the element is not in the list. void Validate(); Validate the TDSet by opening files. void Lookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); Resolve the end-point URL for the current elements of this data set; If the removeMissing option is set to kTRUE, remove the TDSetElements; that can not be located.; The method returns the list of removed TDSetElements in *listOfMissingFiles; if the latter is defined (the list must be created outside). void SetLookedUp(); Flag all the elements as looked-up, so to avoid opening the files; if the functionality is not supported. void Validate(TDSet* dset); Validate the TDSet against another TDSet.; Only validates elements in common from input TDSet. void Streamer(TBuffer& ); Stream an object of class TDSet. void SetWriteV3(Bool_t on = kTRUE); Set/Reset the 'OldStreamer' bit in this instance and its elements.; Needed for backward compatibility in talking to old client / masters. void SetEntryList(TObject* aList); Set entry (or event) list for this data set. void SplitEntryList(); Splits the ma",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:15026,Security,Validat,Validate,15026,"64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; This function accepts a TCut objects as argument.; Use the operator+ to concatenate cuts.; Example:; dset.Draw(""x"",cut1+cut2+cut3);. Long64_t Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw expression varexp for specified entries.; Returns -1 in case of error or number of selected events in case of success.; For more see TTree::Draw(). void StartViewer(); Start the TTreeViewer on this TTree. TTree* GetTreeHeader(TProof* proof); Returns a tree header containing the branches' structure of the dataset. Bool_t ElementsValid(); Check if all elements are valid. Int_t Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); Remove TDSetElement 'elem' from the list.; Return 0 on success, -1 if the element is not in the list. void Validate(); Validate the TDSet by opening files. void Lookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); Resolve the end-point URL for the current elements of this data set; If the removeMissing option is set to kTRUE, remove the TDSetElements; that can not be located.; The method returns the list of removed TDSetElements in *listOfMissingFiles; if the latter is defined (the list must be created outside). void SetLookedUp(); Flag all the elements as looked-up, so to avoid opening the files; if the functionality is not supported. void Validate(TDSet* dset); Validate the TDSet against another TDSet.; Only validates elements in common from input TDSet. void Streamer(TBuffer& ); Stream an object of class TDSet. void SetWriteV3(Bool_t on = kTRUE); Set/Reset the 'OldStreamer' bit in this instance and its elements.; Needed for backward compatibility in talking to old client / masters. void SetEntryList(TObject* aList); Set entry (or event) list for this data set. void SplitEntryList(); Splits the ma",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:15568,Security,Validat,Validate,15568," more see TTree::Draw(). void StartViewer(); Start the TTreeViewer on this TTree. TTree* GetTreeHeader(TProof* proof); Returns a tree header containing the branches' structure of the dataset. Bool_t ElementsValid(); Check if all elements are valid. Int_t Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); Remove TDSetElement 'elem' from the list.; Return 0 on success, -1 if the element is not in the list. void Validate(); Validate the TDSet by opening files. void Lookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); Resolve the end-point URL for the current elements of this data set; If the removeMissing option is set to kTRUE, remove the TDSetElements; that can not be located.; The method returns the list of removed TDSetElements in *listOfMissingFiles; if the latter is defined (the list must be created outside). void SetLookedUp(); Flag all the elements as looked-up, so to avoid opening the files; if the functionality is not supported. void Validate(TDSet* dset); Validate the TDSet against another TDSet.; Only validates elements in common from input TDSet. void Streamer(TBuffer& ); Stream an object of class TDSet. void SetWriteV3(Bool_t on = kTRUE); Set/Reset the 'OldStreamer' bit in this instance and its elements.; Needed for backward compatibility in talking to old client / masters. void SetEntryList(TObject* aList); Set entry (or event) list for this data set. void SplitEntryList(); Splits the main entry (or event) list into sub-lists for the elements of; thet data set. Int_t GetNumOfFiles(); Return the number of files in the dataset. TDSetElement& operator=(const TDSet& ). const char * GetObjName() const; { return GetTitle(); }. const char * GetDirectory() const. TObject * GetEntryList() const; { return fEntryList; }. TDSet(const TDSet& ). Long64_t Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). Bool_t IsTree() const; { return fIsTree; }. Bool_t IsValid() const; { return !fT",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:15591,Security,Validat,Validate,15591," more see TTree::Draw(). void StartViewer(); Start the TTreeViewer on this TTree. TTree* GetTreeHeader(TProof* proof); Returns a tree header containing the branches' structure of the dataset. Bool_t ElementsValid(); Check if all elements are valid. Int_t Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); Remove TDSetElement 'elem' from the list.; Return 0 on success, -1 if the element is not in the list. void Validate(); Validate the TDSet by opening files. void Lookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); Resolve the end-point URL for the current elements of this data set; If the removeMissing option is set to kTRUE, remove the TDSetElements; that can not be located.; The method returns the list of removed TDSetElements in *listOfMissingFiles; if the latter is defined (the list must be created outside). void SetLookedUp(); Flag all the elements as looked-up, so to avoid opening the files; if the functionality is not supported. void Validate(TDSet* dset); Validate the TDSet against another TDSet.; Only validates elements in common from input TDSet. void Streamer(TBuffer& ); Stream an object of class TDSet. void SetWriteV3(Bool_t on = kTRUE); Set/Reset the 'OldStreamer' bit in this instance and its elements.; Needed for backward compatibility in talking to old client / masters. void SetEntryList(TObject* aList); Set entry (or event) list for this data set. void SplitEntryList(); Splits the main entry (or event) list into sub-lists for the elements of; thet data set. Int_t GetNumOfFiles(); Return the number of files in the dataset. TDSetElement& operator=(const TDSet& ). const char * GetObjName() const; { return GetTitle(); }. const char * GetDirectory() const. TObject * GetEntryList() const; { return fEntryList; }. TDSet(const TDSet& ). Long64_t Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). Bool_t IsTree() const; { return fIsTree; }. Bool_t IsValid() const; { return !fT",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:15639,Security,validat,validates,15639,"iewer on this TTree. TTree* GetTreeHeader(TProof* proof); Returns a tree header containing the branches' structure of the dataset. Bool_t ElementsValid(); Check if all elements are valid. Int_t Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); Remove TDSetElement 'elem' from the list.; Return 0 on success, -1 if the element is not in the list. void Validate(); Validate the TDSet by opening files. void Lookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); Resolve the end-point URL for the current elements of this data set; If the removeMissing option is set to kTRUE, remove the TDSetElements; that can not be located.; The method returns the list of removed TDSetElements in *listOfMissingFiles; if the latter is defined (the list must be created outside). void SetLookedUp(); Flag all the elements as looked-up, so to avoid opening the files; if the functionality is not supported. void Validate(TDSet* dset); Validate the TDSet against another TDSet.; Only validates elements in common from input TDSet. void Streamer(TBuffer& ); Stream an object of class TDSet. void SetWriteV3(Bool_t on = kTRUE); Set/Reset the 'OldStreamer' bit in this instance and its elements.; Needed for backward compatibility in talking to old client / masters. void SetEntryList(TObject* aList); Set entry (or event) list for this data set. void SplitEntryList(); Splits the main entry (or event) list into sub-lists for the elements of; thet data set. Int_t GetNumOfFiles(); Return the number of files in the dataset. TDSetElement& operator=(const TDSet& ). const char * GetObjName() const; { return GetTitle(); }. const char * GetDirectory() const. TObject * GetEntryList() const; { return fEntryList; }. TDSet(const TDSet& ). Long64_t Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). Bool_t IsTree() const; { return fIsTree; }. Bool_t IsValid() const; { return !fType.IsNull(); }. const char * GetType() const; { return fType;",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:557,Testability,log,logical,557,". TDSet. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOF; » TDSet. class TDSet: public TNamed. TDSet. This class implements a data set to be used for PROOF processing.; The TDSet defines the class of which objects will be processed,; the directory in the file where the objects of that type can be; found and the list of files to be processed. The files can be; specified as logical file names (LFN's) or as physical file names; (PFN's). In case of LFN's the resolution to PFN's will be done; according to the currently active GRID interface.; Examples:; TDSet treeset(""TTree"", ""AOD"");; treeset.Add(""lfn:/alien.cern.ch/alice/prod2002/file1"");. treeset.AddFriend(friendset);. or. TDSet objset(""MyEvent"", ""*"", ""/events"");; objset.Add(""root://cms.cern.ch/user/prod2002/hprod_1.root"");. objset.Add(set2003);. Validity of file names will only be checked at processing time; (typically on the PROOF master server), not at creation time. Function Members (Methods); public:. TDSet(); TDSet(const TChain& chain, Bool_t withfriends = kTRUE); TDSet(const char* name, const char* objname = ""*"", const char* dir = ""/"", const char* type = 0); virtual~TDSet(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tAdd(TDSet* set); virtual Bool_tAdd(TFileInfo* fileinfo, const char* meta = 0); virtual Bool_tAdd(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); virtual Bool_tAdd(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); virtual voidAddFriend(TDSet* friendset, const char* alias); voidAddInput(TObject* obj); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtu",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:7439,Testability,Test,TestBit,7439,"ss(TSelector* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0)MENU ; virtual Long64_tProcess(const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0)MENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Int_tRemove(TDSetElement* elem, Bool_t deleteElem = kTRUE); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDirectory(const char* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetEntryList(TObject* aList); voidSetLookedUp(); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetObjName(const char* objname); voidSetSrvMaps(TList* srvmaps = 0); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidSetWriteV3(Bool_t on = kTRUE); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStartViewer()MENU ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voidValidate(); voidValidate(TDSet* dset); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:7478,Testability,Test,TestBits,7478,"ss(TSelector* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0)MENU ; virtual Long64_tProcess(const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0)MENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Int_tRemove(TDSetElement* elem, Bool_t deleteElem = kTRUE); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDirectory(const char* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetEntryList(TObject* aList); voidSetLookedUp(); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetObjName(const char* objname); voidSetSrvMaps(TList* srvmaps = 0); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidSetWriteV3(Bool_t on = kTRUE); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStartViewer()MENU ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voidValidate(); voidValidate(TDSet* dset); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:2016,Usability,Clear,Clear,2016," TDSet(); TDSet(const TChain& chain, Bool_t withfriends = kTRUE); TDSet(const char* name, const char* objname = ""*"", const char* dir = ""/"", const char* type = 0); virtual~TDSet(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tAdd(TDSet* set); virtual Bool_tAdd(TFileInfo* fileinfo, const char* meta = 0); virtual Bool_tAdd(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); virtual Bool_tAdd(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); virtual voidAddFriend(TDSet* friendset, const char* alias); voidAddInput(TObject* obj); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtu",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:11370,Usability,Clear,ClearInput,11370,"s constructor substituted the static methods TChain::MakeTDSet; removing any residual dependence of 'tree' on 'proof'. ~TDSet(); Cleanup. Long64_t Process(TSelector* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0); Process TDSet on currently active PROOF session.; The last argument 'enl' specifies an entry- or event-list to be used as; event selection.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Long64_t Process(const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0); Process TDSet on currently active PROOF session.; The last argument 'enl' specifies an entry- or event-list to be used as; event selection.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. void AddInput(TObject* obj); Add objects that might be needed during the processing of; the selector (see Process()). void ClearInput(); Clear input object list. TObject * GetOutput(const char* name); Get specified object that has been produced during the processing; (see Process()). TList * GetOutputList(); Get list with all object created during processing (see Process()). void Print(Option_t* option = """") const; Print TDSet basic or full data. When option=""a"" print full data. void SetObjName(const char* objname); Set/change object name. void SetDirectory(const char* dir); Set/change directory. Bool_t Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); Add file to list of files to be analyzed. Optionally with the; objname and dir arguments the default, TDSet wide, objname and; dir can be overridden. Bool_t Add(TDSet* set); Add specified data set to the this set. Bool_t Add(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); Add files passed as list of TFileInfo, TUrl or TObjString objects .; If",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSet.html:11384,Usability,Clear,Clear,11384,"s constructor substituted the static methods TChain::MakeTDSet; removing any residual dependence of 'tree' on 'proof'. ~TDSet(); Cleanup. Long64_t Process(TSelector* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0); Process TDSet on currently active PROOF session.; The last argument 'enl' specifies an entry- or event-list to be used as; event selection.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Long64_t Process(const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0); Process TDSet on currently active PROOF session.; The last argument 'enl' specifies an entry- or event-list to be used as; event selection.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. void AddInput(TObject* obj); Add objects that might be needed during the processing of; the selector (see Process()). void ClearInput(); Clear input object list. TObject * GetOutput(const char* name); Get specified object that has been produced during the processing; (see Process()). TList * GetOutputList(); Get list with all object created during processing (see Process()). void Print(Option_t* option = """") const; Print TDSet basic or full data. When option=""a"" print full data. void SetObjName(const char* objname); Set/change object name. void SetDirectory(const char* dir); Set/change directory. Bool_t Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); Add file to list of files to be analyzed. Optionally with the; objname and dir arguments the default, TDSet wide, objname and; dir can be overridden. Bool_t Add(TDSet* set); Add specified data set to the this set. Bool_t Add(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); Add files passed as list of TFileInfo, TUrl or TObjString objects .; If",MatchSource.WIKI,root/html534/TDSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSet.html
https://root.cern/root/html534/TDSetElement.html:2327,Availability,Error,Error,2327,"_t num = -1, const char* msd = 0, const char* dataset = 0); virtual~TDSetElement(); voidTObject::AbstractMethod(const char* method) const; voidAddAssocObj(TObject* assocobj); virtual voidAddFriend(TDSetElement* friendElement, const char* alias); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteFriends(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TObject*GetAssocObj(Long64_t i, Bool_t isentry = kFALSE); const char*GetDataSet() const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); TObject*GetEntryList() const; TFileInfo*GetFileInfo(const char* type = ""TTree""); const char*GetFileName() const; Long64_tGetFirst() const; virtual const char*TObject::GetIconName() const; T",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:2456,Availability,error,error,2456,"d) const; voidAddAssocObj(TObject* assocobj); virtual voidAddFriend(TDSetElement* friendElement, const char* alias); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteFriends(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TObject*GetAssocObj(Long64_t i, Bool_t isentry = kFALSE); const char*GetDataSet() const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); TObject*GetEntryList() const; TFileInfo*GetFileInfo(const char* type = ""TTree""); const char*GetFileName() const; Long64_tGetFirst() const; virtual const char*TObject::GetIconName() const; TList*GetListOfAssocObjs() const; virtual TList*GetListOfFriends() const; Float_tGetMaxProcTime() const; const char*GetMsd() const",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:2540,Availability,error,error,2540,"iendElement, const char* alias); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteFriends(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TObject*GetAssocObj(Long64_t i, Bool_t isentry = kFALSE); const char*GetDataSet() const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); TObject*GetEntryList() const; TFileInfo*GetFileInfo(const char* type = ""TTree""); const char*GetFileName() const; Long64_tGetFirst() const; virtual const char*TObject::GetIconName() const; TList*GetListOfAssocObjs() const; virtual TList*GetListOfFriends() const; Float_tGetMaxProcTime() const; const char*GetMsd() const; virtual const char*TNamed::GetName() const; Long64_tGetNum() const; virtual char*T",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:10027,Availability,down,down,10027,"ent; -1 if the elements are neither overlapping nor subsequent. TFileInfo * GetFileInfo(const char* type = ""TTree""); Return the content of this element in the form of a TFileInfo. const char * GetDirectory() const; Return directory where to look for object. void Print(Option_t* options = """") const; Print a TDSetElement. When option=""a"" print full data. void Validate(Bool_t isTree); Validate by opening the file. void Validate(TDSetElement* elem); Validate by checking against another element. Int_t Compare(const TObject* obj) const; Compare elements by filename (and the fFirst). void AddFriend(TDSetElement* friendElement, const char* alias); Add friend TDSetElement to this set. The friend element will be copied to this object. void DeleteFriends(); Deletes the list of friends and all the friends on the list. Long64_t GetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); Returns number of entries in tree or objects in file.; If not yet defined and 'openfile' is TRUE, get the number from the file; (may considerably slow down the application).; Returns -1 in case of error. Int_t Lookup(Bool_t force = kFALSE); Resolve end-point URL for this element; Return 0 on success and -1 otherwise. void SetEntryList(TObject* aList, Long64_t first = -1, Long64_t num = -1); Set entry (or event) list for this element. void AddAssocObj(TObject* assocobj); Add an associated object to the list. TObject * GetAssocObj(Long64_t i, Bool_t isentry = kFALSE); Get i-th associated object.; If 'isentry' fFirst is subtracted, so that i == fFirst returns the first; object in the list.; If there are not enough elements in the list, the element i%list_size is; returned (if the list has only one element this only one element is always; returned.; This method is used when packet processing consist in processing the objects; in the associated object list. void Streamer(TBuffer& ); Stream an object of class TDSetElement. Bool_t HasBeenLookedUp() const; { return TestBit(kHasBeenLookedUp); }. TDSetElem",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:10073,Availability,error,error,10073," GetFileInfo(const char* type = ""TTree""); Return the content of this element in the form of a TFileInfo. const char * GetDirectory() const; Return directory where to look for object. void Print(Option_t* options = """") const; Print a TDSetElement. When option=""a"" print full data. void Validate(Bool_t isTree); Validate by opening the file. void Validate(TDSetElement* elem); Validate by checking against another element. Int_t Compare(const TObject* obj) const; Compare elements by filename (and the fFirst). void AddFriend(TDSetElement* friendElement, const char* alias); Add friend TDSetElement to this set. The friend element will be copied to this object. void DeleteFriends(); Deletes the list of friends and all the friends on the list. Long64_t GetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); Returns number of entries in tree or objects in file.; If not yet defined and 'openfile' is TRUE, get the number from the file; (may considerably slow down the application).; Returns -1 in case of error. Int_t Lookup(Bool_t force = kFALSE); Resolve end-point URL for this element; Return 0 on success and -1 otherwise. void SetEntryList(TObject* aList, Long64_t first = -1, Long64_t num = -1); Set entry (or event) list for this element. void AddAssocObj(TObject* assocobj); Add an associated object to the list. TObject * GetAssocObj(Long64_t i, Bool_t isentry = kFALSE); Get i-th associated object.; If 'isentry' fFirst is subtracted, so that i == fFirst returns the first; object in the list.; If there are not enough elements in the list, the element i%list_size is; returned (if the list has only one element this only one element is always; returned.; This method is used when packet processing consist in processing the objects; in the associated object list. void Streamer(TBuffer& ); Stream an object of class TDSetElement. Bool_t HasBeenLookedUp() const; { return TestBit(kHasBeenLookedUp); }. TDSetElement& operator=(const TDSetElement& ). TList * GetListOfFriends() const; { r",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:735,Integrability,interface,interface,735,". TDSetElement. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOF; » TDSetElement. class TDSetElement: public TNamed. TDSet. This class implements a data set to be used for PROOF processing.; The TDSet defines the class of which objects will be processed,; the directory in the file where the objects of that type can be; found and the list of files to be processed. The files can be; specified as logical file names (LFN's) or as physical file names; (PFN's). In case of LFN's the resolution to PFN's will be done; according to the currently active GRID interface.; Examples:; TDSet treeset(""TTree"", ""AOD"");; treeset.Add(""lfn:/alien.cern.ch/alice/prod2002/file1"");. treeset.AddFriend(friendset);. or. TDSet objset(""MyEvent"", ""*"", ""/events"");; objset.Add(""root://cms.cern.ch/user/prod2002/hprod_1.root"");. objset.Add(set2003);. Validity of file names will only be checked at processing time; (typically on the PROOF master server), not at creation time. Function Members (Methods); public:. TDSetElement(); TDSetElement(const TDSetElement& elem); TDSetElement(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0, const char* dataset = 0); virtual~TDSetElement(); voidTObject::AbstractMethod(const char* method) const; voidAddAssocObj(TObject* assocobj); virtual voidAddFriend(TDSetElement* friendElement, const char* alias); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """"",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:4036,Modifiability,Inherit,InheritsFrom,4036," Long_tTObject::GetDtorOnly(); Long64_tGetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); TObject*GetEntryList() const; TFileInfo*GetFileInfo(const char* type = ""TTree""); const char*GetFileName() const; Long64_tGetFirst() const; virtual const char*TObject::GetIconName() const; TList*GetListOfAssocObjs() const; virtual TList*GetListOfFriends() const; Float_tGetMaxProcTime() const; const char*GetMsd() const; virtual const char*TNamed::GetName() const; Long64_tGetNum() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*GetObjName() const; virtual Option_t*TObject::GetOption() const; Long64_tGetTDSetOffset() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetValid() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidInvalidate(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; Int_tLookup(Bool_t force = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMergeElement(TDSetElement* elem); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::o",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:4102,Modifiability,Inherit,InheritsFrom,4102,"kTRUE, Bool_t openfile = kTRUE); TObject*GetEntryList() const; TFileInfo*GetFileInfo(const char* type = ""TTree""); const char*GetFileName() const; Long64_tGetFirst() const; virtual const char*TObject::GetIconName() const; TList*GetListOfAssocObjs() const; virtual TList*GetListOfFriends() const; Float_tGetMaxProcTime() const; const char*GetMsd() const; virtual const char*TNamed::GetName() const; Long64_tGetNum() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*GetObjName() const; virtual Option_t*TObject::GetOption() const; Long64_tGetTDSetOffset() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetValid() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidInvalidate(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; Int_tLookup(Bool_t force = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMergeElement(TDSetElement* elem); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](siz",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:8387,Modifiability,Inherit,Inheritance,8387,"Delete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TList*fAssocObjListList of objects associated to this element; TStringfDataSetName of the dataset of which this element is part; TStringfDirectorydirectory in file where to look for objects; Long64_tfEntriestotal number of possible entries in file; TObject*fEntryListentry (or event) list to be used in processing; Long64_tfFirstfirst entry to process; TList*fFriendsfriend elements; Float_tfMaxProcTimeMax processing time in secs; -1 no limit; TStringfMsdmass storage domain name; Long64_tfNumnumber of entries to process; Long64_tfTDSetOffsetthe global offset in the TDSet of the first; Bool_tfValidwhether or not the input values are valid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDSetElement(); Default constructor. TDSetElement(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0, const char* dataset = 0); Create a TDSet element. TDSetElement(const TDSetElement& elem); copy constructor. ~TDSetElement(); Clean up the element. Int_t MergeElement(TDSetElement* elem); Check if 'elem' is overlapping or subsequent and, if the case, return; a merged element.; Returns:; 1 if the elements are overlapping; 0 if the elements are subsequent; -1 if the elements are neither overlapping nor subsequent. TFileInfo * GetFileInfo(const char* type = ""TTree""); Return the content of this element in the form of a TFileInfo. const char * GetDirectory() const; Return directory where to look for object. void Print(Option_t* options = """") const; Print a TDSetElement. When option=""a"" print full data. void Validate(Bool_t isTree); Validate by opening the file. void Vali",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:8400,Modifiability,Inherit,Inherited,8400,"Delete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TList*fAssocObjListList of objects associated to this element; TStringfDataSetName of the dataset of which this element is part; TStringfDirectorydirectory in file where to look for objects; Long64_tfEntriestotal number of possible entries in file; TObject*fEntryListentry (or event) list to be used in processing; Long64_tfFirstfirst entry to process; TList*fFriendsfriend elements; Float_tfMaxProcTimeMax processing time in secs; -1 no limit; TStringfMsdmass storage domain name; Long64_tfNumnumber of entries to process; Long64_tfTDSetOffsetthe global offset in the TDSet of the first; Bool_tfValidwhether or not the input values are valid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDSetElement(); Default constructor. TDSetElement(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0, const char* dataset = 0); Create a TDSet element. TDSetElement(const TDSetElement& elem); copy constructor. ~TDSetElement(); Clean up the element. Int_t MergeElement(TDSetElement* elem); Check if 'elem' is overlapping or subsequent and, if the case, return; a merged element.; Returns:; 1 if the elements are overlapping; 0 if the elements are subsequent; -1 if the elements are neither overlapping nor subsequent. TFileInfo * GetFileInfo(const char* type = ""TTree""); Return the content of this element in the form of a TFileInfo. const char * GetDirectory() const; Return directory where to look for object. void Print(Option_t* options = """") const; Print a TDSetElement. When option=""a"" print full data. void Validate(Bool_t isTree); Validate by opening the file. void Vali",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:3926,Security,Hash,Hash,3926," char*GetDataSet() const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); TObject*GetEntryList() const; TFileInfo*GetFileInfo(const char* type = ""TTree""); const char*GetFileName() const; Long64_tGetFirst() const; virtual const char*TObject::GetIconName() const; TList*GetListOfAssocObjs() const; virtual TList*GetListOfFriends() const; Float_tGetMaxProcTime() const; const char*GetMsd() const; virtual const char*TNamed::GetName() const; Long64_tGetNum() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*GetObjName() const; virtual Option_t*TObject::GetOption() const; Long64_tGetTDSetOffset() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetValid() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidInvalidate(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; Int_tLookup(Bool_t force = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMergeElement(TDSetElement* elem); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); ",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:9349,Security,Validat,Validate,9349,"Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDSetElement(); Default constructor. TDSetElement(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0, const char* dataset = 0); Create a TDSet element. TDSetElement(const TDSetElement& elem); copy constructor. ~TDSetElement(); Clean up the element. Int_t MergeElement(TDSetElement* elem); Check if 'elem' is overlapping or subsequent and, if the case, return; a merged element.; Returns:; 1 if the elements are overlapping; 0 if the elements are subsequent; -1 if the elements are neither overlapping nor subsequent. TFileInfo * GetFileInfo(const char* type = ""TTree""); Return the content of this element in the form of a TFileInfo. const char * GetDirectory() const; Return directory where to look for object. void Print(Option_t* options = """") const; Print a TDSetElement. When option=""a"" print full data. void Validate(Bool_t isTree); Validate by opening the file. void Validate(TDSetElement* elem); Validate by checking against another element. Int_t Compare(const TObject* obj) const; Compare elements by filename (and the fFirst). void AddFriend(TDSetElement* friendElement, const char* alias); Add friend TDSetElement to this set. The friend element will be copied to this object. void DeleteFriends(); Deletes the list of friends and all the friends on the list. Long64_t GetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); Returns number of entries in tree or objects in file.; If not yet defined and 'openfile' is TRUE, get the number from the file; (may considerably slow down the application).; Returns -1 in case of error. Int_t Lookup(Bool_t force = kFALSE); Resolve end-point URL for this element; Return 0 on success and -1 otherwise. void SetEntryList(TObject* aList, Long64_t first = -1, Long64_t num = -1); Set entry (or event) list for this element. void AddAssocObj(TObject* assocobj); Add an associated obje",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:9374,Security,Validat,Validate,9374,"Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDSetElement(); Default constructor. TDSetElement(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0, const char* dataset = 0); Create a TDSet element. TDSetElement(const TDSetElement& elem); copy constructor. ~TDSetElement(); Clean up the element. Int_t MergeElement(TDSetElement* elem); Check if 'elem' is overlapping or subsequent and, if the case, return; a merged element.; Returns:; 1 if the elements are overlapping; 0 if the elements are subsequent; -1 if the elements are neither overlapping nor subsequent. TFileInfo * GetFileInfo(const char* type = ""TTree""); Return the content of this element in the form of a TFileInfo. const char * GetDirectory() const; Return directory where to look for object. void Print(Option_t* options = """") const; Print a TDSetElement. When option=""a"" print full data. void Validate(Bool_t isTree); Validate by opening the file. void Validate(TDSetElement* elem); Validate by checking against another element. Int_t Compare(const TObject* obj) const; Compare elements by filename (and the fFirst). void AddFriend(TDSetElement* friendElement, const char* alias); Add friend TDSetElement to this set. The friend element will be copied to this object. void DeleteFriends(); Deletes the list of friends and all the friends on the list. Long64_t GetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); Returns number of entries in tree or objects in file.; If not yet defined and 'openfile' is TRUE, get the number from the file; (may considerably slow down the application).; Returns -1 in case of error. Int_t Lookup(Bool_t force = kFALSE); Resolve end-point URL for this element; Return 0 on success and -1 otherwise. void SetEntryList(TObject* aList, Long64_t first = -1, Long64_t num = -1); Set entry (or event) list for this element. void AddAssocObj(TObject* assocobj); Add an associated obje",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:9409,Security,Validat,Validate,9409,"ction documentation; TDSetElement(); Default constructor. TDSetElement(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0, const char* dataset = 0); Create a TDSet element. TDSetElement(const TDSetElement& elem); copy constructor. ~TDSetElement(); Clean up the element. Int_t MergeElement(TDSetElement* elem); Check if 'elem' is overlapping or subsequent and, if the case, return; a merged element.; Returns:; 1 if the elements are overlapping; 0 if the elements are subsequent; -1 if the elements are neither overlapping nor subsequent. TFileInfo * GetFileInfo(const char* type = ""TTree""); Return the content of this element in the form of a TFileInfo. const char * GetDirectory() const; Return directory where to look for object. void Print(Option_t* options = """") const; Print a TDSetElement. When option=""a"" print full data. void Validate(Bool_t isTree); Validate by opening the file. void Validate(TDSetElement* elem); Validate by checking against another element. Int_t Compare(const TObject* obj) const; Compare elements by filename (and the fFirst). void AddFriend(TDSetElement* friendElement, const char* alias); Add friend TDSetElement to this set. The friend element will be copied to this object. void DeleteFriends(); Deletes the list of friends and all the friends on the list. Long64_t GetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); Returns number of entries in tree or objects in file.; If not yet defined and 'openfile' is TRUE, get the number from the file; (may considerably slow down the application).; Returns -1 in case of error. Int_t Lookup(Bool_t force = kFALSE); Resolve end-point URL for this element; Return 0 on success and -1 otherwise. void SetEntryList(TObject* aList, Long64_t first = -1, Long64_t num = -1); Set entry (or event) list for this element. void AddAssocObj(TObject* assocobj); Add an associated object to the list. TObject * GetAssocObj(Long64_t i, Bool_t isentry = kFAL",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:9439,Security,Validat,Validate,9439,"ction documentation; TDSetElement(); Default constructor. TDSetElement(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0, const char* dataset = 0); Create a TDSet element. TDSetElement(const TDSetElement& elem); copy constructor. ~TDSetElement(); Clean up the element. Int_t MergeElement(TDSetElement* elem); Check if 'elem' is overlapping or subsequent and, if the case, return; a merged element.; Returns:; 1 if the elements are overlapping; 0 if the elements are subsequent; -1 if the elements are neither overlapping nor subsequent. TFileInfo * GetFileInfo(const char* type = ""TTree""); Return the content of this element in the form of a TFileInfo. const char * GetDirectory() const; Return directory where to look for object. void Print(Option_t* options = """") const; Print a TDSetElement. When option=""a"" print full data. void Validate(Bool_t isTree); Validate by opening the file. void Validate(TDSetElement* elem); Validate by checking against another element. Int_t Compare(const TObject* obj) const; Compare elements by filename (and the fFirst). void AddFriend(TDSetElement* friendElement, const char* alias); Add friend TDSetElement to this set. The friend element will be copied to this object. void DeleteFriends(); Deletes the list of friends and all the friends on the list. Long64_t GetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); Returns number of entries in tree or objects in file.; If not yet defined and 'openfile' is TRUE, get the number from the file; (may considerably slow down the application).; Returns -1 in case of error. Int_t Lookup(Bool_t force = kFALSE); Resolve end-point URL for this element; Return 0 on success and -1 otherwise. void SetEntryList(TObject* aList, Long64_t first = -1, Long64_t num = -1); Set entry (or event) list for this element. void AddAssocObj(TObject* assocobj); Add an associated object to the list. TObject * GetAssocObj(Long64_t i, Bool_t isentry = kFAL",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:578,Testability,log,logical,578,". TDSetElement. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOF; » TDSetElement. class TDSetElement: public TNamed. TDSet. This class implements a data set to be used for PROOF processing.; The TDSet defines the class of which objects will be processed,; the directory in the file where the objects of that type can be; found and the list of files to be processed. The files can be; specified as logical file names (LFN's) or as physical file names; (PFN's). In case of LFN's the resolution to PFN's will be done; according to the currently active GRID interface.; Examples:; TDSet treeset(""TTree"", ""AOD"");; treeset.Add(""lfn:/alien.cern.ch/alice/prod2002/file1"");. treeset.AddFriend(friendset);. or. TDSet objset(""MyEvent"", ""*"", ""/events"");; objset.Add(""root://cms.cern.ch/user/prod2002/hprod_1.root"");. objset.Add(set2003);. Validity of file names will only be checked at processing time; (typically on the PROOF master server), not at creation time. Function Members (Methods); public:. TDSetElement(); TDSetElement(const TDSetElement& elem); TDSetElement(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0, const char* dataset = 0); virtual~TDSetElement(); voidTObject::AbstractMethod(const char* method) const; voidAddAssocObj(TObject* assocobj); virtual voidAddFriend(TDSetElement* friendElement, const char* alias); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """"",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:6616,Testability,Test,TestBit,6616,"::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* options = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDataSet(const char* dataset); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetEntries(Long64_t ent); voidSetEntryList(TObject* aList, Long64_t first = -1, Long64_t num = -1); voidSetFirst(Long64_t first); voidSetLookedUp(); voidSetMaxProcTime(Float_t mpt); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidSetNum(Long64_t num); static voidTObject::SetObjectStat(Bool_t stat); voidSetTDSetOffset(Long64_t offset); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidSetValid(); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voidValidate(Bool_t isTree); voidValidate(TDSetElement* elem); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:6655,Testability,Test,TestBits,6655,"::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* options = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDataSet(const char* dataset); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetEntries(Long64_t ent); voidSetEntryList(TObject* aList, Long64_t first = -1, Long64_t num = -1); voidSetFirst(Long64_t first); voidSetLookedUp(); voidSetMaxProcTime(Float_t mpt); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidSetNum(Long64_t num); static voidTObject::SetObjectStat(Bool_t stat); voidSetTDSetOffset(Long64_t offset); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidSetValid(); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voidValidate(Bool_t isTree); voidValidate(TDSetElement* elem); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:10950,Testability,Test,TestBit,10950,"efined and 'openfile' is TRUE, get the number from the file; (may considerably slow down the application).; Returns -1 in case of error. Int_t Lookup(Bool_t force = kFALSE); Resolve end-point URL for this element; Return 0 on success and -1 otherwise. void SetEntryList(TObject* aList, Long64_t first = -1, Long64_t num = -1); Set entry (or event) list for this element. void AddAssocObj(TObject* assocobj); Add an associated object to the list. TObject * GetAssocObj(Long64_t i, Bool_t isentry = kFALSE); Get i-th associated object.; If 'isentry' fFirst is subtracted, so that i == fFirst returns the first; object in the list.; If there are not enough elements in the list, the element i%list_size is; returned (if the list has only one element this only one element is always; returned.; This method is used when packet processing consist in processing the objects; in the associated object list. void Streamer(TBuffer& ); Stream an object of class TDSetElement. Bool_t HasBeenLookedUp() const; { return TestBit(kHasBeenLookedUp); }. TDSetElement& operator=(const TDSetElement& ). TList * GetListOfFriends() const; { return fFriends; }. const char * GetFileName() const; { return GetName(); }. Long64_t GetFirst() const; { return fFirst; }. void SetFirst(Long64_t first); { fFirst = first; }. Long64_t GetNum() const; { return fNum; }. void SetEntries(Long64_t ent); { fEntries = ent; }. const char * GetMsd() const; { return fMsd; }. void SetNum(Long64_t num); { fNum = num; }. Bool_t GetValid() const; { return fValid; }. const char * GetObjName() const; { return GetTitle(); }. const char * GetDataSet() const; { return fDataSet; }. void SetDataSet(const char* dataset); { fDataSet = dataset; }. TList * GetListOfAssocObjs() const; { return fAssocObjList; }. Long64_t GetTDSetOffset() const; { return fTDSetOffset; }. void SetTDSetOffset(Long64_t offset); { fTDSetOffset = offset; }. TObject * GetEntryList() const; { return fEntryList; }. void Invalidate(); { fValid = kFALSE; }. void SetValid(",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetElement.html:1763,Usability,Clear,Clear,1763," TDSetElement(); TDSetElement(const TDSetElement& elem); TDSetElement(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0, const char* dataset = 0); virtual~TDSetElement(); voidTObject::AbstractMethod(const char* method) const; voidAddAssocObj(TObject* assocobj); virtual voidAddFriend(TDSetElement* friendElement, const char* alias); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """"",MatchSource.WIKI,root/html534/TDSetElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetElement.html
https://root.cern/root/html534/TDSetProxy.html:719,Availability,avail,availableOnly,719," TDSetProxy(); TDSetProxy(const char* type, const char* objname = ""*"", const char* dir = ""/""); ~TDSetProxy(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTDSet::Add(TDSet* set); virtual Bool_tTDSet::Add(TFileInfo* fileinfo, const char* meta = 0); virtual Bool_tTDSet::Add(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); virtual Bool_tTDSet::Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); virtual voidTDSet::AddFriend(TDSet* friendset, const char* alias); voidTDSet::AddInput(TObject* obj); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); voidTDSet::ClearInput(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*TDSet::Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDSet::Draw(Option_t* opt); virtual Long64_tTDSet::Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tTDSet::Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawC",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:2132,Availability,Error,Error,2132,"ass(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); voidTDSet::ClearInput(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*TDSet::Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDSet::Draw(Option_t* opt); virtual Long64_tTDSet::Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tTDSet::Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Bool_tTDSet::ElementsValid(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); Int_tTDSet::ExportFileList(const char* filepath, Option_t* opt = """"); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TDSet::GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tTDSet::GetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*TDSet::GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*TDSet::GetListOfElements() const; virtual const char*TNamed::GetName()",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:2261,Availability,error,error,2261,"virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*TDSet::Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDSet::Draw(Option_t* opt); virtual Long64_tTDSet::Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tTDSet::Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Bool_tTDSet::ElementsValid(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); Int_tTDSet::ExportFileList(const char* filepath, Option_t* opt = """"); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TDSet::GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tTDSet::GetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*TDSet::GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*TDSet::GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tTDSet::GetNumOfFiles(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObje",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:2345,Availability,error,error,2345,"Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*TDSet::Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDSet::Draw(Option_t* opt); virtual Long64_tTDSet::Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tTDSet::Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Bool_tTDSet::ElementsValid(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); Int_tTDSet::ExportFileList(const char* filepath, Option_t* opt = """"); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TDSet::GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tTDSet::GetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*TDSet::GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*TDSet::GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tTDSet::GetNumOfFiles(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*TDSet::GetObjName() const; virtual Option_t*TObject::GetOption(",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:3790,Modifiability,Inherit,InheritsFrom,3790,"*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tTDSet::GetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*TDSet::GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*TDSet::GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tTDSet::GetNumOfFiles(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*TDSet::GetObjName() const; virtual Option_t*TObject::GetOption() const; TObject*TDSet::GetOutput(const char* name); TList*TDSet::GetOutputList(); virtual const char*TNamed::GetTitle() const; virtual TTree*TDSet::GetTreeHeader(TProof* proof); const char*TDSet::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTDSet::IsTree() const; Bool_tTDSet::IsValid() const; Bool_tTObject::IsZombie() const; voidTDSet::Lookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDSetElement*Next(Long64_t totalEntries = -1); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static vo",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:3856,Modifiability,Inherit,InheritsFrom,3856,"(); static Long64_tTDSet::GetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*TDSet::GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*TDSet::GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tTDSet::GetNumOfFiles(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*TDSet::GetObjName() const; virtual Option_t*TObject::GetOption() const; TObject*TDSet::GetOutput(const char* name); TList*TDSet::GetOutputList(); virtual const char*TNamed::GetTitle() const; virtual TTree*TDSet::GetTreeHeader(TProof* proof); const char*TDSet::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTDSet::IsTree() const; Bool_tTDSet::IsValid() const; Bool_tTObject::IsZombie() const; voidTDSet::Lookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDSetElement*Next(Long64_t totalEntries = -1); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::o",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:8452,Modifiability,Inherit,Inheritance,8452," msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TDSet::EStatusBits { kWriteV3; kEmpty; kValidityChecked; kSomeInvalid; kMultiDSet; kIsLocal; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TDSetElement*TDSet::fCurrent! current element; TStringTDSet::fDirname of the directory; THashList*TDSet::fElements-> list of TDSetElements (or TDSets, if in multi mode); TIter*TDSet::fIterator! iterator on fElements; TStringTNamed::fNameobject identifier; TStringTDSet::fObjNamename of objects to be analyzed (e.g. TTree name); TList*TDSet::fSrvMaps! list for mapping server coordinates for files; TIter*TDSet::fSrvMapsIter! iterator on fSrvMaps; TStringTNamed::fTitleobject title; TStringTDSet::fTypetype of objects (e.g. TTree);. private:. TProofServ*fServ!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDSetProxy(); Constructor. TDSetProxy(const char* type, const char* objname = ""*"", const char* dir = ""/""); Constructor. void SetProofServ(TProofServ* serv); Set the reference TProofServ instance. void Reset(); Reset this instance. TDSetElement * Next(Long64_t totalEntries = -1); Get the next packet. » Author: Maarten Ballintijn 12/03/02 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:8465,Modifiability,Inherit,Inherited,8465," msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TDSet::EStatusBits { kWriteV3; kEmpty; kValidityChecked; kSomeInvalid; kMultiDSet; kIsLocal; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TDSetElement*TDSet::fCurrent! current element; TStringTDSet::fDirname of the directory; THashList*TDSet::fElements-> list of TDSetElements (or TDSets, if in multi mode); TIter*TDSet::fIterator! iterator on fElements; TStringTNamed::fNameobject identifier; TStringTDSet::fObjNamename of objects to be analyzed (e.g. TTree name); TList*TDSet::fSrvMaps! list for mapping server coordinates for files; TIter*TDSet::fSrvMapsIter! iterator on fSrvMaps; TStringTNamed::fTitleobject title; TStringTDSet::fTypetype of objects (e.g. TTree);. private:. TProofServ*fServ!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDSetProxy(); Constructor. TDSetProxy(const char* type, const char* objname = ""*"", const char* dir = ""/""); Constructor. void SetProofServ(TProofServ* serv); Set the reference TProofServ instance. void Reset(); Reset this instance. TDSetElement * Next(Long64_t totalEntries = -1); Get the next packet. » Author: Maarten Ballintijn 12/03/02 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:3680,Security,Hash,Hash,3680,"al TObject*TObject::FindObject(const TObject* obj) const; const char*TDSet::GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tTDSet::GetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*TDSet::GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*TDSet::GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tTDSet::GetNumOfFiles(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*TDSet::GetObjName() const; virtual Option_t*TObject::GetOption() const; TObject*TDSet::GetOutput(const char* name); TList*TDSet::GetOutputList(); virtual const char*TNamed::GetTitle() const; virtual TTree*TDSet::GetTreeHeader(TProof* proof); const char*TDSet::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTDSet::IsTree() const; Bool_tTDSet::IsValid() const; Bool_tTObject::IsZombie() const; voidTDSet::Lookup(Bool_t removeMissing = kFALSE, TList** missingFiles = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDSetElement*Next(Long64_t totalEntries = -1); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); sta",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:7046,Security,Validat,Validate,7046,"MENU ; virtual Long64_tTDSet::Process(const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0)MENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Int_tTDSet::Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTDSet::SetDirectory(const char* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTDSet::SetEntryList(TObject* aList); voidTDSet::SetLookedUp(); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidTDSet::SetObjName(const char* objname); voidSetProofServ(TProofServ* serv); voidTDSet::SetSrvMaps(TList* srvmaps = 0); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidTDSet::SetWriteV3(Bool_t on = kTRUE); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidTDSet::StartViewer()MENU ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voidTDSet::Validate(); voidTDSet::Validate(TDSet* dset); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:7069,Security,Validat,Validate,7069,"MENU ; virtual Long64_tTDSet::Process(const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0)MENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Int_tTDSet::Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTDSet::SetDirectory(const char* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTDSet::SetEntryList(TObject* aList); voidTDSet::SetLookedUp(); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidTDSet::SetObjName(const char* objname); voidSetProofServ(TProofServ* serv); voidTDSet::SetSrvMaps(TList* srvmaps = 0); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidTDSet::SetWriteV3(Bool_t on = kTRUE); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidTDSet::StartViewer()MENU ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voidTDSet::Validate(); voidTDSet::Validate(TDSet* dset); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:6930,Testability,Test,TestBit,6930,"MENU ; virtual Long64_tTDSet::Process(const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0)MENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Int_tTDSet::Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTDSet::SetDirectory(const char* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTDSet::SetEntryList(TObject* aList); voidTDSet::SetLookedUp(); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidTDSet::SetObjName(const char* objname); voidSetProofServ(TProofServ* serv); voidTDSet::SetSrvMaps(TList* srvmaps = 0); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidTDSet::SetWriteV3(Bool_t on = kTRUE); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidTDSet::StartViewer()MENU ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voidTDSet::Validate(); voidTDSet::Validate(TDSet* dset); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:6969,Testability,Test,TestBits,6969,"MENU ; virtual Long64_tTDSet::Process(const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0, TObject* enl = 0)MENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Int_tTDSet::Remove(TDSetElement* elem, Bool_t deleteElem = kTRUE); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTDSet::SetDirectory(const char* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTDSet::SetEntryList(TObject* aList); voidTDSet::SetLookedUp(); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidTDSet::SetObjName(const char* objname); voidSetProofServ(TProofServ* serv); voidTDSet::SetSrvMaps(TList* srvmaps = 0); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidTDSet::SetWriteV3(Bool_t on = kTRUE); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidTDSet::StartViewer()MENU ; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voidTDSet::Validate(); voidTDSet::Validate(TDSet* dset); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:1209,Usability,Clear,Clear,1209," TDSetProxy(); TDSetProxy(const char* type, const char* objname = ""*"", const char* dir = ""/""); ~TDSetProxy(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTDSet::Add(TDSet* set); virtual Bool_tTDSet::Add(TFileInfo* fileinfo, const char* meta = 0); virtual Bool_tTDSet::Add(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); virtual Bool_tTDSet::Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); virtual voidTDSet::AddFriend(TDSet* friendset, const char* alias); voidTDSet::AddInput(TObject* obj); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); voidTDSet::ClearInput(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*TDSet::Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDSet::Draw(Option_t* opt); virtual Long64_tTDSet::Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tTDSet::Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawC",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TDSetProxy.html:1250,Usability,Clear,ClearInput,1250," TDSetProxy(); TDSetProxy(const char* type, const char* objname = ""*"", const char* dir = ""/""); ~TDSetProxy(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTDSet::Add(TDSet* set); virtual Bool_tTDSet::Add(TFileInfo* fileinfo, const char* meta = 0); virtual Bool_tTDSet::Add(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); virtual Bool_tTDSet::Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); virtual voidTDSet::AddFriend(TDSet* friendset, const char* alias); voidTDSet::AddInput(TObject* obj); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); voidTDSet::ClearInput(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*TDSet::Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDSet::Draw(Option_t* opt); virtual Long64_tTDSet::Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tTDSet::Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawC",MatchSource.WIKI,root/html534/TDSetProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TDSetProxy.html
https://root.cern/root/html534/TEditQueryFrame.html:4101,Availability,Error,Error,4101,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBa",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:4230,Availability,error,error,4230,"* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const;",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:4314,Availability,error,error,4314,"t(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const; virtual TDNDData*TGFrame::GetDNDData(Atom_t); virtual Int_tTGFrame::GetDragType() c",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:16821,Availability,mask,mask,16821,,MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:19829,Deployability,Update,UpdateFields,19829,"of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fBtnMore""more >>"" / ""less <<"" button; TObject*fChainactual TChain; TGCompositeFrame*fFrmMoreoptions frame; TGNumberEntry*fNumEntriesnumber of entries selector; TGNumberEntry*fNumFirstEntryfirst entry selector; TQueryDescription*fQueryquery description class; TGTextEntry*fTxtChainchain name text entry; TGTextEntry*fTxtEventListevent list text entry; TGTextEntry*fTxtOptionsoptions text entry; TGTextEntry*fTxtParFileparameter file name text entry; TGTextEntry*fTxtQueryNamequery name text entry; TGTextEntry*fTxtSelectorselector name text entry; TSessionViewer*fViewerpointer on main viewer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Build(TSessionViewer* gui). void SettingsChanged(). TEditQueryFrame(TGWindow* p, Int_t w, Int_t h). virtual ~TEditQueryFrame(). void OnNewQueryMore(). void OnBrowseChain(). void OnBrowseSelector(). void OnBrowseEventList(). void OnBtnSave(). void OnElementSelected(TObject* obj). void UpdateFields(TQueryDescription* desc). » Author: Marek Biskup, Jakub Madejczyk, Bertrand Bellenot 10/08/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:10268,Integrability,Message,Message,10268,"Frame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidOnBrowseChain(); voidOnBrowseEventList(); voidOnBrowseSelector(); voidOnBtnSave(); voidOnElementSelected(TObject* obj); voidOnNewQueryMore(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject:",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:8813,Modifiability,Inherit,InheritsFrom,8813,"irtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:8879,Modifiability,Inherit,InheritsFrom,8879," Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:19462,Modifiability,Inherit,Inheritance,19462,"of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fBtnMore""more >>"" / ""less <<"" button; TObject*fChainactual TChain; TGCompositeFrame*fFrmMoreoptions frame; TGNumberEntry*fNumEntriesnumber of entries selector; TGNumberEntry*fNumFirstEntryfirst entry selector; TQueryDescription*fQueryquery description class; TGTextEntry*fTxtChainchain name text entry; TGTextEntry*fTxtEventListevent list text entry; TGTextEntry*fTxtOptionsoptions text entry; TGTextEntry*fTxtParFileparameter file name text entry; TGTextEntry*fTxtQueryNamequery name text entry; TGTextEntry*fTxtSelectorselector name text entry; TSessionViewer*fViewerpointer on main viewer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Build(TSessionViewer* gui). void SettingsChanged(). TEditQueryFrame(TGWindow* p, Int_t w, Int_t h). virtual ~TEditQueryFrame(). void OnNewQueryMore(). void OnBrowseChain(). void OnBrowseSelector(). void OnBrowseEventList(). void OnBtnSave(). void OnElementSelected(TObject* obj). void UpdateFields(TQueryDescription* desc). » Author: Marek Biskup, Jakub Madejczyk, Bertrand Bellenot 10/08/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:19475,Modifiability,Inherit,Inherited,19475,"of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fBtnMore""more >>"" / ""less <<"" button; TObject*fChainactual TChain; TGCompositeFrame*fFrmMoreoptions frame; TGNumberEntry*fNumEntriesnumber of entries selector; TGNumberEntry*fNumFirstEntryfirst entry selector; TQueryDescription*fQueryquery description class; TGTextEntry*fTxtChainchain name text entry; TGTextEntry*fTxtEventListevent list text entry; TGTextEntry*fTxtOptionsoptions text entry; TGTextEntry*fTxtParFileparameter file name text entry; TGTextEntry*fTxtQueryNamequery name text entry; TGTextEntry*fTxtSelectorselector name text entry; TSessionViewer*fViewerpointer on main viewer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Build(TSessionViewer* gui). void SettingsChanged(). TEditQueryFrame(TGWindow* p, Int_t w, Int_t h). virtual ~TEditQueryFrame(). void OnNewQueryMore(). void OnBrowseChain(). void OnBrowseSelector(). void OnBrowseEventList(). void OnBtnSave(). void OnElementSelected(TObject* obj). void UpdateFields(TQueryDescription* desc). » Author: Marek Biskup, Jakub Madejczyk, Bertrand Bellenot 10/08/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:8523,Security,Hash,Hash,8523,"t_t, Int_t); virtual Bool_tTGCompositeFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWi",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:14402,Testability,Test,TestBit,14402,"virtual voidTGFrame::SetDrawOption(Option_t* = """"); virtual voidTGFrame::SetDropType(Int_t type); static voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); voidSettingsChanged(); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); voidUpdateFields(TQueryDescription* desc); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:14441,Testability,Test,TestBits,14441,"virtual voidTGFrame::SetDrawOption(Option_t* = """"); virtual voidTGFrame::SetDropType(Int_t type); static voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); voidSettingsChanged(); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); voidUpdateFields(TQueryDescription* desc); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEditQueryFrame.html:1428,Usability,Clear,Clear,1428," TEditQueryFrame(TGWindow* p, Int_t w, Int_t h); virtual~TEditQueryFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); voidBuild(TSessionViewer* gui); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, cons",MatchSource.WIKI,root/html534/TEditQueryFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEditQueryFrame.html
https://root.cern/root/html534/TEfficiency.html:1439,Availability,error,error,1439,"ject; Fill in events; Statistic options; Coverage probabilities for different methods; Merging and combining TEfficiency objects. When should I use merging?; When should I use combining?. Further operations. Information about the internal histograms; Fitting; Draw a TEfficiency object. TEfficiency class. I. Overview; This class handles the calculation of efficiencies and their uncertainties. It; provides several statistical methods for calculating frequentist and bayesian; confidence intervals as well as a function for combining several efficiencies.; ; Efficiencies have a lot of applications and meanings but in principle they can; be described by the fraction of good/passed events k out of sample containing; N events. One is usually interested in the dependency of the efficiency on other; (binned) variables. The number of passed and total events is therefore stored; internally in two histograms (fTotalHistogram and; fPassedHistogram). Then the; efficiency as well as its upper and lower error an be calculated for each bin; individually.; As the efficiency can be regarded as a parameter of a binomial distribution, the; number of pass ed and total events must always be integer numbers. Therefore a; filling with weights is not possible however you can assign a global weight to each; TEfficiency object (SetWeight). It is necessary to create one TEfficiency object; for each weight if you investigate a process involving different weights. This; procedure needs more effort but enables you to re-use the filled object in cases; where you want to change one or more weights. This would not be possible if all; events with different weights were filled in the same histogram.; II. Creating a TEfficiency object; If you start a new analysis, it is highly recommended to use the TEfficiency class; from the beginning. You can then use one of the constructors for fixed or; variable bin size and your desired dimension. These constructors append the; created TEfficiency object to the curr",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:7528,Availability,error,error,7528,"; beta distributions (have 2 free parameters) are supported as prior; probabilities.; . By default the expectation value of this posterior distribution is used as estimator for the efficiency:; . Optionally the mode can also be used as value for the estimated efficiency. This can be done by calling SetBit(kPosteriorMode) or; SetPosteriorMode. In this case the estimated efficiency is:; . In the case of a uniform prior distribution, B(x,1,1), the posterior mode is k/n, equivalent to the frequentist estimate (the maximum likelihood value).; The statistic options also specifiy which confidence interval is used for calculating; the uncertainties of the efficiency. The following properties define the error; calculation:; ; fConfLevel: desired confidence level: 0 < fConfLevel < 1 (GetConfidenceLevel / SetConfidenceLevel); fStatisticOption: defines which method is used to calculate the boundaries of the confidence interval (SetStatisticOption); fBeta_alpha, fBeta_beta: parameters for the prior distribution which is only used in the bayesian case (GetBetaAlpha / GetBetaBeta / SetBetaAlpha / SetBetaBeta); kIsBayesian: flag whether bayesian statistics are used or not (UsesBayesianStat); kShortestInterval: flag whether shortest interval (instead of central one) are used in case of Bayesian statistics (UsesShortestInterval). Normally shortest interval should be used in combination with the mode (see UsesPosteriorMode); fWeight: global weight for this TEfficiency object which is used during combining or merging with other TEfficiency objects(GetWeight / SetWeight). In the following table the implemented confidence intervals are listed; with their corresponding statistic option. For more details on the calculation,; please have a look at the the mentioned functions. implemented confidence intervals and their options. namestatistic optionfunctionkIsBayesianparameters. Clopper-PearsonkFCP. ClopperPearson. false. total eventspassed eventsconfidence level. normal approximationkFNormal",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:23698,Availability,Error,Error,23698,,MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:23827,Availability,error,error,23827,,MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:23911,Availability,error,error,23911,,MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:55590,Availability,error,error,55590,"er of one-dimensional; TEfficiency objects in pList); If no weights are passed, the internal weights GetWeight() of; the given TEfficiency objects are used.; - w : array of length n with weights for each TEfficiency object in; pList (w[0] correspond to pList->First ... w[n-1] -> pList->Last); The weights do not have to be normalised. For each bin the calculation is done by the Combine(double&, double& ...) method. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to a graph. Compute the closest distance of approach from point px,py to this line.; The distance is computed in pixels units. Forward the call to the painted graph. void Draw(Option_t* opt = """"); draws the current TEfficiency object. options:; - 1-dimensional case: same options as TGraphAsymmErrors::Draw(); but as default ""AP"" is used; - 2-dimensional case: same options as TH2::Draw(); - 3-dimensional case: not yet supported. specific TEfficiency drawing options:; - E0 - plot bins where the total number of passed events is zero; (the error interval will be [0,1] ). void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when the drawn class is clicked with the locator; If Left button clicked on one of the line end points, this point; follows the cursor until button is released. if Middle button clicked, the line is moved parallel to itself; until the button is released.; Forward the call to the underlying graph. void Fill(Bool_t bPassed, Double_t x, Double_t y = 0, Double_t z = 0); This function is used for filling the two histograms. Input: bPassed - flag whether the current event passed the selection; true: both histograms are filled; false: only the total histogram is filled; x - x value; y - y value (use default=0 for 1-D efficiencies); z - z value (use default=0 for 2-D or 1-D efficiencies). void FillWeighted(Bool_t bPassed, Double_t weight, Double_t x, Double_t y = 0, Double_t z = 0); This function is",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:59914,Availability,error,error,59914,"corresponding directory. TFile* pFile = new TFile(""total.root"",""update"");; TEfficiency* pEff = (TEfficiency*)gDirectory->Get(""my_eff"");; TH1* copy = pEff->GetCopyTotalHisto();; copy->SetDirectory(gDirectory);; pFile->Write();. Int_t GetDimension() const; returns the dimension of the current TEfficiency object. Double_t GetEfficiency(Int_t bin) const; returns the efficiency in the given global bin. Note: - The estimated efficiency depends on the chosen statistic option:; for frequentist ones:; ; for bayesian ones the expectation value of the resulting posterior; distribution is returned:; ; If the bit kPosteriorMode is set (or the method TEfficiency::UsePosteriorMode() has been called ) the; mode (most probable value) of the posterior is returned:; . - If the denominator is equal to 0, an efficiency of 0 is returned.; - When or the above; formula for the mode is not valid. In these cases values the estimated efficiency is 0 or 1. Double_t GetEfficiencyErrorLow(Int_t bin) const; returns the lower error on the efficiency in the given global bin. The result depends on the current confidence level fConfLevel and the; chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; more details. Note: If the histograms are filled with weights, only bayesian methods and the; normal approximation are supported. Double_t GetEfficiencyErrorUp(Int_t bin) const; returns the upper error on the efficiency in the given global bin. The result depends on the current confidence level fConfLevel and the; chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; more details. Note: If the histograms are filled with weights, only bayesian methods and the; normal approximation are supported. Int_t GetGlobalBin(Int_t binx, Int_t biny = 0, Int_t binz = 0) const; returns the global bin number which can be used as argument for the; following functions:. - GetEfficiency(bin), GetEfficiencyErrorLow(bin), GetEfficiencyErrorUp(bin); - SetPassedEvents(bin), SetTotal",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:60307,Availability,error,error,60307,"al bin. Note: - The estimated efficiency depends on the chosen statistic option:; for frequentist ones:; ; for bayesian ones the expectation value of the resulting posterior; distribution is returned:; ; If the bit kPosteriorMode is set (or the method TEfficiency::UsePosteriorMode() has been called ) the; mode (most probable value) of the posterior is returned:; . - If the denominator is equal to 0, an efficiency of 0 is returned.; - When or the above; formula for the mode is not valid. In these cases values the estimated efficiency is 0 or 1. Double_t GetEfficiencyErrorLow(Int_t bin) const; returns the lower error on the efficiency in the given global bin. The result depends on the current confidence level fConfLevel and the; chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; more details. Note: If the histograms are filled with weights, only bayesian methods and the; normal approximation are supported. Double_t GetEfficiencyErrorUp(Int_t bin) const; returns the upper error on the efficiency in the given global bin. The result depends on the current confidence level fConfLevel and the; chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; more details. Note: If the histograms are filled with weights, only bayesian methods and the; normal approximation are supported. Int_t GetGlobalBin(Int_t binx, Int_t biny = 0, Int_t binz = 0) const; returns the global bin number which can be used as argument for the; following functions:. - GetEfficiency(bin), GetEfficiencyErrorLow(bin), GetEfficiencyErrorUp(bin); - SetPassedEvents(bin), SetTotalEvents(bin). see TH1::GetBin() for conventions on numbering bins. TList* GetListOfFunctions(). Long64_t Merge(TCollection* list); merges the TEfficiency objects in the given list to the given; TEfficiency object using the operator+=(TEfficiency&). The merged result is stored in the current object. The statistic options and; the confidence level are taken from the current object. This functio",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:13747,Deployability,continuous,continuously,13747,"s of the true efficiency and the total number of events when a; confidence level of 95% is desired.; . The average (over all possible true efficiencies) coverage probability for; different number of total events is shown in the next picture.; ; V. Merging and combining TEfficiency objects; In many applications the efficiency should be calculated for an inhomogenous; sample in the sense that it contains events with different weights. In order; to be able to determine the correct overall efficiency, it is necessary to; use for each subsample (= all events with the same weight) a different; TEfficiency object. After finsihing your analysis you can then construct the; overall efficiency with its uncertainty.; This procedure has the advantage that you can change the weight of one; subsample easily without rerunning the whole analysis. On the other hand more; efford is needed to handle several TEfficiency objects instead of one; histogram. In the case of many different or even continuously distributed; weights this approach becomes cumbersome. One possibility to overcome this; problem is the usage of binned weights.; Example; In high particle physics weights arises from the fact that you want to; normalise your results to a certain reference value. A very common formula for; calculating weights is . The reason for different weights can therefore be:; different processes; other integrated luminosity; varying trigger efficiency; different sample sizes; ...; or even combination of them. Depending on the actual meaning of different weights in your case, you; should either merge or combine them to get the overall efficiency.; V.1 When should I use merging?; If the weights are artificial and do not represent real alternative hypotheses,; you should merge the different TEfficiency objects. That means especially for; the bayesian case that the prior probability should be the same for all merged; TEfficiency objects. The merging can be done by invoking one of the following; operat",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:14155,Deployability,integrat,integrated,14155,"t it contains events with different weights. In order; to be able to determine the correct overall efficiency, it is necessary to; use for each subsample (= all events with the same weight) a different; TEfficiency object. After finsihing your analysis you can then construct the; overall efficiency with its uncertainty.; This procedure has the advantage that you can change the weight of one; subsample easily without rerunning the whole analysis. On the other hand more; efford is needed to handle several TEfficiency objects instead of one; histogram. In the case of many different or even continuously distributed; weights this approach becomes cumbersome. One possibility to overcome this; problem is the usage of binned weights.; Example; In high particle physics weights arises from the fact that you want to; normalise your results to a certain reference value. A very common formula for; calculating weights is . The reason for different weights can therefore be:; different processes; other integrated luminosity; varying trigger efficiency; different sample sizes; ...; or even combination of them. Depending on the actual meaning of different weights in your case, you; should either merge or combine them to get the overall efficiency.; V.1 When should I use merging?; If the weights are artificial and do not represent real alternative hypotheses,; you should merge the different TEfficiency objects. That means especially for; the bayesian case that the prior probability should be the same for all merged; TEfficiency objects. The merging can be done by invoking one of the following; operations:; ; eff1.Add(eff2); eff1 += eff2; eff = eff1 + eff2. The result of the merging is stored in the TEfficiency object which is marked; bold above. The contents of the internal histograms of both TEfficiency; objects are added and a new weight is assigned. The statistic options are not; changed.; . . Example:; If you use two samples with different numbers of generated events for the same;",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:15205,Deployability,integrat,integrated,15205," different sample sizes; ...; or even combination of them. Depending on the actual meaning of different weights in your case, you; should either merge or combine them to get the overall efficiency.; V.1 When should I use merging?; If the weights are artificial and do not represent real alternative hypotheses,; you should merge the different TEfficiency objects. That means especially for; the bayesian case that the prior probability should be the same for all merged; TEfficiency objects. The merging can be done by invoking one of the following; operations:; ; eff1.Add(eff2); eff1 += eff2; eff = eff1 + eff2. The result of the merging is stored in the TEfficiency object which is marked; bold above. The contents of the internal histograms of both TEfficiency; objects are added and a new weight is assigned. The statistic options are not; changed.; . . Example:; If you use two samples with different numbers of generated events for the same; process and you want to normalise both to the same integrated luminosity and; trigger efficiency, the different weights then arise just from the fact that; you have different numbers of events. The TEfficiency objects should be merged; because the samples do not represent true alternatives. You expect the same; result as if you would have a big sample with all events in it.; . V.2 When should I use combining?; You should combine TEfficiency objects whenever the weights represent; alternatives processes for the efficiency. As the combination of two TEfficiency; objects is not always consistent with the representation by two internal; histograms, the result is not stored in a TEfficiency object but a TGraphAsymmErrors; is returned which shows the estimated combined efficiency and its uncertainty; for each bin. At the moment the combination method Combine only supports combination of 1-dimensional efficiencies in a bayesian approach.; For calculating the combined efficiency and its uncertainty for each bin only Bayesian statistics is used",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:17631,Deployability,update,update,17631,"ed efficiency. The weights to be used in the; combination should be the probability that an; electron comes from the corresponding process.; . VI. Further operations; VI.1 Information about the internal histograms; The methods GetPassedHistogram and GetTotalHistogram; return a constant pointer to the internal histograms. They can be used to; obtain information about the internal histograms (e.g. the binning, number of passed / total events in a bin, mean values...).; One can obtain a clone of the internal histograms by calling GetCopyPassedHisto or GetCopyTotalHisto.; The returned histograms are completely independent from the current; TEfficiency object. By default, they are not attached to a directory to; avoid the duplication of data and the user is responsible for deleting them.; . Example:; //open a root file which contains a TEfficiency object; TFile* pFile = new TFile(""myfile.root"",""update"");; //get TEfficiency object with name ""my_eff""; TEfficiency* pEff = (TEfficiency*)pFile->Get(""my_eff"");; //get clone of total histogram; TH1* clone = pEff->GetCopyTotalHisto();; //change clone...; //save changes of clone directly; clone->Write();; //or append it to the current directoy and write the file; //clone->SetDirectory(gDirectory);; //pFile->Wrtie();; //delete histogram object; delete clone;; clone = 0;; . It is also possible to set the internal total or passed histogram by using the; methods SetPassedHistogram or; SetTotalHistogram.; In order to ensure the validity of the TEfficiency object, the consistency of the; new histogram and the stored histogram is checked. It sometimes might be; impossible to change the histograms in a consistent way. Therefore one can force; the replacement by passing the option ""f"". Then the user has to ensure that the; other internal histogram is replaced as well and that the TEfficiency object is; in a valid state.; VI.2 Fitting; The efficiency can be fitted using the Fit function which uses internally the TBinomialEfficiencyFitter::F",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:55899,Deployability,release,released,55899,"rst ... w[n-1] -> pList->Last); The weights do not have to be normalised. For each bin the calculation is done by the Combine(double&, double& ...) method. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to a graph. Compute the closest distance of approach from point px,py to this line.; The distance is computed in pixels units. Forward the call to the painted graph. void Draw(Option_t* opt = """"); draws the current TEfficiency object. options:; - 1-dimensional case: same options as TGraphAsymmErrors::Draw(); but as default ""AP"" is used; - 2-dimensional case: same options as TH2::Draw(); - 3-dimensional case: not yet supported. specific TEfficiency drawing options:; - E0 - plot bins where the total number of passed events is zero; (the error interval will be [0,1] ). void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when the drawn class is clicked with the locator; If Left button clicked on one of the line end points, this point; follows the cursor until button is released. if Middle button clicked, the line is moved parallel to itself; until the button is released.; Forward the call to the underlying graph. void Fill(Bool_t bPassed, Double_t x, Double_t y = 0, Double_t z = 0); This function is used for filling the two histograms. Input: bPassed - flag whether the current event passed the selection; true: both histograms are filled; false: only the total histogram is filled; x - x value; y - y value (use default=0 for 1-D efficiencies); z - z value (use default=0 for 2-D or 1-D efficiencies). void FillWeighted(Bool_t bPassed, Double_t weight, Double_t x, Double_t y = 0, Double_t z = 0); This function is used for filling the two histograms with a weight. Input: bPassed - flag whether the current event passed the selection; true: both histograms are filled; false: only the total histogram is filled; weight - weight for the event; x - x value; y - y value (use de",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:55993,Deployability,release,released,55993,"...) method. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to a graph. Compute the closest distance of approach from point px,py to this line.; The distance is computed in pixels units. Forward the call to the painted graph. void Draw(Option_t* opt = """"); draws the current TEfficiency object. options:; - 1-dimensional case: same options as TGraphAsymmErrors::Draw(); but as default ""AP"" is used; - 2-dimensional case: same options as TH2::Draw(); - 3-dimensional case: not yet supported. specific TEfficiency drawing options:; - E0 - plot bins where the total number of passed events is zero; (the error interval will be [0,1] ). void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when the drawn class is clicked with the locator; If Left button clicked on one of the line end points, this point; follows the cursor until button is released. if Middle button clicked, the line is moved parallel to itself; until the button is released.; Forward the call to the underlying graph. void Fill(Bool_t bPassed, Double_t x, Double_t y = 0, Double_t z = 0); This function is used for filling the two histograms. Input: bPassed - flag whether the current event passed the selection; true: both histograms are filled; false: only the total histogram is filled; x - x value; y - y value (use default=0 for 1-D efficiencies); z - z value (use default=0 for 2-D or 1-D efficiencies). void FillWeighted(Bool_t bPassed, Double_t weight, Double_t x, Double_t y = 0, Double_t z = 0); This function is used for filling the two histograms with a weight. Input: bPassed - flag whether the current event passed the selection; true: both histograms are filled; false: only the total histogram is filled; weight - weight for the event; x - x value; y - y value (use default=0 for 1-D efficiencies); z - z value (use default=0 for 2-D or 1-D efficiencies). Note: - this function will call SetUseWeightedEvents if",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:58234,Deployability,update,update,58234," Fit(TF1* f1, Option_t* opt = """"); fits the efficiency using the TBinomialEfficiencyFitter class. The resulting fit function is added to the list of associated functions. Options: - ""+"": previous fitted functions in the list are kept, by default; all functions in the list are deleted; - for more fitting options see TBinomialEfficiencyFitter::Fit. TH1* GetCopyPassedHisto() const; returns a cloned version of fPassedHistogram. Notes: - The histogram is filled with unit weights. You might want to scale; it with the global weight GetWeight().; - The returned object is owned by the user who has to care about the; deletion of the new TH1 object.; - This histogram is by default NOT attached to the current directory; to avoid duplication of data. If you want to store it automatically; during the next TFile::Write() command, you have to attach it to; the corresponding directory. TFile* pFile = new TFile(""passed.root"",""update"");; TEfficiency* pEff = (TEfficiency*)gDirectory->Get(""my_eff"");; TH1* copy = pEff->GetCopyPassedHisto();; copy->SetDirectory(gDirectory);; pFile->Write();. TH1* GetCopyTotalHisto() const; returns a cloned version of fTotalHistogram. Notes: - The histogram is filled with unit weights. You might want to scale; it with the global weight GetWeight().; - The returned object is owned by the user who has to care about the; deletion of the new TH1 object.; - This histogram is by default NOT attached to the current directory; to avoid duplication of data. If you want to store it automatically; during the next TFile::Write() command, you have to attach it to; the corresponding directory. TFile* pFile = new TFile(""total.root"",""update"");; TEfficiency* pEff = (TEfficiency*)gDirectory->Get(""my_eff"");; TH1* copy = pEff->GetCopyTotalHisto();; copy->SetDirectory(gDirectory);; pFile->Write();. Int_t GetDimension() const; returns the dimension of the current TEfficiency object. Double_t GetEfficiency(Int_t bin) const; returns the efficiency in the given global bin. Note: -",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:58968,Deployability,update,update,58968,"ation of data. If you want to store it automatically; during the next TFile::Write() command, you have to attach it to; the corresponding directory. TFile* pFile = new TFile(""passed.root"",""update"");; TEfficiency* pEff = (TEfficiency*)gDirectory->Get(""my_eff"");; TH1* copy = pEff->GetCopyPassedHisto();; copy->SetDirectory(gDirectory);; pFile->Write();. TH1* GetCopyTotalHisto() const; returns a cloned version of fTotalHistogram. Notes: - The histogram is filled with unit weights. You might want to scale; it with the global weight GetWeight().; - The returned object is owned by the user who has to care about the; deletion of the new TH1 object.; - This histogram is by default NOT attached to the current directory; to avoid duplication of data. If you want to store it automatically; during the next TFile::Write() command, you have to attach it to; the corresponding directory. TFile* pFile = new TFile(""total.root"",""update"");; TEfficiency* pEff = (TEfficiency*)gDirectory->Get(""my_eff"");; TH1* copy = pEff->GetCopyTotalHisto();; copy->SetDirectory(gDirectory);; pFile->Write();. Int_t GetDimension() const; returns the dimension of the current TEfficiency object. Double_t GetEfficiency(Int_t bin) const; returns the efficiency in the given global bin. Note: - The estimated efficiency depends on the chosen statistic option:; for frequentist ones:; ; for bayesian ones the expectation value of the resulting posterior; distribution is returned:; ; If the bit kPosteriorMode is set (or the method TEfficiency::UsePosteriorMode() has been called ) the; mode (most probable value) of the posterior is returned:; . - If the denominator is equal to 0, an efficiency of 0 is returned.; - When or the above; formula for the mode is not valid. In these cases values the estimated efficiency is 0 or 1. Double_t GetEfficiencyErrorLow(Int_t bin) const; returns the lower error on the efficiency in the given global bin. The result depends on the current confidence level fConfLevel and the; chosen stati",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:62975,Deployability,update,updated,62975,"talHistogram;; fPassedHistogram += rhs.fPassedHistogram;. calculates a new weight:; current weight of this TEfficiency object = ; weight of rhs = . TEfficiency& operator=(const TEfficiency& rhs); assignment operator. The histograms, statistic option, confidence level, weight and paint styles; of rhs are copied to the this TEfficiency object. Note: - The list of associated functions is not copied. After this; operation the list of associated functions is empty. void Paint(Option_t* opt); paints this TEfficiency object. For details on the possible option see Draw(Option_t*). Note for 1D classes; In 1D the TEfficiency uses a TGraphAsymmErrors for drawing; The TGraph is created only the first time Paint is used. The user can manipulate the; TGraph via the method TEfficiency::GetPaintedGraph(); The TGraph creates behing an histogram for the axis. The histogram is created also only the first time.; If the axis needs to be updated because in the meantime the class changed use this trick; which will trigger a re-calculation of the axis of the graph; TEfficiency::GetPaintedGraph()->Set(0). Note that in order to access the painted graph via GetPaintedGraph() you need either to call Paint or better; gPad->Update();. void SavePrimitive(ostream& out, Option_t* opt = """"); have histograms fixed bins along each axis?. void SetBetaAlpha(Double_t alpha); sets the shape parameter . The prior probability of the efficiency is given by the beta distribution:. Note: - both shape parameters have to be positive (i.e. > 0). void SetBetaBeta(Double_t beta); sets the shape parameter . The prior probability of the efficiency is given by the beta distribution:. Note: - both shape parameters have to be positive (i.e. > 0). void SetBetaBinParameters(Int_t bin, Double_t alpha, Double_t beta); sets different shape parameter ; for the prior distribution for each bin. By default the global parameter are used if they are not set; for the specific bin; The prior probability of the efficiency is given by ",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:63259,Deployability,Update,Update,63259," operator=(const TEfficiency& rhs); assignment operator. The histograms, statistic option, confidence level, weight and paint styles; of rhs are copied to the this TEfficiency object. Note: - The list of associated functions is not copied. After this; operation the list of associated functions is empty. void Paint(Option_t* opt); paints this TEfficiency object. For details on the possible option see Draw(Option_t*). Note for 1D classes; In 1D the TEfficiency uses a TGraphAsymmErrors for drawing; The TGraph is created only the first time Paint is used. The user can manipulate the; TGraph via the method TEfficiency::GetPaintedGraph(); The TGraph creates behing an histogram for the axis. The histogram is created also only the first time.; If the axis needs to be updated because in the meantime the class changed use this trick; which will trigger a re-calculation of the axis of the graph; TEfficiency::GetPaintedGraph()->Set(0). Note that in order to access the painted graph via GetPaintedGraph() you need either to call Paint or better; gPad->Update();. void SavePrimitive(ostream& out, Option_t* opt = """"); have histograms fixed bins along each axis?. void SetBetaAlpha(Double_t alpha); sets the shape parameter . The prior probability of the efficiency is given by the beta distribution:. Note: - both shape parameters have to be positive (i.e. > 0). void SetBetaBeta(Double_t beta); sets the shape parameter . The prior probability of the efficiency is given by the beta distribution:. Note: - both shape parameters have to be positive (i.e. > 0). void SetBetaBinParameters(Int_t bin, Double_t alpha, Double_t beta); sets different shape parameter ; for the prior distribution for each bin. By default the global parameter are used if they are not set; for the specific bin; The prior probability of the efficiency is given by the beta distribution:. Note: - both shape parameters have to be positive (i.e. > 0); - bin gives the global bin number (cf. GetGlobalBin). Bool_t SetBins(Int_t",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:66398,Deployability,update,updated,66398,"ns); set the bins for the underlined passed and total histograms; If the class have been already filled the previous contents will be lost. void SetConfidenceLevel(Double_t level); sets the confidence level (0 < level < 1); The default value is 1-sigma :~ 0.683. void SetDirectory(TDirectory* dir); sets the directory holding this TEfficiency object. A reference to this TEfficiency object is removed from the current; directory (if it exists) and a new reference to this TEfficiency object is; added to the given directory. Notes: - If the given directory is 0, the TEfficiency object does not; belong to any directory and will not be written to file during the; next TFile::Write() command. void SetName(const char* name); sets the name. Note: The names of the internal histograms are set to ""name + _total"" and; ""name + _passed"" respectively. Bool_t SetPassedEvents(Int_t bin, Int_t events); sets the number of passed events in the given global bin. returns ""true"" if the number of passed events has been updated; otherwise ""false"" ist returned. Note: - requires: 0 <= events <= fTotalHistogram->GetBinContent(bin). Bool_t SetPassedHistogram(const TH1& rPassed, Option_t* opt); sets the histogram containing the passed events. The given histogram is cloned and stored internally as histogram containing; the passed events. The given histogram has to be consistent with the current; fTotalHistogram (see CheckConsistency(const TH1&,const TH1&)).; The method returns whether the fPassedHistogram has been replaced (true) or; not (false). Note: The list of associated functions fFunctions is cleared. Option: - ""f"": force the replacement without checking the consistency; This can lead to inconsistent histograms and useless results; or unexpected behaviour. But sometimes it might be the only; way to change the histograms. If you use this option, you; should ensure that the fTotalHistogram is replaced by a; consistent one (with respect to rPassed) as well. void SetStatisticOption(TEfficiency::ES",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:68918,Deployability,update,updated,68918," - kFFC (=4) : using the Feldman-Cousins frequentist method; sets kIsBayesian = false; see also FeldmanCousins; - kBJeffrey (=5) : using the Jeffrey interval; sets kIsBayesian = true, fBeta_alpha = 0.5 and fBeta_beta = 0.5; see also Bayesian; - kBUniform (=6) : using a uniform prior; sets kIsBayesian = true, fBeta_alpha = 1 and fBeta_beta = 1; see also Bayesian; - kBBayesian (=7) : using a custom prior defined by fBeta_alpha and fBeta_beta; sets kIsBayesian = true; see also Bayesian. void SetTitle(const char* title); sets the title. Notes: - The titles of the internal histograms are set to ""title + (total)""; or ""title + (passed)"" respectively.; - It is possible to label the axis of the histograms as usual (see; TH1::SetTitle). Example: Setting the title to ""My Efficiency"" and label the axis. pEff->SetTitle(""My Efficiency;x label;eff"");. Bool_t SetTotalEvents(Int_t bin, Int_t events); sets the number of total events in the given global bin. returns ""true"" if the number of total events has been updated; otherwise ""false"" ist returned. Note: - requires: fPassedHistogram->GetBinContent(bin) <= events. Bool_t SetTotalHistogram(const TH1& rTotal, Option_t* opt); sets the histogram containing all events. The given histogram is cloned and stored internally as histogram containing; all events. The given histogram has to be consistent with the current; fPassedHistogram (see CheckConsistency(const TH1&,const TH1&)).; The method returns whether the fTotalHistogram has been replaced (true) or; not (false). Note: The list of associated functions fFunctions is cleared. Option: - ""f"": force the replacement without checking the consistency; This can lead to inconsistent histograms and useless results; or unexpected behaviour. But sometimes it might be the only; way to change the histograms. If you use this option, you; should ensure that the fPassedHistogram is replaced by a; consistent one (with respect to rTotal) as well. void SetUseWeightedEvents(). void SetWeight(Double_t weight)",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:1199,Integrability,depend,dependency,1199,"ss charts. ROOT; » HIST; » HIST; » TEfficiency. class TEfficiency: public TNamed, public TAttLine, public TAttFill, public TAttMarker. TEfficiency - a class to handle efficiency; histograms. Overview; Creating a TEfficiency object; Fill in events; Statistic options; Coverage probabilities for different methods; Merging and combining TEfficiency objects. When should I use merging?; When should I use combining?. Further operations. Information about the internal histograms; Fitting; Draw a TEfficiency object. TEfficiency class. I. Overview; This class handles the calculation of efficiencies and their uncertainties. It; provides several statistical methods for calculating frequentist and bayesian; confidence intervals as well as a function for combining several efficiencies.; ; Efficiencies have a lot of applications and meanings but in principle they can; be described by the fraction of good/passed events k out of sample containing; N events. One is usually interested in the dependency of the efficiency on other; (binned) variables. The number of passed and total events is therefore stored; internally in two histograms (fTotalHistogram and; fPassedHistogram). Then the; efficiency as well as its upper and lower error an be calculated for each bin; individually.; As the efficiency can be regarded as a parameter of a binomial distribution, the; number of pass ed and total events must always be integer numbers. Therefore a; filling with weights is not possible however you can assign a global weight to each; TEfficiency object (SetWeight). It is necessary to create one TEfficiency object; for each weight if you investigate a process involving different weights. This; procedure needs more effort but enables you to re-use the filled object in cases; where you want to change one or more weights. This would not be possible if all; events with different weights were filled in the same histogram.; II. Creating a TEfficiency object; If you start a new analysis, it is highly recom",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:6107,Integrability,depend,depends,6107,"ly fTotalHistogram is filled).; The variables x,y and z determine the bin which is filled. For lower; dimensions the z- or even the y-value may be omitted.; . Picture; Source. {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. pEff->Draw(""AP"");. //only for this documentation; return c1;; }; . You can also set the number of passed or total events for a bin directly by; using the SetPassedEvents or SetTotalEvents method.; IV. Statistic options; The calculation of the estimated efficiency depends on the chosen statistic; option. Let k denotes the number of passed events and N the number of total; events.; Frequentist methods; The expectation value of the number of passed events is given by the true; efficiency times the total number of events. One can estimate the efficiency; by replacing the expected number of passed events by the observed number of; passed events. . Bayesian methods; In bayesian statistics a likelihood-function (how probable is it to get the; observed data assuming a true efficiency) and a prior probability (what is the; probability that a certain true efficiency is actually realised) are used to; determine a posterior probability by using Bayes theorem. At the moment, only; beta distributions (have 2 free parameters) are supported as prior; probabilities.; . By default the expectation value of this posterior distribution is used as estimator for the efficiency:; . Optionally the mode can also be used as value for the estimated efficiency.",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:14155,Integrability,integrat,integrated,14155,"t it contains events with different weights. In order; to be able to determine the correct overall efficiency, it is necessary to; use for each subsample (= all events with the same weight) a different; TEfficiency object. After finsihing your analysis you can then construct the; overall efficiency with its uncertainty.; This procedure has the advantage that you can change the weight of one; subsample easily without rerunning the whole analysis. On the other hand more; efford is needed to handle several TEfficiency objects instead of one; histogram. In the case of many different or even continuously distributed; weights this approach becomes cumbersome. One possibility to overcome this; problem is the usage of binned weights.; Example; In high particle physics weights arises from the fact that you want to; normalise your results to a certain reference value. A very common formula for; calculating weights is . The reason for different weights can therefore be:; different processes; other integrated luminosity; varying trigger efficiency; different sample sizes; ...; or even combination of them. Depending on the actual meaning of different weights in your case, you; should either merge or combine them to get the overall efficiency.; V.1 When should I use merging?; If the weights are artificial and do not represent real alternative hypotheses,; you should merge the different TEfficiency objects. That means especially for; the bayesian case that the prior probability should be the same for all merged; TEfficiency objects. The merging can be done by invoking one of the following; operations:; ; eff1.Add(eff2); eff1 += eff2; eff = eff1 + eff2. The result of the merging is stored in the TEfficiency object which is marked; bold above. The contents of the internal histograms of both TEfficiency; objects are added and a new weight is assigned. The statistic options are not; changed.; . . Example:; If you use two samples with different numbers of generated events for the same;",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:14264,Integrability,Depend,Depending,14264,"me weight) a different; TEfficiency object. After finsihing your analysis you can then construct the; overall efficiency with its uncertainty.; This procedure has the advantage that you can change the weight of one; subsample easily without rerunning the whole analysis. On the other hand more; efford is needed to handle several TEfficiency objects instead of one; histogram. In the case of many different or even continuously distributed; weights this approach becomes cumbersome. One possibility to overcome this; problem is the usage of binned weights.; Example; In high particle physics weights arises from the fact that you want to; normalise your results to a certain reference value. A very common formula for; calculating weights is . The reason for different weights can therefore be:; different processes; other integrated luminosity; varying trigger efficiency; different sample sizes; ...; or even combination of them. Depending on the actual meaning of different weights in your case, you; should either merge or combine them to get the overall efficiency.; V.1 When should I use merging?; If the weights are artificial and do not represent real alternative hypotheses,; you should merge the different TEfficiency objects. That means especially for; the bayesian case that the prior probability should be the same for all merged; TEfficiency objects. The merging can be done by invoking one of the following; operations:; ; eff1.Add(eff2); eff1 += eff2; eff = eff1 + eff2. The result of the merging is stored in the TEfficiency object which is marked; bold above. The contents of the internal histograms of both TEfficiency; objects are added and a new weight is assigned. The statistic options are not; changed.; . . Example:; If you use two samples with different numbers of generated events for the same; process and you want to normalise both to the same integrated luminosity and; trigger efficiency, the different weights then arise just from the fact that; you have different numb",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:15205,Integrability,integrat,integrated,15205," different sample sizes; ...; or even combination of them. Depending on the actual meaning of different weights in your case, you; should either merge or combine them to get the overall efficiency.; V.1 When should I use merging?; If the weights are artificial and do not represent real alternative hypotheses,; you should merge the different TEfficiency objects. That means especially for; the bayesian case that the prior probability should be the same for all merged; TEfficiency objects. The merging can be done by invoking one of the following; operations:; ; eff1.Add(eff2); eff1 += eff2; eff = eff1 + eff2. The result of the merging is stored in the TEfficiency object which is marked; bold above. The contents of the internal histograms of both TEfficiency; objects are added and a new weight is assigned. The statistic options are not; changed.; . . Example:; If you use two samples with different numbers of generated events for the same; process and you want to normalise both to the same integrated luminosity and; trigger efficiency, the different weights then arise just from the fact that; you have different numbers of events. The TEfficiency objects should be merged; because the samples do not represent true alternatives. You expect the same; result as if you would have a big sample with all events in it.; . V.2 When should I use combining?; You should combine TEfficiency objects whenever the weights represent; alternatives processes for the efficiency. As the combination of two TEfficiency; objects is not always consistent with the representation by two internal; histograms, the result is not stored in a TEfficiency object but a TGraphAsymmErrors; is returned which shows the estimated combined efficiency and its uncertainty; for each bin. At the moment the combination method Combine only supports combination of 1-dimensional efficiencies in a bayesian approach.; For calculating the combined efficiency and its uncertainty for each bin only Bayesian statistics is used",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:34671,Integrability,depend,depends,34671,"tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; TGraphAsymmErrors*fPaintGraph!temporary graph for painting; TH2*fPaintHisto!temporary histogram for painting ; TH1*fPassedHistogramhistogram for events which passed certain criteria; TEfficiency::EStatOptionfStatisticOptiondefines how the confidence intervals are determined; TStringTNamed::fTitleobject title; TH1*fTotalHistogramhistogram for total number of events; Double_tfWeightweight for all events (default = 1). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEfficiency(); default constructor. should not be used explicitly. TEfficiency(const TH1& passed, const TH1& total); constructor using two existing histograms as input. Input: passed - contains the events fullfilling some criteria; total - contains all investigated events. Notes: - both histograms have to fullfill the conditions of CheckConsistency (with option 'w'); - dimension of the resulating efficiency object depends; on the dimension of the given histograms; - Clones of both histograms are stored internally; - The function SetName(total.GetName() + ""_clone"") is called to set; the names of the new object and the internal histograms..; - The created TEfficiency object is NOT appended to a directory. It; will not be written to disk during the next TFile::Write() command; in order to prevent duplication of data. If you want to save this; TEfficiency object anyway, you can either append it to a; directory by calling SetDirectory(TDirectory*) or write it; explicitly to disk by calling Write(). TEfficiency(const char* name, const char* title, Int_t nbins, const Double_t* xbins); create 1-dimensional TEfficiency object with variable bin size. constructor creates two new and empty histograms with a given binning. Input: name - the common part of the name for both histograms (no blanks); fTotalHistogram has name: name + ""_total""; fPassedHistogram has name: name + ""_passed""; title - the common",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:43488,Integrability,depend,depending,43488,"nt_t passed, Double_t level, Double_t& lower, Double_t& upper); calculates the interval boundaries using the frequentist methods of Feldman-Cousins. Input: - total : number of total events; - passed: 0 <= number of passed events <= total; - level : confidence level; Output:; - lower : lower boundary returned on exit; - upper : lower boundary returned on exit. Return a flag with the status of the calculation. Calculation:; The Feldman-Cousins is a frequentist method where the interval is estimated using a Neyman construction where the ordering; is based on the likelihood ratio:. See G. J. Feldman and R. D. Cousins, Phys. Rev. D57 (1998) 3873; and R. D. Cousins, K. E. Hymes, J. Tucker, Nuclear Instruments and Methods in Physics Research A 612 (2010) 388. Implemented using classes developed by Jordan Tucker and Luca Lista; See File hist/hist/src/TEfficiencyHelper.h. Double_t Bayesian(Int_t total, Int_t passed, Double_t level, Double_t alpha, Double_t beta, Bool_t bUpper, Bool_t bShortest = false); calculates the boundaries for a Bayesian confidence interval (shortest or central interval depending on the option). Input: - total : number of total events; - passed: 0 <= number of passed events <= total; - level : confidence level; - alpha : shape parameter > 0 for the prior distribution (fBeta_alpha); - beta : shape parameter > 0 for the prior distribution (fBeta_beta); - bUpper: true - upper boundary is returned; false - lower boundary is returned. Note: In the case central confidence interval is calculated.; when passed = 0 (or passed = total) the lower (or upper); interval values will be larger than 0 (or smaller than 1). Calculation:. The posterior probability in bayesian statistics is given by:. As an efficiency can be interpreted as probability of a positive outcome of; a Bernoullli trial the likelihood function is given by the binomial; distribution:. At the moment only beta distributions are supported as prior probabilities; of the efficiency ( is the beta function",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:59338,Integrability,depend,depends,59338," The histogram is filled with unit weights. You might want to scale; it with the global weight GetWeight().; - The returned object is owned by the user who has to care about the; deletion of the new TH1 object.; - This histogram is by default NOT attached to the current directory; to avoid duplication of data. If you want to store it automatically; during the next TFile::Write() command, you have to attach it to; the corresponding directory. TFile* pFile = new TFile(""total.root"",""update"");; TEfficiency* pEff = (TEfficiency*)gDirectory->Get(""my_eff"");; TH1* copy = pEff->GetCopyTotalHisto();; copy->SetDirectory(gDirectory);; pFile->Write();. Int_t GetDimension() const; returns the dimension of the current TEfficiency object. Double_t GetEfficiency(Int_t bin) const; returns the efficiency in the given global bin. Note: - The estimated efficiency depends on the chosen statistic option:; for frequentist ones:; ; for bayesian ones the expectation value of the resulting posterior; distribution is returned:; ; If the bit kPosteriorMode is set (or the method TEfficiency::UsePosteriorMode() has been called ) the; mode (most probable value) of the posterior is returned:; . - If the denominator is equal to 0, an efficiency of 0 is returned.; - When or the above; formula for the mode is not valid. In these cases values the estimated efficiency is 0 or 1. Double_t GetEfficiencyErrorLow(Int_t bin) const; returns the lower error on the efficiency in the given global bin. The result depends on the current confidence level fConfLevel and the; chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; more details. Note: If the histograms are filled with weights, only bayesian methods and the; normal approximation are supported. Double_t GetEfficiencyErrorUp(Int_t bin) const; returns the upper error on the efficiency in the given global bin. The result depends on the current confidence level fConfLevel and the; chosen statistic option fStatisticOption. See SetStatisti",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:59974,Integrability,depend,depends,59974,"ctory->Get(""my_eff"");; TH1* copy = pEff->GetCopyTotalHisto();; copy->SetDirectory(gDirectory);; pFile->Write();. Int_t GetDimension() const; returns the dimension of the current TEfficiency object. Double_t GetEfficiency(Int_t bin) const; returns the efficiency in the given global bin. Note: - The estimated efficiency depends on the chosen statistic option:; for frequentist ones:; ; for bayesian ones the expectation value of the resulting posterior; distribution is returned:; ; If the bit kPosteriorMode is set (or the method TEfficiency::UsePosteriorMode() has been called ) the; mode (most probable value) of the posterior is returned:; . - If the denominator is equal to 0, an efficiency of 0 is returned.; - When or the above; formula for the mode is not valid. In these cases values the estimated efficiency is 0 or 1. Double_t GetEfficiencyErrorLow(Int_t bin) const; returns the lower error on the efficiency in the given global bin. The result depends on the current confidence level fConfLevel and the; chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; more details. Note: If the histograms are filled with weights, only bayesian methods and the; normal approximation are supported. Double_t GetEfficiencyErrorUp(Int_t bin) const; returns the upper error on the efficiency in the given global bin. The result depends on the current confidence level fConfLevel and the; chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; more details. Note: If the histograms are filled with weights, only bayesian methods and the; normal approximation are supported. Int_t GetGlobalBin(Int_t binx, Int_t biny = 0, Int_t binz = 0) const; returns the global bin number which can be used as argument for the; following functions:. - GetEfficiency(bin), GetEfficiencyErrorLow(bin), GetEfficiencyErrorUp(bin); - SetPassedEvents(bin), SetTotalEvents(bin). see TH1::GetBin() for conventions on numbering bins. TList* GetListOfFunctions(). Long64_t Merge(TColl",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:60367,Integrability,depend,depends,60367,"esian ones the expectation value of the resulting posterior; distribution is returned:; ; If the bit kPosteriorMode is set (or the method TEfficiency::UsePosteriorMode() has been called ) the; mode (most probable value) of the posterior is returned:; . - If the denominator is equal to 0, an efficiency of 0 is returned.; - When or the above; formula for the mode is not valid. In these cases values the estimated efficiency is 0 or 1. Double_t GetEfficiencyErrorLow(Int_t bin) const; returns the lower error on the efficiency in the given global bin. The result depends on the current confidence level fConfLevel and the; chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; more details. Note: If the histograms are filled with weights, only bayesian methods and the; normal approximation are supported. Double_t GetEfficiencyErrorUp(Int_t bin) const; returns the upper error on the efficiency in the given global bin. The result depends on the current confidence level fConfLevel and the; chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; more details. Note: If the histograms are filled with weights, only bayesian methods and the; normal approximation are supported. Int_t GetGlobalBin(Int_t binx, Int_t biny = 0, Int_t binz = 0) const; returns the global bin number which can be used as argument for the; following functions:. - GetEfficiency(bin), GetEfficiencyErrorLow(bin), GetEfficiencyErrorUp(bin); - SetPassedEvents(bin), SetTotalEvents(bin). see TH1::GetBin() for conventions on numbering bins. TList* GetListOfFunctions(). Long64_t Merge(TCollection* list); merges the TEfficiency objects in the given list to the given; TEfficiency object using the operator+=(TEfficiency&). The merged result is stored in the current object. The statistic options and; the confidence level are taken from the current object. This function should be used when all TEfficiency objects correspond to; the same process. The new weight is set according to:",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:1247,Modifiability,variab,variables,1247,"ss charts. ROOT; » HIST; » HIST; » TEfficiency. class TEfficiency: public TNamed, public TAttLine, public TAttFill, public TAttMarker. TEfficiency - a class to handle efficiency; histograms. Overview; Creating a TEfficiency object; Fill in events; Statistic options; Coverage probabilities for different methods; Merging and combining TEfficiency objects. When should I use merging?; When should I use combining?. Further operations. Information about the internal histograms; Fitting; Draw a TEfficiency object. TEfficiency class. I. Overview; This class handles the calculation of efficiencies and their uncertainties. It; provides several statistical methods for calculating frequentist and bayesian; confidence intervals as well as a function for combining several efficiencies.; ; Efficiencies have a lot of applications and meanings but in principle they can; be described by the fraction of good/passed events k out of sample containing; N events. One is usually interested in the dependency of the efficiency on other; (binned) variables. The number of passed and total events is therefore stored; internally in two histograms (fTotalHistogram and; fPassedHistogram). Then the; efficiency as well as its upper and lower error an be calculated for each bin; individually.; As the efficiency can be regarded as a parameter of a binomial distribution, the; number of pass ed and total events must always be integer numbers. Therefore a; filling with weights is not possible however you can assign a global weight to each; TEfficiency object (SetWeight). It is necessary to create one TEfficiency object; for each weight if you investigate a process involving different weights. This; procedure needs more effort but enables you to re-use the filled object in cases; where you want to change one or more weights. This would not be possible if all; events with different weights were filled in the same histogram.; II. Creating a TEfficiency object; If you start a new analysis, it is highly recom",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:2323,Modifiability,variab,variable,2323,"internally in two histograms (fTotalHistogram and; fPassedHistogram). Then the; efficiency as well as its upper and lower error an be calculated for each bin; individually.; As the efficiency can be regarded as a parameter of a binomial distribution, the; number of pass ed and total events must always be integer numbers. Therefore a; filling with weights is not possible however you can assign a global weight to each; TEfficiency object (SetWeight). It is necessary to create one TEfficiency object; for each weight if you investigate a process involving different weights. This; procedure needs more effort but enables you to re-use the filled object in cases; where you want to change one or more weights. This would not be possible if all; events with different weights were filled in the same histogram.; II. Creating a TEfficiency object; If you start a new analysis, it is highly recommended to use the TEfficiency class; from the beginning. You can then use one of the constructors for fixed or; variable bin size and your desired dimension. These constructors append the; created TEfficiency object to the current directory. So it will be written; automatically to a file during the next TFile::Write command.; ; Example:; create a twodimensional TEfficiency object with; - name = ""eff""; - title = ""my efficiency""; - axistitles: x, y and LaTeX formated epsilon as label for Z axis; - 10 bins with constant bin width (= 1) along X axis starting at 0 (lower edge; from first bin) upto 10 (upper edge of last bin); - 20 bins with constant bin width (= 0.5) along Y axis starting at -5 (lower; edge from first bin) upto 5 (upper edge of last bin); TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;y;#epsilon"",10,0,10,20,-5,5);; ; If you already have two histograms filled with the number of passed and total; events, you will use the constructor TEfficiency(const TH1& passed,const TH1& total); to construct the TEfficiency object. The histograms ""passed"" and ""total"" have; to fullfil",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:5131,Modifiability,variab,variables,5131,"; pEff->Write();; }; Example 2:; TEfficiency* pEff = 0;; TFile* pFile = new TFile(""myfile.root"",""recreate"");; //h_pass and h_total are valid and consistent histograms; if(TEfficiency::CheckConsistency(h_pass,h_total)); {; pEff = new TEfficiency(h_pass,h_total);; //this will attach the TEfficiency object to the current directory; pEff->SetDirectory(gDirectory);; //now all objects in gDirectory will be written to ""myfile.root""; pFile->Write();; }; . In the case that you already have two filled histograms and you only want to; plot them as a graph, you should rather use TGraphAsymmErrors::TGraphAsymmErrors(const TH1* pass,const TH1* total,Option_t* opt); to create a graph object.; III. Filling with events; You can fill the TEfficiency object by calling the Fill(Bool_t bPassed,Double_t x,Double_t y,Double_t z) method.; The boolean flag ""bPassed"" indicates whether the current event is a good; (both histograms are filled) or not (only fTotalHistogram is filled).; The variables x,y and z determine the bin which is filled. For lower; dimensions the z- or even the y-value may be omitted.; . Picture; Source. {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. pEff->Draw(""AP"");. //only for this documentation; return c1;; }; . You can also set the number of passed or total events for a bin directly by; using the SetPassedEvents or SetTotalEvents method.; IV. Statistic options; The calculation of the estimated efficiency depends on the chosen statistic; option. Let k d",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:5662,Modifiability,variab,variable,5662,"two filled histograms and you only want to; plot them as a graph, you should rather use TGraphAsymmErrors::TGraphAsymmErrors(const TH1* pass,const TH1* total,Option_t* opt); to create a graph object.; III. Filling with events; You can fill the TEfficiency object by calling the Fill(Bool_t bPassed,Double_t x,Double_t y,Double_t z) method.; The boolean flag ""bPassed"" indicates whether the current event is a good; (both histograms are filled) or not (only fTotalHistogram is filled).; The variables x,y and z determine the bin which is filled. For lower; dimensions the z- or even the y-value may be omitted.; . Picture; Source. {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. pEff->Draw(""AP"");. //only for this documentation; return c1;; }; . You can also set the number of passed or total events for a bin directly by; using the SetPassedEvents or SetTotalEvents method.; IV. Statistic options; The calculation of the estimated efficiency depends on the chosen statistic; option. Let k denotes the number of passed events and N the number of total; events.; Frequentist methods; The expectation value of the number of passed events is given by the true; efficiency times the total number of events. One can estimate the efficiency; by replacing the expected number of passed events by the observed number of; passed events. . Bayesian methods; In bayesian statistics a likelihood-function (how probable is it to get the; observed data assuming a true efficiency) and a prio",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:9989,Modifiability,variab,variable,9989,"ullkFAC. AgrestiCoull. false. total eventspassed eventsconfidence level. Feldman-CousinskFFC. FeldmanCousins. false. total eventspassed eventsconfidence level. JeffreykBJeffrey. Bayesian. true. total eventspassed eventsconfidence levelfBeta_alpha = 0.5fBeta_beta = 0.5. Uniform priorkBUniform. Bayesian. true. total eventspassed eventsconfidence levelfBeta_alpha = 1fBeta_beta = 1. custom priorkBBayesian. Bayesian. true. total eventspassed eventsconfidence levelfBeta_alphafBeta_beta. The following example demonstrates the effect of different statistic options and; confidence levels.; . Picture; Source. {; //canvas only needed for the documentation; TCanvas* c1 = new TCanvas(""c1"","""",600,400);; c1->Divide(2);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""different confidence levels;x;#epsilon"",20,0,10);; TRandom3 rand;. bool bPassed;; double x;; for(int i=0; i<1000; ++i); {; //simulate events with variable under investigation; x = rand.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. //set style attributes; pEff->SetFillStyle(3004);; pEff->SetFillColor(kRed);. //copy current TEfficiency object and set new confidence level; TEfficiency* pCopy = new TEfficiency(*pEff);; pCopy->SetConfidenceLevel(0.90);. //set style attributes; pCopy->SetFillStyle(3005);; pCopy->SetFillColor(kBlue);. c1->cd(1);. //add legend; TLegend* leg1 = new TLegend(0.3,0.1,0.7,0.5);; leg1->AddEntry(pEff,""95%"",""F"");; leg1->AddEntry(pCopy,""68.3%"",""F"");. pEff->Draw(""A4"");; pCopy->Draw(""same4"");; leg1->Draw(""same"");. //use same confidence level but different statistic methods; TEfficiency* pEff2 = new TEfficiency(*pEff);; TEfficiency* pCopy2 = new TEfficiency(*pEff);. pEff2->SetStatisticOption(TEfficiency::kFNormal);; pCopy2->SetStatisticOption(TEfficiency::kFAC);. pEff2->SetTitle(""different statistic o",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:19527,Modifiability,variab,variable,19527,"; other internal histogram is replaced as well and that the TEfficiency object is; in a valid state.; VI.2 Fitting; The efficiency can be fitted using the Fit function which uses internally the TBinomialEfficiencyFitter::Fit method.; As this method is using a maximum-likelihood-fit, it is necessary to initialise; the given fit function with reasonable start values.; The resulting fit function is attached to the list of associated functions and; will be drawn automatically during the next Draw command.; The list of associated function can be modified by using the pointer returned; by GetListOfFunctions.; . Picture; Source. {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. //create a function for fitting and do the fit; TF1* f1 = new TF1(""f1"",""gaus"",0,10);; f1->SetParameters(1,5,2);; pEff->Fit(f1);. //create a threshold function; TF1* f2 = new TF1(""thres"",""0.8"",0,10);; f2->SetLineColor(kRed);; //add it to the list of functions; //use add first because the parameters of the last function will be displayed; pEff->GetListOfFunctions()->AddFirst(f2);. pEff->Draw(""AP"");. //only for this documentation; return c1;; }; . VI.3 Draw a TEfficiency object; A TEfficiency object can be drawn by calling the usual Draw method.; At the moment drawing is only supported for 1- and 2-dimensional TEfficiency; objects. In the 1-dimensional case you can use the same options as for the ; TGraphAsymmErrors::Draw; method. For 2-dimensional TEfficiency objects you can pass the same ",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:26394,Modifiability,Inherit,InheritsFrom,26394,"ine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*GetListOfFunctions(); virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGraphAsymmErrors*GetPaintedGraph() const; TH2*GetPaintedHistogram() const; const TH1*GetPassedHistogram() const; TEfficiency::EStatOptionGetStatisticOption() const; virtual const char*TNamed::GetTitle() const; const TH1*GetTotalHistogram() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetWeight() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tMerge(TCollection* list); virtual voidTAttLine::Modify(); static Double_tNormal(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); stati",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:26460,Modifiability,Inherit,InheritsFrom,26460," const; virtual Width_tTAttLine::GetLineWidth() const; TList*GetListOfFunctions(); virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGraphAsymmErrors*GetPaintedGraph() const; TH2*GetPaintedHistogram() const; const TH1*GetPassedHistogram() const; TEfficiency::EStatOptionGetStatisticOption() const; virtual const char*TNamed::GetTitle() const; const TH1*GetTotalHistogram() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetWeight() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tMerge(TCollection* list); virtual voidTAttLine::Modify(); static Double_tNormal(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObjec",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:34176,Modifiability,Inherit,Inheritance,34176," level (default = 0.683, 1 sigma); TDirectory*fDirectory!pointer to directory holding this TEfficiency object; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TList*fFunctions->pointer to list of functions; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; TGraphAsymmErrors*fPaintGraph!temporary graph for painting; TH2*fPaintHisto!temporary histogram for painting ; TH1*fPassedHistogramhistogram for events which passed certain criteria; TEfficiency::EStatOptionfStatisticOptiondefines how the confidence intervals are determined; TStringTNamed::fTitleobject title; TH1*fTotalHistogramhistogram for total number of events; Double_tfWeightweight for all events (default = 1). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEfficiency(); default constructor. should not be used explicitly. TEfficiency(const TH1& passed, const TH1& total); constructor using two existing histograms as input. Input: passed - contains the events fullfilling some criteria; total - contains all investigated events. Notes: - both histograms have to fullfill the conditions of CheckConsistency (with option 'w'); - dimension of the resulating efficiency object depends; on the dimension of the given histograms; - Clones of both histograms are stored internally; - The function SetName(total.GetName() + ""_clone"") is called to set; the names of the new object and the internal histograms..; - The created TEfficiency object is NOT appended to a directory. It; will not be written to disk during the next TFile::Write() command; in order to prevent duplication of data. If you want to save this; TEfficiency object anyway, you can either append it to a; directory by calling SetDirectory(TDire",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:34189,Modifiability,Inherit,Inherited,34189," level (default = 0.683, 1 sigma); TDirectory*fDirectory!pointer to directory holding this TEfficiency object; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TList*fFunctions->pointer to list of functions; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; TGraphAsymmErrors*fPaintGraph!temporary graph for painting; TH2*fPaintHisto!temporary histogram for painting ; TH1*fPassedHistogramhistogram for events which passed certain criteria; TEfficiency::EStatOptionfStatisticOptiondefines how the confidence intervals are determined; TStringTNamed::fTitleobject title; TH1*fTotalHistogramhistogram for total number of events; Double_tfWeightweight for all events (default = 1). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEfficiency(); default constructor. should not be used explicitly. TEfficiency(const TH1& passed, const TH1& total); constructor using two existing histograms as input. Input: passed - contains the events fullfilling some criteria; total - contains all investigated events. Notes: - both histograms have to fullfill the conditions of CheckConsistency (with option 'w'); - dimension of the resulating efficiency object depends; on the dimension of the given histograms; - Clones of both histograms are stored internally; - The function SetName(total.GetName() + ""_clone"") is called to set; the names of the new object and the internal histograms..; - The created TEfficiency object is NOT appended to a directory. It; will not be written to disk during the next TFile::Write() command; in order to prevent duplication of data. If you want to save this; TEfficiency object anyway, you can either append it to a; directory by calling SetDirectory(TDire",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:35393,Modifiability,variab,variable,35393,"t TH1& passed, const TH1& total); constructor using two existing histograms as input. Input: passed - contains the events fullfilling some criteria; total - contains all investigated events. Notes: - both histograms have to fullfill the conditions of CheckConsistency (with option 'w'); - dimension of the resulating efficiency object depends; on the dimension of the given histograms; - Clones of both histograms are stored internally; - The function SetName(total.GetName() + ""_clone"") is called to set; the names of the new object and the internal histograms..; - The created TEfficiency object is NOT appended to a directory. It; will not be written to disk during the next TFile::Write() command; in order to prevent duplication of data. If you want to save this; TEfficiency object anyway, you can either append it to a; directory by calling SetDirectory(TDirectory*) or write it; explicitly to disk by calling Write(). TEfficiency(const char* name, const char* title, Int_t nbins, const Double_t* xbins); create 1-dimensional TEfficiency object with variable bin size. constructor creates two new and empty histograms with a given binning. Input: name - the common part of the name for both histograms (no blanks); fTotalHistogram has name: name + ""_total""; fPassedHistogram has name: name + ""_passed""; title - the common part of the title for both histogram; fTotalHistogram has title: title + "" (total)""; fPassedHistogram has title: title + "" (passed)""; It is possible to label the axis by passing a title with; the following format: ""title;xlabel;ylabel"".; nbins - number of bins on the x-axis; xbins - array of length (nbins + 1) with low-edges for each bin; xbins[nbinsx] ... lower edge for overflow bin. TEfficiency(const char* name, const char* title, Int_t nbins, Double_t xlow, Double_t xup); create 1-dimensional TEfficiency object with fixed bins isze. constructor creates two new and empty histograms with a fixed binning. Input: name - the common part of the name for both histogr",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:37871,Modifiability,variab,variable,37871,"n. TEfficiency(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); create 2-dimensional TEfficiency object with fixed bin size. constructor creates two new and empty histograms with a fixed binning. Input: name - the common part of the name for both histograms(no blanks); fTotalHistogram has name: name + ""_total""; fPassedHistogram has name: name + ""_passed""; title - the common part of the title for both histogram; fTotalHistogram has title: title + "" (total)""; fPassedHistogram has title: title + "" (passed)""; It is possible to label the axis by passing a title with; the following format: ""title;xlabel;ylabel;zlabel"".; nbinsx - number of bins on the x-axis; xlow - lower edge of first x-bin; xup - upper edge of last x-bin; nbinsy - number of bins on the y-axis; ylow - lower edge of first y-bin; yup - upper edge of last y-bin. TEfficiency(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); create 2-dimensional TEfficiency object with variable bin size. constructor creates two new and empty histograms with a given binning. Input: name - the common part of the name for both histograms(no blanks); fTotalHistogram has name: name + ""_total""; fPassedHistogram has name: name + ""_passed""; title - the common part of the title for both histogram; fTotalHistogram has title: title + "" (total)""; fPassedHistogram has title: title + "" (passed)""; It is possible to label the axis by passing a title with; the following format: ""title;xlabel;ylabel;zlabel"".; nbinsx - number of bins on the x-axis; xbins - array of length (nbins + 1) with low-edges for each bin; xbins[nbinsx] ... lower edge for overflow x-bin; nbinsy - number of bins on the y-axis; ybins - array of length (nbins + 1) with low-edges for each bin; ybins[nbinsy] ... lower edge for overflow y-bin. TEfficiency(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbin",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:39951,Modifiability,variab,variable,39951," Double_t zup); create 3-dimensional TEfficiency object with fixed bin size. constructor creates two new and empty histograms with a fixed binning. Input: name - the common part of the name for both histograms(no blanks); fTotalHistogram has name: name + ""_total""; fPassedHistogram has name: name + ""_passed""; title - the common part of the title for both histogram; fTotalHistogram has title: title + "" (total)""; fPassedHistogram has title: title + "" (passed)""; It is possible to label the axis by passing a title with; the following format: ""title;xlabel;ylabel;zlabel"".; nbinsx - number of bins on the x-axis; xlow - lower edge of first x-bin; xup - upper edge of last x-bin; nbinsy - number of bins on the y-axis; ylow - lower edge of first y-bin; yup - upper edge of last y-bin; nbinsz - number of bins on the z-axis; zlow - lower edge of first z-bin; zup - upper edge of last z-bin. TEfficiency(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); create 3-dimensional TEfficiency object with variable bin size. constructor creates two new and empty histograms with a given binning. Input: name - the common part of the name for both histograms(no blanks); fTotalHistogram has name: name + ""_total""; fPassedHistogram has name: name + ""_passed""; title - the common part of the title for both histogram; fTotalHistogram has title: title + "" (total)""; fPassedHistogram has title: title + "" (passed)""; It is possible to label the axis by passing a title with; the following format: ""title;xlabel;ylabel;zlabel"".; nbinsx - number of bins on the x-axis; xbins - array of length (nbins + 1) with low-edges for each bin; xbins[nbinsx] ... lower edge for overflow x-bin; nbinsy - number of bins on the y-axis; ybins - array of length (nbins + 1) with low-edges for each bin; xbins[nbinsx] ... lower edge for overflow y-bin; nbinsz - number of bins on the z-axis; zbins - array of length (nbins + 1) with low-",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:3514,Safety,avoid,avoid,3514,"ten; automatically to a file during the next TFile::Write command.; ; Example:; create a twodimensional TEfficiency object with; - name = ""eff""; - title = ""my efficiency""; - axistitles: x, y and LaTeX formated epsilon as label for Z axis; - 10 bins with constant bin width (= 1) along X axis starting at 0 (lower edge; from first bin) upto 10 (upper edge of last bin); - 20 bins with constant bin width (= 0.5) along Y axis starting at -5 (lower; edge from first bin) upto 5 (upper edge of last bin); TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;y;#epsilon"",10,0,10,20,-5,5);; ; If you already have two histograms filled with the number of passed and total; events, you will use the constructor TEfficiency(const TH1& passed,const TH1& total); to construct the TEfficiency object. The histograms ""passed"" and ""total"" have; to fullfill the conditions mentioned in CheckConsistency, otherwise the construction will fail.; As the histograms already exist, the new TEfficiency is by default not attached; to the current directory to avoid duplication of data. If you want to store the; new object anyway, you can either write it directly by calling Write or attach it to a directory using SetDirectory.; This also applies for TEfficiency objects created by the copy constructor TEfficiency(const TEfficiency& rEff).; . Example 1:; TEfficiency* pEff = 0;; TFile* pFile = new TFile(""myfile.root"",""recreate"");; //h_pass and h_total are valid and consistent histograms; if(TEfficiency::CheckConsistency(h_pass,h_total)); {; pEff = new TEfficiency(h_pass,h_total);; // this will write the TEfficiency object to ""myfile.root""; // AND pEff will be attached to the current directory; pEff->Write();; }; Example 2:; TEfficiency* pEff = 0;; TFile* pFile = new TFile(""myfile.root"",""recreate"");; //h_pass and h_total are valid and consistent histograms; if(TEfficiency::CheckConsistency(h_pass,h_total)); {; pEff = new TEfficiency(h_pass,h_total);; //this will attach the TEfficiency object to the curre",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:17445,Safety,avoid,avoid,17445,". The same prior is used; for all the TEfficiency objects.; . Example:; If you use cuts to select electrons which can originate from two different; processes, you can determine the selection efficiency for each process. The; overall selection efficiency is then the combined efficiency. The weights to be used in the; combination should be the probability that an; electron comes from the corresponding process.; . VI. Further operations; VI.1 Information about the internal histograms; The methods GetPassedHistogram and GetTotalHistogram; return a constant pointer to the internal histograms. They can be used to; obtain information about the internal histograms (e.g. the binning, number of passed / total events in a bin, mean values...).; One can obtain a clone of the internal histograms by calling GetCopyPassedHisto or GetCopyTotalHisto.; The returned histograms are completely independent from the current; TEfficiency object. By default, they are not attached to a directory to; avoid the duplication of data and the user is responsible for deleting them.; . Example:; //open a root file which contains a TEfficiency object; TFile* pFile = new TFile(""myfile.root"",""update"");; //get TEfficiency object with name ""my_eff""; TEfficiency* pEff = (TEfficiency*)pFile->Get(""my_eff"");; //get clone of total histogram; TH1* clone = pEff->GetCopyTotalHisto();; //change clone...; //save changes of clone directly; clone->Write();; //or append it to the current directoy and write the file; //clone->SetDirectory(gDirectory);; //pFile->Wrtie();; //delete histogram object; delete clone;; clone = 0;; . It is also possible to set the internal total or passed histogram by using the; methods SetPassedHistogram or; SetTotalHistogram.; In order to ensure the validity of the TEfficiency object, the consistency of the; new histogram and the stored histogram is checked. It sometimes might be; impossible to change the histograms in a consistent way. Therefore one can force; the replacement by passing th",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:58033,Safety,avoid,avoid,58033,"in(Double_t x, Double_t y = 0, Double_t z = 0) const; returns the global bin number containing the given values. Note: - values which belong to dimensions higher than the current dimension; of the TEfficiency object are ignored (i.e. for 1-dimensional; efficiencies only the x-value is considered). Int_t Fit(TF1* f1, Option_t* opt = """"); fits the efficiency using the TBinomialEfficiencyFitter class. The resulting fit function is added to the list of associated functions. Options: - ""+"": previous fitted functions in the list are kept, by default; all functions in the list are deleted; - for more fitting options see TBinomialEfficiencyFitter::Fit. TH1* GetCopyPassedHisto() const; returns a cloned version of fPassedHistogram. Notes: - The histogram is filled with unit weights. You might want to scale; it with the global weight GetWeight().; - The returned object is owned by the user who has to care about the; deletion of the new TH1 object.; - This histogram is by default NOT attached to the current directory; to avoid duplication of data. If you want to store it automatically; during the next TFile::Write() command, you have to attach it to; the corresponding directory. TFile* pFile = new TFile(""passed.root"",""update"");; TEfficiency* pEff = (TEfficiency*)gDirectory->Get(""my_eff"");; TH1* copy = pEff->GetCopyPassedHisto();; copy->SetDirectory(gDirectory);; pFile->Write();. TH1* GetCopyTotalHisto() const; returns a cloned version of fTotalHistogram. Notes: - The histogram is filled with unit weights. You might want to scale; it with the global weight GetWeight().; - The returned object is owned by the user who has to care about the; deletion of the new TH1 object.; - This histogram is by default NOT attached to the current directory; to avoid duplication of data. If you want to store it automatically; during the next TFile::Write() command, you have to attach it to; the corresponding directory. TFile* pFile = new TFile(""total.root"",""update"");; TEfficiency* pEff = (TEfficien",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:58768,Safety,avoid,avoid,58768,"es: - The histogram is filled with unit weights. You might want to scale; it with the global weight GetWeight().; - The returned object is owned by the user who has to care about the; deletion of the new TH1 object.; - This histogram is by default NOT attached to the current directory; to avoid duplication of data. If you want to store it automatically; during the next TFile::Write() command, you have to attach it to; the corresponding directory. TFile* pFile = new TFile(""passed.root"",""update"");; TEfficiency* pEff = (TEfficiency*)gDirectory->Get(""my_eff"");; TH1* copy = pEff->GetCopyPassedHisto();; copy->SetDirectory(gDirectory);; pFile->Write();. TH1* GetCopyTotalHisto() const; returns a cloned version of fTotalHistogram. Notes: - The histogram is filled with unit weights. You might want to scale; it with the global weight GetWeight().; - The returned object is owned by the user who has to care about the; deletion of the new TH1 object.; - This histogram is by default NOT attached to the current directory; to avoid duplication of data. If you want to store it automatically; during the next TFile::Write() command, you have to attach it to; the corresponding directory. TFile* pFile = new TFile(""total.root"",""update"");; TEfficiency* pEff = (TEfficiency*)gDirectory->Get(""my_eff"");; TH1* copy = pEff->GetCopyTotalHisto();; copy->SetDirectory(gDirectory);; pFile->Write();. Int_t GetDimension() const; returns the dimension of the current TEfficiency object. Double_t GetEfficiency(Int_t bin) const; returns the efficiency in the given global bin. Note: - The estimated efficiency depends on the chosen statistic option:; for frequentist ones:; ; for bayesian ones the expectation value of the resulting posterior; distribution is returned:; ; If the bit kPosteriorMode is set (or the method TEfficiency::UsePosteriorMode() has been called ) the; mode (most probable value) of the posterior is returned:; . - If the denominator is equal to 0, an efficiency of 0 is returned.; - When or t",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:26284,Security,Hash,Hash,26284,"binx, Int_t biny = 0, Int_t binz = 0) const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*GetListOfFunctions(); virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGraphAsymmErrors*GetPaintedGraph() const; TH2*GetPaintedHistogram() const; const TH1*GetPassedHistogram() const; TEfficiency::EStatOptionGetStatisticOption() const; virtual const char*TNamed::GetTitle() const; const TH1*GetTotalHistogram() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetWeight() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tMerge(TCollection* list); virtual voidTAttLine::Modify(); static Double_tNormal(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr);",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:63165,Security,access,access,63165," operator=(const TEfficiency& rhs); assignment operator. The histograms, statistic option, confidence level, weight and paint styles; of rhs are copied to the this TEfficiency object. Note: - The list of associated functions is not copied. After this; operation the list of associated functions is empty. void Paint(Option_t* opt); paints this TEfficiency object. For details on the possible option see Draw(Option_t*). Note for 1D classes; In 1D the TEfficiency uses a TGraphAsymmErrors for drawing; The TGraph is created only the first time Paint is used. The user can manipulate the; TGraph via the method TEfficiency::GetPaintedGraph(); The TGraph creates behing an histogram for the axis. The histogram is created also only the first time.; If the axis needs to be updated because in the meantime the class changed use this trick; which will trigger a re-calculation of the axis of the graph; TEfficiency::GetPaintedGraph()->Set(0). Note that in order to access the painted graph via GetPaintedGraph() you need either to call Paint or better; gPad->Update();. void SavePrimitive(ostream& out, Option_t* opt = """"); have histograms fixed bins along each axis?. void SetBetaAlpha(Double_t alpha); sets the shape parameter . The prior probability of the efficiency is given by the beta distribution:. Note: - both shape parameters have to be positive (i.e. > 0). void SetBetaBeta(Double_t beta); sets the shape parameter . The prior probability of the efficiency is given by the beta distribution:. Note: - both shape parameters have to be positive (i.e. > 0). void SetBetaBinParameters(Int_t bin, Double_t alpha, Double_t beta); sets different shape parameter ; for the prior distribution for each bin. By default the global parameter are used if they are not set; for the specific bin; The prior probability of the efficiency is given by the beta distribution:. Note: - both shape parameters have to be positive (i.e. > 0); - bin gives the global bin number (cf. GetGlobalBin). Bool_t SetBins(Int_t",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:31423,Testability,Test,TestBit,31423,"e::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTAttMarker::SetMarkerAttributes()MENU ; virtual voidTAttMarker::SetMarkerColor(Color_t mcolor = 1); virtual voidTAttMarker::SetMarkerColorAlpha(Color_t mcolor, Float_t malpha); virtual voidTAttMarker::SetMarkerSize(Size_t msize = 1); virtual voidTAttMarker::SetMarkerStyle(Style_t mstyle = 1); virtual voidSetName(const char* name); virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); Bool_tSetPassedEvents(Int_t bin, Int_t events); Bool_tSetPassedHistogram(const TH1& rPassed, Option_t* opt); voidSetPosteriorAverage(Bool_t on = true); voidSetPosteriorMode(Bool_t on = true); voidSetShortestInterval(Bool_t on = true); voidSetStatisticOption(TEfficiency::EStatOption option); virtual voidSetTitle(const char* title); Bool_tSetTotalEvents(Int_t bin, Int_t events); Bool_tSetTotalHistogram(const TH1& rTotal, Option_t* opt); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetUseWeightedEvents(); voidSetWeight(Double_t weight); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); Bool_tUsesBayesianStat() const; Bool_tUsesCentralInterval() const; Bool_tUsesPosteriorAverage() const; Bool_tUsesPosteriorMode() const; Bool_tUsesShortestInterval() const; Bool_tUsesWeights() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; static Double_tWilson(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:31462,Testability,Test,TestBits,31462,"e::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTAttMarker::SetMarkerAttributes()MENU ; virtual voidTAttMarker::SetMarkerColor(Color_t mcolor = 1); virtual voidTAttMarker::SetMarkerColorAlpha(Color_t mcolor, Float_t malpha); virtual voidTAttMarker::SetMarkerSize(Size_t msize = 1); virtual voidTAttMarker::SetMarkerStyle(Style_t mstyle = 1); virtual voidSetName(const char* name); virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); Bool_tSetPassedEvents(Int_t bin, Int_t events); Bool_tSetPassedHistogram(const TH1& rPassed, Option_t* opt); voidSetPosteriorAverage(Bool_t on = true); voidSetPosteriorMode(Bool_t on = true); voidSetShortestInterval(Bool_t on = true); voidSetStatisticOption(TEfficiency::EStatOption option); virtual voidSetTitle(const char* title); Bool_tSetTotalEvents(Int_t bin, Int_t events); Bool_tSetTotalHistogram(const TH1& rTotal, Option_t* opt); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetUseWeightedEvents(); voidSetWeight(Double_t weight); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); Bool_tUsesBayesianStat() const; Bool_tUsesCentralInterval() const; Bool_tUsesPosteriorAverage() const; Bool_tUsesPosteriorMode() const; Bool_tUsesShortestInterval() const; Bool_tUsesWeights() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; static Double_tWilson(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:49558,Testability,test,test,49558,"FillGraph(TGraphAsymmErrors* graph, Option_t* opt) const; Fill the graph to be painted with information from TEfficiency; Internal metyhod called by TEfficiency::Paint or TEfficiency::CreateGraph. TH2 * CreateHistogram(Option_t* opt = """") const; Create the histogram used to be painted (for dim=2 TEfficiency); The return object is managed by the caller. void FillHistogram(TH2* h2) const; Fill the 2d histogram to be painted with information from TEfficiency 2D; Internal metyhod called by TEfficiency::Paint or TEfficiency::CreatePaintingGraph. Double_t ClopperPearson(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); calculates the boundaries for the frequentist Clopper-Pearson interval. This interval is recommended by the PDG. Input: - total : number of total events; - passed: 0 <= number of passed events <= total; - level : confidence level; - bUpper: true - upper boundary is returned; false - lower boundary is returned. calculation:. The lower boundary of the Clopper-Pearson interval is the ""exact"" inversion; of the test:. The lower boundary is therfore given by the quantile; of the beta distribution. The upper boundary of the Clopper-Pearson interval is the ""exact"" inversion; of the test:. The upper boundary is therfore given by the quantile; of the beta distribution. Note: The connection between the binomial distribution and the regularized; incomplete beta function has been used. Double_t Combine(Double_t& up, Double_t& low, Int_t n, const Int_t* pass, const Int_t* total, Double_t alpha, Double_t beta, Double_t level = 0.683, const Double_t* w = 0, Option_t* opt = """"); calculates the combined efficiency and its uncertainties. This method does a bayesian combination of the given samples. Input:; - up : contains the upper limit of the confidence interval afterwards; - low : contains the lower limit of the confidence interval afterwards; - n : number of samples which are combined; - pass : array of length n containing the number of passed events; - total : ar",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:49729,Testability,test,test,49729,"TEfficiency::CreateGraph. TH2 * CreateHistogram(Option_t* opt = """") const; Create the histogram used to be painted (for dim=2 TEfficiency); The return object is managed by the caller. void FillHistogram(TH2* h2) const; Fill the 2d histogram to be painted with information from TEfficiency 2D; Internal metyhod called by TEfficiency::Paint or TEfficiency::CreatePaintingGraph. Double_t ClopperPearson(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); calculates the boundaries for the frequentist Clopper-Pearson interval. This interval is recommended by the PDG. Input: - total : number of total events; - passed: 0 <= number of passed events <= total; - level : confidence level; - bUpper: true - upper boundary is returned; false - lower boundary is returned. calculation:. The lower boundary of the Clopper-Pearson interval is the ""exact"" inversion; of the test:. The lower boundary is therfore given by the quantile; of the beta distribution. The upper boundary of the Clopper-Pearson interval is the ""exact"" inversion; of the test:. The upper boundary is therfore given by the quantile; of the beta distribution. Note: The connection between the binomial distribution and the regularized; incomplete beta function has been used. Double_t Combine(Double_t& up, Double_t& low, Int_t n, const Int_t* pass, const Int_t* total, Double_t alpha, Double_t beta, Double_t level = 0.683, const Double_t* w = 0, Option_t* opt = """"); calculates the combined efficiency and its uncertainties. This method does a bayesian combination of the given samples. Input:; - up : contains the upper limit of the confidence interval afterwards; - low : contains the lower limit of the confidence interval afterwards; - n : number of samples which are combined; - pass : array of length n containing the number of passed events; - total : array of length n containing the corresponding numbers of total; events; - alpha : shape parameters for the beta distribution as prior; - beta : shape parameters for the bet",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:71599,Testability,Test,TestBit,71599,"nfidence level; - bUpper: true - upper boundary is returned; false - lower boundary is returned. calculation:. void Add(const TEfficiency& rEff); {*this += rEff;}. Double_t GetBetaAlpha(Int_t bin = -1) const; use trick of -1 to return global parameters. {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].first : fBeta_alpha;}. Double_t GetBetaBeta(Int_t bin = -1) const; {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].second : fBeta_beta;}. Double_t GetConfidenceLevel() const; {return fConfLevel;}. TDirectory* GetDirectory() const; {return fDirectory;}. TGraphAsymmErrors* GetPaintedGraph() const; { return fPaintGraph; }. TH2* GetPaintedHistogram() const; { return fPaintHisto; }. const TH1* GetPassedHistogram() const; {return fPassedHistogram;}. EStatOption GetStatisticOption() const; {return fStatisticOption;}. const TH1* GetTotalHistogram() const; {return fTotalHistogram;}. Double_t GetWeight() const; {return fWeight;}. void SetPosteriorMode(Bool_t on = true); { SetBit(kPosteriorMode,on); SetShortestInterval(on); }. void SetPosteriorAverage(Bool_t on = true); { SetBit(kPosteriorMode,!on); }. void SetShortestInterval(Bool_t on = true); { SetBit(kShortestInterval,on); }. void SetCentralInterval(Bool_t on = true); { SetBit(kShortestInterval,!on); }. Bool_t UsesBayesianStat() const; {return TestBit(kIsBayesian);}. Bool_t UsesPosteriorMode() const; {return TestBit(kPosteriorMode) && TestBit(kIsBayesian);}. Bool_t UsesShortestInterval() const; {return TestBit(kShortestInterval) && TestBit(kIsBayesian);}. Bool_t UsesPosteriorAverage() const; {return !UsesPosteriorMode();}. Bool_t UsesCentralInterval() const; {return !UsesShortestInterval();}. Bool_t UsesWeights() const; {return TestBit(kUseWeights);}. » Last changed: Fri Mar 13 19:20:49 2015 » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:71665,Testability,Test,TestBit,71665,"nfidence level; - bUpper: true - upper boundary is returned; false - lower boundary is returned. calculation:. void Add(const TEfficiency& rEff); {*this += rEff;}. Double_t GetBetaAlpha(Int_t bin = -1) const; use trick of -1 to return global parameters. {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].first : fBeta_alpha;}. Double_t GetBetaBeta(Int_t bin = -1) const; {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].second : fBeta_beta;}. Double_t GetConfidenceLevel() const; {return fConfLevel;}. TDirectory* GetDirectory() const; {return fDirectory;}. TGraphAsymmErrors* GetPaintedGraph() const; { return fPaintGraph; }. TH2* GetPaintedHistogram() const; { return fPaintHisto; }. const TH1* GetPassedHistogram() const; {return fPassedHistogram;}. EStatOption GetStatisticOption() const; {return fStatisticOption;}. const TH1* GetTotalHistogram() const; {return fTotalHistogram;}. Double_t GetWeight() const; {return fWeight;}. void SetPosteriorMode(Bool_t on = true); { SetBit(kPosteriorMode,on); SetShortestInterval(on); }. void SetPosteriorAverage(Bool_t on = true); { SetBit(kPosteriorMode,!on); }. void SetShortestInterval(Bool_t on = true); { SetBit(kShortestInterval,on); }. void SetCentralInterval(Bool_t on = true); { SetBit(kShortestInterval,!on); }. Bool_t UsesBayesianStat() const; {return TestBit(kIsBayesian);}. Bool_t UsesPosteriorMode() const; {return TestBit(kPosteriorMode) && TestBit(kIsBayesian);}. Bool_t UsesShortestInterval() const; {return TestBit(kShortestInterval) && TestBit(kIsBayesian);}. Bool_t UsesPosteriorAverage() const; {return !UsesPosteriorMode();}. Bool_t UsesCentralInterval() const; {return !UsesShortestInterval();}. Bool_t UsesWeights() const; {return TestBit(kUseWeights);}. » Last changed: Fri Mar 13 19:20:49 2015 » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:71692,Testability,Test,TestBit,71692,"nfidence level; - bUpper: true - upper boundary is returned; false - lower boundary is returned. calculation:. void Add(const TEfficiency& rEff); {*this += rEff;}. Double_t GetBetaAlpha(Int_t bin = -1) const; use trick of -1 to return global parameters. {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].first : fBeta_alpha;}. Double_t GetBetaBeta(Int_t bin = -1) const; {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].second : fBeta_beta;}. Double_t GetConfidenceLevel() const; {return fConfLevel;}. TDirectory* GetDirectory() const; {return fDirectory;}. TGraphAsymmErrors* GetPaintedGraph() const; { return fPaintGraph; }. TH2* GetPaintedHistogram() const; { return fPaintHisto; }. const TH1* GetPassedHistogram() const; {return fPassedHistogram;}. EStatOption GetStatisticOption() const; {return fStatisticOption;}. const TH1* GetTotalHistogram() const; {return fTotalHistogram;}. Double_t GetWeight() const; {return fWeight;}. void SetPosteriorMode(Bool_t on = true); { SetBit(kPosteriorMode,on); SetShortestInterval(on); }. void SetPosteriorAverage(Bool_t on = true); { SetBit(kPosteriorMode,!on); }. void SetShortestInterval(Bool_t on = true); { SetBit(kShortestInterval,on); }. void SetCentralInterval(Bool_t on = true); { SetBit(kShortestInterval,!on); }. Bool_t UsesBayesianStat() const; {return TestBit(kIsBayesian);}. Bool_t UsesPosteriorMode() const; {return TestBit(kPosteriorMode) && TestBit(kIsBayesian);}. Bool_t UsesShortestInterval() const; {return TestBit(kShortestInterval) && TestBit(kIsBayesian);}. Bool_t UsesPosteriorAverage() const; {return !UsesPosteriorMode();}. Bool_t UsesCentralInterval() const; {return !UsesShortestInterval();}. Bool_t UsesWeights() const; {return TestBit(kUseWeights);}. » Last changed: Fri Mar 13 19:20:49 2015 » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:71761,Testability,Test,TestBit,71761,"nfidence level; - bUpper: true - upper boundary is returned; false - lower boundary is returned. calculation:. void Add(const TEfficiency& rEff); {*this += rEff;}. Double_t GetBetaAlpha(Int_t bin = -1) const; use trick of -1 to return global parameters. {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].first : fBeta_alpha;}. Double_t GetBetaBeta(Int_t bin = -1) const; {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].second : fBeta_beta;}. Double_t GetConfidenceLevel() const; {return fConfLevel;}. TDirectory* GetDirectory() const; {return fDirectory;}. TGraphAsymmErrors* GetPaintedGraph() const; { return fPaintGraph; }. TH2* GetPaintedHistogram() const; { return fPaintHisto; }. const TH1* GetPassedHistogram() const; {return fPassedHistogram;}. EStatOption GetStatisticOption() const; {return fStatisticOption;}. const TH1* GetTotalHistogram() const; {return fTotalHistogram;}. Double_t GetWeight() const; {return fWeight;}. void SetPosteriorMode(Bool_t on = true); { SetBit(kPosteriorMode,on); SetShortestInterval(on); }. void SetPosteriorAverage(Bool_t on = true); { SetBit(kPosteriorMode,!on); }. void SetShortestInterval(Bool_t on = true); { SetBit(kShortestInterval,on); }. void SetCentralInterval(Bool_t on = true); { SetBit(kShortestInterval,!on); }. Bool_t UsesBayesianStat() const; {return TestBit(kIsBayesian);}. Bool_t UsesPosteriorMode() const; {return TestBit(kPosteriorMode) && TestBit(kIsBayesian);}. Bool_t UsesShortestInterval() const; {return TestBit(kShortestInterval) && TestBit(kIsBayesian);}. Bool_t UsesPosteriorAverage() const; {return !UsesPosteriorMode();}. Bool_t UsesCentralInterval() const; {return !UsesShortestInterval();}. Bool_t UsesWeights() const; {return TestBit(kUseWeights);}. » Last changed: Fri Mar 13 19:20:49 2015 » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:71791,Testability,Test,TestBit,71791,"nfidence level; - bUpper: true - upper boundary is returned; false - lower boundary is returned. calculation:. void Add(const TEfficiency& rEff); {*this += rEff;}. Double_t GetBetaAlpha(Int_t bin = -1) const; use trick of -1 to return global parameters. {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].first : fBeta_alpha;}. Double_t GetBetaBeta(Int_t bin = -1) const; {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].second : fBeta_beta;}. Double_t GetConfidenceLevel() const; {return fConfLevel;}. TDirectory* GetDirectory() const; {return fDirectory;}. TGraphAsymmErrors* GetPaintedGraph() const; { return fPaintGraph; }. TH2* GetPaintedHistogram() const; { return fPaintHisto; }. const TH1* GetPassedHistogram() const; {return fPassedHistogram;}. EStatOption GetStatisticOption() const; {return fStatisticOption;}. const TH1* GetTotalHistogram() const; {return fTotalHistogram;}. Double_t GetWeight() const; {return fWeight;}. void SetPosteriorMode(Bool_t on = true); { SetBit(kPosteriorMode,on); SetShortestInterval(on); }. void SetPosteriorAverage(Bool_t on = true); { SetBit(kPosteriorMode,!on); }. void SetShortestInterval(Bool_t on = true); { SetBit(kShortestInterval,on); }. void SetCentralInterval(Bool_t on = true); { SetBit(kShortestInterval,!on); }. Bool_t UsesBayesianStat() const; {return TestBit(kIsBayesian);}. Bool_t UsesPosteriorMode() const; {return TestBit(kPosteriorMode) && TestBit(kIsBayesian);}. Bool_t UsesShortestInterval() const; {return TestBit(kShortestInterval) && TestBit(kIsBayesian);}. Bool_t UsesPosteriorAverage() const; {return !UsesPosteriorMode();}. Bool_t UsesCentralInterval() const; {return !UsesShortestInterval();}. Bool_t UsesWeights() const; {return TestBit(kUseWeights);}. » Last changed: Fri Mar 13 19:20:49 2015 » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:71991,Testability,Test,TestBit,71991,"nfidence level; - bUpper: true - upper boundary is returned; false - lower boundary is returned. calculation:. void Add(const TEfficiency& rEff); {*this += rEff;}. Double_t GetBetaAlpha(Int_t bin = -1) const; use trick of -1 to return global parameters. {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].first : fBeta_alpha;}. Double_t GetBetaBeta(Int_t bin = -1) const; {return (fBeta_bin_params.size() > (UInt_t)bin) ? fBeta_bin_params[bin].second : fBeta_beta;}. Double_t GetConfidenceLevel() const; {return fConfLevel;}. TDirectory* GetDirectory() const; {return fDirectory;}. TGraphAsymmErrors* GetPaintedGraph() const; { return fPaintGraph; }. TH2* GetPaintedHistogram() const; { return fPaintHisto; }. const TH1* GetPassedHistogram() const; {return fPassedHistogram;}. EStatOption GetStatisticOption() const; {return fStatisticOption;}. const TH1* GetTotalHistogram() const; {return fTotalHistogram;}. Double_t GetWeight() const; {return fWeight;}. void SetPosteriorMode(Bool_t on = true); { SetBit(kPosteriorMode,on); SetShortestInterval(on); }. void SetPosteriorAverage(Bool_t on = true); { SetBit(kPosteriorMode,!on); }. void SetShortestInterval(Bool_t on = true); { SetBit(kShortestInterval,on); }. void SetCentralInterval(Bool_t on = true); { SetBit(kShortestInterval,!on); }. Bool_t UsesBayesianStat() const; {return TestBit(kIsBayesian);}. Bool_t UsesPosteriorMode() const; {return TestBit(kPosteriorMode) && TestBit(kIsBayesian);}. Bool_t UsesShortestInterval() const; {return TestBit(kShortestInterval) && TestBit(kIsBayesian);}. Bool_t UsesPosteriorAverage() const; {return !UsesPosteriorMode();}. Bool_t UsesCentralInterval() const; {return !UsesShortestInterval();}. Bool_t UsesWeights() const; {return TestBit(kUseWeights);}. » Last changed: Fri Mar 13 19:20:49 2015 » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:22567,Usability,Clear,Clear,22567," TEfficiency(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); TEfficiency(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); TEfficiency(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); virtual~TEfficiency(); voidTObject::AbstractMethod(const char* method) const; voidAdd(const TEfficiency& rEff); static Double_tAgrestiCoull(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); virtual voidTObject::AppendPad(Option_t* option = """"); static Double_tBayesian(Int_t total, Int_t passed, Double_t level, Double_t alpha, Double_t beta, Bool_t bUpper, Bool_t bShortest = false); static Double_tBetaCentralInterval(Double_t level, Double_t alpha, Double_t beta, Bool_t bUpper); static Double_tBetaMean(Double_t alpha, Double_t beta); static Double_tBetaMode(Double_t alpha, Double_t beta); static Bool_tBetaShortestInterval(Double_t level, Double_t alpha, Double_t beta, Double_t& lower, Double_t& upper); virtual voidTObject::Browse(TBrowser* b); static Bool_tCheckBinning(const TH1& pass, const TH1& total); static Bool_tCheckConsistency(const TH1& pass, const TH1& total, Option_t* opt = """"); static Bool_tCheckEntries(const TH1& pass, const TH1& total, Option_t* opt = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; static Double_tClopperPearson(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); static TGraphAsymmErrors*Combine(TCollection* pList, Option_t* opt = """", Int_t n = 0, const Double_t* w = 0); static Double_tCombine(Double_t& up, Double_t& low, Int_t n, const Int_t* pass, const Int_t* total, Double_t alpha, Double_t beta, Double_t level = 0.",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:66982,Usability,clear,cleared,66982,"fficiency object does not; belong to any directory and will not be written to file during the; next TFile::Write() command. void SetName(const char* name); sets the name. Note: The names of the internal histograms are set to ""name + _total"" and; ""name + _passed"" respectively. Bool_t SetPassedEvents(Int_t bin, Int_t events); sets the number of passed events in the given global bin. returns ""true"" if the number of passed events has been updated; otherwise ""false"" ist returned. Note: - requires: 0 <= events <= fTotalHistogram->GetBinContent(bin). Bool_t SetPassedHistogram(const TH1& rPassed, Option_t* opt); sets the histogram containing the passed events. The given histogram is cloned and stored internally as histogram containing; the passed events. The given histogram has to be consistent with the current; fTotalHistogram (see CheckConsistency(const TH1&,const TH1&)).; The method returns whether the fPassedHistogram has been replaced (true) or; not (false). Note: The list of associated functions fFunctions is cleared. Option: - ""f"": force the replacement without checking the consistency; This can lead to inconsistent histograms and useless results; or unexpected behaviour. But sometimes it might be the only; way to change the histograms. If you use this option, you; should ensure that the fTotalHistogram is replaced by a; consistent one (with respect to rPassed) as well. void SetStatisticOption(TEfficiency::EStatOption option); sets the statistic option which affects the calculation of the confidence interval. Options:; - kFCP (=0)(default): using the Clopper-Pearson interval (recommended by PDG); sets kIsBayesian = false; see also ClopperPearson; - kFNormal (=1) : using the normal approximation; sets kIsBayesian = false; see also Normal; - kFWilson (=2) : using the Wilson interval; sets kIsBayesian = false; see also Wilson; - kFAC (=3) : using the Agresti-Coull interval; sets kIsBayesian = false; see also AgrestiCoull; - kFFC (=4) : using the Feldman-Cousins frequent",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEfficiency.html:69482,Usability,clear,cleared,69482,"he titles of the internal histograms are set to ""title + (total)""; or ""title + (passed)"" respectively.; - It is possible to label the axis of the histograms as usual (see; TH1::SetTitle). Example: Setting the title to ""My Efficiency"" and label the axis. pEff->SetTitle(""My Efficiency;x label;eff"");. Bool_t SetTotalEvents(Int_t bin, Int_t events); sets the number of total events in the given global bin. returns ""true"" if the number of total events has been updated; otherwise ""false"" ist returned. Note: - requires: fPassedHistogram->GetBinContent(bin) <= events. Bool_t SetTotalHistogram(const TH1& rTotal, Option_t* opt); sets the histogram containing all events. The given histogram is cloned and stored internally as histogram containing; all events. The given histogram has to be consistent with the current; fPassedHistogram (see CheckConsistency(const TH1&,const TH1&)).; The method returns whether the fTotalHistogram has been replaced (true) or; not (false). Note: The list of associated functions fFunctions is cleared. Option: - ""f"": force the replacement without checking the consistency; This can lead to inconsistent histograms and useless results; or unexpected behaviour. But sometimes it might be the only; way to change the histograms. If you use this option, you; should ensure that the fPassedHistogram is replaced by a; consistent one (with respect to rTotal) as well. void SetUseWeightedEvents(). void SetWeight(Double_t weight); sets the global weight for this TEfficiency object. Note: - weight has to be positive ( > 0). Double_t Wilson(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); calculates the boundaries for the frequentist Wilson interval. Input: - total : number of total events; - passed: 0 <= number of passed events <= total; - level : confidence level; - bUpper: true - upper boundary is returned; false - lower boundary is returned. calculation:. void Add(const TEfficiency& rEff); {*this += rEff;}. Double_t GetBetaAlpha(Int_t bin = -1) const; use",MatchSource.WIKI,root/html534/TEfficiency.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEfficiency.html
https://root.cern/root/html534/TEllipse.html:2985,Availability,Error,Error,2985,"ractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& ellipse) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tGetBBox(); virtual TPointGetBBoxCenter(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; Bool_tGetNoEdges() const; virtual char*TObjec",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:3114,Availability,error,error,3114,"* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& ellipse) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tGetBBox(); virtual TPointGetBBoxCenter(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; Bool_tGetNoEdges() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; D",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:3198,Availability,error,error,3198,"voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& ellipse) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tGetBBox(); virtual TPointGetBBoxCenter(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; Bool_tGetNoEdges() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetPhimax() const; Double_tGetPhimin() const; Double_tGetR1() const; Double_t",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:7645,Deployability,TOGGLE,TOGGLE,7645,"virtual voidSetBBoxCenter(const TPoint& p); virtual voidSetBBoxCenterX(const Int_t x); virtual voidSetBBoxCenterY(const Int_t y); virtual voidSetBBoxX1(const Int_t x); virtual voidSetBBoxX2(const Int_t x); virtual voidSetBBoxY1(const Int_t y); virtual voidSetBBoxY2(const Int_t y); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidSetNoEdges(Bool_t noEdges = kTRUE)TOGGLE GETTER ; static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPhimax(Double_t phi = 360)MENU ; virtual voidSetPhimin(Double_t phi = 0)MENU ; virtual voidSetR1(Double_t r1)MENU ; virtual voidSetR2(Double_t r2)MENU ; virtual voidSetTheta(Double_t theta = 0)MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetX1(Double_t x1)MENU ; virtual voidSetY1(Double_t y1)MENU ; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:10859,Deployability,release,released,10859,"tor. ~TEllipse(); Ellipse default destructor. TEllipse(const TEllipse& ellipse); Copy constructor. void Copy(TObject& ellipse) const; Copy this ellipse to ellipse. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to an ellipse. Compute the closest distance of approach from point px,py to this; ellipse. The distance is computed in pixels units. In case of a filled ellipse the distance returned is 0 if the point; (px,py) is inside the ellipse, and is huge if the point is outside. void Draw(Option_t* option = """"); Draw this ellipse with its current attributes. void DrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellipse with new coordinates. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when a line is clicked with the locator. If Left button clicked on one of the line end points, this point; follows the cursor until button is released. if Middle button clicked, the line is moved parallel to itself; until the button is released. NOTE that support for log scale is not implemented. void ls(Option_t* option = """") const; List this ellipse with its attributes. void Paint(Option_t* option = """"); Paint this ellipse with its current attributes. void PaintEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellipse with new coordinates. void Print(Option_t* option = """") const; Dump this ellipse with its attributes. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. Bool_t GetNoEdges() const; Return kTRUE if kNoEdges bit is set, kFALSE otherwise. void SetNoEdges(Bool_t noEdges = kTRUE); if noEdges = kTRUE the lines connecting the center to the edges; will not be drawn.; default is to draw the edges. void Streamer(TBuffe",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:10953,Deployability,release,released,10953," Copy(TObject& ellipse) const; Copy this ellipse to ellipse. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to an ellipse. Compute the closest distance of approach from point px,py to this; ellipse. The distance is computed in pixels units. In case of a filled ellipse the distance returned is 0 if the point; (px,py) is inside the ellipse, and is huge if the point is outside. void Draw(Option_t* option = """"); Draw this ellipse with its current attributes. void DrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellipse with new coordinates. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when a line is clicked with the locator. If Left button clicked on one of the line end points, this point; follows the cursor until button is released. if Middle button clicked, the line is moved parallel to itself; until the button is released. NOTE that support for log scale is not implemented. void ls(Option_t* option = """") const; List this ellipse with its attributes. void Paint(Option_t* option = """"); Paint this ellipse with its current attributes. void PaintEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellipse with new coordinates. void Print(Option_t* option = """") const; Dump this ellipse with its attributes. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. Bool_t GetNoEdges() const; Return kTRUE if kNoEdges bit is set, kFALSE otherwise. void SetNoEdges(Bool_t noEdges = kTRUE); if noEdges = kTRUE the lines connecting the center to the edges; will not be drawn.; default is to draw the edges. void Streamer(TBuffer& ); Stream an object of class TEllipse. Rectangle_t GetBBox(); Return the bounding Box of the Ellips",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:4563,Modifiability,Inherit,InheritsFrom,4563," const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; Bool_tGetNoEdges() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetPhimax() const; Double_tGetPhimin() const; Double_tGetR1() const; Double_tGetR2() const; Double_tGetTheta() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX1() const; Double_tGetY1() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(s",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:4629,Modifiability,Inherit,InheritsFrom,4629,"ll::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; Bool_tGetNoEdges() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetPhimax() const; Double_tGetPhimin() const; Double_tGetR1() const; Double_tGetR2() const; Double_tGetTheta() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX1() const; Double_tGetY1() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:9541,Modifiability,Inherit,Inheritance,9541,"te(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum { kNoEdges; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Double_tfPhimaxMaximum angle (degrees); Double_tfPhiminMinimum angle (degrees); Double_tfR1first radius; Double_tfR2second radius; Double_tfThetaRotation angle (degrees); Double_tfX1X coordinate of centre; Double_tfY1Y coordinate of centre. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEllipse(); Ellipse default constructor. TEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2 = 0, Double_t phimin = 0, Double_t phimax = 360, Double_t theta = 0); Ellipse normal constructor. ~TEllipse(); Ellipse default destructor. TEllipse(const TEllipse& ellipse); Copy constructor. void Copy(TObject& ellipse) const; Copy this ellipse to ellipse. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to an ellipse. Compute the closest distance of approach from point px,py to this; ellipse. The distance is computed in pixels units. In case of a filled ellipse the distance returned is 0 if the point; (px,py) is inside the ellipse, and is huge if the point is outside. void Draw(Option_t* option = """"); Draw this ellipse with its current attributes. void DrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellips",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:9554,Modifiability,Inherit,Inherited,9554,"te(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum { kNoEdges; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Double_tfPhimaxMaximum angle (degrees); Double_tfPhiminMinimum angle (degrees); Double_tfR1first radius; Double_tfR2second radius; Double_tfThetaRotation angle (degrees); Double_tfX1X coordinate of centre; Double_tfY1Y coordinate of centre. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEllipse(); Ellipse default constructor. TEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2 = 0, Double_t phimin = 0, Double_t phimax = 360, Double_t theta = 0); Ellipse normal constructor. ~TEllipse(); Ellipse default destructor. TEllipse(const TEllipse& ellipse); Copy constructor. void Copy(TObject& ellipse) const; Copy this ellipse to ellipse. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to an ellipse. Compute the closest distance of approach from point px,py to this; ellipse. The distance is computed in pixels units. In case of a filled ellipse the distance returned is 0 if the point; (px,py) is inside the ellipse, and is huge if the point is outside. void Draw(Option_t* option = """"); Draw this ellipse with its current attributes. void DrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellips",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:4453,Security,Hash,Hash,4453,"obj) const; virtual Rectangle_tGetBBox(); virtual TPointGetBBoxCenter(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; Bool_tGetNoEdges() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetPhimax() const; Double_tGetPhimin() const; Double_tGetR1() const; Double_tGetR2() const; Double_tGetTheta() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX1() const; Double_tGetY1() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTO",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:8272,Testability,Test,TestBit,8272,"virtual voidSetBBoxCenter(const TPoint& p); virtual voidSetBBoxCenterX(const Int_t x); virtual voidSetBBoxCenterY(const Int_t y); virtual voidSetBBoxX1(const Int_t x); virtual voidSetBBoxX2(const Int_t x); virtual voidSetBBoxY1(const Int_t y); virtual voidSetBBoxY2(const Int_t y); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidSetNoEdges(Bool_t noEdges = kTRUE)TOGGLE GETTER ; static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPhimax(Double_t phi = 360)MENU ; virtual voidSetPhimin(Double_t phi = 0)MENU ; virtual voidSetR1(Double_t r1)MENU ; virtual voidSetR2(Double_t r2)MENU ; virtual voidSetTheta(Double_t theta = 0)MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetX1(Double_t x1)MENU ; virtual voidSetY1(Double_t y1)MENU ; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:8311,Testability,Test,TestBits,8311,"virtual voidSetBBoxCenter(const TPoint& p); virtual voidSetBBoxCenterX(const Int_t x); virtual voidSetBBoxCenterY(const Int_t y); virtual voidSetBBoxX1(const Int_t x); virtual voidSetBBoxX2(const Int_t x); virtual voidSetBBoxY1(const Int_t y); virtual voidSetBBoxY2(const Int_t y); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidSetNoEdges(Bool_t noEdges = kTRUE)TOGGLE GETTER ; static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPhimax(Double_t phi = 360)MENU ; virtual voidSetPhimin(Double_t phi = 0)MENU ; virtual voidSetR1(Double_t r1)MENU ; virtual voidSetR2(Double_t r2)MENU ; virtual voidSetTheta(Double_t theta = 0)MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetX1(Double_t x1)MENU ; virtual voidSetY1(Double_t y1)MENU ; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:10985,Testability,log,log,10985,"cetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to an ellipse. Compute the closest distance of approach from point px,py to this; ellipse. The distance is computed in pixels units. In case of a filled ellipse the distance returned is 0 if the point; (px,py) is inside the ellipse, and is huge if the point is outside. void Draw(Option_t* option = """"); Draw this ellipse with its current attributes. void DrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellipse with new coordinates. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when a line is clicked with the locator. If Left button clicked on one of the line end points, this point; follows the cursor until button is released. if Middle button clicked, the line is moved parallel to itself; until the button is released. NOTE that support for log scale is not implemented. void ls(Option_t* option = """") const; List this ellipse with its attributes. void Paint(Option_t* option = """"); Paint this ellipse with its current attributes. void PaintEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellipse with new coordinates. void Print(Option_t* option = """") const; Dump this ellipse with its attributes. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. Bool_t GetNoEdges() const; Return kTRUE if kNoEdges bit is set, kFALSE otherwise. void SetNoEdges(Bool_t noEdges = kTRUE); if noEdges = kTRUE the lines connecting the center to the edges; will not be drawn.; default is to draw the edges. void Streamer(TBuffer& ); Stream an object of class TEllipse. Rectangle_t GetBBox(); Return the bounding Box of the Ellipse, currently not taking into; account the rotating angle. TPoint GetBBoxC",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TEllipse.html:2214,Usability,Clear,Clear,2214," TEllipse(); TEllipse(const TEllipse& ellipse); TEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2 = 0, Double_t phimin = 0, Double_t phimax = 360, Double_t theta = 0); virtual~TEllipse(); voidTObject::AbstractMethod(co",MatchSource.WIKI,root/html534/TEllipse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEllipse.html
https://root.cern/root/html534/TELTU.html:1770,Availability,Error,Error,1770,"char* name, const char* title, const char* material, Float_t rx, Float_t ry, Float_t dz); virtual~TELTU(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTTUBE::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Float_tTTUBE::GetAspectRatio() const; virtual const TBuffer3D&TTUBE::GetBuffer3D(Int_t reqSections) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Float_tTTUBE::GetDz() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle",MatchSource.WIKI,root/html534/TELTU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TELTU.html
https://root.cern/root/html534/TELTU.html:1899,Availability,error,error,1899,"ethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTTUBE::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Float_tTTUBE::GetAspectRatio() const; virtual const TBuffer3D&TTUBE::GetBuffer3D(Int_t reqSections) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Float_tTTUBE::GetDz() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetNam",MatchSource.WIKI,root/html534/TELTU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TELTU.html
https://root.cern/root/html534/TELTU.html:1983,Availability,error,error,1983,"""); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTTUBE::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Float_tTTUBE::GetAspectRatio() const; virtual const TBuffer3D&TTUBE::GetBuffer3D(Int_t reqSections) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Float_tTTUBE::GetDz() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() con",MatchSource.WIKI,root/html534/TELTU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TELTU.html
https://root.cern/root/html534/TELTU.html:3574,Modifiability,Inherit,InheritsFrom,3574,"lor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTTUBE::GetNumberOfDivisions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTTUBE::GetRmax() const; virtual Float_tTTUBE::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operato",MatchSource.WIKI,root/html534/TELTU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TELTU.html
https://root.cern/root/html534/TELTU.html:3640,Modifiability,Inherit,InheritsFrom,3640,"l const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTTUBE::GetNumberOfDivisions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTTUBE::GetRmax() const; virtual Float_tTTUBE::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root/html534/TELTU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TELTU.html
https://root.cern/root/html534/TELTU.html:8977,Modifiability,Inherit,Inheritance,8977,"E&TTUBE::operator=(const TTUBE&); virtual voidTTUBE::SetPoints(Double_t* points) const; virtual voidTTUBE::SetSegsAndPols(TBuffer3D& buffer) const; Int_tTShape::ShapeDistancetoPrimitive(Int_t numPoints, Int_t px, Int_t py). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Float_tTTUBE::fAspectRatiodefines (the ellipse semi-axis in Y)/(the ellipse semi-axis in X); Double_t*TTUBE::fCoTab! Table of cos(fPhi1) .... cos(fPhil+fDphi1); Float_tTTUBE::fDzhalf length in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tTTUBE::fNdivnumber of segments (precision); Int_tTShape::fNumberShape number; Float_tTTUBE::fRmaxellipse semi-axis in X outside; Float_tTTUBE::fRminellipse semi-axis in X inside; Double_t*TTUBE::fSiTab! Table of sin(fPhi1) .... sin(fPhil+fDphi1); TStringTNamed::fTitleobject title; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TELTU(); ELTU shape default constructor*-; *-* ==============================. TELTU(const char* name, const char* title, const char* material, Float_t rx, Float_t ry, Float_t dz); {}. ~TELTU(); ELTU shape default destructor; *-* =============================. TELTU(). » Author: Rene Brun 26/06/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TELTU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TELTU.html
https://root.cern/root/html534/TELTU.html:8990,Modifiability,Inherit,Inherited,8990,"E&TTUBE::operator=(const TTUBE&); virtual voidTTUBE::SetPoints(Double_t* points) const; virtual voidTTUBE::SetSegsAndPols(TBuffer3D& buffer) const; Int_tTShape::ShapeDistancetoPrimitive(Int_t numPoints, Int_t px, Int_t py). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Float_tTTUBE::fAspectRatiodefines (the ellipse semi-axis in Y)/(the ellipse semi-axis in X); Double_t*TTUBE::fCoTab! Table of cos(fPhi1) .... cos(fPhil+fDphi1); Float_tTTUBE::fDzhalf length in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tTTUBE::fNdivnumber of segments (precision); Int_tTShape::fNumberShape number; Float_tTTUBE::fRmaxellipse semi-axis in X outside; Float_tTTUBE::fRminellipse semi-axis in X inside; Double_t*TTUBE::fSiTab! Table of sin(fPhi1) .... sin(fPhil+fDphi1); TStringTNamed::fTitleobject title; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TELTU(); ELTU shape default constructor*-; *-* ==============================. TELTU(const char* name, const char* title, const char* material, Float_t rx, Float_t ry, Float_t dz); {}. ~TELTU(); ELTU shape default destructor; *-* =============================. TELTU(). » Author: Rene Brun 26/06/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TELTU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TELTU.html
https://root.cern/root/html534/TELTU.html:3464,Security,Hash,Hash,3464,"onst; static Long_tTObject::GetDtorOnly(); virtual Float_tTTUBE::GetDz() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTTUBE::GetNumberOfDivisions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTTUBE::GetRmax() const; virtual Float_tTTUBE::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static",MatchSource.WIKI,root/html534/TELTU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TELTU.html
https://root.cern/root/html534/TELTU.html:6904,Testability,Test,TestBit,6904,"am& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t widdef = 1); virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTTUBE::SetAspectRatio(Float_t factor = 1); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTShape::SetName(const char* name); virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTTUBE::SetNumberOfDivisions(Int_t ndiv); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTShape::SetVisibility(Int_t vis)MENU ; virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidTTUBE::Sizeof3D() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTShape::TransformPoints(Double_t* points, UInt_t NbPnts) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TELTU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TELTU.html
https://root.cern/root/html534/TELTU.html:6943,Testability,Test,TestBits,6943,"am& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t widdef = 1); virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTTUBE::SetAspectRatio(Float_t factor = 1); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTShape::SetName(const char* name); virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTTUBE::SetNumberOfDivisions(Int_t ndiv); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTShape::SetVisibility(Int_t vis)MENU ; virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidTTUBE::Sizeof3D() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTShape::TransformPoints(Double_t* points, UInt_t NbPnts) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TELTU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TELTU.html
https://root.cern/root/html534/TELTU.html:1122,Usability,Clear,Clear,1122," TELTU(); TELTU(const TELTU&); TELTU(const char* name, const char* title, const char* material, Float_t rx, Float_t ry, Float_t dz); virtual~TELTU(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTTUBE::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtua",MatchSource.WIKI,root/html534/TELTU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TELTU.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:865,Energy Efficiency,Allocate,Allocate,865," TEmulatedCollectionProxy(const TEmulatedCollectionProxy& copy); TEmulatedCollectionProxy(const char* cl_name, Bool_t silent); virtual~TEmulatedCollectionProxy(); virtual void*Allocate(UInt_t n, Bool_t forceDelete); virtual void*At(UInt_t idx); virtual voidClear(const char* opt = """"); virtual voidCommit(void* env); virtual voidDeleteArray(void* p, Bool_t dtorOnly = kFALSE) const; virtual voidDestructor(void* p, Bool_t dtorOnly = kFALSE) const; virtual TVirtualCollectionProxy*Generate() const; virtual TClass*TGenCollectionProxy::GetCollectionClass() const; virtual Int_tTGenCollectionProxy::GetCollectionType() const; virtual TStreamerInfoActions::TActionSequence*TGenCollectionProxy::GetConversionReadMemberWiseActions(TClass* oldClass, Int_t version); virtual TVirtualCollectionProxy::CopyIterator_tTGenCollectionProxy::GetFunctionCopyIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::CreateIterators_tTGenCollectionProxy::GetFunctionCreateIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteIterator_tTGenCollectionProxy::GetFunctionDeleteIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteTwoIterators_tTGenCollectionProxy::GetFunctionDeleteTwoIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::Next_tTGenCollectionProxy::GetFunctionNext",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:4867,Energy Efficiency,allocate,allocate,4867,"Int_t left, Bool_t force); voidWriteItems(int nElements, TBuffer& b). private:. TEmulatedCollectionProxy&operator=(const TEmulatedCollectionProxy&). Data Members; public:. enum TGenCollectionProxy::[unnamed] { kBIT_ISSTRING; kBIT_ISTSTRING; kBOOL_t; };; enum TVirtualCollectionProxy::EProperty { kIsInitialized; kIsAssociative; kIsEmulated; kNeedDelete; };. public:. static const Int_tTVirtualCollectionProxy::fgIteratorArenaSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indi",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:8993,Energy Efficiency,Allocate,Allocate,8993,"tualCollectionProxy* Generate() const; Virtual copy constructor. TEmulatedCollectionProxy(const TEmulatedCollectionProxy& copy); Copy constructor. TEmulatedCollectionProxy(const char* cl_name, Bool_t silent); Initializing constructor. virtual ~TEmulatedCollectionProxy(); Standard destructor. void* New() const; Virtual constructor. { return new Cont_t; }. void* New(void* memory) const; Virtual in-place constructor. { return new(memory) Cont_t; }. void* NewArray(Int_t nElements) const; Virtual array constructor. { return new Cont_t[nElements]; }. void* NewArray(Int_t nElements, void* memory) const; Virtual in-place constructor. { return new(memory) Cont_t[nElements]; }. void Destructor(void* p, Bool_t dtorOnly = kFALSE) const; Virtual destructor. void DeleteArray(void* p, Bool_t dtorOnly = kFALSE) const; Virtual array destructor. UInt_t Sizeof() const; TVirtualCollectionProxy overload: Return the sizeof the collection object. { return sizeof(Cont_t); }. void * At(UInt_t idx); Return the address of the value at index 'idx'. void Clear(const char* opt = """"); Clear the container. void Resize(UInt_t n, Bool_t force_delete); Resize the container. UInt_t Size() const; Return the current size of the container. void* Allocate(UInt_t n, Bool_t forceDelete); Block allocation of containees. void Commit(void* env); Block commit of containees. void ReadBuffer(TBuffer& buff, void* pObj); Read portion of the streamer. void ReadBuffer(TBuffer& buff, void* pObj, const TClass* onfile). void Streamer(TBuffer& refBuffer); Streamer for I/O handling. void Streamer(TBuffer& buff, void* pObj, int siz); Streamer I/O overload. Bool_t IsValid() const; Check validity of the proxy itself. » Author: Markus Frank 28/10/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:7260,Modifiability,Inherit,Inheritance,7260,"Array*TGenCollectionProxy::fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*TGenCollectionProxy::fResizeContainer accessors: resize container; intTGenCollectionProxy::fSTL_typeSTL container type; TGenCollectionProxy::MethodTGenCollectionProxy::fSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >TGenCollectionProxy::fStagedOptimization: Keep staged array once they were created; type_info&TGenCollectionProxy::fTypeinfoType information; TGenCollectionProxy::Value*TGenCollectionProxy::fValDescriptor of the Value_type; intTGenCollectionProxy::fValDiffOffset between two consecutive value_types (memory layout).; intTGenCollectionProxy::fValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*TGenCollectionProxy::fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*TGenCollectionProxy::fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGenCollectionProxy* InitializeEx(Bool_t silent); Some hack to avoid const-ness. void ReadItems(int nElements, TBuffer& b); Object input streamer. void WriteItems(int nElements, TBuffer& b); Object output streamer. void Shrink(UInt_t nCurr, UInt_t left, Bool_t force); Shrink the container. void Expand(UInt_t nCurr, UInt_t left); Expand the container. TEmulatedCollectionProxy & operator=(const TEmulatedCollectionProxy& ). TVirtualCollectionProxy* Generate() const; Virtual copy constructor. TEmulatedCollectionProxy(const TEmulatedCollectionProxy& copy); Copy constructor. TEmulatedCollectionProxy(const char* cl_name, Bool_t silent); Initializing constructor. virtual ~TEmulatedCollectionProxy(); Standard destructor. void* New() const; Virtual constructor. { return new Cont_t; }. void* New(void* memory) const; Virtual in-place constructor. { return new(memory) Cont_t; }. void* NewArray(Int_t nElements) const; Virtual array constructor. { re",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:7273,Modifiability,Inherit,Inherited,7273,"Array*TGenCollectionProxy::fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*TGenCollectionProxy::fResizeContainer accessors: resize container; intTGenCollectionProxy::fSTL_typeSTL container type; TGenCollectionProxy::MethodTGenCollectionProxy::fSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >TGenCollectionProxy::fStagedOptimization: Keep staged array once they were created; type_info&TGenCollectionProxy::fTypeinfoType information; TGenCollectionProxy::Value*TGenCollectionProxy::fValDescriptor of the Value_type; intTGenCollectionProxy::fValDiffOffset between two consecutive value_types (memory layout).; intTGenCollectionProxy::fValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*TGenCollectionProxy::fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*TGenCollectionProxy::fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGenCollectionProxy* InitializeEx(Bool_t silent); Some hack to avoid const-ness. void ReadItems(int nElements, TBuffer& b); Object input streamer. void WriteItems(int nElements, TBuffer& b); Object output streamer. void Shrink(UInt_t nCurr, UInt_t left, Bool_t force); Shrink the container. void Expand(UInt_t nCurr, UInt_t left); Expand the container. TEmulatedCollectionProxy & operator=(const TEmulatedCollectionProxy& ). TVirtualCollectionProxy* Generate() const; Virtual copy constructor. TEmulatedCollectionProxy(const TEmulatedCollectionProxy& copy); Copy constructor. TEmulatedCollectionProxy(const char* cl_name, Bool_t silent); Initializing constructor. virtual ~TEmulatedCollectionProxy(); Standard destructor. void* New() const; Virtual constructor. { return new Cont_t; }. void* New(void* memory) const; Virtual in-place constructor. { return new(memory) Cont_t; }. void* NewArray(Int_t nElements) const; Virtual array constructor. { re",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:571,Performance,optimiz,optimization,571,". TEmulatedCollectionProxy. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » IO; » IO; » TEmulatedCollectionProxy. class TEmulatedCollectionProxy: public TGenCollectionProxy. TEmulatedCollectionProxy. Streamer around an arbitrary STL like container, which implements basic; container functionality. Note:; Although this class contains all the setup necessary to deal; with maps, the map-like functionality is NOT supported.; For optimization reasons this functionality is put into; the class TEmulatedMapProxy. Function Members (Methods); public:. TEmulatedCollectionProxy(const TEmulatedCollectionProxy& copy); TEmulatedCollectionProxy(const char* cl_name, Bool_t silent); virtual~TEmulatedCollectionProxy(); virtual void*Allocate(UInt_t n, Bool_t forceDelete); virtual void*At(UInt_t idx); virtual voidClear(const char* opt = """"); virtual voidCommit(void* env); virtual voidDeleteArray(void* p, Bool_t dtorOnly = kFALSE) const; virtual voidDestructor(void* p, Bool_t dtorOnly = kFALSE) const; virtual TVirtualCollectionProxy*Generate() const; virtual TClass*TGenCollectionProxy::GetCollectionClass() const; virtual Int_tTGenCollectionProxy::GetCollectionType() const; virtual TStreamerInfoActions::TActionSequence*TGenCollectionProxy::GetConversionReadMemberWiseActions(TClass* oldClass, Int_t version); virtual TVirtualCollectionProxy::CopyIterator_tTGenCollectionProxy::GetFunctionCopyIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::CreateIterators_tTGenCollectionProxy::GetFunctionCreateIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteIterator_tTGenCollectionProxy::GetFunctionDeleteIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteTwoIterators_tTGenCollectionProxy::GetFunctionDeleteTwoIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::Next_tTGenCollectionProxy::GetFunctionNext",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:4436,Performance,cache,cache,4436,"::DeleteItem(Bool_t force, void* ptr) const; voidExpand(UInt_t nCurr, UInt_t left); TGenCollectionProxy*TGenCollectionProxy::Initialize(Bool_t silent) const; virtual TGenCollectionProxy*InitializeEx(Bool_t silent); voidReadItems(int nElements, TBuffer& b); voidShrink(UInt_t nCurr, UInt_t left, Bool_t force); voidWriteItems(int nElements, TBuffer& b). private:. TEmulatedCollectionProxy&operator=(const TEmulatedCollectionProxy&). Data Members; public:. enum TGenCollectionProxy::[unnamed] { kBIT_ISSTRING; kBIT_ISTSTRING; kBOOL_t; };; enum TVirtualCollectionProxy::EProperty { kIsInitialized; kIsAssociative; kIsEmulated; kNeedDelete; };. public:. static const Int_tTVirtualCollectionProxy::fgIteratorArenaSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:7400,Safety,avoid,avoid,7400,"ns to stream out (read); void*TGenCollectionProxy::fResizeContainer accessors: resize container; intTGenCollectionProxy::fSTL_typeSTL container type; TGenCollectionProxy::MethodTGenCollectionProxy::fSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >TGenCollectionProxy::fStagedOptimization: Keep staged array once they were created; type_info&TGenCollectionProxy::fTypeinfoType information; TGenCollectionProxy::Value*TGenCollectionProxy::fValDescriptor of the Value_type; intTGenCollectionProxy::fValDiffOffset between two consecutive value_types (memory layout).; intTGenCollectionProxy::fValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*TGenCollectionProxy::fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*TGenCollectionProxy::fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGenCollectionProxy* InitializeEx(Bool_t silent); Some hack to avoid const-ness. void ReadItems(int nElements, TBuffer& b); Object input streamer. void WriteItems(int nElements, TBuffer& b); Object output streamer. void Shrink(UInt_t nCurr, UInt_t left, Bool_t force); Shrink the container. void Expand(UInt_t nCurr, UInt_t left); Expand the container. TEmulatedCollectionProxy & operator=(const TEmulatedCollectionProxy& ). TVirtualCollectionProxy* Generate() const; Virtual copy constructor. TEmulatedCollectionProxy(const TEmulatedCollectionProxy& copy); Copy constructor. TEmulatedCollectionProxy(const char* cl_name, Bool_t silent); Initializing constructor. virtual ~TEmulatedCollectionProxy(); Standard destructor. void* New() const; Virtual constructor. { return new Cont_t; }. void* New(void* memory) const; Virtual in-place constructor. { return new(memory) Cont_t; }. void* NewArray(Int_t nElements) const; Virtual array constructor. { return new Cont_t[nElements]; }. void* NewArray(Int_t nElements, void* memory) co",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:4456,Security,access,accessors,4456,"::DeleteItem(Bool_t force, void* ptr) const; voidExpand(UInt_t nCurr, UInt_t left); TGenCollectionProxy*TGenCollectionProxy::Initialize(Bool_t silent) const; virtual TGenCollectionProxy*InitializeEx(Bool_t silent); voidReadItems(int nElements, TBuffer& b); voidShrink(UInt_t nCurr, UInt_t left, Bool_t force); voidWriteItems(int nElements, TBuffer& b). private:. TEmulatedCollectionProxy&operator=(const TEmulatedCollectionProxy&). Data Members; public:. enum TGenCollectionProxy::[unnamed] { kBIT_ISSTRING; kBIT_ISTSTRING; kBOOL_t; };; enum TVirtualCollectionProxy::EProperty { kIsInitialized; kIsAssociative; kIsEmulated; kNeedDelete; };. public:. static const Int_tTVirtualCollectionProxy::fgIteratorArenaSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:4606,Security,access,accessors,4606,"::DeleteItem(Bool_t force, void* ptr) const; voidExpand(UInt_t nCurr, UInt_t left); TGenCollectionProxy*TGenCollectionProxy::Initialize(Bool_t silent) const; virtual TGenCollectionProxy*InitializeEx(Bool_t silent); voidReadItems(int nElements, TBuffer& b); voidShrink(UInt_t nCurr, UInt_t left, Bool_t force); voidWriteItems(int nElements, TBuffer& b). private:. TEmulatedCollectionProxy&operator=(const TEmulatedCollectionProxy&). Data Members; public:. enum TGenCollectionProxy::[unnamed] { kBIT_ISSTRING; kBIT_ISTSTRING; kBOOL_t; };; enum TVirtualCollectionProxy::EProperty { kIsInitialized; kIsAssociative; kIsEmulated; kNeedDelete; };. public:. static const Int_tTVirtualCollectionProxy::fgIteratorArenaSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:4945,Security,access,accessors,4945,"naSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:5119,Security,access,accessors,5119,"naSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:5206,Security,access,accessors,5206,"naSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:5708,Security,access,accessors,5708,"tionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive proxies; TObjArray*TGenCollectionProxy::fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*TGenCollectionProxy::fResizeContainer accessors: resize container; intTGenCollectionProxy::fSTL_typeSTL container type; TGenCollectionProxy::MethodTGenCollectionProxy::fSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >TGenCollectionProxy::fStagedOptimization: Keep staged array once they were created; type_info&TGenCollectionProxy::fTypeinfoType information; TGenCollectionProxy::Value*TGenCollectionProxy::fValDescriptor of the Value_type; intTGenCollectionProxy::fValDiffOffset between two consecutive value_types (memory layout).; intTGenCollectionProxy::fValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*TGenCollectionProxy::fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*TGenCollectionProxy::fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function d",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:6432,Security,access,accessors,6432,"tionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive proxies; TObjArray*TGenCollectionProxy::fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*TGenCollectionProxy::fResizeContainer accessors: resize container; intTGenCollectionProxy::fSTL_typeSTL container type; TGenCollectionProxy::MethodTGenCollectionProxy::fSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >TGenCollectionProxy::fStagedOptimization: Keep staged array once they were created; type_info&TGenCollectionProxy::fTypeinfoType information; TGenCollectionProxy::Value*TGenCollectionProxy::fValDescriptor of the Value_type; intTGenCollectionProxy::fValDiffOffset between two consecutive value_types (memory layout).; intTGenCollectionProxy::fValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*TGenCollectionProxy::fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*TGenCollectionProxy::fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function d",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:6577,Security,access,accessors,6577,"tionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive proxies; TObjArray*TGenCollectionProxy::fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*TGenCollectionProxy::fResizeContainer accessors: resize container; intTGenCollectionProxy::fSTL_typeSTL container type; TGenCollectionProxy::MethodTGenCollectionProxy::fSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >TGenCollectionProxy::fStagedOptimization: Keep staged array once they were created; type_info&TGenCollectionProxy::fTypeinfoType information; TGenCollectionProxy::Value*TGenCollectionProxy::fValDescriptor of the Value_type; intTGenCollectionProxy::fValDiffOffset between two consecutive value_types (memory layout).; intTGenCollectionProxy::fValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*TGenCollectionProxy::fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*TGenCollectionProxy::fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function d",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:4467,Usability,clear,clear,4467,"::DeleteItem(Bool_t force, void* ptr) const; voidExpand(UInt_t nCurr, UInt_t left); TGenCollectionProxy*TGenCollectionProxy::Initialize(Bool_t silent) const; virtual TGenCollectionProxy*InitializeEx(Bool_t silent); voidReadItems(int nElements, TBuffer& b); voidShrink(UInt_t nCurr, UInt_t left, Bool_t force); voidWriteItems(int nElements, TBuffer& b). private:. TEmulatedCollectionProxy&operator=(const TEmulatedCollectionProxy&). Data Members; public:. enum TGenCollectionProxy::[unnamed] { kBIT_ISSTRING; kBIT_ISTSTRING; kBOOL_t; };; enum TVirtualCollectionProxy::EProperty { kIsInitialized; kIsAssociative; kIsEmulated; kNeedDelete; };. public:. static const Int_tTVirtualCollectionProxy::fgIteratorArenaSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:8808,Usability,Clear,Clear,8808,"tualCollectionProxy* Generate() const; Virtual copy constructor. TEmulatedCollectionProxy(const TEmulatedCollectionProxy& copy); Copy constructor. TEmulatedCollectionProxy(const char* cl_name, Bool_t silent); Initializing constructor. virtual ~TEmulatedCollectionProxy(); Standard destructor. void* New() const; Virtual constructor. { return new Cont_t; }. void* New(void* memory) const; Virtual in-place constructor. { return new(memory) Cont_t; }. void* NewArray(Int_t nElements) const; Virtual array constructor. { return new Cont_t[nElements]; }. void* NewArray(Int_t nElements, void* memory) const; Virtual in-place constructor. { return new(memory) Cont_t[nElements]; }. void Destructor(void* p, Bool_t dtorOnly = kFALSE) const; Virtual destructor. void DeleteArray(void* p, Bool_t dtorOnly = kFALSE) const; Virtual array destructor. UInt_t Sizeof() const; TVirtualCollectionProxy overload: Return the sizeof the collection object. { return sizeof(Cont_t); }. void * At(UInt_t idx); Return the address of the value at index 'idx'. void Clear(const char* opt = """"); Clear the container. void Resize(UInt_t n, Bool_t force_delete); Resize the container. UInt_t Size() const; Return the current size of the container. void* Allocate(UInt_t n, Bool_t forceDelete); Block allocation of containees. void Commit(void* env); Block commit of containees. void ReadBuffer(TBuffer& buff, void* pObj); Read portion of the streamer. void ReadBuffer(TBuffer& buff, void* pObj, const TClass* onfile). void Streamer(TBuffer& refBuffer); Streamer for I/O handling. void Streamer(TBuffer& buff, void* pObj, int siz); Streamer I/O overload. Bool_t IsValid() const; Check validity of the proxy itself. » Author: Markus Frank 28/10/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedCollectionProxy.html:8837,Usability,Clear,Clear,8837,"tualCollectionProxy* Generate() const; Virtual copy constructor. TEmulatedCollectionProxy(const TEmulatedCollectionProxy& copy); Copy constructor. TEmulatedCollectionProxy(const char* cl_name, Bool_t silent); Initializing constructor. virtual ~TEmulatedCollectionProxy(); Standard destructor. void* New() const; Virtual constructor. { return new Cont_t; }. void* New(void* memory) const; Virtual in-place constructor. { return new(memory) Cont_t; }. void* NewArray(Int_t nElements) const; Virtual array constructor. { return new Cont_t[nElements]; }. void* NewArray(Int_t nElements, void* memory) const; Virtual in-place constructor. { return new(memory) Cont_t[nElements]; }. void Destructor(void* p, Bool_t dtorOnly = kFALSE) const; Virtual destructor. void DeleteArray(void* p, Bool_t dtorOnly = kFALSE) const; Virtual array destructor. UInt_t Sizeof() const; TVirtualCollectionProxy overload: Return the sizeof the collection object. { return sizeof(Cont_t); }. void * At(UInt_t idx); Return the address of the value at index 'idx'. void Clear(const char* opt = """"); Clear the container. void Resize(UInt_t n, Bool_t force_delete); Resize the container. UInt_t Size() const; Return the current size of the container. void* Allocate(UInt_t n, Bool_t forceDelete); Block allocation of containees. void Commit(void* env); Block commit of containees. void ReadBuffer(TBuffer& buff, void* pObj); Read portion of the streamer. void ReadBuffer(TBuffer& buff, void* pObj, const TClass* onfile). void Streamer(TBuffer& refBuffer); Streamer for I/O handling. void Streamer(TBuffer& buff, void* pObj, int siz); Streamer I/O overload. Bool_t IsValid() const; Check validity of the proxy itself. » Author: Markus Frank 28/10/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEmulatedCollectionProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedCollectionProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:628,Energy Efficiency,Allocate,Allocate,628," TEmulatedMapProxy(const TEmulatedMapProxy& copy); TEmulatedMapProxy(const char* cl_name, Bool_t silent); virtual~TEmulatedMapProxy(); virtual void*TEmulatedCollectionProxy::Allocate(UInt_t n, Bool_t forceDelete); virtual void*At(UInt_t idx); virtual voidTEmulatedCollectionProxy::Clear(const char* opt = """"); virtual voidTEmulatedCollectionProxy::Commit(void* env); virtual voidTEmulatedCollectionProxy::DeleteArray(void* p, Bool_t dtorOnly = kFALSE) const; virtual voidTEmulatedCollectionProxy::Destructor(void* p, Bool_t dtorOnly = kFALSE) const; virtual TVirtualCollectionProxy*Generate() const; virtual TClass*TGenCollectionProxy::GetCollectionClass() const; virtual Int_tTGenCollectionProxy::GetCollectionType() const; virtual TStreamerInfoActions::TActionSequence*TGenCollectionProxy::GetConversionReadMemberWiseActions(TClass* oldClass, Int_t version); virtual TVirtualCollectionProxy::CopyIterator_tTGenCollectionProxy::GetFunctionCopyIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::CreateIterators_tTGenCollectionProxy::GetFunctionCreateIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteIterator_tTGenCollectionProxy::GetFunctionDeleteIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteTwoIterators_tTGenCollectionProxy::GetFunctionDeleteTwoIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::Next_tTGenCollectionProxy::GetFunctionNext(Bool_t read = kTRUE); virtual ULong_tTGenCollectionProxy::GetIncrement() const; virtual TClass*TGenCollectionProxy::GetOnFileClass()",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:5123,Energy Efficiency,allocate,allocate,5123,"teItems(int nElements, TBuffer& b); voidWriteMap(UInt_t nElements, TBuffer& b). private:. TEmulatedMapProxy&operator=(const TEmulatedMapProxy& rhs). Data Members; public:. enum TGenCollectionProxy::[unnamed] { kBIT_ISSTRING; kBIT_ISTSTRING; kBOOL_t; };; enum TVirtualCollectionProxy::EProperty { kIsInitialized; kIsAssociative; kIsEmulated; kNeedDelete; };. public:. static const Int_tTVirtualCollectionProxy::fgIteratorArenaSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indi",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:7516,Modifiability,Inherit,Inheritance,7516,"Array*TGenCollectionProxy::fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*TGenCollectionProxy::fResizeContainer accessors: resize container; intTGenCollectionProxy::fSTL_typeSTL container type; TGenCollectionProxy::MethodTGenCollectionProxy::fSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >TGenCollectionProxy::fStagedOptimization: Keep staged array once they were created; type_info&TGenCollectionProxy::fTypeinfoType information; TGenCollectionProxy::Value*TGenCollectionProxy::fValDescriptor of the Value_type; intTGenCollectionProxy::fValDiffOffset between two consecutive value_types (memory layout).; intTGenCollectionProxy::fValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*TGenCollectionProxy::fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*TGenCollectionProxy::fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReadMap(UInt_t nElements, TBuffer& b); Map input streamer. void WriteMap(UInt_t nElements, TBuffer& b); Map output streamer. TEmulatedMapProxy & operator=(const TEmulatedMapProxy& rhs). TVirtualCollectionProxy* Generate() const; Virtual copy constructor. TEmulatedMapProxy(const TEmulatedMapProxy& copy); Copy constructor. TEmulatedMapProxy(const char* cl_name, Bool_t silent); Initializing constructor. virtual ~TEmulatedMapProxy(); Standard destructor. void * At(UInt_t idx); Return the address of the value at index 'idx'. UInt_t Size() const; Return the current size of the container. void ReadBuffer(TBuffer& buff, void* pObj); Read portion of the streamer. void ReadBuffer(TBuffer& buff, void* pObj, const TClass* onfile). void Streamer(TBuffer& refBuffer); Streamer for I/O handling. void Streamer(TBuffer& buff, void* pObj, int siz); Streamer I/O overload. » Author: Markus Frank 28/10/04 » Copyright (C) 1995-2004, Rene Brun and Fons R",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:7529,Modifiability,Inherit,Inherited,7529,"Array*TGenCollectionProxy::fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*TGenCollectionProxy::fResizeContainer accessors: resize container; intTGenCollectionProxy::fSTL_typeSTL container type; TGenCollectionProxy::MethodTGenCollectionProxy::fSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >TGenCollectionProxy::fStagedOptimization: Keep staged array once they were created; type_info&TGenCollectionProxy::fTypeinfoType information; TGenCollectionProxy::Value*TGenCollectionProxy::fValDescriptor of the Value_type; intTGenCollectionProxy::fValDiffOffset between two consecutive value_types (memory layout).; intTGenCollectionProxy::fValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*TGenCollectionProxy::fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*TGenCollectionProxy::fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReadMap(UInt_t nElements, TBuffer& b); Map input streamer. void WriteMap(UInt_t nElements, TBuffer& b); Map output streamer. TEmulatedMapProxy & operator=(const TEmulatedMapProxy& rhs). TVirtualCollectionProxy* Generate() const; Virtual copy constructor. TEmulatedMapProxy(const TEmulatedMapProxy& copy); Copy constructor. TEmulatedMapProxy(const char* cl_name, Bool_t silent); Initializing constructor. virtual ~TEmulatedMapProxy(); Standard destructor. void * At(UInt_t idx); Return the address of the value at index 'idx'. UInt_t Size() const; Return the current size of the container. void ReadBuffer(TBuffer& buff, void* pObj); Read portion of the streamer. void ReadBuffer(TBuffer& buff, void* pObj, const TClass* onfile). void Streamer(TBuffer& refBuffer); Streamer for I/O handling. void Streamer(TBuffer& buff, void* pObj, int siz); Streamer I/O overload. » Author: Markus Frank 28/10/04 » Copyright (C) 1995-2004, Rene Brun and Fons R",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:4692,Performance,cache,cache,4692,"roxy*TEmulatedCollectionProxy::InitializeEx(Bool_t silent); voidTEmulatedCollectionProxy::ReadItems(int nElements, TBuffer& b); voidReadMap(UInt_t nElements, TBuffer& b); voidTEmulatedCollectionProxy::Shrink(UInt_t nCurr, UInt_t left, Bool_t force); voidTEmulatedCollectionProxy::WriteItems(int nElements, TBuffer& b); voidWriteMap(UInt_t nElements, TBuffer& b). private:. TEmulatedMapProxy&operator=(const TEmulatedMapProxy& rhs). Data Members; public:. enum TGenCollectionProxy::[unnamed] { kBIT_ISSTRING; kBIT_ISTSTRING; kBOOL_t; };; enum TVirtualCollectionProxy::EProperty { kIsInitialized; kIsAssociative; kIsEmulated; kNeedDelete; };. public:. static const Int_tTVirtualCollectionProxy::fgIteratorArenaSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:4712,Security,access,accessors,4712,"roxy*TEmulatedCollectionProxy::InitializeEx(Bool_t silent); voidTEmulatedCollectionProxy::ReadItems(int nElements, TBuffer& b); voidReadMap(UInt_t nElements, TBuffer& b); voidTEmulatedCollectionProxy::Shrink(UInt_t nCurr, UInt_t left, Bool_t force); voidTEmulatedCollectionProxy::WriteItems(int nElements, TBuffer& b); voidWriteMap(UInt_t nElements, TBuffer& b). private:. TEmulatedMapProxy&operator=(const TEmulatedMapProxy& rhs). Data Members; public:. enum TGenCollectionProxy::[unnamed] { kBIT_ISSTRING; kBIT_ISTSTRING; kBOOL_t; };; enum TVirtualCollectionProxy::EProperty { kIsInitialized; kIsAssociative; kIsEmulated; kNeedDelete; };. public:. static const Int_tTVirtualCollectionProxy::fgIteratorArenaSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:4862,Security,access,accessors,4862,"roxy*TEmulatedCollectionProxy::InitializeEx(Bool_t silent); voidTEmulatedCollectionProxy::ReadItems(int nElements, TBuffer& b); voidReadMap(UInt_t nElements, TBuffer& b); voidTEmulatedCollectionProxy::Shrink(UInt_t nCurr, UInt_t left, Bool_t force); voidTEmulatedCollectionProxy::WriteItems(int nElements, TBuffer& b); voidWriteMap(UInt_t nElements, TBuffer& b). private:. TEmulatedMapProxy&operator=(const TEmulatedMapProxy& rhs). Data Members; public:. enum TGenCollectionProxy::[unnamed] { kBIT_ISSTRING; kBIT_ISTSTRING; kBOOL_t; };; enum TVirtualCollectionProxy::EProperty { kIsInitialized; kIsAssociative; kIsEmulated; kNeedDelete; };. public:. static const Int_tTVirtualCollectionProxy::fgIteratorArenaSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:5201,Security,access,accessors,5201,"naSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:5375,Security,access,accessors,5375,"naSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:5462,Security,access,accessors,5462,"naSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:5964,Security,access,accessors,5964,"tionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive proxies; TObjArray*TGenCollectionProxy::fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*TGenCollectionProxy::fResizeContainer accessors: resize container; intTGenCollectionProxy::fSTL_typeSTL container type; TGenCollectionProxy::MethodTGenCollectionProxy::fSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >TGenCollectionProxy::fStagedOptimization: Keep staged array once they were created; type_info&TGenCollectionProxy::fTypeinfoType information; TGenCollectionProxy::Value*TGenCollectionProxy::fValDescriptor of the Value_type; intTGenCollectionProxy::fValDiffOffset between two consecutive value_types (memory layout).; intTGenCollectionProxy::fValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*TGenCollectionProxy::fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*TGenCollectionProxy::fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function d",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:6688,Security,access,accessors,6688,"tionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive proxies; TObjArray*TGenCollectionProxy::fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*TGenCollectionProxy::fResizeContainer accessors: resize container; intTGenCollectionProxy::fSTL_typeSTL container type; TGenCollectionProxy::MethodTGenCollectionProxy::fSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >TGenCollectionProxy::fStagedOptimization: Keep staged array once they were created; type_info&TGenCollectionProxy::fTypeinfoType information; TGenCollectionProxy::Value*TGenCollectionProxy::fValDescriptor of the Value_type; intTGenCollectionProxy::fValDiffOffset between two consecutive value_types (memory layout).; intTGenCollectionProxy::fValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*TGenCollectionProxy::fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*TGenCollectionProxy::fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function d",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:6833,Security,access,accessors,6833,"tionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of the key_type; stringTGenCollectionProxy::fNameName of the class being proxied.; TGenCollectionProxy::MethodTGenCollectionProxy::fNextContainer accessors: generic iteration: next; TClass*TGenCollectionProxy::fOnFileClassOn file class; Bool_tTGenCollectionProxy::fPointersFlag to indicate if containee has pointers (key or value); UInt_tTVirtualCollectionProxy::fProperties; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >TGenCollectionProxy::fProxyListStack of recursive proxies; TObjArray*TGenCollectionProxy::fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*TGenCollectionProxy::fResizeContainer accessors: resize container; intTGenCollectionProxy::fSTL_typeSTL container type; TGenCollectionProxy::MethodTGenCollectionProxy::fSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >TGenCollectionProxy::fStagedOptimization: Keep staged array once they were created; type_info&TGenCollectionProxy::fTypeinfoType information; TGenCollectionProxy::Value*TGenCollectionProxy::fValDescriptor of the Value_type; intTGenCollectionProxy::fValDiffOffset between two consecutive value_types (memory layout).; intTGenCollectionProxy::fValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*TGenCollectionProxy::fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*TGenCollectionProxy::fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function d",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:735,Usability,Clear,Clear,735," TEmulatedMapProxy(const TEmulatedMapProxy& copy); TEmulatedMapProxy(const char* cl_name, Bool_t silent); virtual~TEmulatedMapProxy(); virtual void*TEmulatedCollectionProxy::Allocate(UInt_t n, Bool_t forceDelete); virtual void*At(UInt_t idx); virtual voidTEmulatedCollectionProxy::Clear(const char* opt = """"); virtual voidTEmulatedCollectionProxy::Commit(void* env); virtual voidTEmulatedCollectionProxy::DeleteArray(void* p, Bool_t dtorOnly = kFALSE) const; virtual voidTEmulatedCollectionProxy::Destructor(void* p, Bool_t dtorOnly = kFALSE) const; virtual TVirtualCollectionProxy*Generate() const; virtual TClass*TGenCollectionProxy::GetCollectionClass() const; virtual Int_tTGenCollectionProxy::GetCollectionType() const; virtual TStreamerInfoActions::TActionSequence*TGenCollectionProxy::GetConversionReadMemberWiseActions(TClass* oldClass, Int_t version); virtual TVirtualCollectionProxy::CopyIterator_tTGenCollectionProxy::GetFunctionCopyIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::CreateIterators_tTGenCollectionProxy::GetFunctionCreateIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteIterator_tTGenCollectionProxy::GetFunctionDeleteIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteTwoIterators_tTGenCollectionProxy::GetFunctionDeleteTwoIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::Next_tTGenCollectionProxy::GetFunctionNext(Bool_t read = kTRUE); virtual ULong_tTGenCollectionProxy::GetIncrement() const; virtual TClass*TGenCollectionProxy::GetOnFileClass()",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEmulatedMapProxy.html:4723,Usability,clear,clear,4723,"roxy*TEmulatedCollectionProxy::InitializeEx(Bool_t silent); voidTEmulatedCollectionProxy::ReadItems(int nElements, TBuffer& b); voidReadMap(UInt_t nElements, TBuffer& b); voidTEmulatedCollectionProxy::Shrink(UInt_t nCurr, UInt_t left, Bool_t force); voidTEmulatedCollectionProxy::WriteItems(int nElements, TBuffer& b); voidWriteMap(UInt_t nElements, TBuffer& b). private:. TEmulatedMapProxy&operator=(const TEmulatedMapProxy& rhs). Data Members; public:. enum TGenCollectionProxy::[unnamed] { kBIT_ISSTRING; kBIT_ISTSTRING; kBOOL_t; };; enum TVirtualCollectionProxy::EProperty { kIsInitialized; kIsAssociative; kIsEmulated; kNeedDelete; };. public:. static const Int_tTVirtualCollectionProxy::fgIteratorArenaSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of",MatchSource.WIKI,root/html534/TEmulatedMapProxy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html
https://root.cern/root/html534/TEntryList.html:10694,Availability,Error,Error,10694,"al~TEntryList(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(const TEntryList* elist); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t entry, TTree* tree = 0); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Bool_tEnter(Long64_t entry, TTree* tree = 0); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TEntryList*GetCurrentList() const; virtual TDirectory*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); virtual const char*GetFileName() const; virtual cons",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:10823,Availability,error,error,10823,"ject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t entry, TTree* tree = 0); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Bool_tEnter(Long64_t entry, TTree* tree = 0); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TEntryList*GetCurrentList() const; virtual TDirectory*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::Get",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:10907,Availability,error,error,10907,"atic TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t entry, TTree* tree = 0); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Bool_tEnter(Long64_t entry, TTree* tree = 0); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TEntryList*GetCurrentList() const; virtual TDirectory*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static ",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:14838,Deployability,TOGGLE,TOGGLE,14838,"= 0); virtual Int_tRelocatePaths(const char* newloc, const char* oldloc = 0); virtual Bool_tRemove(Long64_t entry, TTree* tree = 0); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); static Int_tScan(const char* fn, TList* roots); virtual Int_tScanPaths(TList* roots, Bool_t notify = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetEntriesToProcess(Long64_t nen); virtual voidSetFileName(const char* filename); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetReapplyCut(Bool_t apply = kFALSE)TOGGLE ; virtual voidSetShift(Bool_t shift); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(const TTree* tree); virtual voidSetTree(const char* treename, const char* filename); virtual voidSetTreeName(const char* treename); virtual voidSetTreeNumber(Int_t index); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSubtract(const TEntryList* elist); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:7250,Integrability,interface,interface,7250,"on entrylist to write the results of TTree::Draw and TChain::Draw into ; an entry list. Example:. tree->Draw("">>elist"", ""x<0 && y>0"", ""entrylist"");; TEntryList *elist = (TEntryList*)gDirectory->Get(""elist"");. Example of Loop on TEntryList with a TChain. void loopChain() {; TFile *fe = TFile::Open(""myelist.root"");; TEntryList *myelist = (TEntryList*)fe->Get(""myelist"");; TChain *ch = new TChain(""ntuple"");; ch->Add(""hsimple.root"");; ch->Add(""hsimple2.root"");; Long64_t listEntries = myelist->GetN();; Long64_t chainEntries = ch->GetEntries();; Int_t treenum = 0;; ch->SetEntryList(myelist);; for (entry=start;entry < end;entry++) {; entryNumber = treechain->GetEntryNumber(entry);; if (entryNumber < 0) break;; localEntry = fTree->LoadTree(entryNumber);; if (localEntry < 0) break;; // then either call branch->GetEntry(localEntry);; // or entryNumber->GetEntry(entryNumber);; // In the later case the LoadTree is then somewhat redudant.; }; }. When using the TEntryList interface directly, you can get the 'tree number' and entry in; the current tree (i.e. value similar to the return value of LoadTree) from calling; TEntryList::GetEntryAndTree:. Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);. to obtain the entry number within the chain you need to add to it the value; of; treeEntry+ch->GetTreeOffset()[treenum]; such that the loop in the previous example can also be written as:; for (Long64_t el = 0; el < listEntries; el++) {; Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);; Long64_t chainEntry = treeEntry+ch->GetTreeOffset()[treenum]; ; printf(""el=%lld, treeEntry=%lld, chainEntry=%lld, treenum=%d\n"", el, treeEntry, chainEntry, treenum);; ch->LoadTree(chainEntry); // this also returns treeEntry; needed_branch->GetEntry(treeEntry);; }. TSelectors; To fill an TEntryList from a TSelector correctly, one must add the TEntryList object; to the output list of the selector (TSelector::fOutput). This is the only way to ; make the sub-lists of the TEntryList switch whe",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:19689,Integrability,protocol,protocol,19689,"he list, corresponding to this tree; When tree is a chain, the entry is assumed to be global index and the local; entry is recomputed from the treeoffset information of the chain. Bool_t Remove(Long64_t entry, TTree* tree = 0); Remove entry #entry from the list; When tree = 0, removes from the current list; When tree != 0, finds the list, corresponding to this tree; When tree is a chain, the entry is assumed to be global index and the local; entry is recomputed from the treeoffset information of the chain. Long64_t GetEntry(Int_t index); return the number of the entry #index of this TEntryList in the TTree or TChain; See also Next(). Long64_t GetEntryAndTree(Int_t index, Int_t& treenum); return the index of ""index""-th non-zero entry in the TTree or TChain; and the # of the corresponding tree in the chain. void GetFileName(const char* filename, TString& fn, Bool_t* = 0); To be able to re-localize the entry-list we identify the file by just the; name and the anchor, i.e. we drop protocol, host, options, ...; The result in the form 'file#anchor' (or 'file', if no anchor is present); is saved in 'fn'.; The function optionally (is 'local' is defined) checks file locality (i.e.; protocol 'file://') returning the result in '*local' . TEntryList * GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); return the entry list, correspoding to treename and filename; By default, the filename is first tried as is, and then, if the corresponding list; is not found, the filename is expanded to the absolute path, and compared again.; To avoid it, use option ""ne"". Int_t Merge(TCollection* list); Merge this list with the lists from the collection. Long64_t Next(); return the next non-zero entry index (next after fLastIndexQueried); this function is faster than GetEntry(). void OptimizeStorage(); Checks if the array representation is more economical and if so, switches to it. void Print(Option_t* option = """") const; Print this list; option = """" - default - print t",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:19889,Integrability,protocol,protocol,19889,"ree = 0); Remove entry #entry from the list; When tree = 0, removes from the current list; When tree != 0, finds the list, corresponding to this tree; When tree is a chain, the entry is assumed to be global index and the local; entry is recomputed from the treeoffset information of the chain. Long64_t GetEntry(Int_t index); return the number of the entry #index of this TEntryList in the TTree or TChain; See also Next(). Long64_t GetEntryAndTree(Int_t index, Int_t& treenum); return the index of ""index""-th non-zero entry in the TTree or TChain; and the # of the corresponding tree in the chain. void GetFileName(const char* filename, TString& fn, Bool_t* = 0); To be able to re-localize the entry-list we identify the file by just the; name and the anchor, i.e. we drop protocol, host, options, ...; The result in the form 'file#anchor' (or 'file', if no anchor is present); is saved in 'fn'.; The function optionally (is 'local' is defined) checks file locality (i.e.; protocol 'file://') returning the result in '*local' . TEntryList * GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); return the entry list, correspoding to treename and filename; By default, the filename is first tried as is, and then, if the corresponding list; is not found, the filename is expanded to the absolute path, and compared again.; To avoid it, use option ""ne"". Int_t Merge(TCollection* list); Merge this list with the lists from the collection. Long64_t Next(); return the next non-zero entry index (next after fLastIndexQueried); this function is faster than GetEntry(). void OptimizeStorage(); Checks if the array representation is more economical and if so, switches to it. void Print(Option_t* option = """") const; Print this list; option = """" - default - print the name of the tree and file; option = ""all"" - print all the entry numbers. void Reset(); Reset this list. void SetDirectory(TDirectory* dir); Add reference to directory dir. dir can be 0. void SetTree(const char* tre",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:12373,Modifiability,Inherit,InheritsFrom,12373,"Object::GetDtorOnly(); virtual Long64_tGetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetReapplyCut() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTreeName() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual Long64_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz,",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:12439,Modifiability,Inherit,InheritsFrom,12439,"; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetReapplyCut() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTreeName() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual Long64_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject:",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:17461,Modifiability,Inherit,Inheritance,17461,"locks); TEntryList*fCurrent! currently filled entry list; TDirectory*fDirectory! Pointer to directory holding this tree; Long64_tfEntriesToProcessused on proof to set the number of entries to process in a packet; TStringfFileNamename of the file, where the tree is; Long64_tfLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tfLastIndexReturned! used to optimize GetEntry() function from a loop; TList*fListsa list of underlying entry lists for each tree of a chain; Long64_tfNnumber of entries in the list; Int_tfNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tfReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tfShift! true when some sub-lists don't correspond to trees; ULong_tfStringHash! Hash value of a string of treename and filename; TStringTNamed::fTitleobject title; TStringfTreeNamename of the tree; Int_tfTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryList(); default c-tor. TEntryList(const char* name, const char* title); c-tor with name and title. TEntryList(const char* name, const char* title, const TTree* tree); constructor with name and title, which also sets the tree. TEntryList(const char* name, const char* title, const char* treename, const char* filename); c-tor with name and title, which also sets the treename and the filename. TEntryList(const TTree* tree); c-tor, which sets the tree. TEntryList(const TEntryList& elist); copy c-tor. ~TEntryList(); Destructor. void Add(const TEntryList* elist); Add 2 entry lists. Int_t Contains(Long64_t entry, TTree* tree = 0); When tree = 0, returns from the current list; When tree != 0, finds the list, corresponding to this tree; When tree is a chain, the entry is assumed to be global index and the local; entry is recomputed from the treeoffset information of the chain. void DirectoryAutoAdd(TDirectory* ); Called by TKey and others ",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:17474,Modifiability,Inherit,Inherited,17474,"locks); TEntryList*fCurrent! currently filled entry list; TDirectory*fDirectory! Pointer to directory holding this tree; Long64_tfEntriesToProcessused on proof to set the number of entries to process in a packet; TStringfFileNamename of the file, where the tree is; Long64_tfLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tfLastIndexReturned! used to optimize GetEntry() function from a loop; TList*fListsa list of underlying entry lists for each tree of a chain; Long64_tfNnumber of entries in the list; Int_tfNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tfReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tfShift! true when some sub-lists don't correspond to trees; ULong_tfStringHash! Hash value of a string of treename and filename; TStringTNamed::fTitleobject title; TStringfTreeNamename of the tree; Int_tfTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryList(); default c-tor. TEntryList(const char* name, const char* title); c-tor with name and title. TEntryList(const char* name, const char* title, const TTree* tree); constructor with name and title, which also sets the tree. TEntryList(const char* name, const char* title, const char* treename, const char* filename); c-tor with name and title, which also sets the treename and the filename. TEntryList(const TTree* tree); c-tor, which sets the tree. TEntryList(const TEntryList& elist); copy c-tor. ~TEntryList(); Destructor. void Add(const TEntryList* elist); Add 2 entry lists. Int_t Contains(Long64_t entry, TTree* tree = 0); When tree = 0, returns from the current list; When tree != 0, finds the list, corresponding to this tree; When tree is a chain, the entry is assumed to be global index and the local; entry is recomputed from the treeoffset information of the chain. void DirectoryAutoAdd(TDirectory* ); Called by TKey and others ",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:1037,Performance,Optimiz,OptimizeStorage,1037,"Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREE; » TEntryList. class TEntryList: public TNamed. TEntryList: a List of entry numbers in a TTree or TChain; There are two types of entry lists:. for a TTree (fBlocks data member is non-zero); Entry numbers are stored in TEntryListBlocks, which, in their turn, are stored; in the TObjArray fBlocks. The range of the entry numbers is cut into intervals; of kBlockSize entries (currently 64000), so that the first block contains; information which entries out of the first 64000 pass the selection, the second; block - which entries out of the 64000-127999 interval pass the selection, etc.; Some blocks, obviously, might be empty. The internal representation of entry; numbers in the blocks is described in the TEntryListBlock class description, and; this representation might be changed by calling OptimizeStorage() function; (when the list is filled via the Enter() function, this is done automatically,; except for the last block).; Individual entry lists can be merged (functions Merge() and Add()); to make an entry list for a TChain of corresponding TTrees. Picture; Source. {; //=========Macro generated from canvas: c/c; //========= (Tue Jan 23 16:58:56 2007) by ROOT version5.15/01; TCanvas *c = new TCanvas(""c"", ""c"",213,172,460,253);; c->Range(0,0,1,1);; c->SetBorderSize(2);; c->SetFrameFillColor(0);; ; TPaveText *pt = new TPaveText(0.00518135,0.810811,0.507772,0.989189,""br"");; pt->SetFillColor(19);; pt->SetTextColor(4);; TText *text = pt->AddText(""TEntryList for a TTree"");; pt->Draw();; ; pt = new TPaveText(0.0387597,0.483696,0.307494,0.657609,""br"");; pt->SetFillColor(19);; text = pt->AddText(""TEntryList"");; pt->Draw();; ; pt = new TPaveText(0.0363636,0.107527,0.306494,0.489247,""br"");; pt->SetFillColor(19);; pt->SetTextFont(42);; text = pt->AddText(""fBlocks"");;",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:7010,Performance,Load,LoadTree,7010,"ists are for TChains, loops over all; sub-lists; GetEntry(n) - returns the n-th entry number ; Next() - returns next entry number. Note, that this function is ; much faster than GetEntry, and it's called when GetEntry() is called; for 2 or more indices in a row. TTree::Draw() and TChain::Draw(); Use option entrylist to write the results of TTree::Draw and TChain::Draw into ; an entry list. Example:. tree->Draw("">>elist"", ""x<0 && y>0"", ""entrylist"");; TEntryList *elist = (TEntryList*)gDirectory->Get(""elist"");. Example of Loop on TEntryList with a TChain. void loopChain() {; TFile *fe = TFile::Open(""myelist.root"");; TEntryList *myelist = (TEntryList*)fe->Get(""myelist"");; TChain *ch = new TChain(""ntuple"");; ch->Add(""hsimple.root"");; ch->Add(""hsimple2.root"");; Long64_t listEntries = myelist->GetN();; Long64_t chainEntries = ch->GetEntries();; Int_t treenum = 0;; ch->SetEntryList(myelist);; for (entry=start;entry < end;entry++) {; entryNumber = treechain->GetEntryNumber(entry);; if (entryNumber < 0) break;; localEntry = fTree->LoadTree(entryNumber);; if (localEntry < 0) break;; // then either call branch->GetEntry(localEntry);; // or entryNumber->GetEntry(entryNumber);; // In the later case the LoadTree is then somewhat redudant.; }; }. When using the TEntryList interface directly, you can get the 'tree number' and entry in; the current tree (i.e. value similar to the return value of LoadTree) from calling; TEntryList::GetEntryAndTree:. Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);. to obtain the entry number within the chain you need to add to it the value; of; treeEntry+ch->GetTreeOffset()[treenum]; such that the loop in the previous example can also be written as:; for (Long64_t el = 0; el < listEntries; el++) {; Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);; Long64_t chainEntry = treeEntry+ch->GetTreeOffset()[treenum]; ; printf(""el=%lld, treeEntry=%lld, chainEntry=%lld, treenum=%d\n"", el, treeEntry, chainEntry, treenum);; ch->LoadTree(chainEn",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:7181,Performance,Load,LoadTree,7181,"ists are for TChains, loops over all; sub-lists; GetEntry(n) - returns the n-th entry number ; Next() - returns next entry number. Note, that this function is ; much faster than GetEntry, and it's called when GetEntry() is called; for 2 or more indices in a row. TTree::Draw() and TChain::Draw(); Use option entrylist to write the results of TTree::Draw and TChain::Draw into ; an entry list. Example:. tree->Draw("">>elist"", ""x<0 && y>0"", ""entrylist"");; TEntryList *elist = (TEntryList*)gDirectory->Get(""elist"");. Example of Loop on TEntryList with a TChain. void loopChain() {; TFile *fe = TFile::Open(""myelist.root"");; TEntryList *myelist = (TEntryList*)fe->Get(""myelist"");; TChain *ch = new TChain(""ntuple"");; ch->Add(""hsimple.root"");; ch->Add(""hsimple2.root"");; Long64_t listEntries = myelist->GetN();; Long64_t chainEntries = ch->GetEntries();; Int_t treenum = 0;; ch->SetEntryList(myelist);; for (entry=start;entry < end;entry++) {; entryNumber = treechain->GetEntryNumber(entry);; if (entryNumber < 0) break;; localEntry = fTree->LoadTree(entryNumber);; if (localEntry < 0) break;; // then either call branch->GetEntry(localEntry);; // or entryNumber->GetEntry(entryNumber);; // In the later case the LoadTree is then somewhat redudant.; }; }. When using the TEntryList interface directly, you can get the 'tree number' and entry in; the current tree (i.e. value similar to the return value of LoadTree) from calling; TEntryList::GetEntryAndTree:. Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);. to obtain the entry number within the chain you need to add to it the value; of; treeEntry+ch->GetTreeOffset()[treenum]; such that the loop in the previous example can also be written as:; for (Long64_t el = 0; el < listEntries; el++) {; Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);; Long64_t chainEntry = treeEntry+ch->GetTreeOffset()[treenum]; ; printf(""el=%lld, treeEntry=%lld, chainEntry=%lld, treenum=%d\n"", el, treeEntry, chainEntry, treenum);; ch->LoadTree(chainEn",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:7374,Performance,Load,LoadTree,7374,">Draw("">>elist"", ""x<0 && y>0"", ""entrylist"");; TEntryList *elist = (TEntryList*)gDirectory->Get(""elist"");. Example of Loop on TEntryList with a TChain. void loopChain() {; TFile *fe = TFile::Open(""myelist.root"");; TEntryList *myelist = (TEntryList*)fe->Get(""myelist"");; TChain *ch = new TChain(""ntuple"");; ch->Add(""hsimple.root"");; ch->Add(""hsimple2.root"");; Long64_t listEntries = myelist->GetN();; Long64_t chainEntries = ch->GetEntries();; Int_t treenum = 0;; ch->SetEntryList(myelist);; for (entry=start;entry < end;entry++) {; entryNumber = treechain->GetEntryNumber(entry);; if (entryNumber < 0) break;; localEntry = fTree->LoadTree(entryNumber);; if (localEntry < 0) break;; // then either call branch->GetEntry(localEntry);; // or entryNumber->GetEntry(entryNumber);; // In the later case the LoadTree is then somewhat redudant.; }; }. When using the TEntryList interface directly, you can get the 'tree number' and entry in; the current tree (i.e. value similar to the return value of LoadTree) from calling; TEntryList::GetEntryAndTree:. Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);. to obtain the entry number within the chain you need to add to it the value; of; treeEntry+ch->GetTreeOffset()[treenum]; such that the loop in the previous example can also be written as:; for (Long64_t el = 0; el < listEntries; el++) {; Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);; Long64_t chainEntry = treeEntry+ch->GetTreeOffset()[treenum]; ; printf(""el=%lld, treeEntry=%lld, chainEntry=%lld, treenum=%d\n"", el, treeEntry, chainEntry, treenum);; ch->LoadTree(chainEntry); // this also returns treeEntry; needed_branch->GetEntry(treeEntry);; }. TSelectors; To fill an TEntryList from a TSelector correctly, one must add the TEntryList object; to the output list of the selector (TSelector::fOutput). This is the only way to ; make the sub-lists of the TEntryList switch when the current tree of the TChain is; changed. ; Using a TEntryList as input (TTree::SetEntryList() and ",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:7957,Performance,Load,LoadTree,7957,"t->GetN();; Long64_t chainEntries = ch->GetEntries();; Int_t treenum = 0;; ch->SetEntryList(myelist);; for (entry=start;entry < end;entry++) {; entryNumber = treechain->GetEntryNumber(entry);; if (entryNumber < 0) break;; localEntry = fTree->LoadTree(entryNumber);; if (localEntry < 0) break;; // then either call branch->GetEntry(localEntry);; // or entryNumber->GetEntry(entryNumber);; // In the later case the LoadTree is then somewhat redudant.; }; }. When using the TEntryList interface directly, you can get the 'tree number' and entry in; the current tree (i.e. value similar to the return value of LoadTree) from calling; TEntryList::GetEntryAndTree:. Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);. to obtain the entry number within the chain you need to add to it the value; of; treeEntry+ch->GetTreeOffset()[treenum]; such that the loop in the previous example can also be written as:; for (Long64_t el = 0; el < listEntries; el++) {; Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);; Long64_t chainEntry = treeEntry+ch->GetTreeOffset()[treenum]; ; printf(""el=%lld, treeEntry=%lld, chainEntry=%lld, treenum=%d\n"", el, treeEntry, chainEntry, treenum);; ch->LoadTree(chainEntry); // this also returns treeEntry; needed_branch->GetEntry(treeEntry);; }. TSelectors; To fill an TEntryList from a TSelector correctly, one must add the TEntryList object; to the output list of the selector (TSelector::fOutput). This is the only way to ; make the sub-lists of the TEntryList switch when the current tree of the TChain is; changed. ; Using a TEntryList as input (TTree::SetEntryList() and TChain::SetEntryList()); while the TTree::SetEntryList() function is only setting the TTree::fEntryList; data member, the same function in TChain also finds correspondance between; the TTrees of this TChain and the sub-lists of this TEntryList.; TEntryList and the current directory; TEntryList objects are automatically added to the current directory (like TTrees).; However, in case of",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:16787,Performance,optimiz,optimize,16787,"st char* fmt, va_list va) const; voidGetFileName(const char* filename, TString& fn, Bool_t* = 0); voidTObject::MakeZombie(). private:. TEntryList&operator=(const TEntryList&). Data Members; public:. enum { kBlockSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*fBlocksblocks with indices of passing events (TEntryListBlocks); TEntryList*fCurrent! currently filled entry list; TDirectory*fDirectory! Pointer to directory holding this tree; Long64_tfEntriesToProcessused on proof to set the number of entries to process in a packet; TStringfFileNamename of the file, where the tree is; Long64_tfLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tfLastIndexReturned! used to optimize GetEntry() function from a loop; TList*fListsa list of underlying entry lists for each tree of a chain; Long64_tfNnumber of entries in the list; Int_tfNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tfReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tfShift! true when some sub-lists don't correspond to trees; ULong_tfStringHash! Hash value of a string of treename and filename; TStringTNamed::fTitleobject title; TStringfTreeNamename of the tree; Int_tfTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryList(); default c-tor. TEntryList(const char* name, const char* title); c-tor with name and title. TEntryList(const char* name, const char* title, const TTree* tree); constructor with name and title, which also sets the tree. TEntryList(const char* name, const char* title, const char* treename, const char* filename); c-tor with name and title, which also sets the treename and the filen",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:16866,Performance,optimiz,optimize,16866,"st char* fmt, va_list va) const; voidGetFileName(const char* filename, TString& fn, Bool_t* = 0); voidTObject::MakeZombie(). private:. TEntryList&operator=(const TEntryList&). Data Members; public:. enum { kBlockSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*fBlocksblocks with indices of passing events (TEntryListBlocks); TEntryList*fCurrent! currently filled entry list; TDirectory*fDirectory! Pointer to directory holding this tree; Long64_tfEntriesToProcessused on proof to set the number of entries to process in a packet; TStringfFileNamename of the file, where the tree is; Long64_tfLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tfLastIndexReturned! used to optimize GetEntry() function from a loop; TList*fListsa list of underlying entry lists for each tree of a chain; Long64_tfNnumber of entries in the list; Int_tfNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tfReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tfShift! true when some sub-lists don't correspond to trees; ULong_tfStringHash! Hash value of a string of treename and filename; TStringTNamed::fTitleobject title; TStringfTreeNamename of the tree; Int_tfTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryList(); default c-tor. TEntryList(const char* name, const char* title); c-tor with name and title. TEntryList(const char* name, const char* title, const TTree* tree); constructor with name and title, which also sets the tree. TEntryList(const char* name, const char* title, const char* treename, const char* filename); c-tor with name and title, which also sets the treename and the filen",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:20509,Performance,Optimiz,OptimizeStorage,20509,"tring& fn, Bool_t* = 0); To be able to re-localize the entry-list we identify the file by just the; name and the anchor, i.e. we drop protocol, host, options, ...; The result in the form 'file#anchor' (or 'file', if no anchor is present); is saved in 'fn'.; The function optionally (is 'local' is defined) checks file locality (i.e.; protocol 'file://') returning the result in '*local' . TEntryList * GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); return the entry list, correspoding to treename and filename; By default, the filename is first tried as is, and then, if the corresponding list; is not found, the filename is expanded to the absolute path, and compared again.; To avoid it, use option ""ne"". Int_t Merge(TCollection* list); Merge this list with the lists from the collection. Long64_t Next(); return the next non-zero entry index (next after fLastIndexQueried); this function is faster than GetEntry(). void OptimizeStorage(); Checks if the array representation is more economical and if so, switches to it. void Print(Option_t* option = """") const; Print this list; option = """" - default - print the name of the tree and file; option = ""all"" - print all the entry numbers. void Reset(); Reset this list. void SetDirectory(TDirectory* dir); Add reference to directory dir. dir can be 0. void SetTree(const char* treename, const char* filename); If a list for a tree with such name and filename exists, sets it as the current sublist; If not, creates this list and sets it as the current sublist. ! the filename is taken as provided, no extensions to full path or url !. void SetTree(const TTree* tree); If a list for a tree with such name and filename exists, sets it as the current sublist; If not, creates this list and sets it as the current sublist; The name of the file, where the tree is, is taken as; tree->GetTree()->GetCurrentFile()->GetName(), and then expanded either to the absolute path,; or to full url. If, for some reason, you want to provi",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:20266,Safety,avoid,avoid,20266,"ex of this TEntryList in the TTree or TChain; See also Next(). Long64_t GetEntryAndTree(Int_t index, Int_t& treenum); return the index of ""index""-th non-zero entry in the TTree or TChain; and the # of the corresponding tree in the chain. void GetFileName(const char* filename, TString& fn, Bool_t* = 0); To be able to re-localize the entry-list we identify the file by just the; name and the anchor, i.e. we drop protocol, host, options, ...; The result in the form 'file#anchor' (or 'file', if no anchor is present); is saved in 'fn'.; The function optionally (is 'local' is defined) checks file locality (i.e.; protocol 'file://') returning the result in '*local' . TEntryList * GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); return the entry list, correspoding to treename and filename; By default, the filename is first tried as is, and then, if the corresponding list; is not found, the filename is expanded to the absolute path, and compared again.; To avoid it, use option ""ne"". Int_t Merge(TCollection* list); Merge this list with the lists from the collection. Long64_t Next(); return the next non-zero entry index (next after fLastIndexQueried); this function is faster than GetEntry(). void OptimizeStorage(); Checks if the array representation is more economical and if so, switches to it. void Print(Option_t* option = """") const; Print this list; option = """" - default - print the name of the tree and file; option = ""all"" - print all the entry numbers. void Reset(); Reset this list. void SetDirectory(TDirectory* dir); Add reference to directory dir. dir can be 0. void SetTree(const char* treename, const char* filename); If a list for a tree with such name and filename exists, sets it as the current sublist; If not, creates this list and sets it as the current sublist. ! the filename is taken as provided, no extensions to full path or url !. void SetTree(const TTree* tree); If a list for a tree with such name and filename exists, sets it as the cu",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:12263,Security,Hash,Hash,12263,"() const; virtual TDirectory*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetReapplyCut() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTreeName() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual Long64_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::op",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:17254,Security,Hash,Hash,17254,"st char* fmt, va_list va) const; voidGetFileName(const char* filename, TString& fn, Bool_t* = 0); voidTObject::MakeZombie(). private:. TEntryList&operator=(const TEntryList&). Data Members; public:. enum { kBlockSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*fBlocksblocks with indices of passing events (TEntryListBlocks); TEntryList*fCurrent! currently filled entry list; TDirectory*fDirectory! Pointer to directory holding this tree; Long64_tfEntriesToProcessused on proof to set the number of entries to process in a packet; TStringfFileNamename of the file, where the tree is; Long64_tfLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tfLastIndexReturned! used to optimize GetEntry() function from a loop; TList*fListsa list of underlying entry lists for each tree of a chain; Long64_tfNnumber of entries in the list; Int_tfNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tfReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tfShift! true when some sub-lists don't correspond to trees; ULong_tfStringHash! Hash value of a string of treename and filename; TStringTNamed::fTitleobject title; TStringfTreeNamename of the tree; Int_tfTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryList(); default c-tor. TEntryList(const char* name, const char* title); c-tor with name and title. TEntryList(const char* name, const char* title, const TTree* tree); constructor with name and title, which also sets the tree. TEntryList(const char* name, const char* title, const char* treename, const char* filename); c-tor with name and title, which also sets the treename and the filen",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:15492,Testability,Test,TestBit,15492,"l Int_tRelocatePaths(const char* newloc, const char* oldloc = 0); virtual Bool_tRemove(Long64_t entry, TTree* tree = 0); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); static Int_tScan(const char* fn, TList* roots); virtual Int_tScanPaths(TList* roots, Bool_t notify = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetEntriesToProcess(Long64_t nen); virtual voidSetFileName(const char* filename); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetReapplyCut(Bool_t apply = kFALSE)TOGGLE ; virtual voidSetShift(Bool_t shift); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(const TTree* tree); virtual voidSetTree(const char* treename, const char* filename); virtual voidSetTreeName(const char* treename); virtual voidSetTreeNumber(Int_t index); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSubtract(const TEntryList* elist); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:15531,Testability,Test,TestBits,15531,"l Int_tRelocatePaths(const char* newloc, const char* oldloc = 0); virtual Bool_tRemove(Long64_t entry, TTree* tree = 0); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); static Int_tScan(const char* fn, TList* roots); virtual Int_tScanPaths(TList* roots, Bool_t notify = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetEntriesToProcess(Long64_t nen); virtual voidSetFileName(const char* filename); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetReapplyCut(Bool_t apply = kFALSE)TOGGLE ; virtual voidSetShift(Bool_t shift); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(const TTree* tree); virtual voidSetTree(const char* treename, const char* filename); virtual voidSetTreeName(const char* treename); virtual voidSetTreeNumber(Int_t index); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSubtract(const TEntryList* elist); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryList.html:9998,Usability,Clear,Clear,9998,,MatchSource.WIKI,root/html534/TEntryList.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryList.html
https://root.cern/root/html534/TEntryListArray.html:4143,Availability,Error,Error,4143,"t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t entry, TTree* tree = 0); virtual Int_tContains(Long64_t entry, TTree* tree, Long64_t subentry); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTEntryList::DirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Bool_tEnter(Long64_t entry, TTree* tree = 0); virtual Bool_tEnter(Long64_t entry, TTree* tree, Long64_t subentry); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TEntryList*TEntryList::GetCurrentList() const; virtual TDirectory*TEntryList::GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tTEntryList::GetEntriesToProcess() const; virtual Long64_tTEntryList::GetEntry(Int_t index); virtual Long64_tTEntryList::GetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*TEntryList::GetEntryList(const char* treename, const char* filename, O",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:4272,Availability,error,error,4272,"virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t entry, TTree* tree = 0); virtual Int_tContains(Long64_t entry, TTree* tree, Long64_t subentry); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTEntryList::DirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Bool_tEnter(Long64_t entry, TTree* tree = 0); virtual Bool_tEnter(Long64_t entry, TTree* tree, Long64_t subentry); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TEntryList*TEntryList::GetCurrentList() const; virtual TDirectory*TEntryList::GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tTEntryList::GetEntriesToProcess() const; virtual Long64_tTEntryList::GetEntry(Int_t index); virtual Long64_tTEntryList::GetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*TEntryList::GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); virtual const char*TEntryList::GetFileName() const; virtual const char*TObject::GetIconName() const; virtual ",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:4356,Availability,error,error,4356,"t char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t entry, TTree* tree = 0); virtual Int_tContains(Long64_t entry, TTree* tree, Long64_t subentry); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTEntryList::DirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Bool_tEnter(Long64_t entry, TTree* tree = 0); virtual Bool_tEnter(Long64_t entry, TTree* tree, Long64_t subentry); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TEntryList*TEntryList::GetCurrentList() const; virtual TDirectory*TEntryList::GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tTEntryList::GetEntriesToProcess() const; virtual Long64_tTEntryList::GetEntry(Int_t index); virtual Long64_tTEntryList::GetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*TEntryList::GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); virtual const char*TEntryList::GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tTEntryList::GetN() const; virtua",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:8745,Deployability,TOGGLE,TOGGLE,8745,"ool_tRemove(Long64_t entry, TTree* tree, Long64_t subentry); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); static Int_tTEntryList::Scan(const char* fn, TList* roots); virtual Int_tTEntryList::ScanPaths(TList* roots, Bool_t notify = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTEntryList::SetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTEntryList::SetEntriesToProcess(Long64_t nen); virtual voidTEntryList::SetFileName(const char* filename); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTEntryList::SetReapplyCut(Bool_t apply = kFALSE)TOGGLE ; virtual voidTEntryList::SetShift(Bool_t shift); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(const TTree* tree); virtual voidSetTree(const char* treename, const char* filename); virtual voidTEntryList::SetTreeName(const char* treename); virtual voidTEntryList::SetTreeNumber(Int_t index); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSubtract(const TEntryList* elist); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name ",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:6078,Modifiability,Inherit,InheritsFrom,6078,"st::GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); virtual const char*TEntryList::GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tTEntryList::GetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual TEntryListArray*GetSubListForEntry(Long64_t entry, TTree* tree = 0); virtual TList*GetSubLists() const; virtual const char*TNamed::GetTitle() const; virtual const char*TEntryList::GetTreeName() const; virtual Int_tTEntryList::GetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTEntryList::Merge(TCollection* list); virtual Long64_tTEntryList::Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject:",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:6144,Modifiability,Inherit,InheritsFrom,6144,"n_t* opt = """"); virtual const char*TEntryList::GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tTEntryList::GetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual TEntryListArray*GetSubListForEntry(Long64_t entry, TTree* tree = 0); virtual TList*GetSubLists() const; virtual const char*TNamed::GetTitle() const; virtual const char*TEntryList::GetTreeName() const; virtual Int_tTEntryList::GetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTEntryList::Merge(TCollection* list); virtual Long64_tTEntryList::Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](s",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:12260,Modifiability,Inherit,Inheritance,12260,"; Long64_tTEntryList::fLastIndexReturned! used to optimize GetEntry() function from a loop; TEntryListArray*fLastSubListQueried! last sublist checked by GetSubListForEntry; TList*TEntryList::fListsa list of underlying entry lists for each tree of a chain; Long64_tTEntryList::fNnumber of entries in the list; Int_tTEntryList::fNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tTEntryList::fReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tTEntryList::fShift! true when some sub-lists don't correspond to trees; ULong_tTEntryList::fStringHash! Hash value of a string of treename and filename; TIter*fSubListIter! to iterate over fSubLists and keep last one checked; TList*fSubListsa list of underlying entry lists for each event of a TEntryList; TStringTNamed::fTitleobject title; TStringTEntryList::fTreeNamename of the tree; Int_tTEntryList::fTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(); Initialize data members, called by Reset. TEntryListArray(); default c-tor. TEntryListArray(const char* name, const char* title); c-tor with name and title. TEntryListArray(const char* name, const char* title, const TTree* tree); constructor with name and title, which also sets the tree. TEntryListArray(const char* name, const char* title, const char* treename, const char* filename); c-tor with name and title, which also sets the treename and the filename. TEntryListArray(const TTree* tree); c-tor, which sets the tree. TEntryListArray(const TEntryListArray& elist); copy c-tor. TEntryListArray(const TEntryList& elist); c-tor, from TEntryList. ~TEntryListArray(); d-tor. void Add(const TEntryList* elist); Add 2 entry lists. void AddEntriesAndSubLists(const TEntryList* elist); The method that really adds two entry lists with sublists; If lists are splitted (fLists != 0), look for the ones whose trees match and call the method ",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:12273,Modifiability,Inherit,Inherited,12273,"; Long64_tTEntryList::fLastIndexReturned! used to optimize GetEntry() function from a loop; TEntryListArray*fLastSubListQueried! last sublist checked by GetSubListForEntry; TList*TEntryList::fListsa list of underlying entry lists for each tree of a chain; Long64_tTEntryList::fNnumber of entries in the list; Int_tTEntryList::fNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tTEntryList::fReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tTEntryList::fShift! true when some sub-lists don't correspond to trees; ULong_tTEntryList::fStringHash! Hash value of a string of treename and filename; TIter*fSubListIter! to iterate over fSubLists and keep last one checked; TList*fSubListsa list of underlying entry lists for each event of a TEntryList; TStringTNamed::fTitleobject title; TStringTEntryList::fTreeNamename of the tree; Int_tTEntryList::fTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(); Initialize data members, called by Reset. TEntryListArray(); default c-tor. TEntryListArray(const char* name, const char* title); c-tor with name and title. TEntryListArray(const char* name, const char* title, const TTree* tree); constructor with name and title, which also sets the tree. TEntryListArray(const char* name, const char* title, const char* treename, const char* filename); c-tor with name and title, which also sets the treename and the filename. TEntryListArray(const TTree* tree); c-tor, which sets the tree. TEntryListArray(const TEntryListArray& elist); copy c-tor. TEntryListArray(const TEntryList& elist); c-tor, from TEntryList. ~TEntryListArray(); d-tor. void Add(const TEntryList* elist); Add 2 entry lists. void AddEntriesAndSubLists(const TEntryList* elist); The method that really adds two entry lists with sublists; If lists are splitted (fLists != 0), look for the ones whose trees match and call the method ",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:843,Performance,perform,performance,843,". TEntryListArray. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREE; » TEntryListArray. class TEntryListArray: public TEntryList. TEntryListArray: a list of entries and subentries in a TTree or TChain; TEntryListArray is an extension of TEntryList, used to hold selected entries and subentries (sublists) for when the user has a TTree with containers (vectors, arrays, ...). Usage with TTree::Draw to select entries and subentries . To fill a list elist :; ; tree->Draw("">> elist"", ""x > 0"", ""entrylistarray""); ; ; To use a list to select entries and subentries:. tree->SetEntryList(elist);; tree->Draw(""y"");; tree->Draw(""z"");; . Its main purpose is to improve the performance of a code that needs to apply complex cuts on TTree::Draw multiple times. After the first call above to TTree::Draw, a TEntryListArray is created and filled with the entries and the indices of the arrays that satisfied the selection cut (x > 0). In the subsequent calls to TTree::Draw, only these entries / subentries are used to fill histograms. About the class ; The class derives from TEntryList and can be used basically in the same way. This same class is used to keep entries and subentries, so there are two types of TEntryListArray's:. The ones that only hold subentries ; fEntry is set to the entry# for which the subentries correspond; fSubLists must be 0; The ones that hold entries and eventually lists with subentries in fSubLists.; fEntry = -1 for those; If there are no sublists for a given entry, all the subentries will be used in the selection . Additions with respect to TEntryList ; Data members:; fSubLists: a container to hold the sublists; fEntry: the entry number if the list is used to hold subentries; fLastSubListQueried and fSubListIter: a pointer to the last sublist queried and an iterator to resume the loop from th",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:7237,Performance,Optimiz,OptimizeStorage,7237,"it(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTEntryList::Merge(TCollection* list); virtual Long64_tTEntryList::Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTEntryList::OptimizeStorage(); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); static Int_tTEntryList::Relocate(const char* fn, const char* newroot, const char* oldroot = 0, const char* enlnm = 0); virtual Int_tTEntryList::RelocatePaths(const char* newloc, const char* oldloc = 0); virtual Bool_tRemove(Long64_t entry, TTree* tree = 0); virtual Bool_tRemove(Long64_t entry, TTree* tree, Long64_t subentry); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); static Int_tTEntryList::Scan(const char* fn, TList* roots); virtual Int_tTEntryList::ScanPaths(TList* roots, Bool_t notify = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual void",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:11244,Performance,optimiz,optimize,11244,"sBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*TEntryList::fBlocksblocks with indices of passing events (TEntryListBlocks); TEntryList*TEntryList::fCurrent! currently filled entry list; TDirectory*TEntryList::fDirectory! Pointer to directory holding this tree; Long64_tTEntryList::fEntriesToProcessused on proof to set the number of entries to process in a packet; Long64_tfEntrythe entry number, when the list is used for subentries; TStringTEntryList::fFileNamename of the file, where the tree is; Long64_tTEntryList::fLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tTEntryList::fLastIndexReturned! used to optimize GetEntry() function from a loop; TEntryListArray*fLastSubListQueried! last sublist checked by GetSubListForEntry; TList*TEntryList::fListsa list of underlying entry lists for each tree of a chain; Long64_tTEntryList::fNnumber of entries in the list; Int_tTEntryList::fNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tTEntryList::fReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tTEntryList::fShift! true when some sub-lists don't correspond to trees; ULong_tTEntryList::fStringHash! Hash value of a string of treename and filename; TIter*fSubListIter! to iterate over fSubLists and keep last one checked; TList*fSubListsa list of underlying entry lists for each event of a TEntryList; TStringTNamed::fTitleobject title; TStringTEntryList::fTreeNamename of the tree; Int_tTEntryList::fTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(); Initialize data members, called by Reset. TEntryListArray(); default c-tor. TEntryListArray(const char* name, const char* title); c-tor wit",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:11335,Performance,optimiz,optimize,11335,"sBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*TEntryList::fBlocksblocks with indices of passing events (TEntryListBlocks); TEntryList*TEntryList::fCurrent! currently filled entry list; TDirectory*TEntryList::fDirectory! Pointer to directory holding this tree; Long64_tTEntryList::fEntriesToProcessused on proof to set the number of entries to process in a packet; Long64_tfEntrythe entry number, when the list is used for subentries; TStringTEntryList::fFileNamename of the file, where the tree is; Long64_tTEntryList::fLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tTEntryList::fLastIndexReturned! used to optimize GetEntry() function from a loop; TEntryListArray*fLastSubListQueried! last sublist checked by GetSubListForEntry; TList*TEntryList::fListsa list of underlying entry lists for each tree of a chain; Long64_tTEntryList::fNnumber of entries in the list; Int_tTEntryList::fNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tTEntryList::fReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tTEntryList::fShift! true when some sub-lists don't correspond to trees; ULong_tTEntryList::fStringHash! Hash value of a string of treename and filename; TIter*fSubListIter! to iterate over fSubLists and keep last one checked; TList*fSubListsa list of underlying entry lists for each event of a TEntryList; TStringTNamed::fTitleobject title; TStringTEntryList::fTreeNamename of the tree; Int_tTEntryList::fTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(); Initialize data members, called by Reset. TEntryListArray(); default c-tor. TEntryListArray(const char* name, const char* title); c-tor wit",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:5968,Security,Hash,Hash,5968,"nt_t index); virtual Long64_tTEntryList::GetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*TEntryList::GetEntryList(const char* treename, const char* filename, Option_t* opt = """"); virtual const char*TEntryList::GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tTEntryList::GetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual TEntryListArray*GetSubListForEntry(Long64_t entry, TTree* tree = 0); virtual TList*GetSubLists() const; virtual const char*TNamed::GetTitle() const; virtual const char*TEntryList::GetTreeName() const; virtual Int_tTEntryList::GetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTEntryList::Merge(TCollection* list); virtual Long64_tTEntryList::Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr)",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:11876,Security,Hash,Hash,11876,"sBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*TEntryList::fBlocksblocks with indices of passing events (TEntryListBlocks); TEntryList*TEntryList::fCurrent! currently filled entry list; TDirectory*TEntryList::fDirectory! Pointer to directory holding this tree; Long64_tTEntryList::fEntriesToProcessused on proof to set the number of entries to process in a packet; Long64_tfEntrythe entry number, when the list is used for subentries; TStringTEntryList::fFileNamename of the file, where the tree is; Long64_tTEntryList::fLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tTEntryList::fLastIndexReturned! used to optimize GetEntry() function from a loop; TEntryListArray*fLastSubListQueried! last sublist checked by GetSubListForEntry; TList*TEntryList::fListsa list of underlying entry lists for each tree of a chain; Long64_tTEntryList::fNnumber of entries in the list; Int_tTEntryList::fNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tTEntryList::fReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tTEntryList::fShift! true when some sub-lists don't correspond to trees; ULong_tTEntryList::fStringHash! Hash value of a string of treename and filename; TIter*fSubListIter! to iterate over fSubLists and keep last one checked; TList*fSubListsa list of underlying entry lists for each event of a TEntryList; TStringTNamed::fTitleobject title; TStringTEntryList::fTreeNamename of the tree; Int_tTEntryList::fTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(); Initialize data members, called by Reset. TEntryListArray(); default c-tor. TEntryListArray(const char* name, const char* title); c-tor wit",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:9435,Testability,Test,TestBit,9435,"t subentry); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); static Int_tTEntryList::Scan(const char* fn, TList* roots); virtual Int_tTEntryList::ScanPaths(TList* roots, Bool_t notify = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTEntryList::SetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTEntryList::SetEntriesToProcess(Long64_t nen); virtual voidTEntryList::SetFileName(const char* filename); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTEntryList::SetReapplyCut(Bool_t apply = kFALSE)TOGGLE ; virtual voidTEntryList::SetShift(Bool_t shift); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(const TTree* tree); virtual voidSetTree(const char* treename, const char* filename); virtual voidTEntryList::SetTreeName(const char* treename); virtual voidTEntryList::SetTreeNumber(Int_t index); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSubtract(const TEntryList* elist); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:9474,Testability,Test,TestBits,9474,"t subentry); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); static Int_tTEntryList::Scan(const char* fn, TList* roots); virtual Int_tTEntryList::ScanPaths(TList* roots, Bool_t notify = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTEntryList::SetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTEntryList::SetEntriesToProcess(Long64_t nen); virtual voidTEntryList::SetFileName(const char* filename); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTEntryList::SetReapplyCut(Bool_t apply = kFALSE)TOGGLE ; virtual voidTEntryList::SetShift(Bool_t shift); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(const TTree* tree); virtual voidSetTree(const char* treename, const char* filename); virtual voidTEntryList::SetTreeName(const char* treename); virtual voidTEntryList::SetTreeNumber(Int_t index); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSubtract(const TEntryList* elist); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:1978,Usability,resume,resume,1978,"these entries / subentries are used to fill histograms. About the class ; The class derives from TEntryList and can be used basically in the same way. This same class is used to keep entries and subentries, so there are two types of TEntryListArray's:. The ones that only hold subentries ; fEntry is set to the entry# for which the subentries correspond; fSubLists must be 0; The ones that hold entries and eventually lists with subentries in fSubLists.; fEntry = -1 for those; If there are no sublists for a given entry, all the subentries will be used in the selection . Additions with respect to TEntryList ; Data members:; fSubLists: a container to hold the sublists; fEntry: the entry number if the list is used to hold subentries; fLastSubListQueried and fSubListIter: a pointer to the last sublist queried and an iterator to resume the loop from the last sublist queried (to speed up selection and insertion in TTree::Draw) ; Public methods:; Contains, Enter and Remove with subentry as argument; GetSubListForEntry: to return the sublist corresponding to the given entry ; Protected methods:; AddEntriesAndSubLists: called by Add when adding two TEntryList arrays with sublists; ConvertToTEntryListArray: convert TEntryList to TEntryListArray; RemoveSubList: to remove the given sublist; RemoveSubListForEntry: to remove the sublist corresponding to the given entry; SetEntry: to get / set a sublist for the given entry . . Function Members (Methods); public:. TEntryListArray(); TEntryListArray(const TTree* tree); TEntryListArray(const TEntryListArray& elist); TEntryListArray(const TEntryList& elist); TEntryListArray(const char* name, const char* title); TEntryListArray(const char* name, const char* title, const TTree* tree); TEntryListArray(const char* name, const char* title, const char* treename, const char* filename); virtual~TEntryListArray(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(const TEntryList* elist); virtual voidTObject::AppendPad(Option_t",MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListArray.html:3295,Usability,Clear,Clear,3295,,MatchSource.WIKI,root/html534/TEntryListArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListArray.html
https://root.cern/root/html534/TEntryListBlock.html:10343,Availability,Error,Error,10343,,MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:10472,Availability,error,error,10472,"k); virtual~TEntryListBlock(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Int_tContains(Int_t entry); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Bool_tEnter(Int_t entry); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntry(Int_t entry); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNPassed(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; Int_tGetType(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const;",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:10556,Availability,error,error,10556,"; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Int_tContains(Int_t entry); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Bool_tEnter(Int_t entry); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntry(Int_t entry); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNPassed(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; Int_tGetType(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTOb",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:11499,Modifiability,Inherit,InheritsFrom,11499,"Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntry(Int_t entry); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNPassed(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; Int_tGetType(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMerge(TEntryListBlock* block); Int_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:11565,Modifiability,Inherit,InheritsFrom,11565,"tual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntry(Int_t entry); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNPassed(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; Int_tGetType(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMerge(TEntryListBlock* block); Int_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ne",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:14998,Modifiability,Inherit,Inheritance,14998," Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTransform(Bool_t dir, UShort_t* indexnew). Data Members; public:. enum { kBlockSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UShort_tfCurrent! to fasten Contains() in list mode; UShort_t*fIndices[fN]; Int_tfLastIndexQueried! to optimize GetEntry() in a loop; Int_tfLastIndexReturned! to optimize GetEntry() in a loop; Int_tfNsize of fIndices for I/O =fNPassed for list, fBlockSize for bits; Int_tfNPassednumber of entries in the entry list (if fPassing=0 - number of entries; Bool_tfPassing1 - stores entries that belong to the list; Int_tfType0 - bits, 1 - list. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryListBlock(); default c-tor. TEntryListBlock(const TEntryListBlock& eblock); copy c-tor. ~TEntryListBlock(); destructor. TEntryListBlock & operator=(const TEntryListBlock& rhs). Bool_t Enter(Int_t entry); If the block has already been optimized and the entries; are stored as a list and not as bits, trying to enter a new entry; will make the block switch to bits representation. Bool_t Remove(Int_t entry); Remove entry #entry; If the block has already been optimized and the entries; are stored as a list and not as bits, trying to remove a new entry; will make the block switch to bits representation. Int_t Contains(Int_t entry); true if the block contains entry #entry. Int_t Merge(TEntryListBlock* block); Merge with the other block; Returns the resulting number of entries in the block. Int_t GetNPassed(); Returns the number of entries, passing the selection.; In case, when the block stores entries that pass (fPassing=1) returns fNPas",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:15011,Modifiability,Inherit,Inherited,15011," Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTransform(Bool_t dir, UShort_t* indexnew). Data Members; public:. enum { kBlockSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UShort_tfCurrent! to fasten Contains() in list mode; UShort_t*fIndices[fN]; Int_tfLastIndexQueried! to optimize GetEntry() in a loop; Int_tfLastIndexReturned! to optimize GetEntry() in a loop; Int_tfNsize of fIndices for I/O =fNPassed for list, fBlockSize for bits; Int_tfNPassednumber of entries in the entry list (if fPassing=0 - number of entries; Bool_tfPassing1 - stores entries that belong to the list; Int_tfType0 - bits, 1 - list. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryListBlock(); default c-tor. TEntryListBlock(const TEntryListBlock& eblock); copy c-tor. ~TEntryListBlock(); destructor. TEntryListBlock & operator=(const TEntryListBlock& rhs). Bool_t Enter(Int_t entry); If the block has already been optimized and the entries; are stored as a list and not as bits, trying to enter a new entry; will make the block switch to bits representation. Bool_t Remove(Int_t entry); Remove entry #entry; If the block has already been optimized and the entries; are stored as a list and not as bits, trying to remove a new entry; will make the block switch to bits representation. Int_t Contains(Int_t entry); true if the block contains entry #entry. Int_t Merge(TEntryListBlock* block); Merge with the other block; Returns the resulting number of entries in the block. Int_t GetNPassed(); Returns the number of entries, passing the selection.; In case, when the block stores entries that pass (fPassing=1) returns fNPas",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:821,Performance,Optimiz,OptimizeStorage,821,". TEntryListBlock. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREE; » TEntryListBlock. class TEntryListBlock: public TObject. TEntryListBlock: Used by TEntryList to store the entry numbers; There are 2 ways to represent entry numbers in a TEntryListBlock:. as bits, where passing entry numbers are assigned 1, not passing - 0; as a simple array of entry numbers. storing the numbers of entries that pass; storing the numbers of entries that don't pass. In both cases, a UShort_t* is used. The second option is better in case; less than 1/16 or more than 15/16 of entries pass the selection, and the representation can be; changed by calling OptimizeStorage() function. ; When the block is being filled, it's always stored as bits, and the OptimizeStorage(); function is called by TEntryList when it starts filling the next block. If; Enter() or Remove() is called after OptimizeStorage(), representation is ; again changed to 1). . Picture; Source. {; //=========Macro generated from canvas: c/c; //========= (Fri Mar 16 18:59:21 2007) by ROOT version5.15/03; TCanvas *c = new TCanvas(""c"", ""c"",49,123,752,435);; c->Range(0,0,1,1);; c->SetBorderSize(2);; c->SetFrameFillColor(0);; ; TPaveText *pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br"");; pt->SetFillColor(19);; TText *text = pt->AddText(""TEntryListBlock"");; pt->Draw();; ; pt = new TPaveText(0.00313972,0.827988,0.675039,0.994169,""br"");; pt->SetFillColor(19);; pt->SetTextColor(4);; text = pt->AddText(""Indices representation in a TEntryListBlock"");; pt->Draw();; ; pt = new TPaveText(0.00410678,0.412955,0.221766,0.651822,""br"");; pt->SetFillColor(19);; pt->SetTextAlign(12);; pt->SetTextSize(0.048583);; text = pt->AddText(""UShort_t* fIndices"");; text = pt->AddText(""Int_t fType"");; pt->Draw();; ; pt = new TPaveText(0.324961,0.708455,0.959184,0.80466",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:919,Performance,Optimiz,OptimizeStorage,919,". TEntryListBlock. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREE; » TEntryListBlock. class TEntryListBlock: public TObject. TEntryListBlock: Used by TEntryList to store the entry numbers; There are 2 ways to represent entry numbers in a TEntryListBlock:. as bits, where passing entry numbers are assigned 1, not passing - 0; as a simple array of entry numbers. storing the numbers of entries that pass; storing the numbers of entries that don't pass. In both cases, a UShort_t* is used. The second option is better in case; less than 1/16 or more than 15/16 of entries pass the selection, and the representation can be; changed by calling OptimizeStorage() function. ; When the block is being filled, it's always stored as bits, and the OptimizeStorage(); function is called by TEntryList when it starts filling the next block. If; Enter() or Remove() is called after OptimizeStorage(), representation is ; again changed to 1). . Picture; Source. {; //=========Macro generated from canvas: c/c; //========= (Fri Mar 16 18:59:21 2007) by ROOT version5.15/03; TCanvas *c = new TCanvas(""c"", ""c"",49,123,752,435);; c->Range(0,0,1,1);; c->SetBorderSize(2);; c->SetFrameFillColor(0);; ; TPaveText *pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br"");; pt->SetFillColor(19);; TText *text = pt->AddText(""TEntryListBlock"");; pt->Draw();; ; pt = new TPaveText(0.00313972,0.827988,0.675039,0.994169,""br"");; pt->SetFillColor(19);; pt->SetTextColor(4);; text = pt->AddText(""Indices representation in a TEntryListBlock"");; pt->Draw();; ; pt = new TPaveText(0.00410678,0.412955,0.221766,0.651822,""br"");; pt->SetFillColor(19);; pt->SetTextAlign(12);; pt->SetTextSize(0.048583);; text = pt->AddText(""UShort_t* fIndices"");; text = pt->AddText(""Int_t fType"");; pt->Draw();; ; pt = new TPaveText(0.324961,0.708455,0.959184,0.80466",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:1050,Performance,Optimiz,OptimizeStorage,1050,"; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREE; » TEntryListBlock. class TEntryListBlock: public TObject. TEntryListBlock: Used by TEntryList to store the entry numbers; There are 2 ways to represent entry numbers in a TEntryListBlock:. as bits, where passing entry numbers are assigned 1, not passing - 0; as a simple array of entry numbers. storing the numbers of entries that pass; storing the numbers of entries that don't pass. In both cases, a UShort_t* is used. The second option is better in case; less than 1/16 or more than 15/16 of entries pass the selection, and the representation can be; changed by calling OptimizeStorage() function. ; When the block is being filled, it's always stored as bits, and the OptimizeStorage(); function is called by TEntryList when it starts filling the next block. If; Enter() or Remove() is called after OptimizeStorage(), representation is ; again changed to 1). . Picture; Source. {; //=========Macro generated from canvas: c/c; //========= (Fri Mar 16 18:59:21 2007) by ROOT version5.15/03; TCanvas *c = new TCanvas(""c"", ""c"",49,123,752,435);; c->Range(0,0,1,1);; c->SetBorderSize(2);; c->SetFrameFillColor(0);; ; TPaveText *pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br"");; pt->SetFillColor(19);; TText *text = pt->AddText(""TEntryListBlock"");; pt->Draw();; ; pt = new TPaveText(0.00313972,0.827988,0.675039,0.994169,""br"");; pt->SetFillColor(19);; pt->SetTextColor(4);; text = pt->AddText(""Indices representation in a TEntryListBlock"");; pt->Draw();; ; pt = new TPaveText(0.00410678,0.412955,0.221766,0.651822,""br"");; pt->SetFillColor(19);; pt->SetTextAlign(12);; pt->SetTextSize(0.048583);; text = pt->AddText(""UShort_t* fIndices"");; text = pt->AddText(""Int_t fType"");; pt->Draw();; ; pt = new TPaveText(0.324961,0.708455,0.959184,0.804665,""br"");; pt->SetFillColor(19);; text = pt->AddText(""Suppo",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:14648,Performance,optimiz,optimize,14648,"dTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTransform(Bool_t dir, UShort_t* indexnew). Data Members; public:. enum { kBlockSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UShort_tfCurrent! to fasten Contains() in list mode; UShort_t*fIndices[fN]; Int_tfLastIndexQueried! to optimize GetEntry() in a loop; Int_tfLastIndexReturned! to optimize GetEntry() in a loop; Int_tfNsize of fIndices for I/O =fNPassed for list, fBlockSize for bits; Int_tfNPassednumber of entries in the entry list (if fPassing=0 - number of entries; Bool_tfPassing1 - stores entries that belong to the list; Int_tfType0 - bits, 1 - list. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryListBlock(); default c-tor. TEntryListBlock(const TEntryListBlock& eblock); copy c-tor. ~TEntryListBlock(); destructor. TEntryListBlock & operator=(const TEntryListBlock& rhs). Bool_t Enter(Int_t entry); If the block has already been optimized and the entries; are stored as a list and not as bits, trying to enter a new entry; will make the block switch to bits representation. Bool_t Remove(Int_t entry); Remove entry #entry; If the block has already been optimized and the entries; are stored as a list and not as bits, trying to remove a new entry; will make the block switch to bits representation. Int_t Contains(Int_t entry); true if the block contains entry #entry. Int_t Mer",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:14707,Performance,optimiz,optimize,14707,"dTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTransform(Bool_t dir, UShort_t* indexnew). Data Members; public:. enum { kBlockSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UShort_tfCurrent! to fasten Contains() in list mode; UShort_t*fIndices[fN]; Int_tfLastIndexQueried! to optimize GetEntry() in a loop; Int_tfLastIndexReturned! to optimize GetEntry() in a loop; Int_tfNsize of fIndices for I/O =fNPassed for list, fBlockSize for bits; Int_tfNPassednumber of entries in the entry list (if fPassing=0 - number of entries; Bool_tfPassing1 - stores entries that belong to the list; Int_tfType0 - bits, 1 - list. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryListBlock(); default c-tor. TEntryListBlock(const TEntryListBlock& eblock); copy c-tor. ~TEntryListBlock(); destructor. TEntryListBlock & operator=(const TEntryListBlock& rhs). Bool_t Enter(Int_t entry); If the block has already been optimized and the entries; are stored as a list and not as bits, trying to enter a new entry; will make the block switch to bits representation. Bool_t Remove(Int_t entry); Remove entry #entry; If the block has already been optimized and the entries; are stored as a list and not as bits, trying to remove a new entry; will make the block switch to bits representation. Int_t Contains(Int_t entry); true if the block contains entry #entry. Int_t Mer",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:15315,Performance,optimiz,optimized,15315,"ced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UShort_tfCurrent! to fasten Contains() in list mode; UShort_t*fIndices[fN]; Int_tfLastIndexQueried! to optimize GetEntry() in a loop; Int_tfLastIndexReturned! to optimize GetEntry() in a loop; Int_tfNsize of fIndices for I/O =fNPassed for list, fBlockSize for bits; Int_tfNPassednumber of entries in the entry list (if fPassing=0 - number of entries; Bool_tfPassing1 - stores entries that belong to the list; Int_tfType0 - bits, 1 - list. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryListBlock(); default c-tor. TEntryListBlock(const TEntryListBlock& eblock); copy c-tor. ~TEntryListBlock(); destructor. TEntryListBlock & operator=(const TEntryListBlock& rhs). Bool_t Enter(Int_t entry); If the block has already been optimized and the entries; are stored as a list and not as bits, trying to enter a new entry; will make the block switch to bits representation. Bool_t Remove(Int_t entry); Remove entry #entry; If the block has already been optimized and the entries; are stored as a list and not as bits, trying to remove a new entry; will make the block switch to bits representation. Int_t Contains(Int_t entry); true if the block contains entry #entry. Int_t Merge(TEntryListBlock* block); Merge with the other block; Returns the resulting number of entries in the block. Int_t GetNPassed(); Returns the number of entries, passing the selection.; In case, when the block stores entries that pass (fPassing=1) returns fNPassed. Int_t GetEntry(Int_t entry); Return entry #entry; See also Next(). Int_t Next(); Return the next non-zero entry; Faster than GetEntry() function. void Print(Option_t* option = """") const; Print the entries in this block. void PrintWithShift(Int_t shift) const; print the indices of this block + shift (used from TEntryList::Print(",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:15539,Performance,optimiz,optimized,15539,"n Contains() in list mode; UShort_t*fIndices[fN]; Int_tfLastIndexQueried! to optimize GetEntry() in a loop; Int_tfLastIndexReturned! to optimize GetEntry() in a loop; Int_tfNsize of fIndices for I/O =fNPassed for list, fBlockSize for bits; Int_tfNPassednumber of entries in the entry list (if fPassing=0 - number of entries; Bool_tfPassing1 - stores entries that belong to the list; Int_tfType0 - bits, 1 - list. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryListBlock(); default c-tor. TEntryListBlock(const TEntryListBlock& eblock); copy c-tor. ~TEntryListBlock(); destructor. TEntryListBlock & operator=(const TEntryListBlock& rhs). Bool_t Enter(Int_t entry); If the block has already been optimized and the entries; are stored as a list and not as bits, trying to enter a new entry; will make the block switch to bits representation. Bool_t Remove(Int_t entry); Remove entry #entry; If the block has already been optimized and the entries; are stored as a list and not as bits, trying to remove a new entry; will make the block switch to bits representation. Int_t Contains(Int_t entry); true if the block contains entry #entry. Int_t Merge(TEntryListBlock* block); Merge with the other block; Returns the resulting number of entries in the block. Int_t GetNPassed(); Returns the number of entries, passing the selection.; In case, when the block stores entries that pass (fPassing=1) returns fNPassed. Int_t GetEntry(Int_t entry); Return entry #entry; See also Next(). Int_t Next(); Return the next non-zero entry; Faster than GetEntry() function. void Print(Option_t* option = """") const; Print the entries in this block. void PrintWithShift(Int_t shift) const; print the indices of this block + shift (used from TEntryList::Print()) to; print the corrent values. void OptimizeStorage(); if there are < kBlockSize or >kBlockSize*15 entries, change to an array representation. void Transform(Bool_t dir, UShort_t* indexnew); Transform the existin",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:16396,Performance,Optimiz,OptimizeStorage,16396,"ock(); default c-tor. TEntryListBlock(const TEntryListBlock& eblock); copy c-tor. ~TEntryListBlock(); destructor. TEntryListBlock & operator=(const TEntryListBlock& rhs). Bool_t Enter(Int_t entry); If the block has already been optimized and the entries; are stored as a list and not as bits, trying to enter a new entry; will make the block switch to bits representation. Bool_t Remove(Int_t entry); Remove entry #entry; If the block has already been optimized and the entries; are stored as a list and not as bits, trying to remove a new entry; will make the block switch to bits representation. Int_t Contains(Int_t entry); true if the block contains entry #entry. Int_t Merge(TEntryListBlock* block); Merge with the other block; Returns the resulting number of entries in the block. Int_t GetNPassed(); Returns the number of entries, passing the selection.; In case, when the block stores entries that pass (fPassing=1) returns fNPassed. Int_t GetEntry(Int_t entry); Return entry #entry; See also Next(). Int_t Next(); Return the next non-zero entry; Faster than GetEntry() function. void Print(Option_t* option = """") const; Print the entries in this block. void PrintWithShift(Int_t shift) const; print the indices of this block + shift (used from TEntryList::Print()) to; print the corrent values. void OptimizeStorage(); if there are < kBlockSize or >kBlockSize*15 entries, change to an array representation. void Transform(Bool_t dir, UShort_t* indexnew); Transform the existing fIndices; dir=0 - transform from bits to a list; dir=1 - tranform from a list to bits. void ResetIndices(); {fLastIndexQueried = -1, fLastIndexReturned = -1;}. Int_t GetType(); { return fType; }. » Author: Anna Kreshuk 27/10/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/tree:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:11389,Security,Hash,Hash,11389,"nst; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntry(Int_t entry); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNPassed(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; Int_tGetType(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMerge(TEntryListBlock* block); Int_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delet",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:13687,Testability,Test,TestBit,13687,"block); Int_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEntryListBlock&operator=(const TEntryListBlock& rhs); voidOptimizeStorage(); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; voidPrintWithShift(Int_t shift) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRemove(Int_t entry); voidTObject::ResetBit(UInt_t f); voidResetIndices(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:13726,Testability,Test,TestBits,13726,"block); Int_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEntryListBlock&operator=(const TEntryListBlock& rhs); voidOptimizeStorage(); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; voidPrintWithShift(Int_t shift) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRemove(Int_t entry); voidTObject::ResetBit(UInt_t f); voidResetIndices(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:512,Usability,simpl,simple,512,". TEntryListBlock. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREE; » TEntryListBlock. class TEntryListBlock: public TObject. TEntryListBlock: Used by TEntryList to store the entry numbers; There are 2 ways to represent entry numbers in a TEntryListBlock:. as bits, where passing entry numbers are assigned 1, not passing - 0; as a simple array of entry numbers. storing the numbers of entries that pass; storing the numbers of entries that don't pass. In both cases, a UShort_t* is used. The second option is better in case; less than 1/16 or more than 15/16 of entries pass the selection, and the representation can be; changed by calling OptimizeStorage() function. ; When the block is being filled, it's always stored as bits, and the OptimizeStorage(); function is called by TEntryList when it starts filling the next block. If; Enter() or Remove() is called after OptimizeStorage(), representation is ; again changed to 1). . Picture; Source. {; //=========Macro generated from canvas: c/c; //========= (Fri Mar 16 18:59:21 2007) by ROOT version5.15/03; TCanvas *c = new TCanvas(""c"", ""c"",49,123,752,435);; c->Range(0,0,1,1);; c->SetBorderSize(2);; c->SetFrameFillColor(0);; ; TPaveText *pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br"");; pt->SetFillColor(19);; TText *text = pt->AddText(""TEntryListBlock"");; pt->Draw();; ; pt = new TPaveText(0.00313972,0.827988,0.675039,0.994169,""br"");; pt->SetFillColor(19);; pt->SetTextColor(4);; text = pt->AddText(""Indices representation in a TEntryListBlock"");; pt->Draw();; ; pt = new TPaveText(0.00410678,0.412955,0.221766,0.651822,""br"");; pt->SetFillColor(19);; pt->SetTextAlign(12);; pt->SetTextSize(0.048583);; text = pt->AddText(""UShort_t* fIndices"");; text = pt->AddText(""Int_t fType"");; pt->Draw();; ; pt = new TPaveText(0.324961,0.708455,0.959184,0.80466",MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListBlock.html:9749,Usability,Clear,Clear,9749,,MatchSource.WIKI,root/html534/TEntryListBlock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html
https://root.cern/root/html534/TEntryListFromFile.html:1064,Availability,error,error,1064,". Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREE; » TEntryListFromFile. class TEntryListFromFile: public TEntryList. TEntryListFromFile. Manages entry lists from different files, when they are not loaded; in memory at the same time. This entry list should only be used when processing a TChain (see; TChain::SetEntryList() function). File naming convention:; - by default, filename_elist.root is used, where filename is the; name of the chain element.; - xxx$xxx.root - $ sign is replaced by the name of the chain element; If the list name is not specified (by passing filename_elist.root/listname to; the TChain::SetEntryList() function, the first object of class TEntryList; in the file is taken.; It is assumed that there are as many lists, as there are chain elements,; and they are in the same order. If one of the list files can't be opened, or there is an error reading a list; from the file, this list is skipped and the entry loop continues on the next; list. Function Members (Methods); public:. TEntryListFromFile(); TEntryListFromFile(const char* filename, const char* listname, Int_t nfiles); virtual~TEntryListFromFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(const TEntryList*); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t, TTree*); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTEntryList::DirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual vo",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:2293,Availability,Error,Error,2293,"t nfiles); virtual~TEntryListFromFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(const TEntryList*); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t, TTree*); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTEntryList::DirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Bool_tEnter(Long64_t, TTree*); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TEntryList*GetCurrentList() const; virtual TDirectory*TEntryList::GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntries(); virtual Long64_tGetEntriesFast() const; virtual Long64_tTEntryList::GetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char*, const char",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:2422,Availability,error,error,2422,"); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t, TTree*); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTEntryList::DirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Bool_tEnter(Long64_t, TTree*); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TEntryList*GetCurrentList() const; virtual TDirectory*TEntryList::GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntries(); virtual Long64_tGetEntriesFast() const; virtual Long64_tTEntryList::GetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char*, const char*, Option_t*); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList:",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:2506,Availability,error,error,2506,"e(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t, TTree*); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTEntryList::DirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Bool_tEnter(Long64_t, TTree*); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TEntryList*GetCurrentList() const; virtual TDirectory*TEntryList::GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntries(); virtual Long64_tGetEntriesFast() const; virtual Long64_tTEntryList::GetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char*, const char*, Option_t*); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName(",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:6738,Deployability,TOGGLE,TOGGLE,6738," voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); static Int_tTEntryList::Scan(const char* fn, TList* roots); virtual Int_tTEntryList::ScanPaths(TList* roots, Bool_t notify = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTEntryList::SetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTEntryList::SetEntriesToProcess(Long64_t nen); virtual voidTEntryList::SetFileName(const char* filename); virtual voidSetFileNames(TObjArray* names); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidSetNFiles(Int_t nfiles); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTEntryList::SetReapplyCut(Bool_t apply = kFALSE)TOGGLE ; virtual voidTEntryList::SetShift(Bool_t shift); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(const TTree*); virtual voidSetTree(const char*, const char*); virtual voidTEntryList::SetTreeName(const char* treename); virtual voidSetTreeNumber(Int_t index); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSubtract(const TEntryList*); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0)",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:4063,Modifiability,Inherit,InheritsFrom,4063,"Fast() const; virtual Long64_tTEntryList::GetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char*, const char*, Option_t*); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTreeName() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLoadList(Int_t listnumber); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection*); virtual Long64_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); v",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:4129,Modifiability,Inherit,InheritsFrom,4129,"nst; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char*, const char*, Option_t*); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTreeName() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLoadList(Int_t listnumber); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection*); virtual Long64_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::oper",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:9897,Modifiability,Inherit,Inheritance,9897,"etEntry() function from a loop ; Long64_tTEntryList::fLastIndexReturned! used to optimize GetEntry() function from a loop; TStringfListFileNamefrom this string names of all files can be found; TStringfListNamename of the list; Long64_t*fListOffset[fNFiles] numbers of entries in ind. lists; TList*TEntryList::fListsa list of underlying entry lists for each tree of a chain; Long64_tTEntryList::fNnumber of entries in the list; Int_tTEntryList::fNBlocksnumber of TEntryListBlocks; Int_tfNFilestotal number of files; TStringTNamed::fNameobject identifier; Bool_tTEntryList::fReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tTEntryList::fShift! true when some sub-lists don't correspond to trees; ULong_tTEntryList::fStringHash! Hash value of a string of treename and filename; TStringTNamed::fTitleobject title; TStringTEntryList::fTreeNamename of the tree; Int_tTEntryList::fTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryListFromFile(); default constructor. TEntryListFromFile(const char* filename, const char* listname, Int_t nfiles); File naming convention:; - by default, filename_elist.root is used, where filename is the; name of the chain element; - xxx$xxx.root - $ sign is replaced by the name of the chain element; The TObjArray of chain elements is set by the TEntryListFromFile::SetFileNames(); function.; If the list name is not specified, the first object of class TEntryList; in the file is taken.; nfiles is the total number of files to process. ~TEntryListFromFile(); d-tor. Long64_t GetEntry(Int_t index); returns entry #index; See also Next() for a faster alternative. Long64_t GetEntryAndTree(Int_t index, Int_t& treenum); return the entry corresponding to the index parameter and the; number of the tree, where this entry is. Long64_t GetEntries(); Returns the total number of entries in the list.; If some lists have not been loaded, loads the",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:9910,Modifiability,Inherit,Inherited,9910,"etEntry() function from a loop ; Long64_tTEntryList::fLastIndexReturned! used to optimize GetEntry() function from a loop; TStringfListFileNamefrom this string names of all files can be found; TStringfListNamename of the list; Long64_t*fListOffset[fNFiles] numbers of entries in ind. lists; TList*TEntryList::fListsa list of underlying entry lists for each tree of a chain; Long64_tTEntryList::fNnumber of entries in the list; Int_tTEntryList::fNBlocksnumber of TEntryListBlocks; Int_tfNFilestotal number of files; TStringTNamed::fNameobject identifier; Bool_tTEntryList::fReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tTEntryList::fShift! true when some sub-lists don't correspond to trees; ULong_tTEntryList::fStringHash! Hash value of a string of treename and filename; TStringTNamed::fTitleobject title; TStringTEntryList::fTreeNamename of the tree; Int_tTEntryList::fTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryListFromFile(); default constructor. TEntryListFromFile(const char* filename, const char* listname, Int_t nfiles); File naming convention:; - by default, filename_elist.root is used, where filename is the; name of the chain element; - xxx$xxx.root - $ sign is replaced by the name of the chain element; The TObjArray of chain elements is set by the TEntryListFromFile::SetFileNames(); function.; If the list name is not specified, the first object of class TEntryList; in the file is taken.; nfiles is the total number of files to process. ~TEntryListFromFile(); d-tor. Long64_t GetEntry(Int_t index); returns entry #index; See also Next() for a faster alternative. Long64_t GetEntryAndTree(Int_t index, Int_t& treenum); return the entry corresponding to the index parameter and the; number of the tree, where this entry is. Long64_t GetEntries(); Returns the total number of entries in the list.; If some lists have not been loaded, loads the",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:398,Performance,load,loaded,398,". TEntryListFromFile. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREE; » TEntryListFromFile. class TEntryListFromFile: public TEntryList. TEntryListFromFile. Manages entry lists from different files, when they are not loaded; in memory at the same time. This entry list should only be used when processing a TChain (see; TChain::SetEntryList() function). File naming convention:; - by default, filename_elist.root is used, where filename is the; name of the chain element.; - xxx$xxx.root - $ sign is replaced by the name of the chain element; If the list name is not specified (by passing filename_elist.root/listname to; the TChain::SetEntryList() function, the first object of class TEntryList; in the file is taken.; It is assumed that there are as many lists, as there are chain elements,; and they are in the same order. If one of the list files can't be opened, or there is an error reading a list; from the file, this list is skipped and the entry loop continues on the next; list. Function Members (Methods); public:. TEntryListFromFile(); TEntryListFromFile(const char* filename, const char* listname, Int_t nfiles); virtual~TEntryListFromFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(const TEntryList*); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t, TTree*); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTEntryList::DirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrim",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:8912,Performance,optimiz,optimize,8912,"t::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TEntryListFromFile(const TEntryListFromFile&); TEntryListFromFile&operator=(const TEntryListFromFile&). Data Members; public:. enum { kBigNumber; };; enum TEntryList::[unnamed] { kBlockSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*TEntryList::fBlocksblocks with indices of passing events (TEntryListBlocks); TEntryList*TEntryList::fCurrent! currently filled entry list; TDirectory*TEntryList::fDirectory! Pointer to directory holding this tree; Long64_tTEntryList::fEntriesToProcessused on proof to set the number of entries to process in a packet; TFile*fFilecurrently open file; TStringTEntryList::fFileNamename of the file, where the tree is; TObjArray*fFileNames! points to the fFiles data member of the corresponding chain; Long64_tTEntryList::fLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tTEntryList::fLastIndexReturned! used to optimize GetEntry() function from a loop; TStringfListFileNamefrom this string names of all files can be found; TStringfListNamename of the list; Long64_t*fListOffset[fNFiles] numbers of entries in ind. lists; TList*TEntryList::fListsa list of underlying entry lists for each tree of a chain; Long64_tTEntryList::fNnumber of entries in the list; Int_tTEntryList::fNBlocksnumber of TEntryListBlocks; Int_tfNFilestotal number of files; TStringTNamed::fNameobject identifier; Bool_tTEntryList::fReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tTEntryList::fShift! true when some sub-lists don't correspond to trees; ULong_tTEntryList::fStringHash! Hash value of a string of treename and filename; TStringTNamed::fTitleobject title; TStringTEntryList::fTreeNamenam",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:9003,Performance,optimiz,optimize,9003,"t::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TEntryListFromFile(const TEntryListFromFile&); TEntryListFromFile&operator=(const TEntryListFromFile&). Data Members; public:. enum { kBigNumber; };; enum TEntryList::[unnamed] { kBlockSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*TEntryList::fBlocksblocks with indices of passing events (TEntryListBlocks); TEntryList*TEntryList::fCurrent! currently filled entry list; TDirectory*TEntryList::fDirectory! Pointer to directory holding this tree; Long64_tTEntryList::fEntriesToProcessused on proof to set the number of entries to process in a packet; TFile*fFilecurrently open file; TStringTEntryList::fFileNamename of the file, where the tree is; TObjArray*fFileNames! points to the fFiles data member of the corresponding chain; Long64_tTEntryList::fLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tTEntryList::fLastIndexReturned! used to optimize GetEntry() function from a loop; TStringfListFileNamefrom this string names of all files can be found; TStringfListNamename of the list; Long64_t*fListOffset[fNFiles] numbers of entries in ind. lists; TList*TEntryList::fListsa list of underlying entry lists for each tree of a chain; Long64_tTEntryList::fNnumber of entries in the list; Int_tTEntryList::fNBlocksnumber of TEntryListBlocks; Int_tfNFilestotal number of files; TStringTNamed::fNameobject identifier; Bool_tTEntryList::fReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tTEntryList::fShift! true when some sub-lists don't correspond to trees; ULong_tTEntryList::fStringHash! Hash value of a string of treename and filename; TStringTNamed::fTitleobject title; TStringTEntryList::fTreeNamenam",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:10906,Performance,load,loaded,10906,"eritance; Inherited Members; Includes; Libraries. Function documentation; TEntryListFromFile(); default constructor. TEntryListFromFile(const char* filename, const char* listname, Int_t nfiles); File naming convention:; - by default, filename_elist.root is used, where filename is the; name of the chain element; - xxx$xxx.root - $ sign is replaced by the name of the chain element; The TObjArray of chain elements is set by the TEntryListFromFile::SetFileNames(); function.; If the list name is not specified, the first object of class TEntryList; in the file is taken.; nfiles is the total number of files to process. ~TEntryListFromFile(); d-tor. Long64_t GetEntry(Int_t index); returns entry #index; See also Next() for a faster alternative. Long64_t GetEntryAndTree(Int_t index, Int_t& treenum); return the entry corresponding to the index parameter and the; number of the tree, where this entry is. Long64_t GetEntries(); Returns the total number of entries in the list.; If some lists have not been loaded, loads them. Long64_t Next(); Returns the next entry in the list.; Faster than GetEntry(). Int_t LoadList(Int_t listnumber); Loads the list #listnumber; This is the only function that can modify fCurrent and fFile data members. void Print(Option_t* option = """") const; Print info about this list. TEntryListFromFile(const TEntryListFromFile& ). TEntryListFromFile & operator=(const TEntryListFromFile& ). void Add(const TEntryList* ); {}. Int_t Contains(Long64_t , TTree* ); {return 0;}. Bool_t Enter(Long64_t , TTree* ); {return 0;}. TEntryList * GetCurrentList() const; { return fCurrent; }. TEntryList * GetEntryList(const char* , const char* , Option_t* ); {return 0;}. Long64_t GetEntriesFast() const; { return fN; }. Long64_t GetN() const; { return fN; }. const char * GetTreeName() const; { return fTreeName.Data(); }. const char * GetFileName() const; { return fFileName.Data(); }. Int_t GetTreeNumber() const; { return fTreeNumber; }. Int_t Merge(TCollection* ); { return 0; }. v",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:10914,Performance,load,loads,10914,"eritance; Inherited Members; Includes; Libraries. Function documentation; TEntryListFromFile(); default constructor. TEntryListFromFile(const char* filename, const char* listname, Int_t nfiles); File naming convention:; - by default, filename_elist.root is used, where filename is the; name of the chain element; - xxx$xxx.root - $ sign is replaced by the name of the chain element; The TObjArray of chain elements is set by the TEntryListFromFile::SetFileNames(); function.; If the list name is not specified, the first object of class TEntryList; in the file is taken.; nfiles is the total number of files to process. ~TEntryListFromFile(); d-tor. Long64_t GetEntry(Int_t index); returns entry #index; See also Next() for a faster alternative. Long64_t GetEntryAndTree(Int_t index, Int_t& treenum); return the entry corresponding to the index parameter and the; number of the tree, where this entry is. Long64_t GetEntries(); Returns the total number of entries in the list.; If some lists have not been loaded, loads them. Long64_t Next(); Returns the next entry in the list.; Faster than GetEntry(). Int_t LoadList(Int_t listnumber); Loads the list #listnumber; This is the only function that can modify fCurrent and fFile data members. void Print(Option_t* option = """") const; Print info about this list. TEntryListFromFile(const TEntryListFromFile& ). TEntryListFromFile & operator=(const TEntryListFromFile& ). void Add(const TEntryList* ); {}. Int_t Contains(Long64_t , TTree* ); {return 0;}. Bool_t Enter(Long64_t , TTree* ); {return 0;}. TEntryList * GetCurrentList() const; { return fCurrent; }. TEntryList * GetEntryList(const char* , const char* , Option_t* ); {return 0;}. Long64_t GetEntriesFast() const; { return fN; }. Long64_t GetN() const; { return fN; }. const char * GetTreeName() const; { return fTreeName.Data(); }. const char * GetFileName() const; { return fFileName.Data(); }. Int_t GetTreeNumber() const; { return fTreeNumber; }. Int_t Merge(TCollection* ); { return 0; }. v",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:11010,Performance,Load,LoadList,11010,"istname, Int_t nfiles); File naming convention:; - by default, filename_elist.root is used, where filename is the; name of the chain element; - xxx$xxx.root - $ sign is replaced by the name of the chain element; The TObjArray of chain elements is set by the TEntryListFromFile::SetFileNames(); function.; If the list name is not specified, the first object of class TEntryList; in the file is taken.; nfiles is the total number of files to process. ~TEntryListFromFile(); d-tor. Long64_t GetEntry(Int_t index); returns entry #index; See also Next() for a faster alternative. Long64_t GetEntryAndTree(Int_t index, Int_t& treenum); return the entry corresponding to the index parameter and the; number of the tree, where this entry is. Long64_t GetEntries(); Returns the total number of entries in the list.; If some lists have not been loaded, loads them. Long64_t Next(); Returns the next entry in the list.; Faster than GetEntry(). Int_t LoadList(Int_t listnumber); Loads the list #listnumber; This is the only function that can modify fCurrent and fFile data members. void Print(Option_t* option = """") const; Print info about this list. TEntryListFromFile(const TEntryListFromFile& ). TEntryListFromFile & operator=(const TEntryListFromFile& ). void Add(const TEntryList* ); {}. Int_t Contains(Long64_t , TTree* ); {return 0;}. Bool_t Enter(Long64_t , TTree* ); {return 0;}. TEntryList * GetCurrentList() const; { return fCurrent; }. TEntryList * GetEntryList(const char* , const char* , Option_t* ); {return 0;}. Long64_t GetEntriesFast() const; { return fN; }. Long64_t GetN() const; { return fN; }. const char * GetTreeName() const; { return fTreeName.Data(); }. const char * GetFileName() const; { return fFileName.Data(); }. Int_t GetTreeNumber() const; { return fTreeNumber; }. Int_t Merge(TCollection* ); { return 0; }. void OptimizeStorage(); {}. Bool_t Remove(Long64_t , TTree* ); { return 0; }. void SetTree(const TTree* ); {}. void SetTree(const char* , const char* ); {}. void SetFileNam",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:11038,Performance,Load,Loads,11038,"istname, Int_t nfiles); File naming convention:; - by default, filename_elist.root is used, where filename is the; name of the chain element; - xxx$xxx.root - $ sign is replaced by the name of the chain element; The TObjArray of chain elements is set by the TEntryListFromFile::SetFileNames(); function.; If the list name is not specified, the first object of class TEntryList; in the file is taken.; nfiles is the total number of files to process. ~TEntryListFromFile(); d-tor. Long64_t GetEntry(Int_t index); returns entry #index; See also Next() for a faster alternative. Long64_t GetEntryAndTree(Int_t index, Int_t& treenum); return the entry corresponding to the index parameter and the; number of the tree, where this entry is. Long64_t GetEntries(); Returns the total number of entries in the list.; If some lists have not been loaded, loads them. Long64_t Next(); Returns the next entry in the list.; Faster than GetEntry(). Int_t LoadList(Int_t listnumber); Loads the list #listnumber; This is the only function that can modify fCurrent and fFile data members. void Print(Option_t* option = """") const; Print info about this list. TEntryListFromFile(const TEntryListFromFile& ). TEntryListFromFile & operator=(const TEntryListFromFile& ). void Add(const TEntryList* ); {}. Int_t Contains(Long64_t , TTree* ); {return 0;}. Bool_t Enter(Long64_t , TTree* ); {return 0;}. TEntryList * GetCurrentList() const; { return fCurrent; }. TEntryList * GetEntryList(const char* , const char* , Option_t* ); {return 0;}. Long64_t GetEntriesFast() const; { return fN; }. Long64_t GetN() const; { return fN; }. const char * GetTreeName() const; { return fTreeName.Data(); }. const char * GetFileName() const; { return fFileName.Data(); }. Int_t GetTreeNumber() const; { return fTreeNumber; }. Int_t Merge(TCollection* ); { return 0; }. void OptimizeStorage(); {}. Bool_t Remove(Long64_t , TTree* ); { return 0; }. void SetTree(const TTree* ); {}. void SetTree(const char* , const char* ); {}. void SetFileNam",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:11905,Performance,Optimiz,OptimizeStorage,11905,"urns entry #index; See also Next() for a faster alternative. Long64_t GetEntryAndTree(Int_t index, Int_t& treenum); return the entry corresponding to the index parameter and the; number of the tree, where this entry is. Long64_t GetEntries(); Returns the total number of entries in the list.; If some lists have not been loaded, loads them. Long64_t Next(); Returns the next entry in the list.; Faster than GetEntry(). Int_t LoadList(Int_t listnumber); Loads the list #listnumber; This is the only function that can modify fCurrent and fFile data members. void Print(Option_t* option = """") const; Print info about this list. TEntryListFromFile(const TEntryListFromFile& ). TEntryListFromFile & operator=(const TEntryListFromFile& ). void Add(const TEntryList* ); {}. Int_t Contains(Long64_t , TTree* ); {return 0;}. Bool_t Enter(Long64_t , TTree* ); {return 0;}. TEntryList * GetCurrentList() const; { return fCurrent; }. TEntryList * GetEntryList(const char* , const char* , Option_t* ); {return 0;}. Long64_t GetEntriesFast() const; { return fN; }. Long64_t GetN() const; { return fN; }. const char * GetTreeName() const; { return fTreeName.Data(); }. const char * GetFileName() const; { return fFileName.Data(); }. Int_t GetTreeNumber() const; { return fTreeNumber; }. Int_t Merge(TCollection* ); { return 0; }. void OptimizeStorage(); {}. Bool_t Remove(Long64_t , TTree* ); { return 0; }. void SetTree(const TTree* ); {}. void SetTree(const char* , const char* ); {}. void SetFileNames(TObjArray* names); { fFileNames = names; }. void SetTreeNumber(Int_t index); { fTreeNumber=index; }. void SetNFiles(Int_t nfiles); { fNFiles = nfiles; }. void Subtract(const TEntryList* ); {}. » Author: Anna Kreshuk 17/03/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/tree:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:3953,Security,Hash,Hash,3953,"tDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntries(); virtual Long64_tGetEntriesFast() const; virtual Long64_tTEntryList::GetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char*, const char*, Option_t*); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTreeName() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLoadList(Int_t listnumber); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection*); virtual Long64_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:9666,Security,Hash,Hash,9666,"inter to directory holding this tree; Long64_tTEntryList::fEntriesToProcessused on proof to set the number of entries to process in a packet; TFile*fFilecurrently open file; TStringTEntryList::fFileNamename of the file, where the tree is; TObjArray*fFileNames! points to the fFiles data member of the corresponding chain; Long64_tTEntryList::fLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tTEntryList::fLastIndexReturned! used to optimize GetEntry() function from a loop; TStringfListFileNamefrom this string names of all files can be found; TStringfListNamename of the list; Long64_t*fListOffset[fNFiles] numbers of entries in ind. lists; TList*TEntryList::fListsa list of underlying entry lists for each tree of a chain; Long64_tTEntryList::fNnumber of entries in the list; Int_tTEntryList::fNBlocksnumber of TEntryListBlocks; Int_tfNFilestotal number of files; TStringTNamed::fNameobject identifier; Bool_tTEntryList::fReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tTEntryList::fShift! true when some sub-lists don't correspond to trees; ULong_tTEntryList::fStringHash! Hash value of a string of treename and filename; TStringTNamed::fTitleobject title; TStringTEntryList::fTreeNamename of the tree; Int_tTEntryList::fTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryListFromFile(); default constructor. TEntryListFromFile(const char* filename, const char* listname, Int_t nfiles); File naming convention:; - by default, filename_elist.root is used, where filename is the; name of the chain element; - xxx$xxx.root - $ sign is replaced by the name of the chain element; The TObjArray of chain elements is set by the TEntryListFromFile::SetFileNames(); function.; If the list name is not specified, the first object of class TEntryList; in the file is taken.; nfiles is the total number of files to process. ~TEntryListFromFile(); d",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:7387,Testability,Test,TestBit,7387,"bject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); static Int_tTEntryList::Scan(const char* fn, TList* roots); virtual Int_tTEntryList::ScanPaths(TList* roots, Bool_t notify = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTEntryList::SetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTEntryList::SetEntriesToProcess(Long64_t nen); virtual voidTEntryList::SetFileName(const char* filename); virtual voidSetFileNames(TObjArray* names); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidSetNFiles(Int_t nfiles); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTEntryList::SetReapplyCut(Bool_t apply = kFALSE)TOGGLE ; virtual voidTEntryList::SetShift(Bool_t shift); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(const TTree*); virtual voidSetTree(const char*, const char*); virtual voidTEntryList::SetTreeName(const char* treename); virtual voidSetTreeNumber(Int_t index); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSubtract(const TEntryList*); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:7426,Testability,Test,TestBits,7426,"bject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); static Int_tTEntryList::Scan(const char* fn, TList* roots); virtual Int_tTEntryList::ScanPaths(TList* roots, Bool_t notify = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTEntryList::SetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTEntryList::SetEntriesToProcess(Long64_t nen); virtual voidTEntryList::SetFileName(const char* filename); virtual voidSetFileNames(TObjArray* names); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidSetNFiles(Int_t nfiles); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTEntryList::SetReapplyCut(Bool_t apply = kFALSE)TOGGLE ; virtual voidTEntryList::SetShift(Bool_t shift); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(const TTree*); virtual voidSetTree(const char*, const char*); virtual voidTEntryList::SetTreeName(const char* treename); virtual voidSetTreeNumber(Int_t index); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSubtract(const TEntryList*); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEntryListFromFile.html:1615,Usability,Clear,Clear,1615," TEntryListFromFile(); TEntryListFromFile(const char* filename, const char* listname, Int_t nfiles); virtual~TEntryListFromFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(const TEntryList*); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t, TTree*); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTEntryList::DirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrim",MatchSource.WIKI,root/html534/TEntryListFromFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html
https://root.cern/root/html534/TEnv.html:3200,Availability,Error,Error,3200,,MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:3329,Availability,error,error,3329,,MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:3413,Availability,error,error,3413,"t char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; Bool_tDefined(const char* name); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetRcName() const; THashList*GetTable() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetValue(const char* name, Int_t dflt); virtual Double_tGetValue(const char* name, Double_t dflt); virtual const char*GetValue(const char* name, const char* dflt); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:9969,Availability,error,error,9969,"character value for a named resouce. Int_t GetValue(const char* name, Int_t dflt); Returns the integer value for a resource. If the resource is not found; return the dflt value. Double_t GetValue(const char* name, Double_t dflt); Returns the double value for a resource. If the resource is not found; return the dflt value. const char * GetValue(const char* name, const char* dflt); Returns the character value for a named resouce. If the resource is; not found the dflt value is returned. TEnvRec * Lookup(const char* n); Loop over all resource records and return the one with name.; Return 0 in case name is not in the resoucre table. void Print(Option_t* option = """") const; Print all resources or the global, user or local resources separately. void PrintEnv(EEnvLevel level = kEnvAll) const; Print all resources for a certain level (global, user, local, changed). Int_t ReadFile(const char* fname, EEnvLevel level); Read and parse the resource file for a certain level.; Returns -1 on case of error, 0 in case of success. Int_t WriteFile(const char* fname, EEnvLevel level = kEnvAll); Write resourse records to file fname for a certain level. Use; level kEnvAll to write all resources. Returns -1 on case of error,; 0 in case of success. void Save(); Write the resource files for each level. The new files have the same; name as the original files. The old files are renamed to *.bak. void SaveLevel(EEnvLevel level); Write the resource file for a certain level. void SetValue(const char* name, const char* value, EEnvLevel level = kEnvChange, const char* type = 0); Set the value of a resource or create a new resource. void SetValue(const char* name, EEnvLevel level = kEnvChange); Set the value of a resource or create a new resource.; Use this method to set a resource like, ""name=val"".; If just ""name"" is given it will be interpreted as ""name=1"". void SetValue(const char* name, Int_t value); Set or create an integer resource value. void SetValue(const char* name, Double_t value); Set or ",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:10184,Availability,error,error,10184,"uble_t dflt); Returns the double value for a resource. If the resource is not found; return the dflt value. const char * GetValue(const char* name, const char* dflt); Returns the character value for a named resouce. If the resource is; not found the dflt value is returned. TEnvRec * Lookup(const char* n); Loop over all resource records and return the one with name.; Return 0 in case name is not in the resoucre table. void Print(Option_t* option = """") const; Print all resources or the global, user or local resources separately. void PrintEnv(EEnvLevel level = kEnvAll) const; Print all resources for a certain level (global, user, local, changed). Int_t ReadFile(const char* fname, EEnvLevel level); Read and parse the resource file for a certain level.; Returns -1 on case of error, 0 in case of success. Int_t WriteFile(const char* fname, EEnvLevel level = kEnvAll); Write resourse records to file fname for a certain level. Use; level kEnvAll to write all resources. Returns -1 on case of error,; 0 in case of success. void Save(); Write the resource files for each level. The new files have the same; name as the original files. The old files are renamed to *.bak. void SaveLevel(EEnvLevel level); Write the resource file for a certain level. void SetValue(const char* name, const char* value, EEnvLevel level = kEnvChange, const char* type = 0); Set the value of a resource or create a new resource. void SetValue(const char* name, EEnvLevel level = kEnvChange); Set the value of a resource or create a new resource.; Use this method to set a resource like, ""name=val"".; If just ""name"" is given it will be interpreted as ""name=1"". void SetValue(const char* name, Int_t value); Set or create an integer resource value. void SetValue(const char* name, Double_t value); Set or create a double resource value. Bool_t IgnoreDuplicates(Bool_t ignore); If set to true, no warnings in case of duplicates are issued.; Returns previous value. TEnv(const TEnv& ). TEnv& operator=(const TEnv& ). THashL",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:300,Modifiability,config,config,300,". TEnv. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TEnv. class TEnv: public TObject. TEnv. The TEnv class reads config files, by default named .rootrc. Three; types of config files are read: global, user and local files. The; global file is $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>); the user file is $HOME/<name> and the local file is ./<name>.; By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful; in case the home directory resides on an automounted remote file; system and one wants to avoid this file system from being mounted. The format of the .rootrc file is similar to the .Xdefaults format:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$(ROOTSYS)/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. Note that the environment variables (like $ROOTSYS) need to be; surrounded in parentheses in order to be expanded. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for ",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:356,Modifiability,config,config,356,". TEnv. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TEnv. class TEnv: public TObject. TEnv. The TEnv class reads config files, by default named .rootrc. Three; types of config files are read: global, user and local files. The; global file is $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>); the user file is $HOME/<name> and the local file is ./<name>.; By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful; in case the home directory resides on an automounted remote file; system and one wants to avoid this file system from being mounted. The format of the .rootrc file is similar to the .Xdefaults format:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$(ROOTSYS)/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. Note that the environment variables (like $ROOTSYS) need to be; surrounded in parentheses in order to be expanded. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for ",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:569,Modifiability,variab,variable,569,". TEnv. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TEnv. class TEnv: public TObject. TEnv. The TEnv class reads config files, by default named .rootrc. Three; types of config files are read: global, user and local files. The; global file is $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>); the user file is $HOME/<name> and the local file is ./<name>.; By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful; in case the home directory resides on an automounted remote file; system and one wants to avoid this file system from being mounted. The format of the .rootrc file is similar to the .Xdefaults format:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$(ROOTSYS)/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. Note that the environment variables (like $ROOTSYS) need to be; surrounded in parentheses in order to be expanded. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for ",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:1758,Modifiability,variab,variables,1758,"system from being mounted. The format of the .rootrc file is similar to the .Xdefaults format:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$(ROOTSYS)/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. Note that the environment variables (like $ROOTSYS) need to be; surrounded in parentheses in order to be expanded. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for all ROOT; based applications. To add new entries to a TEnv:; TEnv env("".myfile"");; env.SetValue(""myname"",""value"");; env.SaveLevel(kEnvLocal);. All new entries will be saved in the file corresponding to the; first SaveLevel() command. If Save() is used, new entries go; into the local file by default. Function Members (Methods); public:. TEnv(const char* name = """"); virtual~TEnv(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObjec",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:1965,Modifiability,config,config,1965,"r Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$(ROOTSYS)/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. Note that the environment variables (like $ROOTSYS) need to be; surrounded in parentheses in order to be expanded. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for all ROOT; based applications. To add new entries to a TEnv:; TEnv env("".myfile"");; env.SetValue(""myname"",""value"");; env.SaveLevel(kEnvLocal);. All new entries will be saved in the file corresponding to the; first SaveLevel() command. If Save() is used, new entries go; into the local file by default. Function Members (Methods); public:. TEnv(const char* name = """"); virtual~TEnv(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; Bool_tDefined(const char* name); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject:",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:1990,Modifiability,config,config,1990,"r Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$(ROOTSYS)/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. Note that the environment variables (like $ROOTSYS) need to be; surrounded in parentheses in order to be expanded. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for all ROOT; based applications. To add new entries to a TEnv:; TEnv env("".myfile"");; env.SetValue(""myname"",""value"");; env.SaveLevel(kEnvLocal);. All new entries will be saved in the file corresponding to the; first SaveLevel() command. If Save() is used, new entries go; into the local file by default. Function Members (Methods); public:. TEnv(const char* name = """"); virtual~TEnv(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; Bool_tDefined(const char* name); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject:",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:4575,Modifiability,Inherit,InheritsFrom,4575,"t*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetRcName() const; THashList*GetTable() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetValue(const char* name, Int_t dflt); virtual Double_tGetValue(const char* name, Double_t dflt); virtual const char*GetValue(const char* name, const char* dflt); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tIgnoreDuplicates(Bool_t ignore); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual TEnvRec*Lookup(const char* n); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObje",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:4641,Modifiability,Inherit,InheritsFrom,4641,"ject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetRcName() const; THashList*GetTable() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetValue(const char* name, Int_t dflt); virtual Double_tGetValue(const char* name, Double_t dflt); virtual const char*GetValue(const char* name, const char* dflt); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tIgnoreDuplicates(Bool_t ignore); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual TEnvRec*Lookup(const char* n); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:8207,Modifiability,Inherit,Inheritance,8207,"t char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Int_tWriteFile(const char* fname, EEnvLevel level = kEnvAll). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TEnv(const TEnv&); const char*Getvalue(const char* name); TEnv&operator=(const TEnv&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Bool_tfIgnoreDupignore duplicates, don't issue warning; TStringfRcNameresource file base name; THashList*fTablehash table containing env records. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEnv(const char* name = """"); Create a resource table and read the (possibly) three resource files, i.e; $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>), $HOME/<name> and; ./<name>. ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You can; read additional user defined resource files by creating addtional TEnv; objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful in; case the home directory resides on an automounted remote file system; and one wants to avoid the file system from being mounted. ~TEnv(); Delete the resource table. const char * Getvalue(const char* name); Returns the character value for a named resouce. Int_t GetValue(const char* name, Int_t dflt); Returns the integer value for a resource. If the resource is not found; return the dflt value. Double_t GetValue(const char* name, Double_t dflt); Returns the double value for a r",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:8220,Modifiability,Inherit,Inherited,8220,"t char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Int_tWriteFile(const char* fname, EEnvLevel level = kEnvAll). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TEnv(const TEnv&); const char*Getvalue(const char* name); TEnv&operator=(const TEnv&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Bool_tfIgnoreDupignore duplicates, don't issue warning; TStringfRcNameresource file base name; THashList*fTablehash table containing env records. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEnv(const char* name = """"); Create a resource table and read the (possibly) three resource files, i.e; $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>), $HOME/<name> and; ./<name>. ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You can; read additional user defined resource files by creating addtional TEnv; objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful in; case the home directory resides on an automounted remote file system; and one wants to avoid the file system from being mounted. ~TEnv(); Delete the resource table. const char * Getvalue(const char* name); Returns the character value for a named resouce. Int_t GetValue(const char* name, Int_t dflt); Returns the integer value for a resource. If the resource is not found; return the dflt value. Double_t GetValue(const char* name, Double_t dflt); Returns the double value for a r",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:8637,Modifiability,variab,variable,8637,":. TEnv(const TEnv&); const char*Getvalue(const char* name); TEnv&operator=(const TEnv&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Bool_tfIgnoreDupignore duplicates, don't issue warning; TStringfRcNameresource file base name; THashList*fTablehash table containing env records. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEnv(const char* name = """"); Create a resource table and read the (possibly) three resource files, i.e; $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>), $HOME/<name> and; ./<name>. ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You can; read additional user defined resource files by creating addtional TEnv; objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful in; case the home directory resides on an automounted remote file system; and one wants to avoid the file system from being mounted. ~TEnv(); Delete the resource table. const char * Getvalue(const char* name); Returns the character value for a named resouce. Int_t GetValue(const char* name, Int_t dflt); Returns the integer value for a resource. If the resource is not found; return the dflt value. Double_t GetValue(const char* name, Double_t dflt); Returns the double value for a resource. If the resource is not found; return the dflt value. const char * GetValue(const char* name, const char* dflt); Returns the character value for a named resouce. If the resource is; not found the dflt value is returned. TEnvRec * Lookup(const char* n); Loop over all resource records and return the one with name.; Return 0 in case name is not in the resoucre table. void Print(Option_t* option = """") const; Print all resources or",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:772,Safety,avoid,avoid,772,". TEnv. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TEnv. class TEnv: public TObject. TEnv. The TEnv class reads config files, by default named .rootrc. Three; types of config files are read: global, user and local files. The; global file is $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>); the user file is $HOME/<name> and the local file is ./<name>.; By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful; in case the home directory resides on an automounted remote file; system and one wants to avoid this file system from being mounted. The format of the .rootrc file is similar to the .Xdefaults format:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$(ROOTSYS)/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. Note that the environment variables (like $ROOTSYS) need to be; surrounded in parentheses in order to be expanded. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for ",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:8840,Safety,avoid,avoid,8840,"sBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Bool_tfIgnoreDupignore duplicates, don't issue warning; TStringfRcNameresource file base name; THashList*fTablehash table containing env records. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEnv(const char* name = """"); Create a resource table and read the (possibly) three resource files, i.e; $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>), $HOME/<name> and; ./<name>. ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You can; read additional user defined resource files by creating addtional TEnv; objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful in; case the home directory resides on an automounted remote file system; and one wants to avoid the file system from being mounted. ~TEnv(); Delete the resource table. const char * Getvalue(const char* name); Returns the character value for a named resouce. Int_t GetValue(const char* name, Int_t dflt); Returns the integer value for a resource. If the resource is not found; return the dflt value. Double_t GetValue(const char* name, Double_t dflt); Returns the double value for a resource. If the resource is not found; return the dflt value. const char * GetValue(const char* name, const char* dflt); Returns the character value for a named resouce. If the resource is; not found the dflt value is returned. TEnvRec * Lookup(const char* n); Loop over all resource records and return the one with name.; Return 0 in case name is not in the resoucre table. void Print(Option_t* option = """") const; Print all resources or the global, user or local resources separately. void PrintEnv(EEnvLevel level = kEnvAll) const; Print all resources for a certain le",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:4426,Security,Hash,Hash,4426,"tual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetRcName() const; THashList*GetTable() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetValue(const char* name, Int_t dflt); virtual Double_tGetValue(const char* name, Double_t dflt); virtual const char*GetValue(const char* name, const char* dflt); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tIgnoreDuplicates(Bool_t ignore); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual TEnvRec*Lookup(const char* n); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); stati",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:7094,Testability,Test,TestBit,7094,"id*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual voidPrintEnv(EEnvLevel level = kEnvAll) const; virtual Int_tTObject::Read(const char* name); virtual Int_tReadFile(const char* fname, EEnvLevel level); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidSave(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSaveLevel(EEnvLevel level); virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetRcName(const char* name); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetValue(const char* name, EEnvLevel level = kEnvChange); virtual voidSetValue(const char* name, Int_t value); virtual voidSetValue(const char* name, Double_t value); virtual voidSetValue(const char* name, const char* value, EEnvLevel level = kEnvChange, const char* type = 0); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Int_tWriteFile(const char* fname, EEnvLevel level = kEnvAll).",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:7133,Testability,Test,TestBits,7133,"id*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual voidPrintEnv(EEnvLevel level = kEnvAll) const; virtual Int_tTObject::Read(const char* name); virtual Int_tReadFile(const char* fname, EEnvLevel level); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidSave(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSaveLevel(EEnvLevel level); virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetRcName(const char* name); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetValue(const char* name, EEnvLevel level = kEnvChange); virtual voidSetValue(const char* name, Int_t value); virtual voidSetValue(const char* name, Double_t value); virtual voidSetValue(const char* name, const char* value, EEnvLevel level = kEnvChange, const char* type = 0); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Int_tWriteFile(const char* fname, EEnvLevel level = kEnvAll).",MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnv.html:2627,Usability,Clear,Clear,2627,,MatchSource.WIKI,root/html534/TEnv.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnv.html
https://root.cern/root/html534/TEnvRec.html:2710,Availability,Error,Error,2710, TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abst,MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:2839,Availability,error,error,2839, TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abst,MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:2923,Availability,error,error,2923, TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abst,MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:285,Modifiability,config,config,285,". TEnvRec. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TEnvRec. class TEnvRec: public TObject. TEnv. The TEnv class reads config files, by default named .rootrc. Three; types of config files are read: global, user and local files. The; global file is $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>); the user file is $HOME/<name> and the local file is ./<name>.; By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful; in case the home directory resides on an automounted remote file; system and one wants to avoid this file system from being mounted. The format of the .rootrc file is similar to the .Xdefaults format:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$ROOTSYS/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for all ROOT; based applications. Function Members (Methods); public:. TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abst",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:341,Modifiability,config,config,341,". TEnvRec. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TEnvRec. class TEnvRec: public TObject. TEnv. The TEnv class reads config files, by default named .rootrc. Three; types of config files are read: global, user and local files. The; global file is $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>); the user file is $HOME/<name> and the local file is ./<name>.; By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful; in case the home directory resides on an automounted remote file; system and one wants to avoid this file system from being mounted. The format of the .rootrc file is similar to the .Xdefaults format:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$ROOTSYS/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for all ROOT; based applications. Function Members (Methods); public:. TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abst",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:554,Modifiability,variab,variable,554,". TEnvRec. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TEnvRec. class TEnvRec: public TObject. TEnv. The TEnv class reads config files, by default named .rootrc. Three; types of config files are read: global, user and local files. The; global file is $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>); the user file is $HOME/<name> and the local file is ./<name>.; By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful; in case the home directory resides on an automounted remote file; system and one wants to avoid this file system from being mounted. The format of the .rootrc file is similar to the .Xdefaults format:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$ROOTSYS/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for all ROOT; based applications. Function Members (Methods); public:. TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abst",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:1833,Modifiability,config,config,1833,"rmat:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$ROOTSYS/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for all ROOT; based applications. Function Members (Methods); public:. TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voi",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:1858,Modifiability,config,config,1858,"rmat:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$ROOTSYS/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for all ROOT; based applications. Function Members (Methods); public:. TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voi",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:3869,Modifiability,Inherit,InheritsFrom,3869,"cute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; EEnvLevelGetLevel() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; const char*GetType() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:3935,Modifiability,Inherit,InheritsFrom,3935,"l voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; EEnvLevelGetLevel() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; const char*GetType() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEnvRec&operator=(const",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:7118,Modifiability,Inherit,Inheritance,7118,"char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TEnvRec(const char* n, const char* v, const char* t, EEnvLevel l); voidChangeValue(const char* v, const char* t, EEnvLevel l, Bool_t append = kFALSE, Bool_t ignoredup = kFALSE); virtual Int_tCompare(const TObject* obj) const; TStringExpandValue(const char* v). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. EEnvLevelfLevelenv rec level; Bool_tfModifiedif env rec has been modified; TStringfNameenv rec key name; TStringfTypeenv rec type; TStringfValueenv rec value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEnvRec(const char* n, const char* v, const char* t, EEnvLevel l). Int_t Compare(const TObject* obj) const. void ChangeValue(const char* v, const char* t, EEnvLevel l, Bool_t append = kFALSE, Bool_t ignoredup = kFALSE). TEnvRec(); { }. const char * GetName() const; { return fName; }. const char * GetValue() const; { return fValue; }. const char * GetType() const; { return fType; }. EEnvLevel GetLevel() const; { return fLevel; }. ULong_t Hash() const; { return fName.Hash(); }. TEnv& operator=(const TEnvRec& ). » Author: Fons Rademakers 22/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:7131,Modifiability,Inherit,Inherited,7131,"char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TEnvRec(const char* n, const char* v, const char* t, EEnvLevel l); voidChangeValue(const char* v, const char* t, EEnvLevel l, Bool_t append = kFALSE, Bool_t ignoredup = kFALSE); virtual Int_tCompare(const TObject* obj) const; TStringExpandValue(const char* v). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. EEnvLevelfLevelenv rec level; Bool_tfModifiedif env rec has been modified; TStringfNameenv rec key name; TStringfTypeenv rec type; TStringfValueenv rec value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEnvRec(const char* n, const char* v, const char* t, EEnvLevel l). Int_t Compare(const TObject* obj) const. void ChangeValue(const char* v, const char* t, EEnvLevel l, Bool_t append = kFALSE, Bool_t ignoredup = kFALSE). TEnvRec(); { }. const char * GetName() const; { return fName; }. const char * GetValue() const; { return fValue; }. const char * GetType() const; { return fType; }. EEnvLevel GetLevel() const; { return fLevel; }. ULong_t Hash() const; { return fName.Hash(); }. TEnv& operator=(const TEnvRec& ). » Author: Fons Rademakers 22/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:757,Safety,avoid,avoid,757,". TEnvRec. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TEnvRec. class TEnvRec: public TObject. TEnv. The TEnv class reads config files, by default named .rootrc. Three; types of config files are read: global, user and local files. The; global file is $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>); the user file is $HOME/<name> and the local file is ./<name>.; By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful; in case the home directory resides on an automounted remote file; system and one wants to avoid this file system from being mounted. The format of the .rootrc file is similar to the .Xdefaults format:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$ROOTSYS/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for all ROOT; based applications. Function Members (Methods); public:. TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abst",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:7636,Security,Hash,Hash,7636,"char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TEnvRec(const char* n, const char* v, const char* t, EEnvLevel l); voidChangeValue(const char* v, const char* t, EEnvLevel l, Bool_t append = kFALSE, Bool_t ignoredup = kFALSE); virtual Int_tCompare(const TObject* obj) const; TStringExpandValue(const char* v). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. EEnvLevelfLevelenv rec level; Bool_tfModifiedif env rec has been modified; TStringfNameenv rec key name; TStringfTypeenv rec type; TStringfValueenv rec value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEnvRec(const char* n, const char* v, const char* t, EEnvLevel l). Int_t Compare(const TObject* obj) const. void ChangeValue(const char* v, const char* t, EEnvLevel l, Bool_t append = kFALSE, Bool_t ignoredup = kFALSE). TEnvRec(); { }. const char * GetName() const; { return fName; }. const char * GetValue() const; { return fValue; }. const char * GetType() const; { return fType; }. EEnvLevel GetLevel() const; { return fLevel; }. ULong_t Hash() const; { return fName.Hash(); }. TEnv& operator=(const TEnvRec& ). » Author: Fons Rademakers 22/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:7665,Security,Hash,Hash,7665,"char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TEnvRec(const char* n, const char* v, const char* t, EEnvLevel l); voidChangeValue(const char* v, const char* t, EEnvLevel l, Bool_t append = kFALSE, Bool_t ignoredup = kFALSE); virtual Int_tCompare(const TObject* obj) const; TStringExpandValue(const char* v). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. EEnvLevelfLevelenv rec level; Bool_tfModifiedif env rec has been modified; TStringfNameenv rec key name; TStringfTypeenv rec type; TStringfValueenv rec value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEnvRec(const char* n, const char* v, const char* t, EEnvLevel l). Int_t Compare(const TObject* obj) const. void ChangeValue(const char* v, const char* t, EEnvLevel l, Bool_t append = kFALSE, Bool_t ignoredup = kFALSE). TEnvRec(); { }. const char * GetName() const; { return fName; }. const char * GetValue() const; { return fValue; }. const char * GetType() const; { return fType; }. EEnvLevel GetLevel() const; { return fLevel; }. ULong_t Hash() const; { return fName.Hash(); }. TEnv& operator=(const TEnvRec& ). » Author: Fons Rademakers 22/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:5888,Testability,Test,TestBit,5888,"st; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEnvRec&operator=(const TEnvRec&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:5927,Testability,Test,TestBits,5927,"st; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEnvRec&operator=(const TEnvRec&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEnvRec.html:2227,Usability,Clear,Clear,2227, TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abst,MatchSource.WIKI,root/html534/TEnvRec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEnvRec.html
https://root.cern/root/html534/TEST_Index.html:11,Testability,TEST,TEST,11,. Index of TEST. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » TEST. Index of TEST; Class Index. TMVA::Event ; TMVA::kNN::Event . » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/TEST_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEST_Index.html
https://root.cern/root/html534/TEST_Index.html:92,Testability,TEST,TEST,92,. Index of TEST. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » TEST. Index of TEST; Class Index. TMVA::Event ; TMVA::kNN::Event . » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/TEST_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEST_Index.html
https://root.cern/root/html534/TEST_Index.html:107,Testability,TEST,TEST,107,. Index of TEST. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » TEST. Index of TEST; Class Index. TMVA::Event ; TMVA::kNN::Event . » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/TEST_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEST_Index.html
https://root.cern/root/html534/TEve3DProjection.html:5634,Modifiability,Inherit,Inheritance,5634,"};. public:. static Float_tTEveProjection::fgEpsresolution of projected points; static Float_tTEveProjection::fgEpsSqrsquare of resolution of projected points. protected:. TEveVectorTEveProjection::fCentercenter of distortionprivate:; boolTEveProjection::fDisplaceOrigindisplace point before projection; Float_tTEveProjection::fDistortiondistortion; Float_tTEveProjection::fFixRradius from which scaling remains constant; Float_tTEveProjection::fFixZz-coordinate from which scaling remains constant; TEveProjection::EGeoMode_eTEveProjection::fGeoModestrategy of polygon projection (what to try first); Float_tTEveProjection::fMaxTrackStepmaximum distance between two points on a track; TStringTEveProjection::fNamename; Float_tTEveProjection::fPastFixRFacrelative scaling factor beyond fFixR as 10^x; Float_tTEveProjection::fPastFixRScalerelative scaling beyond fFixR; Float_tTEveProjection::fPastFixZFacrelative scaling factor beyond fFixZ as 10^x; Float_tTEveProjection::fPastFixZScalerelative scaling beyond fFixZ; vector<TEveProjection::PreScaleEntry_t,allocator<TEveProjection::PreScaleEntry_t> >TEveProjection::fPreScales[3]scaling before the distortion; Float_tTEveProjection::fScaleRscale factor to keep projected radius at fFixR fixed; Float_tTEveProjection::fScaleZscale factor to keep projected z-coordinate at fFixZ fixed; TEveProjection::EPType_eTEveProjection::fTypetype; Bool_tTEveProjection::fUsePreScaleuse pre-scaling. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEve3DProjection(); Constructor. void ProjectPoint(Float_t& x, Float_t& y, Float_t& z, Float_t d, TEveProjection::EPProc_e proc = kPP_Full); Project point. Bool_t Is2D() const. Bool_t Is3D() const. TEve3DProjection(). virtual ~TEve3DProjection(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEve3DProjection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEve3DProjection.html
https://root.cern/root/html534/TEve3DProjection.html:5647,Modifiability,Inherit,Inherited,5647,"};. public:. static Float_tTEveProjection::fgEpsresolution of projected points; static Float_tTEveProjection::fgEpsSqrsquare of resolution of projected points. protected:. TEveVectorTEveProjection::fCentercenter of distortionprivate:; boolTEveProjection::fDisplaceOrigindisplace point before projection; Float_tTEveProjection::fDistortiondistortion; Float_tTEveProjection::fFixRradius from which scaling remains constant; Float_tTEveProjection::fFixZz-coordinate from which scaling remains constant; TEveProjection::EGeoMode_eTEveProjection::fGeoModestrategy of polygon projection (what to try first); Float_tTEveProjection::fMaxTrackStepmaximum distance between two points on a track; TStringTEveProjection::fNamename; Float_tTEveProjection::fPastFixRFacrelative scaling factor beyond fFixR as 10^x; Float_tTEveProjection::fPastFixRScalerelative scaling beyond fFixR; Float_tTEveProjection::fPastFixZFacrelative scaling factor beyond fFixZ as 10^x; Float_tTEveProjection::fPastFixZScalerelative scaling beyond fFixZ; vector<TEveProjection::PreScaleEntry_t,allocator<TEveProjection::PreScaleEntry_t> >TEveProjection::fPreScales[3]scaling before the distortion; Float_tTEveProjection::fScaleRscale factor to keep projected radius at fFixR fixed; Float_tTEveProjection::fScaleZscale factor to keep projected z-coordinate at fFixZ fixed; TEveProjection::EPType_eTEveProjection::fTypetype; Bool_tTEveProjection::fUsePreScaleuse pre-scaling. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEve3DProjection(); Constructor. void ProjectPoint(Float_t& x, Float_t& y, Float_t& z, Float_t d, TEveProjection::EPProc_e proc = kPP_Full); Project point. Bool_t Is2D() const. Bool_t Is3D() const. TEve3DProjection(). virtual ~TEve3DProjection(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEve3DProjection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEve3DProjection.html
https://root.cern/root/html534/TEve3DProjection.html:1042,Usability,Clear,ClearPreScales,1042," TEve3DProjection(); TEve3DProjection(const TEve3DProjection&); virtual~TEve3DProjection(); virtual Bool_tTEveProjection::AcceptSegment(TEveVector&, TEveVector&, Float_t) const; voidTEveProjection::AddPreScaleEntry(Int_t coord, Float_t max_val, Float_t scale); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Float_t eps_sqr); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Bool_t project_result = kFALSE, Float_t depth = 0); voidTEveProjection::ChangePreScaleEntry(Int_t coord, Int_t entry, Float_t new_scale); static TClass*Class(); voidTEveProjection::ClearPreScales(); Bool_tTEveProjection::GetDisplaceOrigin() const; Float_tTEveProjection::GetDistortion() const; Float_tTEveProjection::GetFixR() const; Float_tTEveProjection::GetFixZ() const; TEveProjection::EGeoMode_eTEveProjection::GetGeoMode() const; Float_tTEveProjection::GetLimit(Int_t i, Bool_t pos); Float_tTEveProjection::GetMaxTrackStep() const; const Char_t*TEveProjection::GetName() const; TEveVectorTEveProjection::GetOrthogonalCenter(int idx, TEveVector& out); Float_tTEveProjection::GetPastFixRFac() const; Float_tTEveProjection::GetPastFixZFac() const; virtual Float_t*TEveProjection::GetProjectedCenter(); virtual Float_tTEveProjection::GetScreenVal(Int_t ax, Float_t value); Float_tTEveProjection::GetScreenVal(Int_t i, Float_t x, TEveVector& dirVec, TEveVector& oCenter); TEveProjection::EPType_eTEveProjection::GetType() const; Bool_tTEveProjection::GetUsePreScale() const; virtual Float_tTEveProjection::GetValForScreenPos(Int_t ax, Floa",MatchSource.WIKI,root/html534/TEve3DProjection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEve3DProjection.html
https://root.cern/root/html534/TEveArrow.html:4451,Availability,Error,Error,4451,"al voidTEveElement::DestroyListSubTree(TGListTree* ltree, TGListTreeItem* parent); virtual voidTEveElement::DestroyMainTrans(); virtual voidTEveElement::DestroyOrWarn(); voidTEveElement::DisableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildr",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:4580,Availability,error,error,4580,"irtual voidTEveElement::DestroyOrWarn(); voidTEveElement::DisableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGLis",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:4664,Availability,error,error,4664," rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree, T",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:15176,Deployability,update,update,15176,"ildren(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); voidSetTubeR(Float_t x); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:15279,Deployability,update,update,15279,"ildren(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); voidSetTubeR(Float_t x); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:8932,Modifiability,Inherit,InheritsFrom,8932,"::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; Float_tGetTubeR() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveVectorGetVector(); TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(v",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:8998,Modifiability,Inherit,InheritsFrom,8998,"onst; Float_tGetTubeR() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveVectorGetVector(); TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* p",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:18301,Modifiability,variab,variable,18301,",max), Z(min,max); UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tfColor; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Float_tfConeL; Float_tfConeR; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Int_tfDrawQualityNumber of segments of circles.; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveVectorfOrigin; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Float_tfTubeR; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveVectorfVector; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveEl",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:18439,Modifiability,variab,variable,18439,"ditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tfColor; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Float_tfConeL; Float_tfConeR; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Int_tfDrawQualityNumber of segments of circles.; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveVectorfOrigin; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Float_tfTubeR; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveVectorfVector; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function docume",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:19348,Modifiability,Inherit,Inheritance,19348,"on matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveVectorfOrigin; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Float_tfTubeR; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveVectorfVector; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveArrow(Float_t xVec = 0, Float_t yVec = 0, Float_t zVec = 1, Float_t xOrg = 0, Float_t yOrg = 0, Float_t zOrg = 0); Constructor.; Org - starting point.; Vec - vector from start to end of the arrow. void ComputeBBox(); Compute bounding-box of the arrow. void Paint(Option_t* option = """"); Paint object.; This is for direct rendering (using TEveArrowGL class). TEveArrow(const TEveArrow& ). TEveArrow& operator=(const TEveArrow& ). virtual ~TEveArrow(); {}. TObject* GetObject(const TEveException& ) const; { const TObject* obj = this; return const_cast<TObject*>(obj); }. void SetTubeR(Float_t x); { fTubeR = x; }. void SetConeR(Float_t x); { fConeR = x; }. void SetConeL(Float_t x); { fConeL = x; }. Float_t GetTubeR() const; { return fTubeR; }. Float_t GetConeR() const; { return fConeR; }. Float_t GetConeL() const; { return fConeL; }. TEveVector GetVector(); { return fVector; }. TEveVector GetOrigin(); { return fOrigin; }. Int_t GetDrawQuali",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:19361,Modifiability,Inherit,Inherited,19361,"on matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveVectorfOrigin; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Float_tfTubeR; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveVectorfVector; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveArrow(Float_t xVec = 0, Float_t yVec = 0, Float_t zVec = 1, Float_t xOrg = 0, Float_t yOrg = 0, Float_t zOrg = 0); Constructor.; Org - starting point.; Vec - vector from start to end of the arrow. void ComputeBBox(); Compute bounding-box of the arrow. void Paint(Option_t* option = """"); Paint object.; This is for direct rendering (using TEveArrowGL class). TEveArrow(const TEveArrow& ). TEveArrow& operator=(const TEveArrow& ). virtual ~TEveArrow(); {}. TObject* GetObject(const TEveException& ) const; { const TObject* obj = this; return const_cast<TObject*>(obj); }. void SetTubeR(Float_t x); { fTubeR = x; }. void SetConeR(Float_t x); { fConeR = x; }. void SetConeL(Float_t x); { fConeL = x; }. Float_t GetTubeR() const; { return fTubeR; }. Float_t GetConeR() const; { return fConeR; }. Float_t GetConeL() const; { return fConeL; }. TEveVector GetVector(); { return fVector; }. TEveVector GetOrigin(); { return fOrigin; }. Int_t GetDrawQuali",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:8457,Security,Hash,Hash,8457,"n_t*TObject::GetOption() const; TEveVectorGetOrigin(); Int_tTEveElement::GetParentIgnoreCnt() const; virtual TObject*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; Float_tGetTubeR() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveVectorGetVector(); TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElem",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:1353,Testability,Assert,AssertBBox,1353," TEveArrow(Float_t xVec = 0, Float_t yVec = 0, Float_t zVec = 1, Float_t xOrg = 0, Float_t yOrg = 0, Float_t zOrg = 0); virtual~TEveArrow(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassNa",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:14811,Testability,Test,TestBit,14811,"ildren(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); voidSetTubeR(Float_t x); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:14850,Testability,Test,TestBits,14850,"ildren(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); voidSetTubeR(Float_t x); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:14895,Testability,Test,TestCSCBits,14895,"ildren(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); voidSetTubeR(Float_t x); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:15710,Testability,Assert,AssertBBoxExtents,15710,"f_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var). protected:. virtual voidTEveElement::AnnihilateRecursively(); voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.005); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1e6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual voidTEveElement::PreDeleteElement(); virtual voidTEveElement::RemoveElementsInternal(); static const char*TEveElement::ToString(Bool_t b). private:. TEveArrow(const TEveArrow&); TEveArrow&operator=(const TEveArrow&). Data Members; public:. enum TEveElement::ECompoundSelectionColorBits { kCSCBImplySelectAllChildren; kCSCBTakeAnyParentAsMaster; kCSCBApplyMainColorToAllChildren; kCSCBApplyMainColorToMatchingChildren; kCSCBApplyMainTransparencyToAllChildren; kCSCBApplyMainTransparencyToMatchingChildren; };; enum TEveElement::EDestru",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:2033,Usability,Clear,Clear,2033,"rent(TEveElement* re); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrow.html:2088,Usability,Clear,ClearStamps,2088,"Char_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImplySelectAllChildren(); voidTEve",MatchSource.WIKI,root/html534/TEveArrow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrow.html
https://root.cern/root/html534/TEveArrowEditor.html:4396,Availability,Error,Error,4396,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBa",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:4525,Availability,error,error,4525,"* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const;",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:4609,Availability,error,error,4609,"t(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const; virtual TDNDData*TGFrame::GetDNDData(Atom_t); virtual Int_tTGFrame::GetDragType() c",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:17468,Availability,mask,mask,17468,":EEditMode { kEditEnable; kEditDisable; kEditDisableEvents; kEditDisableGrab; kEditDisableLayout; kEditDisableResize; kEditDisableHeight; kEditDisableWidth; kEditDisableBtnEnable; kEditDisableKeyEnable; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tTGedFrame::fAvoidSignalflag for executing slots; Pixel_tTGFrame::fBackgroundframe background color; Int_tTGFrame::fBorderWidthframe border width; TGClient*TGObject::fClientConnection to display server; TEveGValuator*fConeL; TEveGValuator*fConeR; Int_tTGFrame::fDNDStateEDNDFlags; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; UInt_tTGFrame::fEventMaskcurrenty active event mask; TList*TGedFrame::fExtraTabsaddtional tabs in ged editor; TGFrameElement*TGFrame::fFEpointer to frame element; TGedEditor*TGedFrame::fGedEditormanager of this frame; UInt_tTGFrame::fHeightframe height; Handle_tTGObject::fIdX11/Win32 Window identifier; Bool_tTGedFrame::fInitinit flag for setting signals/slots; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TList*TGCompositeFrame::fListcontainer of frame elements; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TEveArrow*fMModel object.; Bool_tTGCompositeFrame::fMapSubwindowskTRUE - map subwindows; UInt_tTGFrame::fMaxHeightmaximal frame height; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TClass*TGedFrame::fModelClassclass corresponding to instantiated GedFrame; Int_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindo",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:15090,Deployability,Update,Update,15090,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:10702,Integrability,Message,Message,10702,"Frame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTGCompositeFrame::Print(Option_t* option = """") const; virtual voidTGFrame::",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:9247,Modifiability,Inherit,InheritsFrom,9247,"irtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:9313,Modifiability,Inherit,InheritsFrom,9313," Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:19894,Modifiability,Inherit,Inheritance,19894,"window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TEveGValuator*fTubeR; TEveGTriVecValuator*fVector; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveArrowEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoTubeR(); Slot for TubeR. void DoConeR(); Slot for ConeR. void DoConeL(); Slot for ConeL. void DoVertex(); Slot for origin and vector. TEveArrowEditor(const TEveArrowEditor& ). TEveArrowEditor& operator=(const TEveArrowEditor& ). virtual ~TEveArrowEditor(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:19907,Modifiability,Inherit,Inherited,19907,"window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TEveGValuator*fTubeR; TEveGTriVecValuator*fVector; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveArrowEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoTubeR(); Slot for TubeR. void DoConeR(); Slot for ConeR. void DoConeL(); Slot for ConeL. void DoVertex(); Slot for origin and vector. TEveArrowEditor(const TEveArrowEditor& ). TEveArrowEditor& operator=(const TEveArrowEditor& ). virtual ~TEveArrowEditor(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:8957,Security,Hash,Hash,8957,"t_t, Int_t); virtual Bool_tTGCompositeFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWi",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:14856,Testability,Test,TestBit,14856,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:14895,Testability,Test,TestBits,14895,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowEditor.html:1584,Usability,Clear,Clear,1584,"ar* method) const; virtual Bool_tTGedFrame::AcceptModel(TObject*); virtual voidTGFrame::Activate(Bool_t); virtual voidTGedFrame::ActivateBaseClassEditors(TClass* cl); virtual voidTGedFrame::AddExtraTab(TGedFrame::TGedSubFrame* sf); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; virtual TGVerticalFrame*TGedFrame::CreateEditorTabSubFrame(const char* name); virtual voidTGFrame::Delete(Option_t* = """"); virtual voidTGFrame::DeleteWindow(); virtual voidTQObject::Destroyed()SIGNAL ; virtual voidTGWindow::DestroySubwindows(); virtual voidTGWindow::Des",MatchSource.WIKI,root/html534/TEveArrowEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowEditor.html
https://root.cern/root/html534/TEveArrowGL.html:2559,Deployability,Update,UpdateBoundingBox,2559,"DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTGLLogicalShape::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTGLLogicalShape::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveArrowGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowGL.html
https://root.cern/root/html534/TEveArrowGL.html:2601,Deployability,Update,UpdateBoundingBoxesOfPhysicals,2601,"DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTGLLogicalShape::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTGLLogicalShape::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveArrowGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowGL.html
https://root.cern/root/html534/TEveArrowGL.html:4076,Modifiability,Inherit,Inheritance,4076,"p); voidTGLObject::SetAxisAlignedBBox(Float_t xmin, Float_t xmax, Float_t ymin, Float_t ymax, Float_t zmin, Float_t zmax); Bool_tTGLObject::SetModelCheckClass(TObject* obj, TClass* cls). private:. TEveArrowGL(const TEveArrowGL&); TEveArrowGL&operator=(const TEveArrowGL&). Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveArrow*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveArrowGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render with OpenGL. TEveArrowGL(const TEveArrowGL& ). TEveArrowGL& operator=(const TEveArrowGL& ). virtual ~TEveArrowGL(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveArrowGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowGL.html
https://root.cern/root/html534/TEveArrowGL.html:4089,Modifiability,Inherit,Inherited,4089,"p); voidTGLObject::SetAxisAlignedBBox(Float_t xmin, Float_t xmax, Float_t ymin, Float_t ymax, Float_t zmin, Float_t zmax); Bool_tTGLObject::SetModelCheckClass(TObject* obj, TClass* cls). private:. TEveArrowGL(const TEveArrowGL&); TEveArrowGL&operator=(const TEveArrowGL&). Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveArrow*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveArrowGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render with OpenGL. TEveArrowGL(const TEveArrowGL& ). TEveArrowGL& operator=(const TEveArrowGL& ). virtual ~TEveArrowGL(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveArrowGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowGL.html
https://root.cern/root/html534/TEveArrowGL.html:1892,Performance,cache,cached,1892,"DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTGLLogicalShape::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTGLLogicalShape::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveArrowGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveArrowGL.html
https://root.cern/root/html534/TEveBox.html:5208,Availability,Error,Error,5208,"istTreeItem* parent); virtual voidTEveElement::DestroyMainTrans(); virtual voidTEveElement::DestroyOrWarn(); voidTEveElement::DisableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildr",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:5337,Availability,error,error,5337,"ableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); static Int_tTEveShape::FindConvexHull(const TEveShape:",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:5421,Availability,error,error,5421,"al Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); static Int_tTEveShape::FindConvexHull(const TEveShape::vVector2_t& pin, TEveShape::vVector2_t& pout, TEveElement* caller = 0); virtual TEv",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:17388,Deployability,update,update,17388,"Children(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidSetVertex(Int_t i, const Float_t* v); voidSetVertex(Int_t i, Float_t x, Float_t y, Float_t z); voidSetVertices(const Float_t* vs); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:17491,Deployability,update,update,17491,"Children(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidSetVertex(Int_t i, const Float_t* v); voidSetVertex(Int_t i, Float_t x, Float_t y, Float_t z); voidSetVertices(const Float_t* vs); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:10154,Modifiability,Inherit,InheritsFrom,10154,"TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; const Float_t*GetVertex(Int_t i) const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTEveShape::IsBoxOrientationConsistentEv(const TEveVector* box); static Bool_tTEveShape::IsBoxOrientationConsistentFv(const Float_t** box); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char*",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:10220,Modifiability,Inherit,InheritsFrom,10220,"st; void*TEveElement::GetUserData() const; const Float_t*GetVertex(Int_t i) const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTEveShape::IsBoxOrientationConsistentEv(const TEveVector* box); static Bool_tTEveShape::IsBoxOrientationConsistentFv(const Float_t** box); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const;",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:20810,Modifiability,variab,variable,20810,"in transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserD",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:20948,Modifiability,variab,variable,20948,"n.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Float_tfVertices[8][3]; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query Vi",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:21962,Modifiability,Inherit,Inheritance,21962,"ncyMain-transparency variable.; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Float_tfVertices[8][3]; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBox(const char* n = ""TEveBox"", const char* t = """"); Constructor. ~TEveBox(); Destructor. void SetVertex(Int_t i, Float_t x, Float_t y, Float_t z); Set vertex 'i'. void SetVertex(Int_t i, const Float_t* v); Set vertex 'i'. void SetVertices(const Float_t* vs); Set vertices. void ComputeBBox(); Compute bounding-box of the data. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, return TEveBoxProjected class. TEveBox(const TEveBox& ). TEveBox& operator=(const TEveBox& ). const Float_t* GetVertex(Int_t i) const; { return fVertices[i]; }. » Author: Matevz Tadel, 2010 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:21975,Modifiability,Inherit,Inherited,21975,"ncyMain-transparency variable.; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Float_tfVertices[8][3]; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBox(const char* n = ""TEveBox"", const char* t = """"); Constructor. ~TEveBox(); Destructor. void SetVertex(Int_t i, Float_t x, Float_t y, Float_t z); Set vertex 'i'. void SetVertex(Int_t i, const Float_t* v); Set vertex 'i'. void SetVertices(const Float_t* vs); Set vertices. void ComputeBBox(); Compute bounding-box of the data. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, return TEveBoxProjected class. TEveBox(const TEveBox& ). TEveBox& operator=(const TEveBox& ). const Float_t* GetVertex(Int_t i) const; { return fVertices[i]; }. » Author: Matevz Tadel, 2010 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:9625,Security,Hash,Hash,9625,":GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTEveElement::GetParentIgnoreCnt() const; virtual TObject*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; const Float_t*GetVertex(Int_t i) const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTEveShape::IsBoxOrientationConsistentEv(const TEveVector* box); static Bool_tTEveShape::IsBoxOrientationConsistentFv(const Float_t** box); virtual Bool_tTObject::IsEqual(const TObject* ob",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:1795,Testability,Assert,AssertBBox,1795,"; virtual~TEveBox(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTEveElementList::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; static voidTEveShape::CheckAndFixBoxOrientationEv(TEveVector* box); static voidTEveShape::CheckAndFixBoxOrientationFv(Float_t** box); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual ",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:17023,Testability,Test,TestBit,17023,"Children(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidSetVertex(Int_t i, const Float_t* v); voidSetVertex(Int_t i, Float_t x, Float_t y, Float_t z); voidSetVertices(const Float_t* vs); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:17062,Testability,Test,TestBits,17062,"Children(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidSetVertex(Int_t i, const Float_t* v); voidSetVertex(Int_t i, Float_t x, Float_t y, Float_t z); voidSetVertices(const Float_t* vs); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:17107,Testability,Test,TestCSCBits,17107,"Children(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidSetVertex(Int_t i, const Float_t* v); voidSetVertex(Int_t i, Float_t x, Float_t y, Float_t z); voidSetVertices(const Float_t* vs); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:17920,Testability,Assert,AssertBBoxExtents,17920,"Def_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var). protected:. virtual voidTEveElement::AnnihilateRecursively(); voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.005); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1e6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual voidTEveElement::PreDeleteElement(); virtual voidTEveElement::RemoveElementsInternal(); static const char*TEveElement::ToString(Bool_t b). private:. TEveBox(const TEveBox&); TEveBox&operator=(const TEveBox&). Data Members; public:. enum TEveElement::ECompoundSelectionColorBits { kCSCBImplySelectAllChildren; kCSCBTakeAnyParentAsMaster; kCSCBApplyMainColorToAllChildren; kCSCBApplyMainColorToMatchingChildren; kCSCBApplyMainTransparencyToAllChildren; kCSCBApplyMainTransparencyToMatchingChildren; };; enum TEveElement::EDestruct { kNo",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:2672,Usability,Clear,Clear,2672,"* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; static voidTEveShape::CheckAndFixBoxOrientationEv(TEveVector* box); static voidTEveShape::CheckAndFixBoxOrientationFv(Float_t** box); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElementList*TEveElementList::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveShape::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); vo",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:2731,Usability,Clear,ClearProjectedList,2731,", const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; static voidTEveShape::CheckAndFixBoxOrientationEv(TEveVector* box); static voidTEveShape::CheckAndFixBoxOrientationFv(Float_t** box); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElementList*TEveElementList::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveShape::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidT",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBox.html:2778,Usability,Clear,ClearStamps,2778,"*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; static voidTEveShape::CheckAndFixBoxOrientationEv(TEveVector* box); static voidTEveShape::CheckAndFixBoxOrientationFv(Float_t** box); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElementList*TEveElementList::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveShape::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImplySelectAllChildren(); vo",MatchSource.WIKI,root/html534/TEveBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBox.html
https://root.cern/root/html534/TEveBoxGL.html:2513,Deployability,Update,UpdateBoundingBox,2513,"ass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tIgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTGLLogicalShape::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTGLLogicalShape::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveBoxGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxGL.html
https://root.cern/root/html534/TEveBoxGL.html:2555,Deployability,Update,UpdateBoundingBoxesOfPhysicals,2555,"ass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tIgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTGLLogicalShape::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTGLLogicalShape::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveBoxGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxGL.html
https://root.cern/root/html534/TEveBoxGL.html:4168,Modifiability,Inherit,Inheritance,4168,"None; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveBox*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void RenderOutline(const Float_t p[][3]) const; Render box with without normals.; To be used with lightning off, for outline. void RenderBoxStdNorm(const Float_t p[][3]) const; Render box with standard axis-aligned normals. void RenderBoxAutoNorm(const Float_t p[][3]) const; Render box, calculate normals on the fly from first three points. void Draw(TGLRnrCtx& rnrCtx) const; Render with OpenGL. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render with OpenGL, create display-list. TEveBoxGL(const TEveBoxGL& ). TEveBoxGL& operator=(const TEveBoxGL& ). virtual ~TEveBoxGL(); {}. Bool_t IgnoreSizeForOfInterest() const; { return kTRUE; }. » Author: Matevz Tadel, 2010 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatic",MatchSource.WIKI,root/html534/TEveBoxGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxGL.html
https://root.cern/root/html534/TEveBoxGL.html:4181,Modifiability,Inherit,Inherited,4181,"None; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveBox*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void RenderOutline(const Float_t p[][3]) const; Render box with without normals.; To be used with lightning off, for outline. void RenderBoxStdNorm(const Float_t p[][3]) const; Render box with standard axis-aligned normals. void RenderBoxAutoNorm(const Float_t p[][3]) const; Render box, calculate normals on the fly from first three points. void Draw(TGLRnrCtx& rnrCtx) const; Render with OpenGL. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render with OpenGL, create display-list. TEveBoxGL(const TEveBoxGL& ). TEveBoxGL& operator=(const TEveBoxGL& ). virtual ~TEveBoxGL(); {}. Bool_t IgnoreSizeForOfInterest() const; { return kTRUE; }. » Author: Matevz Tadel, 2010 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatic",MatchSource.WIKI,root/html534/TEveBoxGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxGL.html
https://root.cern/root/html534/TEveBoxGL.html:1846,Performance,cache,cached,1846,"ass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tIgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTGLLogicalShape::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTGLLogicalShape::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveBoxGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxGL.html
https://root.cern/root/html534/TEveBoxProjected.html:4883,Availability,Error,Error,4883,"istTreeItem* parent); virtual voidTEveElement::DestroyMainTrans(); virtual voidTEveElement::DestroyOrWarn(); voidTEveElement::DisableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildr",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:5012,Availability,error,error,5012,"ableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); static Int_tTEveShape::FindConvexHull(const TEveShape:",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:5096,Availability,error,error,5096,"al Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); static Int_tTEveShape::FindConvexHull(const TEveShape::vVector2_t& pin, TEveShape::vVector2_t& pout, TEveElement* caller = 0); virtual TEv",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:17445,Deployability,update,update,17445,"hildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:17548,Deployability,update,update,17548,"hildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:22919,Deployability,Update,UpdateProjection,22919,"Render children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tfgDebugCornerPoints. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxProjected(const char* n = ""TEveBoxProjected"", const char* t = """"); Constructor. ~TEveBoxProjected(); Destructor. void ComputeBBox(); Compute bounding-box, virtual from TAttBBox. void SetDepthLocal(Float_t d); This is virtual method from base-class TEveProjected. void SetProjection(TEveProjectionManager* mng, TEveProjectable* model); This is virtual method from base-class TEveProjected. void UpdateProjection(); Re-project the box. Projects all points and finds 2D convex-hull. The only issue is with making sure that initial conditions for; hull-search are reasonable -- that is, there are no overlaps with the; first point. Bool_t GetDebugCornerPoints(); Get state of fgDebugCornerPoints static. void SetDebugCornerPoints(Bool_t d); Set state of fgDebugCornerPoints static.; When this is true, points will be drawn at the corners of; computed convex hull. TEveBox& operator=(const TEveBoxProjected& ). TEveBoxProjected(const TEveBoxProjected& ). TEveElement* GetProjectedAsElement(); { return this; }. » Author: Matevz Tadel, 2010 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:10023,Modifiability,Inherit,InheritsFrom,10023,"ourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTEveShape::IsBoxOrientationConsistentEv(const TEveVector* box); static Bool_tTEveShape::IsBoxOrientationConsistentFv(const Float_t** box); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char*",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:10089,Modifiability,Inherit,InheritsFrom,10089,"virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTEveShape::IsBoxOrientationConsistentEv(const TEveVector* box); static Bool_tTEveShape::IsBoxOrientationConsistentFv(const Float_t** box); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const;",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:21119,Modifiability,variab,variable,21119,"assClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; vector<TEveVector2T<float> >fDebugPoints; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; vector<TEveVector2T<float> >fPoints; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStrin",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:21257,Modifiability,variab,variable,21257,"ompoundCompound this object belongs to.; vector<TEveVector2T<float> >fDebugPoints; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; vector<TEveVector2T<float> >fPoints; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and contro",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:22441,Modifiability,Inherit,Inheritance,22441,"IgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; vector<TEveVector2T<float> >fPoints; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tfgDebugCornerPoints. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxProjected(const char* n = ""TEveBoxProjected"", const char* t = """"); Constructor. ~TEveBoxProjected(); Destructor. void ComputeBBox(); Compute bounding-box, virtual from TAttBBox. void SetDepthLocal(Float_t d); This is virtual method from base-class TEveProjected. void SetProjection(TEveProjectionManager* mng, TEveProjectable* model); This is virtual method from base-class TEveProjected. void UpdateProjection(); Re-project the box. Projects all points and finds 2D convex-hull. The only issue is with making sure that initial conditions for; hull-search are reasonable -- that is, there are no overlaps with the; first point. Bool_t GetDebugCornerPoints(); Get state of fgDebugCornerPoints static. void SetDebugCornerPoints(Bool_t d); Set state of fgDebugCornerPoints static.; When this is true, points will be drawn at the corners of; computed convex hull. TEveBox& operator=(const TEveBoxProjected& ). TEveBoxProjected(const TEveBoxProjec",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:22454,Modifiability,Inherit,Inherited,22454,"IgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; vector<TEveVector2T<float> >fPoints; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tfgDebugCornerPoints. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxProjected(const char* n = ""TEveBoxProjected"", const char* t = """"); Constructor. ~TEveBoxProjected(); Destructor. void ComputeBBox(); Compute bounding-box, virtual from TAttBBox. void SetDepthLocal(Float_t d); This is virtual method from base-class TEveProjected. void SetProjection(TEveProjectionManager* mng, TEveProjectable* model); This is virtual method from base-class TEveProjected. void UpdateProjection(); Re-project the box. Projects all points and finds 2D convex-hull. The only issue is with making sure that initial conditions for; hull-search are reasonable -- that is, there are no overlaps with the; first point. Bool_t GetDebugCornerPoints(); Get state of fgDebugCornerPoints static. void SetDebugCornerPoints(Bool_t d); Set state of fgDebugCornerPoints static.; When this is true, points will be drawn at the corners of; computed convex hull. TEveBox& operator=(const TEveBoxProjected& ). TEveBoxProjected(const TEveBoxProjec",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:9494,Security,Hash,Hash,9494,"t; Int_tTEveElement::GetParentIgnoreCnt() const; TEveProjectable*TEveProjected::GetProjectable() const; virtual TEveElement*GetProjectedAsElement(); virtual TObject*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTEveShape::IsBoxOrientationConsistentEv(const TEveVector* box); static Bool_tTEveShape::IsBoxOrientationConsistentFv(const Float_t** box); virtual Bool_tTObject::IsEqual(const TObject* ob",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:1470,Testability,Assert,AssertBBox,1470,"~TEveBoxProjected(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTEveElementList::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; static voidTEveShape::CheckAndFixBoxOrientationEv(TEveVector* box); static voidTEveShape::CheckAndFixBoxOrientationFv(Float_t** box); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual ",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:16944,Testability,Test,TestBit,16944,"hildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:16983,Testability,Test,TestBits,16983,"hildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:17028,Testability,Test,TestCSCBits,17028,"hildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:17977,Testability,Assert,AssertBBoxExtents,17977,"onst; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var). protected:. virtual voidTEveElement::AnnihilateRecursively(); voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.005); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1e6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual voidTEveElement::PreDeleteElement(); virtual voidTEveElement::RemoveElementsInternal(); voidTEveProjected::SetDepthCommon(Float_t d, TEveElement* el, Float_t* bbox); virtual voidSetDepthLocal(Float_t d); static const char*TEveElement::ToString(Bool_t b). private:. TEveBoxProjected(const TEveBoxProjected&); TEveBoxProjected&operator=(const TEveBoxProjected&). Data Members; public:. enum TEveElement::ECompoundSelectionColorBits { kCSCBImplySelectAllChildren; kCSCBTakeAnyParentAsMaster; kCSCBApplyMainColorToAllChildren; kCSCBApplyM",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:2347,Usability,Clear,Clear,2347,"* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; static voidTEveShape::CheckAndFixBoxOrientationEv(TEveVector* box); static voidTEveShape::CheckAndFixBoxOrientationFv(Float_t** box); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElementList*TEveElementList::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveShape::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); vo",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:2406,Usability,Clear,ClearProjectedList,2406,", const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; static voidTEveShape::CheckAndFixBoxOrientationEv(TEveVector* box); static voidTEveShape::CheckAndFixBoxOrientationFv(Float_t** box); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElementList*TEveElementList::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveShape::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidT",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjected.html:2453,Usability,Clear,ClearStamps,2453,"*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; static voidTEveShape::CheckAndFixBoxOrientationEv(TEveVector* box); static voidTEveShape::CheckAndFixBoxOrientationFv(Float_t** box); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElementList*TEveElementList::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveShape::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImplySelectAllChildren(); vo",MatchSource.WIKI,root/html534/TEveBoxProjected.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjected.html
https://root.cern/root/html534/TEveBoxProjectedGL.html:2567,Deployability,Update,UpdateBoundingBox,2567,"ass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tIgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTGLLogicalShape::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTGLLogicalShape::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveBoxProjectedGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjectedGL.html
https://root.cern/root/html534/TEveBoxProjectedGL.html:2609,Deployability,Update,UpdateBoundingBoxesOfPhysicals,2609,"ass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tIgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTGLLogicalShape::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTGLLogicalShape::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveBoxProjectedGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjectedGL.html
https://root.cern/root/html534/TEveBoxProjectedGL.html:4155,Modifiability,Inherit,Inheritance,4155," enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveBoxProjected*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxProjectedGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void RenderPoints(Int_t mode) const; Render points with given GL mode.; This is used for polygon and outline drawing. void Draw(TGLRnrCtx& rnrCtx) const; Render with OpenGL. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render with OpenGL, create display-list. TEveBoxGL& operator=(const TEveBoxProjectedGL& ). Bool_t IgnoreSizeForOfInterest() const; { return kTRUE; }. TEveBoxProjectedGL(const TEveBoxProjectedGL& ). virtual ~TEveBoxProjectedGL(); {}. » Author: Matevz Tadel, 2010 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveBoxProjectedGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjectedGL.html
https://root.cern/root/html534/TEveBoxProjectedGL.html:4168,Modifiability,Inherit,Inherited,4168," enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveBoxProjected*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxProjectedGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void RenderPoints(Int_t mode) const; Render points with given GL mode.; This is used for polygon and outline drawing. void Draw(TGLRnrCtx& rnrCtx) const; Render with OpenGL. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render with OpenGL, create display-list. TEveBoxGL& operator=(const TEveBoxProjectedGL& ). Bool_t IgnoreSizeForOfInterest() const; { return kTRUE; }. TEveBoxProjectedGL(const TEveBoxProjectedGL& ). virtual ~TEveBoxProjectedGL(); {}. » Author: Matevz Tadel, 2010 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveBoxProjectedGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjectedGL.html
https://root.cern/root/html534/TEveBoxProjectedGL.html:1900,Performance,cache,cached,1900,"ass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tIgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTGLLogicalShape::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTGLLogicalShape::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveBoxProjectedGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxProjectedGL.html
https://root.cern/root/html534/TEveBoxSet.html:8276,Availability,Error,Error,8276,"t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildr",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:8405,Availability,error,error,8405,"t::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGLis",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:8489,Availability,error,error,8489,"hort_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree, T",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:21786,Deployability,update,update,21786,"en); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveDigitSet::SetSelectViaFrame(Bool_t sf); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidTEveDigitSet::SetTooltipCBFoo(TEveDigitSet::TooltipCB_foo f); virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; voidTest(Int_t nboxes); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveDigitSet::UnHighlighted(); virtual voidTEveDigitSet::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveDigitSet::UseSingleColor(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:21889,Deployability,update,update,21889,"en); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveDigitSet::SetSelectViaFrame(Bool_t sf); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidTEveDigitSet::SetTooltipCBFoo(TEveDigitSet::TooltipCB_foo f); virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; voidTest(Int_t nboxes); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveDigitSet::UnHighlighted(); virtual voidTEveDigitSet::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveDigitSet::UseSingleColor(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:23519,Deployability,Release,ReleaseIds,23519,"char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var). protected:. virtual voidTEveElement::AnnihilateRecursively(); voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.005); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1e6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(); TEveDigitSet::DigitBase_t*TEveDigitSet::NewDigit(); virtual voidTEveElement::PreDeleteElement(); voidTEveSecondarySelectable::ProcessGLSelectionInternal(TGLSelectRecord& rec, TEveSecondarySelectable::SelectionSet_t& sset); voidTEveDigitSet::ReleaseIds(); virtual voidTEveElement::RemoveElementsInternal(); static Int_tSizeofAtom(TEveBoxSet::EBoxType_e bt); static const char*TEveElement::ToString(Bool_t b). private:. TEveBoxSet(const TEveBoxSet&); TEveBoxSet&operator=(const TEveBoxSet&). Data Members; public:. enum EBoxType_e { kBT_Undef; kBT_FreeBox; kBT_AABox; kBT_AABoxFixedDim; kBT_Cone; kBT_EllipticCone; };; enum TEveDigitSet::ERenderMode_e { kRM_AsIs; kRM_Line; kRM_Fill; };; enum TEveElement::ECompoundSelectionColorBits { kCSCBImply",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:523,Integrability,depend,depends,523,". TEveBoxSet. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveBoxSet. class TEveBoxSet: public TEveDigitSet. Collection of 3D primitives (fixed-size boxes, boxes of different; sizes, or arbitrary sexto-epipeds, cones); each primitive can be assigned; a signal value and a TRef. A collection of 3D-markers. The way how they are defined depends; on the fBoxType data-member.; kBT_FreeBox arbitrary box: specify 8*(x,y,z) box corners; kBT_AABox axis-aligned box: specify (x,y,z) and (w, h, d); kBT_AABoxFixedDim axis-aligned box w/ fixed dimensions: specify (x,y,z); also set fDefWidth, fDefHeight and fDefDepth; kBT_Cone cone defined with position, axis-vector and radius; EllipticCone conew with elliptic base (specify another radius and angle in deg). Each primitive can be assigned:; a) Color or signal value. Thresholds and signal-to-color mapping; can then be set dynamically via the TEveRGBAPalette class.; b) External TObject* (stored as TRef). See also base-class TEveDigitSet for more information.; Tutorial: tutorials/eve/boxset_test.C. Function Members (Methods); public:. TEveBoxSet(const char* n = ""TEveBoxSet"", const char* t = """"); virtual~TEveBoxSet(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); voidAddBox(const Float_t* verts); voidAddBox(Float_t a, Float_t b, Float_t c); voidAddBox(Float_t a, Float_t b, Float_t c, Float_t w, Float_t h, Float_t d); voidAddCone(const TEveVector& pos, const TEveVector& dir, Float_t r); virtual voidTEveElement::AddElement(TEveElement* el); voidAddEllipticCone(const TEveVector& pos, const TEveVector& dir, Float_t r, Float_t r2, Float_t angle = 0); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddInto",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:14733,Integrability,Message,Message,14733,"virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTEveElement::PadPaint(Option_t* option); virtual voidTEveDigitSet::Paint(Option_t* option = """"); virtual voidTEveElement::PaintStandard(TObject* id); virtual voidTObject::Pop(); virtual voidTNamed::Print(Opti",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:13919,Modifiability,Inherit,InheritsFrom,13919,"Bool_tTEveDigitSet::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberO",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:13985,Modifiability,Inherit,InheritsFrom,13985,"nt::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; Int_tTEveElement::NumChildren() const; Int_tTEve",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:27317,Modifiability,variab,variable,27317,"nal objects.; Bool_tTEveDigitSet::fDisableLightingDisable lighting for rendering.; Bool_tfDrawConeCap; Bool_tTEveDigitSet::fEmitSignalsEmit signals on secondary-select.; TEveFrameBox*TEveDigitSet::fFramePointer to frame structure.; Bool_tTEveDigitSet::fHighlightFrameHighlight frame when object is selected.; Bool_tTEveElement::fHighlighted!; set<int>TEveSecondarySelectable::fHighlightedSetHighlighted indices.; Bool_tTEveDigitSet::fHistoButtonsShow histogram buttons in object editor.; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveDigitSet::DigitBase_t*TEveDigitSet::fLastDigit! The last / current digit added to collection.; Int_tTEveDigitSet::fLastIdx! The last / current idx added to collection.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tTEveDigitSet::fOwnIdsFlag specifying if id-objects are owned by the TEveDigitSet.; TEveRGBAPalette*TEveDigitSet::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveChunkManagerTEveDigitSet::fPlexContainer of digit data.; TEveDigitSet::ERenderMode_eTEveDigitSet::fRenderModeRender mode: as-is / line / filled.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveDigitSet::fSelectViaFrameAllow selection via frame.; Bool_tTEveElement::f",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:27455,Modifiability,variab,variable,27455,"er to frame structure.; Bool_tTEveDigitSet::fHighlightFrameHighlight frame when object is selected.; Bool_tTEveElement::fHighlighted!; set<int>TEveSecondarySelectable::fHighlightedSetHighlighted indices.; Bool_tTEveDigitSet::fHistoButtonsShow histogram buttons in object editor.; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveDigitSet::DigitBase_t*TEveDigitSet::fLastDigit! The last / current digit added to collection.; Int_tTEveDigitSet::fLastIdx! The last / current idx added to collection.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tTEveDigitSet::fOwnIdsFlag specifying if id-objects are owned by the TEveDigitSet.; TEveRGBAPalette*TEveDigitSet::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveChunkManagerTEveDigitSet::fPlexContainer of digit data.; TEveDigitSet::ERenderMode_eTEveDigitSet::fRenderModeRender mode: as-is / line / filled.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveDigitSet::fSelectViaFrameAllow selection via frame.; Bool_tTEveElement::fSelected!; set<int>TEveSecondarySelectable::fSelectedSetSelected indices.; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTEveDigitSet::fSingleColorUse the same color for all dig",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:29152,Modifiability,Inherit,Inheritance,29152,"llow selection via frame.; Bool_tTEveElement::fSelected!; set<int>TEveSecondarySelectable::fSelectedSetSelected indices.; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTEveDigitSet::fSingleColorUse the same color for all digits.; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; void*TEveDigitSet::fTooltipCBFoo! Function providing highlight tooltips when always-sec-select is active.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tTEveDigitSet::fValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxSet(const char* n = ""TEveBoxSet"", const char* t = """"); Constructor. Int_t SizeofAtom(TEveBoxSet::EBoxType_e bt); Return size of data-structure describing a box of type bt. void Reset(TEveBoxSet::EBoxType_e boxType, Bool_t valIsCol, Int_t chunkSize); Reset the data containers to zero size.; The arguments describe the basic parameters of data storage. void Reset(); Reset the data containers to zero size.; Keep the old data-storage parameters. void AddBox(const Float_t* verts); Create a new box from a set of 8 vertices.; To be used for box-type kBT_FreeBox. void AddBox(Float_t a, Float_t b, Float_t c, Float_t w, Float_t h, Float_t d); Create a new axis-aligned box from at a given position and with; specified dimensions.; To be used for box-type kBT_AABox. void AddBox(Float_t a, Float_t b, Float_t c); Create a new axis-aligned box from at a given position.; To be used for box-type kBT_AABoxFixedDim. void AddCone(const TEveVector& po",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:29165,Modifiability,Inherit,Inherited,29165,"llow selection via frame.; Bool_tTEveElement::fSelected!; set<int>TEveSecondarySelectable::fSelectedSetSelected indices.; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTEveDigitSet::fSingleColorUse the same color for all digits.; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; void*TEveDigitSet::fTooltipCBFoo! Function providing highlight tooltips when always-sec-select is active.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tTEveDigitSet::fValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxSet(const char* n = ""TEveBoxSet"", const char* t = """"); Constructor. Int_t SizeofAtom(TEveBoxSet::EBoxType_e bt); Return size of data-structure describing a box of type bt. void Reset(TEveBoxSet::EBoxType_e boxType, Bool_t valIsCol, Int_t chunkSize); Reset the data containers to zero size.; The arguments describe the basic parameters of data storage. void Reset(); Reset the data containers to zero size.; Keep the old data-storage parameters. void AddBox(const Float_t* verts); Create a new box from a set of 8 vertices.; To be used for box-type kBT_FreeBox. void AddBox(Float_t a, Float_t b, Float_t c, Float_t w, Float_t h, Float_t d); Create a new axis-aligned box from at a given position and with; specified dimensions.; To be used for box-type kBT_AABox. void AddBox(Float_t a, Float_t b, Float_t c); Create a new axis-aligned box from at a given position.; To be used for box-type kBT_AABoxFixedDim. void AddCone(const TEveVector& po",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:24917,Safety,avoid,avoid,24917,"Set::ERenderMode_e { kRM_AsIs; kRM_Line; kRM_Fill; };; enum TEveElement::ECompoundSelectionColorBits { kCSCBImplySelectAllChildren; kCSCBTakeAnyParentAsMaster; kCSCBApplyMainColorToAllChildren; kCSCBApplyMainColorToMatchingChildren; kCSCBApplyMainTransparencyToAllChildren; kCSCBApplyMainTransparencyToMatchingChildren; };; enum TEveElement::EDestruct { kNone; kStandard; kAnnihilate; };; enum TEveElement::EChangeBits { kCBColorSelection; kCBTransBBox; kCBObjProps; kCBVisibility; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. static const TGPicture*TEveElement::fgListTreeIcons[9]; static const TGPicture*TEveElement::fgRnrIcons[4]. protected:. Bool_tTEveSecondarySelectable::fAlwaysSecSelectAlways do secondary-selection in GL.; Bool_tTEveDigitSet::fAntiFlickMake extra render pass to avoid flickering when quads are too small.; Float_t*TAttBBox::fBBox! Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max); Int_tfBoxSkipNumber of boxes to skip for each drawn box during scene rotation.; TEveBoxSet::EBoxType_efBoxTypeType of rendered box.; UChar_tTEveElement::fCSCBits; void*TEveDigitSet::fCallbackFoo! Additional function to call on secondary-select.; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveDigitSet::fColorColor used for frame (or all digis with single-color).; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Float_tfDefDepthBreadth assigned to third coordinate (C).; Float_tfDefHeightBreadth assigned to second coordinate (B).; Float_tfDefWidthBreadth assigned to ",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:13356,Security,Hash,Hash,13356,"ol_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; Bool_tTEveDigitSet::GetSelectViaFrame() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; TEveDigitSet::TooltipCB_fooTEveDigitSet::GetTooltipCBFoo() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveDigitSet::GetUserData(Int_t n) const; Bool_tTEveDigitSet::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() co",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:2563,Testability,Assert,AssertBBox,2563," Float_t b, Float_t c, Float_t w, Float_t h, Float_t d); voidAddCone(const TEveVector& pos, const TEveVector& dir, Float_t r); virtual voidTEveElement::AddElement(TEveElement* el); voidAddEllipticCone(const TEveVector& pos, const TEveVector& dir, Float_t r, Float_t r2, Float_t angle = 0); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveRGBAPalette*TEveDigitSet::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") con",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:2607,Testability,Assert,AssertPalette,2607,"loat_t d); voidAddCone(const TEveVector& pos, const TEveVector& dir, Float_t r); virtual voidTEveElement::AddElement(TEveElement* el); voidAddEllipticCone(const TEveVector& pos, const TEveVector& dir, Float_t r, Float_t r2, Float_t angle = 0); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveRGBAPalette*TEveDigitSet::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRec",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:21383,Testability,Test,TestBit,21383,"en); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveDigitSet::SetSelectViaFrame(Bool_t sf); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidTEveDigitSet::SetTooltipCBFoo(TEveDigitSet::TooltipCB_foo f); virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; voidTest(Int_t nboxes); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveDigitSet::UnHighlighted(); virtual voidTEveDigitSet::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveDigitSet::UseSingleColor(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:21422,Testability,Test,TestBits,21422,"en); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveDigitSet::SetSelectViaFrame(Bool_t sf); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidTEveDigitSet::SetTooltipCBFoo(TEveDigitSet::TooltipCB_foo f); virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; voidTest(Int_t nboxes); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveDigitSet::UnHighlighted(); virtual voidTEveDigitSet::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveDigitSet::UseSingleColor(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:21467,Testability,Test,TestCSCBits,21467,"en); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveDigitSet::SetSelectViaFrame(Bool_t sf); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidTEveDigitSet::SetTooltipCBFoo(TEveDigitSet::TooltipCB_foo f); virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; voidTest(Int_t nboxes); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveDigitSet::UnHighlighted(); virtual voidTEveDigitSet::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveDigitSet::UseSingleColor(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:22320,Testability,Assert,AssertBBoxExtents,22320,"r* method, const char* msgfmt) const; voidTest(Int_t nboxes); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveDigitSet::UnHighlighted(); virtual voidTEveDigitSet::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveDigitSet::UseSingleColor(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var). protected:. virtual voidTEveElement::AnnihilateRecursively(); voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.005); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1e6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(); TEveDigitSet::DigitBase_t*TEv",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:30690,Testability,Test,Test,30690," data containers to zero size.; Keep the old data-storage parameters. void AddBox(const Float_t* verts); Create a new box from a set of 8 vertices.; To be used for box-type kBT_FreeBox. void AddBox(Float_t a, Float_t b, Float_t c, Float_t w, Float_t h, Float_t d); Create a new axis-aligned box from at a given position and with; specified dimensions.; To be used for box-type kBT_AABox. void AddBox(Float_t a, Float_t b, Float_t c); Create a new axis-aligned box from at a given position.; To be used for box-type kBT_AABoxFixedDim. void AddCone(const TEveVector& pos, const TEveVector& dir, Float_t r); Create a cone with apex at pos, axis dir and radius r.; To be used for box-type kBT_Cone. void AddEllipticCone(const TEveVector& pos, const TEveVector& dir, Float_t r, Float_t r2, Float_t angle = 0); Create a cone with apex at pos, axis dir and radius r.; To be used for box-type kBT_EllipticCone. void ComputeBBox(); Fill bounding-box information of the base-class TAttBBox (virtual method).; If member 'TEveFrameBox* fFrame' is set, frame's corners are used as bbox. void Test(Int_t nboxes); Fill the structure with a random set of boxes. TEveBoxSet(const TEveBoxSet& ). TEveBoxSet& operator=(const TEveBoxSet& ). virtual ~TEveBoxSet(); {}. Float_t GetDefWidth() const; { return fDefWidth; }. Float_t GetDefHeight() const; { return fDefHeight; }. Float_t GetDefDepth() const; { return fDefDepth; }. Bool_t GetDrawConeCap() const; { return fDrawConeCap; }. void SetDefWidth(Float_t v); { fDefWidth = v ; }. void SetDefHeight(Float_t v); { fDefHeight = v ; }. void SetDefDepth(Float_t v); { fDefDepth = v ; }. void SetDrawConeCap(Bool_t x); { fDrawConeCap=x; StampObjProps(); }. Int_t GetBoxSkip() const; { return fBoxSkip; }. void SetBoxSkip(Int_t bs); { fBoxSkip = bs; }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:3440,Usability,Clear,Clear,3440,"_tag = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveRGBAPalette*TEveDigitSet::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, co",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSet.html:3495,Usability,Clear,ClearStamps,3495," Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveRGBAPalette*TEveDigitSet::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot",MatchSource.WIKI,root/html534/TEveBoxSet.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSet.html
https://root.cern/root/html534/TEveBoxSetGL.html:2575,Deployability,Update,UpdateBoundingBox,2575,"Physicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidDLCacheDrop(); virtual voidDLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidTEveDigitSetGL::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTEveDigitSetGL::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidRender(TGLRnrCtx& rnrCtx); virtual voidTEveDigitSetGL::SetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTEveDigitSetGL::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveBoxSetGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSetGL.html
https://root.cern/root/html534/TEveBoxSetGL.html:2617,Deployability,Update,UpdateBoundingBoxesOfPhysicals,2617,"Physicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidDLCacheDrop(); virtual voidDLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidTEveDigitSetGL::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTEveDigitSetGL::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidRender(TGLRnrCtx& rnrCtx); virtual voidTEveDigitSetGL::SetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTEveDigitSetGL::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveBoxSetGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSetGL.html
https://root.cern/root/html534/TEveBoxSetGL.html:6181,Integrability,Interface,Interface,6181,"eForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxSetGL(); Default constructor. ~TEveBoxSetGL(); Destructor. Int_t PrimitiveType() const; Return GL primitive used to render the boxes, based on the; render-mode specified in the model object. void MakeOriginBox(Float_t p[][3], Float_t dx, Float_t dy, Float_t dz) const; Fill array p to represent a box (0,0,0) - (dx,dy,dz). void RenderBoxStdNorm(const Float_t p[][3]) const; Render a box specified by points in array p with standard; axis-aligned normals. void RenderBoxAutoNorm(const Float_t p[][3]) const; Render box, calculate normals on the fly from first three points. void MakeDisplayList() const; Create a display-list for rendering a single box, based on the; current box-type.; Some box-types don't benefit from the display-list rendering and; so display-list is not created. Bool_t ShouldDLCache(const TGLRnrCtx& rnrCtx) const; Determines if display-list will be used for rendering.; Virtual from TGLLogicalShape. void DLCacheDrop(); Called when display lists have been destroyed externally and the; internal display-list data needs to be cleare.; Virtual from TGLLogicalShape. void DLCachePurge(); Called when display-lists need to be returned to the system.; Virtual from TGLLogicalShape. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object.; Virtual from TGLObject. void RenderBoxes(TGLRnrCtx& rnrCtx) const; GL rendering for all box-types. void DirectDraw(TGLRnrCtx& rnrCtx) const; Actual rendering code.; Virtual from TGLLogicalShape. void Render(TGLRnrCtx& rnrCtx); Interface for direct rendering from classes that include TEveBoxSet; as a member. TEveBoxSetGL(const TEveBoxSetGL& ). TEveBoxSetGL& operator=(const TEveBoxSetGL& ). » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveBoxSetGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSetGL.html
https://root.cern/root/html534/TEveBoxSetGL.html:4601,Modifiability,Inherit,Inheritance,4601,"alShape::fBoundingBox! Shape's bounding box.; UInt_tfBoxDLDisplay-list id for a box atom.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; set<Int_t>*TEveDigitSetGL::fHighlightSet; TEveBoxSet*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxSetGL(); Default constructor. ~TEveBoxSetGL(); Destructor. Int_t PrimitiveType() const; Return GL primitive used to render the boxes, based on the; render-mode specified in the model object. void MakeOriginBox(Float_t p[][3], Float_t dx, Float_t dy, Float_t dz) const; Fill array p to represent a box (0,0,0) - (dx,dy,dz). void RenderBoxStdNorm(const Float_t p[][3]) const; Render a box specified by points in array p with standard; axis-aligned normals. void RenderBoxAutoNorm(const Float_t p[][3]) const; Render box, calculate normals on the fly from first three points. void MakeDisplayList() const; Create a display-list for rendering a single box, based on the; current box-type.; Some box-types don't benefit from the display-list rendering and; so display-list is not created. Bool_t ShouldDLCache(const TGLRnrCtx& rnrCtx) const; Determines if display-list will be used for rendering.; Virtual from TGLLogicalShape. void DLCacheDrop();",MatchSource.WIKI,root/html534/TEveBoxSetGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSetGL.html
https://root.cern/root/html534/TEveBoxSetGL.html:4614,Modifiability,Inherit,Inherited,4614,"alShape::fBoundingBox! Shape's bounding box.; UInt_tfBoxDLDisplay-list id for a box atom.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; set<Int_t>*TEveDigitSetGL::fHighlightSet; TEveBoxSet*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxSetGL(); Default constructor. ~TEveBoxSetGL(); Destructor. Int_t PrimitiveType() const; Return GL primitive used to render the boxes, based on the; render-mode specified in the model object. void MakeOriginBox(Float_t p[][3], Float_t dx, Float_t dy, Float_t dz) const; Fill array p to represent a box (0,0,0) - (dx,dy,dz). void RenderBoxStdNorm(const Float_t p[][3]) const; Render a box specified by points in array p with standard; axis-aligned normals. void RenderBoxAutoNorm(const Float_t p[][3]) const; Render box, calculate normals on the fly from first three points. void MakeDisplayList() const; Create a display-list for rendering a single box, based on the; current box-type.; Some box-types don't benefit from the display-list rendering and; so display-list is not created. Bool_t ShouldDLCache(const TGLRnrCtx& rnrCtx) const; Determines if display-list will be used for rendering.; Virtual from TGLLogicalShape. void DLCacheDrop();",MatchSource.WIKI,root/html534/TEveBoxSetGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSetGL.html
https://root.cern/root/html534/TEveBoxSetGL.html:1920,Performance,cache,cached,1920,"Physicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidDLCacheDrop(); virtual voidDLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidTEveDigitSetGL::DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidTEveDigitSetGL::ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidRender(TGLRnrCtx& rnrCtx); virtual voidTEveDigitSetGL::SetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTEveDigitSetGL::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveBoxSetGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSetGL.html
https://root.cern/root/html534/TEveBoxSetGL.html:5733,Usability,clear,cleare,5733,"eForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxSetGL(); Default constructor. ~TEveBoxSetGL(); Destructor. Int_t PrimitiveType() const; Return GL primitive used to render the boxes, based on the; render-mode specified in the model object. void MakeOriginBox(Float_t p[][3], Float_t dx, Float_t dy, Float_t dz) const; Fill array p to represent a box (0,0,0) - (dx,dy,dz). void RenderBoxStdNorm(const Float_t p[][3]) const; Render a box specified by points in array p with standard; axis-aligned normals. void RenderBoxAutoNorm(const Float_t p[][3]) const; Render box, calculate normals on the fly from first three points. void MakeDisplayList() const; Create a display-list for rendering a single box, based on the; current box-type.; Some box-types don't benefit from the display-list rendering and; so display-list is not created. Bool_t ShouldDLCache(const TGLRnrCtx& rnrCtx) const; Determines if display-list will be used for rendering.; Virtual from TGLLogicalShape. void DLCacheDrop(); Called when display lists have been destroyed externally and the; internal display-list data needs to be cleare.; Virtual from TGLLogicalShape. void DLCachePurge(); Called when display-lists need to be returned to the system.; Virtual from TGLLogicalShape. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object.; Virtual from TGLObject. void RenderBoxes(TGLRnrCtx& rnrCtx) const; GL rendering for all box-types. void DirectDraw(TGLRnrCtx& rnrCtx) const; Actual rendering code.; Virtual from TGLLogicalShape. void Render(TGLRnrCtx& rnrCtx); Interface for direct rendering from classes that include TEveBoxSet; as a member. TEveBoxSetGL(const TEveBoxSetGL& ). TEveBoxSetGL& operator=(const TEveBoxSetGL& ). » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveBoxSetGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBoxSetGL.html
https://root.cern/root/html534/TEveBrowser.html:4757,Availability,Error,Error,4757,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; voidEveMenu(Int_t id); voidTRootBrowser::EventInfo(Int_t event, Int_t px, Int_t py, TObject* selected); virtual Long_tTRootBrowser::ExecPlugin(const char* name = 0, const char* fname = 0, const char* cmd = 0, Int_t pos = kRight, Int_t subpos = -1); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTRootBrowser::ExecuteDefaultAction(TObject* obj)SIGNAL ; virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGFrame*TRootBrowser::GetActFrame() const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:5135,Availability,error,error,5135,"(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; voidEveMenu(Int_t id); voidTRootBrowser::EventInfo(Int_t event, Int_t px, Int_t py, TObject* selected); virtual Long_tTRootBrowser::ExecPlugin(const char* name = 0, const char* fname = 0, const char* cmd = 0, Int_t pos = kRight, Int_t subpos = -1); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTRootBrowser::ExecuteDefaultAction(TObject* obj)SIGNAL ; virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGFrame*TRootBrowser::GetActFrame() const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); TList*TGMainFrame::GetBindList() const; static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; virtual TBrowser*TBrowserImp::GetBrowser() const; voidTGMainFrame::GetClassHints(const char*& className, const char*& resourceName) const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCo",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:5219,Availability,error,error,5219,"aram); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; voidEveMenu(Int_t id); voidTRootBrowser::EventInfo(Int_t event, Int_t px, Int_t py, TObject* selected); virtual Long_tTRootBrowser::ExecPlugin(const char* name = 0, const char* fname = 0, const char* cmd = 0, Int_t pos = kRight, Int_t subpos = -1); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTRootBrowser::ExecuteDefaultAction(TObject* obj)SIGNAL ; virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGFrame*TRootBrowser::GetActFrame() const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); TList*TGMainFrame::GetBindList() const; static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; virtual TBrowser*TBrowserImp::GetBrowser() const; voidTGMainFrame::GetClassHints(const char*& className, const char*& resourceName) const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGComposi",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:22506,Availability,mask,mask,22506,"r::fActBrowserActual (active) browser imp; TGCompositeFrame*TRootBrowser::fActMenuBarActual (active) menu bar; Pixel_tTGFrame::fBackgroundframe background color; TList*TGMainFrame::fBindListlist with key bindings; Int_tTGFrame::fBorderWidthframe border width; TBrowser*TBrowserImp::fBrowserTBrowser associated with this implementation; TListTRootBrowser::fBrowsersList of (sub)browsers; TStringTGMainFrame::fClassNameWM class name; TGClient*TGObject::fClientConnection to display server; Int_tTRootBrowser::fCrTab[3]Actual (active) tab elements (for each Tab); Int_tTGFrame::fDNDStateEDNDFlags; Atom_t*TGMainFrame::fDNDTypeListhandles DND types; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; TGCompositeFrame*TRootBrowser::fEditFrameFrame in ""Edit"" mode; Int_tTRootBrowser::fEditPosId of tab in ""Edit"" mode; Int_tTRootBrowser::fEditSubPosId of subtab in ""Edit"" mode; TGTab*TRootBrowser::fEditTabTab in ""Edit"" mode; TGPopupMenu*fEvePopup; UInt_tTGFrame::fEventMaskcurrenty active event mask; TGFrameElement*TGFrame::fFEpointer to frame element; TGFileBrowser*fFileBrowser; TGHorizontalFrame*TRootBrowser::fH1Horizontal frame; TGHorizontalFrame*TRootBrowser::fH2Horizontal frame; TGHSplitter*TRootBrowser::fHSplitterHorizontal splitter; UInt_tTGFrame::fHeightframe height; TGHorizontalFrame*TRootBrowser::fHfHorizontal frame; TGPopupMenu*fHilPopup; TStringTGMainFrame::fIconNameicon name; const TGPicture*TRootBrowser::fIconPicicon picture; TStringTGMainFrame::fIconPixmapicon pixmap name; Handle_tTGObject::fIdX11/Win32 Window identifier; TGLayoutHints*TRootBrowser::fLH0; TGLayoutHints*TRootBrowser::fLH1; TGLayoutHints*TRootBrowser::fLH2; TGLayoutHints*TRootBrowser::fLH3Layout hints, part 1; TGLayoutHints*TRootBrowser::fLH4; TGLayoutHints*TRootBrowser::fLH5; TGLayoutHints*TRootBrowser::fLH6; TGLayoutHints*TRootBrowser::fLH7Layout hints, part 2; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TList*TGCo",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:12575,Integrability,Message,Message,12575,"sEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; TGFileBrowser*MakeFileBrowser(Bool_t make_default = kFALSE); virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; static TBrowserImp*TRootBrowser::NewBrowser(TBrowser* b = 0, const char* title = ""ROOT Browser"", UInt_t width = 800, UInt_t height = 500, Option_t* opt = """"); static TBrowserImp*TRootBrowser::NewBrowser(TBrowser* b, const char* title, Int_t x, Int_t y, UInt_t width, UInt_t height, Option_t* opt = """"); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:10967,Modifiability,Inherit,InheritsFrom,10967,"virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTRootBrowser::HandleKey(Event_t* event); voidTRootBrowser::HandleMenu(Int_t id); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; voidHideBottomTab(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTBrowserImp::Iconify(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitPlugins(Option_t* opt = ""FI""); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTRootBrowser::IsCloseTabShown() const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:11033,Modifiability,Inherit,InheritsFrom,11033,"_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTRootBrowser::HandleKey(Event_t* event); voidTRootBrowser::HandleMenu(Int_t id); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; voidHideBottomTab(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTBrowserImp::Iconify(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitPlugins(Option_t* opt = ""FI""); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTRootBrowser::IsCloseTabShown() const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bo",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:24089,Modifiability,Plugin,Plugin,24089,"*fFileBrowser; TGHorizontalFrame*TRootBrowser::fH1Horizontal frame; TGHorizontalFrame*TRootBrowser::fH2Horizontal frame; TGHSplitter*TRootBrowser::fHSplitterHorizontal splitter; UInt_tTGFrame::fHeightframe height; TGHorizontalFrame*TRootBrowser::fHfHorizontal frame; TGPopupMenu*fHilPopup; TStringTGMainFrame::fIconNameicon name; const TGPicture*TRootBrowser::fIconPicicon picture; TStringTGMainFrame::fIconPixmapicon pixmap name; Handle_tTGObject::fIdX11/Win32 Window identifier; TGLayoutHints*TRootBrowser::fLH0; TGLayoutHints*TRootBrowser::fLH1; TGLayoutHints*TRootBrowser::fLH2; TGLayoutHints*TRootBrowser::fLH3Layout hints, part 1; TGLayoutHints*TRootBrowser::fLH4; TGLayoutHints*TRootBrowser::fLH5; TGLayoutHints*TRootBrowser::fLH6; TGLayoutHints*TRootBrowser::fLH7Layout hints, part 2; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TList*TGCompositeFrame::fListcontainer of frame elements; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; UInt_tTGMainFrame::fMWMFuncsMWM functions; UInt_tTGMainFrame::fMWMInputMWM input modes; UInt_tTGMainFrame::fMWMValueMWM decoration hints; Bool_tTGCompositeFrame::fMapSubwindowskTRUE - map subwindows; UInt_tTGFrame::fMaxHeightmaximal frame height; UInt_tTGFrame::fMaxWidthmaximal frame width; TGMenuBar*TRootBrowser::fMenuBarMain (owned) menu bar; TGPopupMenu*TRootBrowser::fMenuExecPlugin""Exec Plugin"" popup menu; TGPopupMenu*TRootBrowser::fMenuFile""File"" popup menu; TGHorizontalFrame*TRootBrowser::fMenuFrameShared menu frame; TGPopupMenu*TRootBrowser::fMenuHelp""Browser Help"" popup menu; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; Int_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); TStringTGWindow::fNamename of the window used in SavePrimitive(); Int_tTRootBrowser::fNbInitPluginsNumber of initial plugins (from .",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:24564,Modifiability,plugin,plugins,24564,"*fFileBrowser; TGHorizontalFrame*TRootBrowser::fH1Horizontal frame; TGHorizontalFrame*TRootBrowser::fH2Horizontal frame; TGHSplitter*TRootBrowser::fHSplitterHorizontal splitter; UInt_tTGFrame::fHeightframe height; TGHorizontalFrame*TRootBrowser::fHfHorizontal frame; TGPopupMenu*fHilPopup; TStringTGMainFrame::fIconNameicon name; const TGPicture*TRootBrowser::fIconPicicon picture; TStringTGMainFrame::fIconPixmapicon pixmap name; Handle_tTGObject::fIdX11/Win32 Window identifier; TGLayoutHints*TRootBrowser::fLH0; TGLayoutHints*TRootBrowser::fLH1; TGLayoutHints*TRootBrowser::fLH2; TGLayoutHints*TRootBrowser::fLH3Layout hints, part 1; TGLayoutHints*TRootBrowser::fLH4; TGLayoutHints*TRootBrowser::fLH5; TGLayoutHints*TRootBrowser::fLH6; TGLayoutHints*TRootBrowser::fLH7Layout hints, part 2; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TList*TGCompositeFrame::fListcontainer of frame elements; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; UInt_tTGMainFrame::fMWMFuncsMWM functions; UInt_tTGMainFrame::fMWMInputMWM input modes; UInt_tTGMainFrame::fMWMValueMWM decoration hints; Bool_tTGCompositeFrame::fMapSubwindowskTRUE - map subwindows; UInt_tTGFrame::fMaxHeightmaximal frame height; UInt_tTGFrame::fMaxWidthmaximal frame width; TGMenuBar*TRootBrowser::fMenuBarMain (owned) menu bar; TGPopupMenu*TRootBrowser::fMenuExecPlugin""Exec Plugin"" popup menu; TGPopupMenu*TRootBrowser::fMenuFile""File"" popup menu; TGHorizontalFrame*TRootBrowser::fMenuFrameShared menu frame; TGPopupMenu*TRootBrowser::fMenuHelp""Browser Help"" popup menu; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; Int_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); TStringTGWindow::fNamename of the window used in SavePrimitive(); Int_tTRootBrowser::fNbInitPluginsNumber of initial plugins (from .",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:24882,Modifiability,plugin,plugins,24882,,MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:27230,Modifiability,Inherit,Inheritance,27230,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupCintExport(TClass* cl); Add ""Export to CINT"" into context-menu for class cl. void CalculateReparentXY(TGObject* parent, Int_t& x, Int_t& y); Calculate position of a widget for reparenting into parent. TEveBrowser(UInt_t w, UInt_t h); Constructor. void EveMenu(Int_t id); Handle events from Eve menu. void InitPlugins(Option_t* opt = ""FI""); Initialize standard plugins. TGFileBrowser* MakeFileBrowser(Bool_t make_default = kFALSE); Create a file-browser. Caller should provide Start/StopEmbedding() calls; and populate the new browser.; If flag make_default is kTRUE, the default file-browser is set to the; newly created browser. TGFileBrowser* GetFileBrowser() const; Returns the default file-browser. void SetFileBrowser(TGFileBrowser* b); Set the default file browser. void ReallyDelete(); Override from TRootBrowser. We need to be more brutal as fBrowser is; not set in Eve case. void CloseTab(Int_t id); Virtual from TRootBrowser. Nee",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:27243,Modifiability,Inherit,Inherited,27243,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupCintExport(TClass* cl); Add ""Export to CINT"" into context-menu for class cl. void CalculateReparentXY(TGObject* parent, Int_t& x, Int_t& y); Calculate position of a widget for reparenting into parent. TEveBrowser(UInt_t w, UInt_t h); Constructor. void EveMenu(Int_t id); Handle events from Eve menu. void InitPlugins(Option_t* opt = ""FI""); Initialize standard plugins. TGFileBrowser* MakeFileBrowser(Bool_t make_default = kFALSE); Create a file-browser. Caller should provide Start/StopEmbedding() calls; and populate the new browser.; If flag make_default is kTRUE, the default file-browser is set to the; newly created browser. TGFileBrowser* GetFileBrowser() const; Returns the default file-browser. void SetFileBrowser(TGFileBrowser* b); Set the default file browser. void ReallyDelete(); Override from TRootBrowser. We need to be more brutal as fBrowser is; not set in Eve case. void CloseTab(Int_t id); Virtual from TRootBrowser. Nee",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:27677,Modifiability,plugin,plugins,27677," static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupCintExport(TClass* cl); Add ""Export to CINT"" into context-menu for class cl. void CalculateReparentXY(TGObject* parent, Int_t& x, Int_t& y); Calculate position of a widget for reparenting into parent. TEveBrowser(UInt_t w, UInt_t h); Constructor. void EveMenu(Int_t id); Handle events from Eve menu. void InitPlugins(Option_t* opt = ""FI""); Initialize standard plugins. TGFileBrowser* MakeFileBrowser(Bool_t make_default = kFALSE); Create a file-browser. Caller should provide Start/StopEmbedding() calls; and populate the new browser.; If flag make_default is kTRUE, the default file-browser is set to the; newly created browser. TGFileBrowser* GetFileBrowser() const; Returns the default file-browser. void SetFileBrowser(TGFileBrowser* b); Set the default file browser. void ReallyDelete(); Override from TRootBrowser. We need to be more brutal as fBrowser is; not set in Eve case. void CloseTab(Int_t id); Virtual from TRootBrowser. Need to intercept closing of Eve tabs. void CloseWindow(); Virtual from TGMainFrame. Calls TEveManager::Terminate(). void HideBottomTab(); Hide the bottom tab (usually holding command-line widget). void SanitizeTabCounts(); TRootBrowser keeps (somewhat unnecessarily) counters for number ob tabs; on each position. Eve bastardizes the right tab so we have to fix the counters; when a new window is ",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:10620,Security,Hash,Hash,10620,"bleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTRootBrowser::HandleKey(Event_t* event); voidTRootBrowser::HandleMenu(Int_t id); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; voidHideBottomTab(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTBrowserImp::Iconify(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitPlugins(Option_t* opt = ""FI""); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTRootBrowser::IsCloseTabShown() const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::I",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:28456,Security,Sanitiz,SanitizeTabCounts,28456,"hitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupCintExport(TClass* cl); Add ""Export to CINT"" into context-menu for class cl. void CalculateReparentXY(TGObject* parent, Int_t& x, Int_t& y); Calculate position of a widget for reparenting into parent. TEveBrowser(UInt_t w, UInt_t h); Constructor. void EveMenu(Int_t id); Handle events from Eve menu. void InitPlugins(Option_t* opt = ""FI""); Initialize standard plugins. TGFileBrowser* MakeFileBrowser(Bool_t make_default = kFALSE); Create a file-browser. Caller should provide Start/StopEmbedding() calls; and populate the new browser.; If flag make_default is kTRUE, the default file-browser is set to the; newly created browser. TGFileBrowser* GetFileBrowser() const; Returns the default file-browser. void SetFileBrowser(TGFileBrowser* b); Set the default file browser. void ReallyDelete(); Override from TRootBrowser. We need to be more brutal as fBrowser is; not set in Eve case. void CloseTab(Int_t id); Virtual from TRootBrowser. Need to intercept closing of Eve tabs. void CloseWindow(); Virtual from TGMainFrame. Calls TEveManager::Terminate(). void HideBottomTab(); Hide the bottom tab (usually holding command-line widget). void SanitizeTabCounts(); TRootBrowser keeps (somewhat unnecessarily) counters for number ob tabs; on each position. Eve bastardizes the right tab so we have to fix the counters; when a new window is added ... it doesn't seem to be needed when it is removed. TEveListTreeItem& operator=(const TEveBrowser& ). TEveBrowser(const TEveBrowser& ). virtual ~TEveBrowser(); {}. TGMenuBar* GetMenuBar() const; Some getters missing in TRootBrowser. { return fMenuBar; }. TGHorizontalFrame* GetTopMenuFrame() const; { return fTopMenuFrame; }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:18723,Testability,Test,TestBit,18723,"tic voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTRootBrowser::SetStatusText(const char* txt, Int_t col); voidTRootBrowser::SetTab(Int_t pos = kRight, Int_t subpos = -1); voidTRootBrowser::SetTabTitle(const char* title, Int_t pos = kRight, Int_t subpos = -1); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGMainFrame::SetWindowName(const char* name = 0); voidTGMainFrame::SetWMPosition(Int_t x, Int_t y); voidTGMainFrame::SetWMSize(UInt_t w, UInt_t h); voidTGMainFrame::SetWMSizeHints(UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc); voidTGMainFrame::SetWMState(EInitialState state); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTRootBrowser::Show(); virtual voidTRootBrowser::ShowCloseTab(Bool_t show); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); voidTRootBrowser::ShowMenu(TGCompositeFrame* menu); virtual voidTRootBrowser::StartEmbedding(Int_t pos = kRight, Int_t subpos = -1); virtual voidTRootBrowser::StopEmbedding(const char* name = 0); voidTRootBrowser::StopEmbedding(const char* name, TGLayoutHints* layout); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTRootBrowser::SwitchMenus(TGCompositeFrame* from); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:18762,Testability,Test,TestBits,18762,"tic voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTRootBrowser::SetStatusText(const char* txt, Int_t col); voidTRootBrowser::SetTab(Int_t pos = kRight, Int_t subpos = -1); voidTRootBrowser::SetTabTitle(const char* title, Int_t pos = kRight, Int_t subpos = -1); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGMainFrame::SetWindowName(const char* name = 0); voidTGMainFrame::SetWMPosition(Int_t x, Int_t y); voidTGMainFrame::SetWMSize(UInt_t w, UInt_t h); voidTGMainFrame::SetWMSizeHints(UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc); voidTGMainFrame::SetWMState(EInitialState state); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTRootBrowser::Show(); virtual voidTRootBrowser::ShowCloseTab(Bool_t show); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); voidTRootBrowser::ShowMenu(TGCompositeFrame* menu); virtual voidTRootBrowser::StartEmbedding(Int_t pos = kRight, Int_t subpos = -1); virtual voidTRootBrowser::StopEmbedding(const char* name = 0); voidTRootBrowser::StopEmbedding(const char* name, TGLayoutHints* layout); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTRootBrowser::SwitchMenus(TGCompositeFrame* from); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveBrowser.html:1770,Usability,Clear,Clear,1770,"UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual Bool_tTGMainFrame::BindKey(const TGWindow* w, Int_t keycode, Int_t modifier) const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTRootBrowser::BrowseObj(TObject* obj)SIGNAL ; TBrowser*TBrowserImp::Browser() const; virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); virtual voidTRootBrowser::Checked(TObject* obj, Bool_t check)SIGNAL ; virtual voidTBrowserImp::CheckObjectItem(TObject*, Bool_t = kFALSE); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTRootBrowser::CloneBrowser(); virtual voidCloseTab(Int_t id); virtual voidTRootBrowser::CloseTabs(); virtual voidCloseWindow(); voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; voidTRootBrowser::CreateBrowser(const char* name); virtual voidTGFrame::Delete(Option_t* = """"); virtual voidTGFrame::DeleteWindow(); virtu",MatchSource.WIKI,root/html534/TEveBrowser.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveBrowser.html
https://root.cern/root/html534/TEveCalo2D.html:4960,Availability,Error,Error,4960,"istTreeItem* parent); virtual voidTEveElement::DestroyMainTrans(); virtual voidTEveElement::DestroyOrWarn(); voidTEveElement::DisableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildr",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:5089,Availability,error,error,5089,"ableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGLis",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:5173,Availability,error,error,5173,"al Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree, T",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:18711,Deployability,update,update,18711,"rState(Bool_t rnr); virtual voidSetScaleAbs(Bool_t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:18814,Deployability,update,update,18814,"rState(Bool_t rnr); virtual voidSetScaleAbs(Bool_t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:24650,Deployability,Update,UpdateProjection,24650,"erences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tTEveCaloViz::fValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. private:. TEveProjection::EPType_efOldProjectionType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo2D(const char* n = ""TEveCalo2D"", const char* t = """"); Constructor. ~TEveCalo2D(); Destructor. void UpdateProjection(); This is virtual method from base-class TEveProjected. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); Set projection manager and model object. void BuildCellIdCache(); Build lists of drawn cell IDs. See TEveCalo2DGL::DirecDraw(). void CellSelectionChanged(); Sort slected cells in eta or phi bins for selection and highlight. void CellSelectionChangedInternal(TEveCaloData::vCellId_t& cells, vector<TEveCaloData::vCellId_t*>& cellLists); Sort slected cells in eta or phi bins. void SetScaleAbs(Bool_t ); Set absolute scale in projected calorimeter. Float_t GetValToHeight() const; Virtual function of TEveCaloViz.; Get transformation factor from E/Et to height. void ComputeBBox(); Fill bounding-box information of the base-class TAttBBox (virtual method).; If member 'TEveFrameBox* fFrame' is set, frame's corners are used as bbox. TEveCaloViz& operator=(const TEveCalo2D& ). TEveCalo2D(const TEveCalo2D& ). void SetDepthLocal(Float_t x); { fDepth = x; }. const TEveCalo2D::vBinCells_t& G",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:10965,Modifiability,Inherit,InheritsFrom,10965,"ject::GetUniqueID() const; void*TEveElement::GetUserData() const; virtual Float_tGetValToHeight() const; Bool_tTEveCaloViz::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTEveCaloViz::InvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* p",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:11031,Modifiability,Inherit,InheritsFrom,11031,"virtual Float_tGetValToHeight() const; Bool_tTEveCaloViz::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTEveCaloViz::InvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); sta",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:22787,Modifiability,variab,variable,22787,"hted; vector<TEveCaloData::vCellId_t*>fCellListsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloViz::fEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tTEveCaloViz::fEndCapPosFforward end cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Float_tfMaxESumBin; Float_tfMaxEtSumBin; Float_tTEveCaloViz::fMaxTowerHbounding box z dimesion; Float_tTEveCaloViz::fMaxValAbs; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*TEveCaloViz::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children ",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:22925,Modifiability,variab,variable,22925," children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloViz::fEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tTEveCaloViz::fEndCapPosFforward end cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Float_tfMaxESumBin; Float_tfMaxEtSumBin; Float_tTEveCaloViz::fMaxTowerHbounding box z dimesion; Float_tTEveCaloViz::fMaxValAbs; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*TEveCaloViz::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveEle",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:24466,Modifiability,Inherit,Inheritance,24466,"ol_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tTEveCaloViz::fValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. private:. TEveProjection::EPType_efOldProjectionType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo2D(const char* n = ""TEveCalo2D"", const char* t = """"); Constructor. ~TEveCalo2D(); Destructor. void UpdateProjection(); This is virtual method from base-class TEveProjected. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); Set projection manager and model object. void BuildCellIdCache(); Build lists of drawn cell IDs. See TEveCalo2DGL::DirecDraw(). void CellSelectionChanged(); Sort slected cells in eta or phi bins for selection and highlight. void CellSelectionChangedInternal(TEveCaloData::vCellId_t& cells, vector<TEveCaloData::vCellId_t*>& cellLists); Sort slected cells in eta or phi bins. void SetScaleAbs(Bool_t ); Set absolute scale in projected calorimeter. Float_t GetValToHeight() const; Virtual function of TEveCaloViz.; Get transformation factor from E/Et to height. void ComputeBBox(); Fill bounding-box information of the base-class TAttBBox (virtual method).; If member 'TEveFrameBox* fFrame' is set",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:24479,Modifiability,Inherit,Inherited,24479,"ol_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tTEveCaloViz::fValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. private:. TEveProjection::EPType_efOldProjectionType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo2D(const char* n = ""TEveCalo2D"", const char* t = """"); Constructor. ~TEveCalo2D(); Destructor. void UpdateProjection(); This is virtual method from base-class TEveProjected. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); Set projection manager and model object. void BuildCellIdCache(); Build lists of drawn cell IDs. See TEveCalo2DGL::DirecDraw(). void CellSelectionChanged(); Sort slected cells in eta or phi bins for selection and highlight. void CellSelectionChangedInternal(TEveCaloData::vCellId_t& cells, vector<TEveCaloData::vCellId_t*>& cellLists); Sort slected cells in eta or phi bins. void SetScaleAbs(Bool_t ); Set absolute scale in projected calorimeter. Float_t GetValToHeight() const; Virtual function of TEveCaloViz.; Get transformation factor from E/Et to height. void ComputeBBox(); Fill bounding-box information of the base-class TAttBBox (virtual method).; If member 'TEveFrameBox* fFrame' is set",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:21656,Performance,cache,cache,21656,"CBVisibility; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. static const TGPicture*TEveElement::fgListTreeIcons[9]; static const TGPicture*TEveElement::fgRnrIcons[4]. protected:. Bool_tTEveCaloViz::fAutoRangeset eta phi limits on DataChanged(); Float_t*TAttBBox::fBBox! Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max); Float_tTEveCaloViz::fBarrelRadiusbarrel raidus in cm; UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; Bool_tTEveCaloViz::fCellIdCacheOKdata cell ids cache state; vector<TEveCaloData::vCellId_t*>fCellLists; vector<TEveCaloData::vCellId_t*>fCellListsHighlighted; vector<TEveCaloData::vCellId_t*>fCellListsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloViz::fEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tTEveCaloViz::fEndCapPosFforward end cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainCo",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:10436,Security,Hash,Hash,10436,"loViz::GetScaleAbs() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; Float_tTEveCaloViz::GetTransitionEta() const; Float_tTEveCaloViz::GetTransitionEtaBackward() const; Float_tTEveCaloViz::GetTransitionEtaForward() const; Float_tTEveCaloViz::GetTransitionTheta() const; Float_tTEveCaloViz::GetTransitionThetaBackward() const; Float_tTEveCaloViz::GetTransitionThetaForward() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; virtual Float_tGetValToHeight() const; Bool_tTEveCaloViz::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTEveCaloViz::InvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPicka",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:1458,Testability,Assert,AssertBBox,1458,"); virtual~TEveCalo2D(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearPr",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:1491,Testability,Assert,AssertCellIdCache,1491,":AbstractMethod(const char* method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveEleme",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:1547,Testability,Assert,AssertPalette,1547,"l_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:18210,Testability,Test,TestBit,18210,"rState(Bool_t rnr); virtual voidSetScaleAbs(Bool_t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:18249,Testability,Test,TestBits,18249,"rState(Bool_t rnr); virtual voidSetScaleAbs(Bool_t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:18294,Testability,Test,TestCSCBits,18294,"rState(Bool_t rnr); virtual voidSetScaleAbs(Bool_t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:19245,Testability,Assert,AssertBBoxExtents,19245,"st; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var). protected:. virtual voidTEveElement::AnnihilateRecursively(); voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.005); voidTEveCaloViz::AssignCaloVizParameters(TEveCaloViz* cv); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1e6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); virtual voidBuildCellIdCache(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual voidTEveElement::PreDeleteElement(); virtual voidTEveElement::RemoveElementsInternal(); voidTEveProjected::SetDepthCommon(Float_t d, TEveElement* el, Float_t* bbox); virtual voidSetDepthLocal(Float_t x); voidTEveCaloViz::SetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; static const char*TEveElement::ToString(Bool_t b). private:. TEveCalo2D(const TEveCalo2D&); voidCellSelectionChangedInternal(TEveCaloData::vCellId_t& cel",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:2398,Usability,Clear,Clear,2398,"ag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEve",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:2457,Usability,Clear,ClearProjectedList,2457,"ox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveEle",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2D.html:2504,Usability,Clear,ClearStamps,2504," const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImplySelectAllChildren(); voidTEve",MatchSource.WIKI,root/html534/TEveCalo2D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2D.html
https://root.cern/root/html534/TEveCalo2DGL.html:2495,Deployability,Update,UpdateBoundingBox,2495,") const; static TClass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidDrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* ps, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tSupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveCalo2DGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2DGL.html
https://root.cern/root/html534/TEveCalo2DGL.html:2537,Deployability,Update,UpdateBoundingBoxesOfPhysicals,2537,") const; static TClass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidDrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* ps, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tSupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveCalo2DGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2DGL.html
https://root.cern/root/html534/TEveCalo2DGL.html:4535,Modifiability,Inherit,Inheritance,4535,"e; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveCalo2D*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo2DGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. Bool_t IsRPhi() const; Is current projection type RPhi. void MakeRPhiCell(Float_t phiMin, Float_t phiMax, Float_t towerH, Float_t offset) const; Calculate vertices for the calorimeter cell in RPhi projection.; Returns outside radius of the tower. void DrawRPhi(TGLRnrCtx& rnrCtx, TEveCalo2D::vBinCells_t& ) const; Draw calorimeter cells in RPhi projection. void DrawRPhiHighlighted(vector<TEveCaloData::vCellId_t*>& cellLists) const; Draw selected calorimeter cells in RPhi projection. void MakeRhoZCell(Float_t thetaMin, Float_t thetaMax, Float_t& offset, Bool_t isBarrel, Bool_t phiPlus, Float_t towerH) const; Draw cell in RhoZ projection. void DrawRhoZ(TGLRnrCtx& rnrCtx, TEveCalo2D::vBinCells_t& ) const; Draw calorimeter in RhoZ projection. void DrawRhoZHighlighted(vector<TEveCaloData::vCellId_t*>& cellLists) c",MatchSource.WIKI,root/html534/TEveCalo2DGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2DGL.html
https://root.cern/root/html534/TEveCalo2DGL.html:4548,Modifiability,Inherit,Inherited,4548,"e; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveCalo2D*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo2DGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. Bool_t IsRPhi() const; Is current projection type RPhi. void MakeRPhiCell(Float_t phiMin, Float_t phiMax, Float_t towerH, Float_t offset) const; Calculate vertices for the calorimeter cell in RPhi projection.; Returns outside radius of the tower. void DrawRPhi(TGLRnrCtx& rnrCtx, TEveCalo2D::vBinCells_t& ) const; Draw calorimeter cells in RPhi projection. void DrawRPhiHighlighted(vector<TEveCaloData::vCellId_t*>& cellLists) const; Draw selected calorimeter cells in RPhi projection. void MakeRhoZCell(Float_t thetaMin, Float_t thetaMax, Float_t& offset, Bool_t isBarrel, Bool_t phiPlus, Float_t towerH) const; Draw cell in RhoZ projection. void DrawRhoZ(TGLRnrCtx& rnrCtx, TEveCalo2D::vBinCells_t& ) const; Draw calorimeter in RhoZ projection. void DrawRhoZHighlighted(vector<TEveCaloData::vCellId_t*>& cellLists) c",MatchSource.WIKI,root/html534/TEveCalo2DGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2DGL.html
https://root.cern/root/html534/TEveCalo2DGL.html:1845,Performance,cache,cached,1845,") const; static TClass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidDrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* ps, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tSupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveCalo2DGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo2DGL.html
https://root.cern/root/html534/TEveCalo3D.html:4974,Availability,Error,Error,4974,"istTreeItem* parent); virtual voidTEveElement::DestroyMainTrans(); virtual voidTEveElement::DestroyOrWarn(); voidTEveElement::DisableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildr",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:5103,Availability,error,error,5103,"ableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGLis",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:5187,Availability,error,error,5187,"al Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree, T",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:18572,Deployability,update,update,18572,"r); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidTEveCaloViz::SetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:18675,Deployability,update,update,18675,"r); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidTEveCaloViz::SetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:10906,Modifiability,Inherit,InheritsFrom,10906,"ueID() const; void*TEveElement::GetUserData() const; virtual Float_tTEveCaloViz::GetValToHeight() const; Bool_tTEveCaloViz::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTEveCaloViz::InvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* p",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:10972,Modifiability,Inherit,InheritsFrom,10972,"_tTEveCaloViz::GetValToHeight() const; Bool_tTEveCaloViz::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTEveCaloViz::InvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); sta",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:22370,Modifiability,variab,variable,22370,"veCaloData::CellId_t> >fCellList; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloViz::fEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tTEveCaloViz::fEndCapPosFforward end cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Color_tfFrameColor; Char_tfFrameTransparency; Float_tfFrameWidth; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloViz::fMaxTowerHbounding box z dimesion; Float_tTEveCaloViz::fMaxValAbs; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*TEveCaloViz::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tfRnrBarrelFrame; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrEndCapFrame; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::f",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:22508,Modifiability,variab,variable,22508,"*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloViz::fEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tTEveCaloViz::fEndCapPosFforward end cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Color_tfFrameColor; Char_tfFrameTransparency; Float_tfFrameWidth; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloViz::fMaxTowerHbounding box z dimesion; Float_tTEveCaloViz::fMaxValAbs; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*TEveCaloViz::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tfRnrBarrelFrame; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrEndCapFrame; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElemen",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:23878,Modifiability,Inherit,Inheritance,23878,"_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tfRnrBarrelFrame; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrEndCapFrame; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tTEveCaloViz::fValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo3D(TEveCaloData* d = 0, const char* n = ""TEveCalo3D"", const char* t = ""xx""). void BuildCellIdCache(); Build list of drawn cell IDs. See TEveCalo3DGL::DirectDraw(). void ComputeBBox(); Fill bounding-box information of the base-class TAttBBox (virtual method).; If member 'TEveFrameBox* fFrame' is set, frame's corners are used as bbox. TEveCaloViz& operator=(const TEveCalo3D& ). TEveCalo3D(const TEveCalo3D& ). virtual ~TEveCalo3D(); {}. void SetFrameWidth(Float_t w); { fFrameWidth = w; }. Float_t GetFrameWidth() const; { return fFrameWidth; }. void SetRnrFrame(Bool_t e, Bool_t b); { fRnrEndCapFrame = e; fRnrBarrelFrame = b; }. void GetRnrFrame(Bool_t& e, Bool_t& b) const; { e = fRnrEndCapFrame; b = fRnrBarrelFrame; }. void SetRnrEndCapFrame(Bool_t r); { fRnrEndCapFrame = r; }. void SetRnrBarrelFrame(Bool_t r); { fRnrBarrelFrame = r; }. Bool_t GetRnrEndCapFrame() const; { return fRnrEndCapFrame; }. Bool_t GetRnrBarrelFrame() const;",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:23891,Modifiability,Inherit,Inherited,23891,"_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tfRnrBarrelFrame; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrEndCapFrame; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tTEveCaloViz::fValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo3D(TEveCaloData* d = 0, const char* n = ""TEveCalo3D"", const char* t = ""xx""). void BuildCellIdCache(); Build list of drawn cell IDs. See TEveCalo3DGL::DirectDraw(). void ComputeBBox(); Fill bounding-box information of the base-class TAttBBox (virtual method).; If member 'TEveFrameBox* fFrame' is set, frame's corners are used as bbox. TEveCaloViz& operator=(const TEveCalo3D& ). TEveCalo3D(const TEveCalo3D& ). virtual ~TEveCalo3D(); {}. void SetFrameWidth(Float_t w); { fFrameWidth = w; }. Float_t GetFrameWidth() const; { return fFrameWidth; }. void SetRnrFrame(Bool_t e, Bool_t b); { fRnrEndCapFrame = e; fRnrBarrelFrame = b; }. void GetRnrFrame(Bool_t& e, Bool_t& b) const; { e = fRnrEndCapFrame; b = fRnrBarrelFrame; }. void SetRnrEndCapFrame(Bool_t r); { fRnrEndCapFrame = r; }. void SetRnrBarrelFrame(Bool_t r); { fRnrBarrelFrame = r; }. Bool_t GetRnrEndCapFrame() const; { return fRnrEndCapFrame; }. Bool_t GetRnrBarrelFrame() const;",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:21290,Performance,cache,cache,21290,"election; kCBTransBBox; kCBObjProps; kCBVisibility; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. static const TGPicture*TEveElement::fgListTreeIcons[9]; static const TGPicture*TEveElement::fgRnrIcons[4]. protected:. Bool_tTEveCaloViz::fAutoRangeset eta phi limits on DataChanged(); Float_t*TAttBBox::fBBox! Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max); Float_tTEveCaloViz::fBarrelRadiusbarrel raidus in cm; UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; Bool_tTEveCaloViz::fCellIdCacheOKdata cell ids cache state; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >fCellList; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloViz::fEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tTEveCaloViz::fEndCapPosFforward end cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Color_tfFrameColor; Char_tfFrameTransparency; Float_tfFrameWidth; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer ",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:10377,Security,Hash,Hash,10377,"leAbs() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; Float_tTEveCaloViz::GetTransitionEta() const; Float_tTEveCaloViz::GetTransitionEtaBackward() const; Float_tTEveCaloViz::GetTransitionEtaForward() const; Float_tTEveCaloViz::GetTransitionTheta() const; Float_tTEveCaloViz::GetTransitionThetaBackward() const; Float_tTEveCaloViz::GetTransitionThetaForward() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; virtual Float_tTEveCaloViz::GetValToHeight() const; Bool_tTEveCaloViz::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTEveCaloViz::InvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPicka",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:1459,Testability,Assert,AssertBBox,1459,"); virtual~TEveCalo3D(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProject",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:1492,Testability,Assert,AssertCellIdCache,1492,":AbstractMethod(const char* method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual ",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:1548,Testability,Assert,AssertPalette,1548,"l_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:18207,Testability,Test,TestBit,18207,"r); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidTEveCaloViz::SetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:18246,Testability,Test,TestBits,18246,"r); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidTEveCaloViz::SetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:18291,Testability,Test,TestCSCBits,18291,"r); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidTEveCaloViz::SetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:19106,Testability,Assert,AssertBBoxExtents,19106,"f_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var). protected:. virtual voidTEveElement::AnnihilateRecursively(); voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.005); voidTEveCaloViz::AssignCaloVizParameters(TEveCaloViz* cv); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1e6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); virtual voidBuildCellIdCache(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual voidTEveElement::PreDeleteElement(); virtual voidTEveElement::RemoveElementsInternal(); voidTEveCaloViz::SetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; static const char*TEveElement::ToString(Bool_t b). private:. TEveCalo3D(const TEveCalo3D&); TEveCalo3D&operator=(const TEveCalo3D&). Data Members; public:. enum TEveElement::ECompoundSelectionColorBits { kCSCBImplySelectAllChildren; kCSCBTakeAnyParentAsMaster; kCSCBApp",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:2412,Usability,Clear,Clear,2412,"ring& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEve",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:2471,Usability,Clear,ClearProjectedList,2471,"EveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveEle",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3D.html:2518,Usability,Clear,ClearStamps,2518,"GBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImplySelectAllChildren(); voidTEve",MatchSource.WIKI,root/html534/TEveCalo3D.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html
https://root.cern/root/html534/TEveCalo3DEditor.html:4372,Availability,Error,Error,4372,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBa",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:4501,Availability,error,error,4501,"* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const;",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:4585,Availability,error,error,4585,"t(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const; virtual TDNDData*TGFrame::GetDNDData(Atom_t); virtual Int_tTGFrame::GetDragType() c",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:17404,Availability,mask,mask,17404,"ndow::EEditMode { kEditEnable; kEditDisable; kEditDisableEvents; kEditDisableGrab; kEditDisableLayout; kEditDisableResize; kEditDisableHeight; kEditDisableWidth; kEditDisableBtnEnable; kEditDisableKeyEnable; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tTGedFrame::fAvoidSignalflag for executing slots; Pixel_tTGFrame::fBackgroundframe background color; Int_tTGFrame::fBorderWidthframe border width; TGClient*TGObject::fClientConnection to display server; Int_tTGFrame::fDNDStateEDNDFlags; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; UInt_tTGFrame::fEventMaskcurrenty active event mask; TList*TGedFrame::fExtraTabsaddtional tabs in ged editor; TGFrameElement*TGFrame::fFEpointer to frame element; TGNumberEntry*fFrameTransparency; TGedEditor*TGedFrame::fGedEditormanager of this frame; UInt_tTGFrame::fHeightframe height; Handle_tTGObject::fIdX11/Win32 Window identifier; Bool_tTGedFrame::fInitinit flag for setting signals/slots; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TList*TGCompositeFrame::fListcontainer of frame elements; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TEveCalo3D*fMModel object.; Bool_tTGCompositeFrame::fMapSubwindowskTRUE - map subwindows; UInt_tTGFrame::fMaxHeightmaximal frame height; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TClass*TGedFrame::fModelClassclass corresponding to instantiated GedFrame; Int_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fN",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:15066,Deployability,Update,Update,15066,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:10678,Integrability,Message,Message,10678,"Frame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTGCompositeFrame::Print(Option_t* option = """") const; virtual voidTGFrame::",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:9223,Modifiability,Inherit,InheritsFrom,9223,"irtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:9289,Modifiability,Inherit,InheritsFrom,9289," Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:19785,Modifiability,Inherit,Inheritance,19785,"w::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo3DEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoFrameTransparency(); Slot for frame transparency. TEveCaloVizEditor& operator=(const TEveCalo3DEditor& ). TEveCalo3DEditor(const TEveCalo3DEditor& ). virtual ~TEveCalo3DEditor(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:19798,Modifiability,Inherit,Inherited,19798,"w::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo3DEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoFrameTransparency(); Slot for frame transparency. TEveCaloVizEditor& operator=(const TEveCalo3DEditor& ). TEveCalo3DEditor(const TEveCalo3DEditor& ). virtual ~TEveCalo3DEditor(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:8933,Security,Hash,Hash,8933,"t_t, Int_t); virtual Bool_tTGCompositeFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWi",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:14832,Testability,Test,TestBit,14832,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:14871,Testability,Test,TestBits,14871,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DEditor.html:1594,Usability,Clear,Clear,1594,"ar* method) const; virtual Bool_tTGedFrame::AcceptModel(TObject*); virtual voidTGFrame::Activate(Bool_t); virtual voidTGedFrame::ActivateBaseClassEditors(TClass* cl); virtual voidTGedFrame::AddExtraTab(TGedFrame::TGedSubFrame* sf); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; virtual TGVerticalFrame*TGedFrame::CreateEditorTabSubFrame(const char* name); virtual voidTGFrame::Delete(Option_t* = """"); virtual voidTGFrame::DeleteWindow(); virtual voidTQObject::Destroyed()SIGNAL ; virtual voidTGWindow::DestroySubwindows(); virtual voidTGWindow::Des",MatchSource.WIKI,root/html534/TEveCalo3DEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DEditor.html
https://root.cern/root/html534/TEveCalo3DGL.html:2484,Deployability,Update,UpdateBoundingBox,2484,"oundingBox() const; static TClass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidDrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* ps, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tSupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveCalo3DGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DGL.html
https://root.cern/root/html534/TEveCalo3DGL.html:2526,Deployability,Update,UpdateBoundingBoxesOfPhysicals,2526,"oundingBox() const; static TClass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidDrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* ps, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tSupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveCalo3DGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DGL.html
https://root.cern/root/html534/TEveCalo3DGL.html:4523,Modifiability,Inherit,Inheritance,4523," kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveCalo3D*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; vector<Float_t>fOffset; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo3DGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. Bool_t ShouldDLCache(const TGLRnrCtx& rnrCtx) const; Override from TGLObject.; To account for large point-sizes we modify the projection matrix; during selection and thus we need a direct draw. void CrossProduct(const Float_t* a, const Float_t* b, const Float_t* c, Float_t* out) const; Calculate cross-product. void RenderGridEndCap() const; Render end cap grid. void RenderGridBarrel() const; Render barrel grid. void RenderGrid(TGLRnrCtx& rnrCtx) const; Draw frame reading eta, phi axis. void RenderBox(const Float_t* pnts) const; Render box with given points. void RenderBarrelCell(const TEveCaloData::CellGeom_t& cell, Float_t towerH, Float_t& offset) const; Render barrel cell. void RenderEndCapCell(const TEveCaloData::CellGeom_t& cell, Float_t towerH, Float_t& offset) const; Render an endcap cell. void Direct",MatchSource.WIKI,root/html534/TEveCalo3DGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DGL.html
https://root.cern/root/html534/TEveCalo3DGL.html:4536,Modifiability,Inherit,Inherited,4536," kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveCalo3D*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; vector<Float_t>fOffset; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo3DGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. Bool_t ShouldDLCache(const TGLRnrCtx& rnrCtx) const; Override from TGLObject.; To account for large point-sizes we modify the projection matrix; during selection and thus we need a direct draw. void CrossProduct(const Float_t* a, const Float_t* b, const Float_t* c, Float_t* out) const; Calculate cross-product. void RenderGridEndCap() const; Render end cap grid. void RenderGridBarrel() const; Render barrel grid. void RenderGrid(TGLRnrCtx& rnrCtx) const; Draw frame reading eta, phi axis. void RenderBox(const Float_t* pnts) const; Render box with given points. void RenderBarrelCell(const TEveCaloData::CellGeom_t& cell, Float_t towerH, Float_t& offset) const; Render barrel cell. void RenderEndCapCell(const TEveCaloData::CellGeom_t& cell, Float_t towerH, Float_t& offset) const; Render an endcap cell. void Direct",MatchSource.WIKI,root/html534/TEveCalo3DGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DGL.html
https://root.cern/root/html534/TEveCalo3DGL.html:1845,Performance,cache,cached,1845,"oundingBox() const; static TClass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidTGLLogicalShape::DLCacheDrop(); virtual voidTGLLogicalShape::DLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidDrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* ps, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tSupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveCalo3DGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCalo3DGL.html
https://root.cern/root/html534/TEveCaloData.html:562,Availability,avail,available,562,". TEveCaloData. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveCaloData. class TEveCaloData: public TEveElement, public TNamed. A central manager for calorimeter event data. It provides a list of; cells within requested phi and eta range. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TEveCaloData(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); stat",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:4526,Availability,Error,Error,4526,"estroyListSubTree(TGListTree* ltree, TGListTreeItem* parent); virtual voidTEveElement::DestroyMainTrans(); virtual voidTEveElement::DestroyOrWarn(); voidTEveElement::DisableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); Bool_tEmpty() const; voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Float_tEtaToTheta(Float_t eta); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidFillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); In",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:4694,Availability,error,error,4694,"sableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); Bool_tEmpty() const; voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Float_tEtaToTheta(Float_t eta); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidFillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree)",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:4778,Availability,error,error,4778,"ual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); Bool_tEmpty() const; voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Float_tEtaToTheta(Float_t eta); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidFillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree, TGListTreeItem",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:16238,Deployability,update,update,16238,"eElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidSetSliceColor(Int_t slice, Color_t col); voidSetSliceThreshold(Int_t slice, Float_t threshold); voidSetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidSetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidUnHighlighted(); virtual voidUnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:16341,Deployability,update,update,16341,"eElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidSetSliceColor(Int_t slice, Color_t col); voidSetSliceThreshold(Int_t slice, Float_t threshold); voidSetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidSetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidUnHighlighted(); virtual voidUnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:21509,Deployability,update,update,21509,"liedSelectedSet(TEveElement::Set_t& impSelSet); Populate set impSelSet with derived / dependant elements. void PrintCellsSelected(); Print selected cells info. void ProcessSelection(TEveCaloData::vCellId_t& sel_cells, TGLSelectRecord& rec); Process newly selected cells with given select-record.; Secondary-select status is set.; CellSelectionChanged() is called if needed. void SetSliceThreshold(Int_t slice, Float_t threshold); Set threshold for given slice. Float_t GetSliceThreshold(Int_t slice) const; Get threshold for given slice. void SetSliceColor(Int_t slice, Color_t col); Set color for given slice. Color_t GetSliceColor(Int_t slice) const; Get color for given slice. void SetSliceTransparency(Int_t slice, Char_t t); Set transparency for given slice. Char_t GetSliceTransparency(Int_t slice) const; Get transparency for given slice. void InvalidateUsersCellIdCache(); Invalidate cell ids cache on back ptr references. void DataChanged(); Tell users (TEveCaloViz instances using this data) that data; has changed and they should update the limits/scales etc.; This is done by calling TEveCaloViz::DataChanged(). void CellSelectionChanged(); Tell users (TEveCaloViz instances using this data) that cell selection; has changed and they should update selection cache if necessary.; This is done by calling TEveCaloViz::CellSelectionChanged(). Float_t EtaToTheta(Float_t eta). TEveCaloData& operator=(const TEveCaloData& ). virtual ~TEveCaloData(); {}. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; { return fCellsSelected; }. vCellId_t& GetCellsHighlighted(); { return fCellsHighlighted; }. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const. Int_t GetNSlices() const; { return fSliceInfos.size(); }. SliceInfo_t& RefSliceInfo(Int_t s); { return fSliceInfos[s]; }. void Ge",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:21721,Deployability,update,update,21721," sel_cells, TGLSelectRecord& rec); Process newly selected cells with given select-record.; Secondary-select status is set.; CellSelectionChanged() is called if needed. void SetSliceThreshold(Int_t slice, Float_t threshold); Set threshold for given slice. Float_t GetSliceThreshold(Int_t slice) const; Get threshold for given slice. void SetSliceColor(Int_t slice, Color_t col); Set color for given slice. Color_t GetSliceColor(Int_t slice) const; Get color for given slice. void SetSliceTransparency(Int_t slice, Char_t t); Set transparency for given slice. Char_t GetSliceTransparency(Int_t slice) const; Get transparency for given slice. void InvalidateUsersCellIdCache(); Invalidate cell ids cache on back ptr references. void DataChanged(); Tell users (TEveCaloViz instances using this data) that data; has changed and they should update the limits/scales etc.; This is done by calling TEveCaloViz::DataChanged(). void CellSelectionChanged(); Tell users (TEveCaloViz instances using this data) that cell selection; has changed and they should update selection cache if necessary.; This is done by calling TEveCaloViz::CellSelectionChanged(). Float_t EtaToTheta(Float_t eta). TEveCaloData& operator=(const TEveCaloData& ). virtual ~TEveCaloData(); {}. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; { return fCellsSelected; }. vCellId_t& GetCellsHighlighted(); { return fCellsHighlighted; }. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const. Int_t GetNSlices() const; { return fSliceInfos.size(); }. SliceInfo_t& RefSliceInfo(Int_t s); { return fSliceInfos[s]; }. void GetEtaLimits(Double_t& min, Double_t& max) const. void GetPhiLimits(Double_t& min, Double_t& max) const. Float_t GetMaxVal(Bool_t et) const; { return et ? fMaxValEt : fMaxValE; }. Bool_t Empty() const; { retu",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:20554,Integrability,depend,dependant,20554,"ldrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tfWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void UnSelected(); Virtual method TEveElement::UnSelect.; Clear selected towers when deselected. void UnHighlighted(); Virtual method TEveElement::UnHighlighted. TString GetHighlightTooltip(). void FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); Populate set impSelSet with derived / dependant elements. void PrintCellsSelected(); Print selected cells info. void ProcessSelection(TEveCaloData::vCellId_t& sel_cells, TGLSelectRecord& rec); Process newly selected cells with given select-record.; Secondary-select status is set.; CellSelectionChanged() is called if needed. void SetSliceThreshold(Int_t slice, Float_t threshold); Set threshold for given slice. Float_t GetSliceThreshold(Int_t slice) const; Get threshold for given slice. void SetSliceColor(Int_t slice, Color_t col); Set color for given slice. Color_t GetSliceColor(Int_t slice) const; Get color for given slice. void SetSliceTransparency(Int_t slice, Char_t t); Set transparency for given slice. Char_t GetSliceTransparency(Int_t slice) const; Get transparency for given slice. void InvalidateUsersCellIdCache(); Invalidate cell ids cache on back ptr references. void DataChanged(); Tell users (TEveCaloViz instances using this data) that data; has changed and they should updat",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:9584,Modifiability,Inherit,InheritsFrom,9584," TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; Bool_tGetWrapTwoPi() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; virtual voidInvalidateUsersCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* p",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:9650,Modifiability,Inherit,InheritsFrom,9650,"TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; Bool_tGetWrapTwoPi() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; virtual voidInvalidateUsersCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); sta",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:19026,Modifiability,variab,variable,19026,"f main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >fCellsHighlighted; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >fCellsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tfEps; TAxis*fEtaAxis; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tfMaxValEcached; Float_tfMaxValEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled us",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:19164,Modifiability,variab,variable,19164,"editing of main transparency.; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >fCellsHighlighted; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >fCellsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tfEps; TAxis*fEtaAxis; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tfMaxValEcached; Float_tfMaxValEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for mod",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:20186,Modifiability,Inherit,Inheritance,20186,"lEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tfWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void UnSelected(); Virtual method TEveElement::UnSelect.; Clear selected towers when deselected. void UnHighlighted(); Virtual method TEveElement::UnHighlighted. TString GetHighlightTooltip(). void FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); Populate set impSelSet with derived / dependant elements. void PrintCellsSelected(); Print selected cells info. void ProcessSelection(TEveCaloData::vCellId_t& sel_cells, TGLSelectRecord& rec); Process newly selected cells with given select-record.; Secondary-select status is set.; CellSelectionChanged() is called if needed. void SetSliceThreshold(Int_t slice, Float_t threshold); Set threshold for given slice. Float_t GetSliceThreshold(Int_t slice) const; Get threshold for given slice. void SetSliceColor(Int_t slice, Color_t col); Set color for given slice. Color_t GetSliceColor(Int_t slice) const; Get color for given slice. void SetSliceTransparency(Int_t slice, Char_t t); Set transparen",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:20199,Modifiability,Inherit,Inherited,20199,"lEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tfWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void UnSelected(); Virtual method TEveElement::UnSelect.; Clear selected towers when deselected. void UnHighlighted(); Virtual method TEveElement::UnHighlighted. TString GetHighlightTooltip(). void FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); Populate set impSelSet with derived / dependant elements. void PrintCellsSelected(); Print selected cells info. void ProcessSelection(TEveCaloData::vCellId_t& sel_cells, TGLSelectRecord& rec); Process newly selected cells with given select-record.; Secondary-select status is set.; CellSelectionChanged() is called if needed. void SetSliceThreshold(Int_t slice, Float_t threshold); Set threshold for given slice. Float_t GetSliceThreshold(Int_t slice) const; Get threshold for given slice. void SetSliceColor(Int_t slice, Color_t col); Set color for given slice. Color_t GetSliceColor(Int_t slice) const; Get color for given slice. void SetSliceTransparency(Int_t slice, Char_t t); Set transparen",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:21369,Performance,cache,cache,21369,"ted. void UnHighlighted(); Virtual method TEveElement::UnHighlighted. TString GetHighlightTooltip(). void FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); Populate set impSelSet with derived / dependant elements. void PrintCellsSelected(); Print selected cells info. void ProcessSelection(TEveCaloData::vCellId_t& sel_cells, TGLSelectRecord& rec); Process newly selected cells with given select-record.; Secondary-select status is set.; CellSelectionChanged() is called if needed. void SetSliceThreshold(Int_t slice, Float_t threshold); Set threshold for given slice. Float_t GetSliceThreshold(Int_t slice) const; Get threshold for given slice. void SetSliceColor(Int_t slice, Color_t col); Set color for given slice. Color_t GetSliceColor(Int_t slice) const; Get color for given slice. void SetSliceTransparency(Int_t slice, Char_t t); Set transparency for given slice. Char_t GetSliceTransparency(Int_t slice) const; Get transparency for given slice. void InvalidateUsersCellIdCache(); Invalidate cell ids cache on back ptr references. void DataChanged(); Tell users (TEveCaloViz instances using this data) that data; has changed and they should update the limits/scales etc.; This is done by calling TEveCaloViz::DataChanged(). void CellSelectionChanged(); Tell users (TEveCaloViz instances using this data) that cell selection; has changed and they should update selection cache if necessary.; This is done by calling TEveCaloViz::CellSelectionChanged(). Float_t EtaToTheta(Float_t eta). TEveCaloData& operator=(const TEveCaloData& ). virtual ~TEveCaloData(); {}. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; { return fCellsSelected; }. vCellId_t& GetCellsHighlighted(); { return fCellsHighlighted; }. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const. Int_t GetNSlices(",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:21738,Performance,cache,cache,21738," sel_cells, TGLSelectRecord& rec); Process newly selected cells with given select-record.; Secondary-select status is set.; CellSelectionChanged() is called if needed. void SetSliceThreshold(Int_t slice, Float_t threshold); Set threshold for given slice. Float_t GetSliceThreshold(Int_t slice) const; Get threshold for given slice. void SetSliceColor(Int_t slice, Color_t col); Set color for given slice. Color_t GetSliceColor(Int_t slice) const; Get color for given slice. void SetSliceTransparency(Int_t slice, Char_t t); Set transparency for given slice. Char_t GetSliceTransparency(Int_t slice) const; Get transparency for given slice. void InvalidateUsersCellIdCache(); Invalidate cell ids cache on back ptr references. void DataChanged(); Tell users (TEveCaloViz instances using this data) that data; has changed and they should update the limits/scales etc.; This is done by calling TEveCaloViz::DataChanged(). void CellSelectionChanged(); Tell users (TEveCaloViz instances using this data) that cell selection; has changed and they should update selection cache if necessary.; This is done by calling TEveCaloViz::CellSelectionChanged(). Float_t EtaToTheta(Float_t eta). TEveCaloData& operator=(const TEveCaloData& ). virtual ~TEveCaloData(); {}. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; { return fCellsSelected; }. vCellId_t& GetCellsHighlighted(); { return fCellsHighlighted; }. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const. Int_t GetNSlices() const; { return fSliceInfos.size(); }. SliceInfo_t& RefSliceInfo(Int_t s); { return fSliceInfos[s]; }. void GetEtaLimits(Double_t& min, Double_t& max) const. void GetPhiLimits(Double_t& min, Double_t& max) const. Float_t GetMaxVal(Bool_t et) const; { return et ? fMaxValEt : fMaxValE; }. Bool_t Empty() const; { retu",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:9109,Security,Hash,Hash,9109,"ect*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; Color_tGetSliceColor(Int_t slice) const; Float_tGetSliceThreshold(Int_t slice) const; Char_tGetSliceTransparency(Int_t slice) const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; Bool_tGetWrapTwoPi() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; virtual voidInvalidateUsersCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const;",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:15899,Testability,Test,TestBit,15899,"eElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidSetSliceColor(Int_t slice, Color_t col); voidSetSliceThreshold(Int_t slice, Float_t threshold); voidSetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidSetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidUnHighlighted(); virtual voidUnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:15938,Testability,Test,TestBits,15938,"eElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidSetSliceColor(Int_t slice, Color_t col); voidSetSliceThreshold(Int_t slice, Float_t threshold); voidSetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidSetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidUnHighlighted(); virtual voidUnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:15983,Testability,Test,TestCSCBits,15983,"eElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidSetSliceColor(Int_t slice, Color_t col); voidSetSliceThreshold(Int_t slice, Float_t threshold); voidSetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidSetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidUnHighlighted(); virtual voidUnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:2087,Usability,Clear,Clear,2087,"(TEveElement* re); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImp",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:2142,Usability,Clear,ClearStamps,2142,"_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImplySelectAllChildren(); voidTEveElement::CSCTakeAnyParentAs",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloData.html:20321,Usability,Clear,Clear,20321,"or parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tfWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void UnSelected(); Virtual method TEveElement::UnSelect.; Clear selected towers when deselected. void UnHighlighted(); Virtual method TEveElement::UnHighlighted. TString GetHighlightTooltip(). void FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); Populate set impSelSet with derived / dependant elements. void PrintCellsSelected(); Print selected cells info. void ProcessSelection(TEveCaloData::vCellId_t& sel_cells, TGLSelectRecord& rec); Process newly selected cells with given select-record.; Secondary-select status is set.; CellSelectionChanged() is called if needed. void SetSliceThreshold(Int_t slice, Float_t threshold); Set threshold for given slice. Float_t GetSliceThreshold(Int_t slice) const; Get threshold for given slice. void SetSliceColor(Int_t slice, Color_t col); Set color for given slice. Color_t GetSliceColor(Int_t slice) const; Get color for given slice. void SetSliceTransparency(Int_t slice, Char_t t); Set transparency for given slice. Char_t GetSliceTransparency(Int_t slice) const; Get transparency for given slice. void InvalidateUsersCellI",MatchSource.WIKI,root/html534/TEveCaloData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData.html
https://root.cern/root/html534/TEveCaloDataHist.html:4477,Availability,Error,Error,4477,"ree(TGListTree* ltree, TGListTreeItem* parent); virtual voidTEveElement::DestroyMainTrans(); virtual voidTEveElement::DestroyOrWarn(); voidTEveElement::DisableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); Bool_tTEveCaloData::Empty() const; voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Float_tTEveCaloData::EtaToTheta(Float_t eta); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveCaloData::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:4659,Availability,error,error,4659,"_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); Bool_tTEveCaloData::Empty() const; voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Float_tTEveCaloData::EtaToTheta(Float_t eta); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveCaloData::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGLi",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:4743,Availability,error,error,4743,"Primitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); Bool_tTEveCaloData::Empty() const; voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Float_tTEveCaloData::EtaToTheta(Float_t eta); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveCaloData::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree, ",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:16620,Deployability,update,update,16620,"veElement::SetRnrState(Bool_t rnr); voidTEveCaloData::SetSliceColor(Int_t slice, Color_t col); voidTEveCaloData::SetSliceThreshold(Int_t slice, Float_t threshold); voidTEveCaloData::SetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidTEveCaloData::SetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveCaloData::UnHighlighted(); virtual voidTEveCaloData::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:16723,Deployability,update,update,16723,"veElement::SetRnrState(Bool_t rnr); voidTEveCaloData::SetSliceColor(Int_t slice, Color_t col); voidTEveCaloData::SetSliceThreshold(Int_t slice, Float_t threshold); voidTEveCaloData::SetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidTEveCaloData::SetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveCaloData::UnHighlighted(); virtual voidTEveCaloData::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:20925,Deployability,Update,Update,20925,"ent*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataHist(); Constructor. ~TEveCaloDataHist(); Destructor. void DataChanged(); Update limits and notify data users. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell IDs in given eta and phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. Int_t AddHistogram(TH2F* hist); Add new slice to calo tower. Updates cached variables fMaxValE; and fMaxValEt; Return last index in the vector of slice infos. TH2F* GetHist(Int_t slice) const; Get histogram in given slice. void GetEtaLimits(Double_t& min, Double_t& max) const; Get eta limits. void GetPhiLimits(Double_t& min, Double_t& max) const; Get phi limits. TEveCaloData& operator=(const TEveCaloDataHist& ). TEveCaloDataHist(const TEveCaloDataHist& ). THStack* GetStack(); { return fHStack; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene B",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:21431,Deployability,Update,Updates,21431,"ector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataHist(); Constructor. ~TEveCaloDataHist(); Destructor. void DataChanged(); Update limits and notify data users. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell IDs in given eta and phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. Int_t AddHistogram(TH2F* hist); Add new slice to calo tower. Updates cached variables fMaxValE; and fMaxValEt; Return last index in the vector of slice infos. TH2F* GetHist(Int_t slice) const; Get histogram in given slice. void GetEtaLimits(Double_t& min, Double_t& max) const; Get eta limits. void GetPhiLimits(Double_t& min, Double_t& max) const; Get phi limits. TEveCaloData& operator=(const TEveCaloDataHist& ). TEveCaloDataHist(const TEveCaloDataHist& ). THStack* GetStack(); { return fHStack; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:9784,Modifiability,Inherit,InheritsFrom,9784,"ect() const; THStack*GetStack(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; Bool_tTEveCaloData::GetWrapTwoPi() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; virtual voidTEveCaloData::InvalidateUsersCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator ",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:9850,Modifiability,Inherit,InheritsFrom,9850,"le() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; Bool_tTEveCaloData::GetWrapTwoPi() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; virtual voidTEveCaloData::InvalidateUsersCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, ",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:19532,Modifiability,variab,variable,19532,"transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >TEveCaloData::fCellsHighlighted; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >TEveCaloData::fCellsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloData::fEps; TAxis*TEveCaloData::fEtaAxis; THStack*fHStack; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloData::fMaxValEcached; Float_tTEveCaloData::fMaxValEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveE",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:19670,Modifiability,variab,variable,19670,"veCaloData::CellId_t> >TEveCaloData::fCellsHighlighted; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >TEveCaloData::fCellsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloData::fEps; TAxis*TEveCaloData::fEtaAxis; THStack*fHStack; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloData::fMaxValEcached; Float_tTEveCaloData::fMaxValEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TS",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:20762,Modifiability,Inherit,Inheritance,20762,"tifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataHist(); Constructor. ~TEveCaloDataHist(); Destructor. void DataChanged(); Update limits and notify data users. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell IDs in given eta and phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. Int_t AddHistogram(TH2F* hist); Add new slice to calo tower. Updates cached variables fMaxValE; and fMaxValEt; Return last index in the vector of slice infos. TH2F* GetHist(Int_t slice) const; Get histogram in given slice. void GetEtaLimits(Double_t& min, Double_t& max) const; Get eta limits. void GetPhiLimits(Double_t& min, Double_t& max) const; Get phi limits. TEveCaloData& operator=(const TEveCaloDataHist& ). TE",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:20775,Modifiability,Inherit,Inherited,20775,"tifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataHist(); Constructor. ~TEveCaloDataHist(); Destructor. void DataChanged(); Update limits and notify data users. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell IDs in given eta and phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. Int_t AddHistogram(TH2F* hist); Add new slice to calo tower. Updates cached variables fMaxValE; and fMaxValEt; Return last index in the vector of slice infos. TH2F* GetHist(Int_t slice) const; Get histogram in given slice. void GetEtaLimits(Double_t& min, Double_t& max) const; Get eta limits. void GetPhiLimits(Double_t& min, Double_t& max) const; Get phi limits. TEveCaloData& operator=(const TEveCaloDataHist& ). TE",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:21446,Modifiability,variab,variables,21446,"ector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataHist(); Constructor. ~TEveCaloDataHist(); Destructor. void DataChanged(); Update limits and notify data users. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell IDs in given eta and phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. Int_t AddHistogram(TH2F* hist); Add new slice to calo tower. Updates cached variables fMaxValE; and fMaxValEt; Return last index in the vector of slice infos. TH2F* GetHist(Int_t slice) const; Get histogram in given slice. void GetEtaLimits(Double_t& min, Double_t& max) const; Get eta limits. void GetPhiLimits(Double_t& min, Double_t& max) const; Get phi limits. TEveCaloData& operator=(const TEveCaloDataHist& ). TEveCaloDataHist(const TEveCaloDataHist& ). THStack* GetStack(); { return fHStack; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:21439,Performance,cache,cached,21439,"ector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataHist(); Constructor. ~TEveCaloDataHist(); Destructor. void DataChanged(); Update limits and notify data users. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell IDs in given eta and phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. Int_t AddHistogram(TH2F* hist); Add new slice to calo tower. Updates cached variables fMaxValE; and fMaxValEt; Return last index in the vector of slice infos. TH2F* GetHist(Int_t slice) const; Get histogram in given slice. void GetEtaLimits(Double_t& min, Double_t& max) const; Get eta limits. void GetPhiLimits(Double_t& min, Double_t& max) const; Get phi limits. TEveCaloData& operator=(const TEveCaloDataHist& ). TEveCaloDataHist(const TEveCaloDataHist& ). THStack* GetStack(); { return fHStack; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:9309,Security,Hash,Hash,9309,"l_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; Color_tTEveCaloData::GetSliceColor(Int_t slice) const; Float_tTEveCaloData::GetSliceThreshold(Int_t slice) const; Char_tTEveCaloData::GetSliceTransparency(Int_t slice) const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; THStack*GetStack(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; Bool_tTEveCaloData::GetWrapTwoPi() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; virtual voidTEveCaloData::InvalidateUsersCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSor",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:16253,Testability,Test,TestBit,16253,"veElement::SetRnrState(Bool_t rnr); voidTEveCaloData::SetSliceColor(Int_t slice, Color_t col); voidTEveCaloData::SetSliceThreshold(Int_t slice, Float_t threshold); voidTEveCaloData::SetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidTEveCaloData::SetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveCaloData::UnHighlighted(); virtual voidTEveCaloData::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:16292,Testability,Test,TestBits,16292,"veElement::SetRnrState(Bool_t rnr); voidTEveCaloData::SetSliceColor(Int_t slice, Color_t col); voidTEveCaloData::SetSliceThreshold(Int_t slice, Float_t threshold); voidTEveCaloData::SetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidTEveCaloData::SetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveCaloData::UnHighlighted(); virtual voidTEveCaloData::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:16337,Testability,Test,TestCSCBits,16337,"veElement::SetRnrState(Bool_t rnr); voidTEveCaloData::SetSliceColor(Int_t slice, Color_t col); voidTEveCaloData::SetSliceThreshold(Int_t slice, Float_t threshold); voidTEveCaloData::SetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidTEveCaloData::SetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveCaloData::UnHighlighted(); virtual voidTEveCaloData::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:2024,Usability,Clear,Clear,2024,"re); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTEveCaloData::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImp",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataHist.html:2079,Usability,Clear,ClearStamps,2079,"ual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTEveCaloData::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImplySelectAllChildren(); voidTEveElement::CSCTakeAnyParentAs",MatchSource.WIKI,root/html534/TEveCaloDataHist.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataHist.html
https://root.cern/root/html534/TEveCaloDataVec.html:4477,Availability,Error,Error,4477,"ree(TGListTree* ltree, TGListTreeItem* parent); virtual voidTEveElement::DestroyMainTrans(); virtual voidTEveElement::DestroyOrWarn(); voidTEveElement::DisableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); Bool_tTEveCaloData::Empty() const; voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Float_tTEveCaloData::EtaToTheta(Float_t eta); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveCaloData::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); voidFillSlice(Int_t slice, Float_t value); voidFillSlice(Int_t slice, Int_t tower, Float_t value); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:4659,Availability,error,error,4659,"_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); Bool_tTEveCaloData::Empty() const; voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Float_tTEveCaloData::EtaToTheta(Float_t eta); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveCaloData::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); voidFillSlice(Int_t slice, Float_t value); voidFillSlice(Int_t slice, Int_t tower, Float_t value); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& match",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:4743,Availability,error,error,4743,"Primitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); Bool_tTEveCaloData::Empty() const; voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Float_tTEveCaloData::EtaToTheta(Float_t eta); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveCaloData::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); voidFillSlice(Int_t slice, Float_t value); voidFillSlice(Int_t slice, Int_t tower, Float_t value); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:16842,Deployability,update,update,16842,"veElement::SetRnrState(Bool_t rnr); voidTEveCaloData::SetSliceColor(Int_t slice, Color_t col); voidTEveCaloData::SetSliceThreshold(Int_t slice, Float_t threshold); voidTEveCaloData::SetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidTEveCaloData::SetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveCaloData::UnHighlighted(); virtual voidTEveCaloData::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:16945,Deployability,update,update,16945,"veElement::SetRnrState(Bool_t rnr); voidTEveCaloData::SetSliceColor(Int_t slice, Color_t col); voidTEveCaloData::SetSliceThreshold(Int_t slice, Float_t threshold); voidTEveCaloData::SetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidTEveCaloData::SetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveCaloData::UnHighlighted(); virtual voidTEveCaloData::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:22103,Deployability,Update,Update,22103,"urrent tower; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataVec(Int_t nslices); Constructor. ~TEveCaloDataVec(); Destructor. Int_t AddSlice(); Add new slice. Int_t AddTower(Float_t etaMin, Float_t etaMax, Float_t phiMin, Float_t phiMax); Add tower within eta/phi range. void FillSlice(Int_t slice, Float_t value); Fill given slice in the current tower. void FillSlice(Int_t slice, Int_t tower, Float_t value); Fill given slice in a given tower. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell-ids for given eta/phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const; Rebin cells. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. void DataChanged(); Update limits and notify data users. void SetAxisFromBins(Double_t epsX = 0.001, Double_t epsY = 0.001); Set XY axis from cells geometry. Float_t* GetSliceVals(Int_t slice). TEveCaloData& operator=(const TEveCaloDataVec& ). void GetEtaLimits(Double_t& min, Double_t& max) const. void GetPhiLimits(Double_t& min, Double_t& max) const. TEveCaloDataVec(const TEveCaloDataVec& ). Int_t GetNCells(); { return fGeomVec.size(); }. std::vector<TEveCaloData::CellGeom_t>& GetCellGeom(); { return fGeomVec; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:9939,Modifiability,Inherit,InheritsFrom,9939,"lement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; Bool_tTEveCaloData::GetWrapTwoPi() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; virtual voidTEveCaloData::InvalidateUsersCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator ",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:10005,Modifiability,Inherit,InheritsFrom,10005,"le() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; Bool_tTEveCaloData::GetWrapTwoPi() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; virtual voidTEveCaloData::InvalidateUsersCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, ",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:19844,Modifiability,variab,variable,19844,".; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >TEveCaloData::fCellsHighlighted; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >TEveCaloData::fCellsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloData::fEps; TAxis*TEveCaloData::fEtaAxis; Float_tfEtaMax; Float_tfEtaMin; vector<TEveCaloData::CellGeom_t,allocator<TEveCaloData::CellGeom_t> >fGeomVec; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloData::fMaxValEcached; Float_tTEveCaloData::fMaxValEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Float_tfPhiMax; Float_tfPhiMin; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; vector<vector<float>,allocator<vector<float> > >fSliceVec; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopIte",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:19982,Modifiability,variab,variable,19982,"r<TEveCaloData::CellId_t> >TEveCaloData::fCellsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloData::fEps; TAxis*TEveCaloData::fEtaAxis; Float_tfEtaMax; Float_tfEtaMin; vector<TEveCaloData::CellGeom_t,allocator<TEveCaloData::CellGeom_t> >fGeomVec; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloData::fMaxValEcached; Float_tTEveCaloData::fMaxValEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Float_tfPhiMax; Float_tfPhiMin; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; vector<vector<float>,allocator<vector<float> > >fSliceVec; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Int_tfTowercurrent tower; void*TEveElement::fUserData! Ext",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:21191,Modifiability,Inherit,Inheritance,21191,"ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Float_tfPhiMax; Float_tfPhiMin; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; vector<vector<float>,allocator<vector<float> > >fSliceVec; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Int_tfTowercurrent tower; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataVec(Int_t nslices); Constructor. ~TEveCaloDataVec(); Destructor. Int_t AddSlice(); Add new slice. Int_t AddTower(Float_t etaMin, Float_t etaMax, Float_t phiMin, Float_t phiMax); Add tower within eta/phi range. void FillSlice(Int_t slice, Float_t value); Fill given slice in the current tower. void FillSlice(Int_t slice, Int_t tower, Float_t value); Fill given slice in a given tower. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell-ids for given eta/phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const; Rebin cells. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. void DataChanged(); Update limits and notify data users. void SetAxisFromBins(Double_t epsX = 0.001, Double_t epsY = 0.001); Set XY ax",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:21204,Modifiability,Inherit,Inherited,21204,"ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Float_tfPhiMax; Float_tfPhiMin; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; vector<vector<float>,allocator<vector<float> > >fSliceVec; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Int_tfTowercurrent tower; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataVec(Int_t nslices); Constructor. ~TEveCaloDataVec(); Destructor. Int_t AddSlice(); Add new slice. Int_t AddTower(Float_t etaMin, Float_t etaMax, Float_t phiMin, Float_t phiMax); Add tower within eta/phi range. void FillSlice(Int_t slice, Float_t value); Fill given slice in the current tower. void FillSlice(Int_t slice, Int_t tower, Float_t value); Fill given slice in a given tower. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell-ids for given eta/phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const; Rebin cells. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. void DataChanged(); Update limits and notify data users. void SetAxisFromBins(Double_t epsX = 0.001, Double_t epsY = 0.001); Set XY ax",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:9464,Security,Hash,Hash,9464,"nything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; Color_tTEveCaloData::GetSliceColor(Int_t slice) const; Float_tTEveCaloData::GetSliceThreshold(Int_t slice) const; Char_tTEveCaloData::GetSliceTransparency(Int_t slice) const; vector<Float_t>&GetSliceVals(Int_t slice); TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; Bool_tTEveCaloData::GetWrapTwoPi() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; virtual voidTEveCaloData::InvalidateUsersCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSor",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:16475,Testability,Test,TestBit,16475,"veElement::SetRnrState(Bool_t rnr); voidTEveCaloData::SetSliceColor(Int_t slice, Color_t col); voidTEveCaloData::SetSliceThreshold(Int_t slice, Float_t threshold); voidTEveCaloData::SetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidTEveCaloData::SetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveCaloData::UnHighlighted(); virtual voidTEveCaloData::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:16514,Testability,Test,TestBits,16514,"veElement::SetRnrState(Bool_t rnr); voidTEveCaloData::SetSliceColor(Int_t slice, Color_t col); voidTEveCaloData::SetSliceThreshold(Int_t slice, Float_t threshold); voidTEveCaloData::SetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidTEveCaloData::SetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveCaloData::UnHighlighted(); virtual voidTEveCaloData::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:16559,Testability,Test,TestCSCBits,16559,"veElement::SetRnrState(Bool_t rnr); voidTEveCaloData::SetSliceColor(Int_t slice, Color_t col); voidTEveCaloData::SetSliceThreshold(Int_t slice, Float_t threshold); voidTEveCaloData::SetSliceTransparency(Int_t slice, Char_t t); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); voidTEveCaloData::SetWrapTwoPi(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveCaloData::UnHighlighted(); virtual voidTEveCaloData::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:2024,Usability,Clear,Clear,2024,"Min, Float_t etaMax, Float_t phiMin, Float_t phiMax); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTEveCaloData::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImp",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloDataVec.html:2079,Usability,Clear,ClearStamps,2079,"ual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTEveCaloData::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImplySelectAllChildren(); voidTEveElement::CSCTakeAnyParentAs",MatchSource.WIKI,root/html534/TEveCaloDataVec.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloDataVec.html
https://root.cern/root/html534/TEveCaloData__SliceInfo_t.html:987,Energy Efficiency,energy,energy,987,". TEveCaloData::SliceInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveCaloData::SliceInfo_t. class TEveCaloData::SliceInfo_t. Function Members (Methods); public:. virtual~SliceInfo_t(); static TClass*Class(); virtual TClass*IsA() const; TEveCaloData::SliceInfo_t&operator=(const TEveCaloData::SliceInfo_t&); voidSetup(const char* name, Float_t threshold, Color_t col, Char_t transp = 101); virtual voidShowMembers(TMemberInspector&); TEveCaloData::SliceInfo_tSliceInfo_t(); TEveCaloData::SliceInfo_tSliceInfo_t(const TEveCaloData::SliceInfo_t&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Color_tfColorColor used to draw this longitudinal slice.; TStringfNameName of the slice, eg. ECAL, HCAL.; Float_tfThresholdOnly display towers with higher energy.; Color_tfTransparencyTransparency used to draw this longitudinal slice. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SliceInfo_t(); {}. virtual ~SliceInfo_t(); {}. void Setup(const char* name, Float_t threshold, Color_t col, Char_t transp = 101). TEveCaloData& operator=(const TEveCaloData::SliceInfo_t& ). » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCaloData__SliceInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData__SliceInfo_t.html
https://root.cern/root/html534/TEveCaloData__SliceInfo_t.html:1081,Modifiability,Inherit,Inheritance,1081,". TEveCaloData::SliceInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveCaloData::SliceInfo_t. class TEveCaloData::SliceInfo_t. Function Members (Methods); public:. virtual~SliceInfo_t(); static TClass*Class(); virtual TClass*IsA() const; TEveCaloData::SliceInfo_t&operator=(const TEveCaloData::SliceInfo_t&); voidSetup(const char* name, Float_t threshold, Color_t col, Char_t transp = 101); virtual voidShowMembers(TMemberInspector&); TEveCaloData::SliceInfo_tSliceInfo_t(); TEveCaloData::SliceInfo_tSliceInfo_t(const TEveCaloData::SliceInfo_t&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Color_tfColorColor used to draw this longitudinal slice.; TStringfNameName of the slice, eg. ECAL, HCAL.; Float_tfThresholdOnly display towers with higher energy.; Color_tfTransparencyTransparency used to draw this longitudinal slice. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SliceInfo_t(); {}. virtual ~SliceInfo_t(); {}. void Setup(const char* name, Float_t threshold, Color_t col, Char_t transp = 101). TEveCaloData& operator=(const TEveCaloData::SliceInfo_t& ). » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCaloData__SliceInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData__SliceInfo_t.html
https://root.cern/root/html534/TEveCaloData__SliceInfo_t.html:1094,Modifiability,Inherit,Inherited,1094,". TEveCaloData::SliceInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveCaloData::SliceInfo_t. class TEveCaloData::SliceInfo_t. Function Members (Methods); public:. virtual~SliceInfo_t(); static TClass*Class(); virtual TClass*IsA() const; TEveCaloData::SliceInfo_t&operator=(const TEveCaloData::SliceInfo_t&); voidSetup(const char* name, Float_t threshold, Color_t col, Char_t transp = 101); virtual voidShowMembers(TMemberInspector&); TEveCaloData::SliceInfo_tSliceInfo_t(); TEveCaloData::SliceInfo_tSliceInfo_t(const TEveCaloData::SliceInfo_t&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Color_tfColorColor used to draw this longitudinal slice.; TStringfNameName of the slice, eg. ECAL, HCAL.; Float_tfThresholdOnly display towers with higher energy.; Color_tfTransparencyTransparency used to draw this longitudinal slice. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SliceInfo_t(); {}. virtual ~SliceInfo_t(); {}. void Setup(const char* name, Float_t threshold, Color_t col, Char_t transp = 101). TEveCaloData& operator=(const TEveCaloData::SliceInfo_t& ). » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCaloData__SliceInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloData__SliceInfo_t.html
https://root.cern/root/html534/TEveCaloLego.html:4994,Availability,Error,Error,4994,"istTreeItem* parent); virtual voidTEveElement::DestroyMainTrans(); virtual voidTEveElement::DestroyOrWarn(); voidTEveElement::DisableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildr",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:5123,Availability,error,error,5123,"ableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGLis",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:5207,Availability,error,error,5207,"al Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree, T",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:19393,Deployability,update,update,19393,"r); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidTEveCaloViz::SetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:19496,Deployability,update,update,19496,"r); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidTEveCaloViz::SetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:11311,Modifiability,Inherit,InheritsFrom,11311,"ueID() const; void*TEveElement::GetUserData() const; virtual Float_tTEveCaloViz::GetValToHeight() const; Bool_tTEveCaloViz::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTEveCaloViz::InvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* p",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:11377,Modifiability,Inherit,InheritsFrom,11377,"_tTEveCaloViz::GetValToHeight() const; Bool_tTEveCaloViz::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTEveCaloViz::InvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); sta",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:23597,Modifiability,variab,variable,23597,"ldren.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tfDrawHPlane; Int_tfDrawNumberCellPixels; Float_tTEveCaloViz::fEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tTEveCaloViz::fEndCapPosFforward end cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Float_tfFixedHeightValIn2DMode1% of whole height; Color_tfFontColor; Color_tfGridColor; Float_tfHPlaneVal; Bool_tfHasFixedHeightIn2DMode; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloViz::fMaxTowerHbounding box z dimesion; Float_tTEveCaloViz::fMaxValAbs; Int_tfNZStepsZ axis label step in GeV; TStringTNamed::fNameobject identifier; Bool_tfNormalizeRebin; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*TEveCaloViz::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Int_tfPixelsPerBin; Color_tfPlaneColor; Char_tfPlaneTransparency; Float_tTEveCaloViz::fPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; TEveCaloLego::EProjection_efProjection; Bool_tTEveElement::fRnrChildrenRender chil",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:23735,Modifiability,variab,variable,23735,"Element::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tfDrawHPlane; Int_tfDrawNumberCellPixels; Float_tTEveCaloViz::fEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tTEveCaloViz::fEndCapPosFforward end cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Float_tfFixedHeightValIn2DMode1% of whole height; Color_tfFontColor; Color_tfGridColor; Float_tfHPlaneVal; Bool_tfHasFixedHeightIn2DMode; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloViz::fMaxTowerHbounding box z dimesion; Float_tTEveCaloViz::fMaxValAbs; Int_tfNZStepsZ axis label step in GeV; TStringTNamed::fNameobject identifier; Bool_tfNormalizeRebin; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*TEveCaloViz::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Int_tfPixelsPerBin; Color_tfPlaneColor; Char_tfPlaneTransparency; Float_tTEveCaloViz::fPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; TEveCaloLego::EProjection_efProjection; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTE",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:25247,Modifiability,Inherit,Inheritance,25247,"TEveElement::fPickable; Int_tfPixelsPerBin; Color_tfPlaneColor; Char_tfPlaneTransparency; Float_tTEveCaloViz::fPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; TEveCaloLego::EProjection_efProjection; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tTEveCaloViz::fValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Float_tfZAxisStep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloLego(TEveCaloData* data = 0, const char* n = ""TEveCaloLego"", const char* t = """"); Constructor. void SetData(TEveCaloData* d). void BuildCellIdCache(); Build list of drawn cell IDs. For more information see TEveCaloLegoGL:DirectDraw(). void ComputeBBox(); Fill bounding-box information of the base-class TAttBBox (virtual method).; If member 'TEveFrameBox* fFrame' is set, frame's corners are used as bbox. TEveCaloViz& operator=(const TEveCaloLego& ). void SetProjection(TEveProjectionManager* proj, TEveProjectable* model). TEveCaloLego(const TEveCaloLego& ). virtual ~TEveCaloLego(); {}. Color_t GetFontColor() const; { return fFontColor; }. void SetFontColor(Color_t ci); { fFontColor=ci; }. Color_t GetGridColor() const; { return fGridColor; }. void SetGridColor(Color_t ci); { fGridColor=ci; }. Color_t GetPlaneColor() const; { return fPlaneColor; }. void SetPlaneColor(Color_t ci); { fPlaneColor=ci; }. Char_t GetPlaneTransparency() co",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:25260,Modifiability,Inherit,Inherited,25260,"TEveElement::fPickable; Int_tfPixelsPerBin; Color_tfPlaneColor; Char_tfPlaneTransparency; Float_tTEveCaloViz::fPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; TEveCaloLego::EProjection_efProjection; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tTEveCaloViz::fValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Float_tfZAxisStep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloLego(TEveCaloData* data = 0, const char* n = ""TEveCaloLego"", const char* t = """"); Constructor. void SetData(TEveCaloData* d). void BuildCellIdCache(); Build list of drawn cell IDs. For more information see TEveCaloLegoGL:DirectDraw(). void ComputeBBox(); Fill bounding-box information of the base-class TAttBBox (virtual method).; If member 'TEveFrameBox* fFrame' is set, frame's corners are used as bbox. TEveCaloViz& operator=(const TEveCaloLego& ). void SetProjection(TEveProjectionManager* proj, TEveProjectable* model). TEveCaloLego(const TEveCaloLego& ). virtual ~TEveCaloLego(); {}. Color_t GetFontColor() const; { return fFontColor; }. void SetFontColor(Color_t ci); { fFontColor=ci; }. Color_t GetGridColor() const; { return fGridColor; }. void SetGridColor(Color_t ci); { fGridColor=ci; }. Color_t GetPlaneColor() const; { return fPlaneColor; }. void SetPlaneColor(Color_t ci); { fPlaneColor=ci; }. Char_t GetPlaneTransparency() co",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:22373,Performance,cache,cache,22373,"nvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. static const TGPicture*TEveElement::fgListTreeIcons[9]; static const TGPicture*TEveElement::fgRnrIcons[4]. protected:. TEveCaloLego::E2DMode_ef2DMode; Bool_tTEveCaloViz::fAutoRangeset eta phi limits on DataChanged(); Bool_tfAutoRebin; Float_t*TAttBBox::fBBox! Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max); Float_tTEveCaloViz::fBarrelRadiusbarrel raidus in cm; TEveCaloLego::EBoxMode_efBoxModeadditional scale info; UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; Bool_tTEveCaloViz::fCellIdCacheOKdata cell ids cache state; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >fCellList; Int_tfCellPixelFontSize; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tfDrawHPlane; Int_tfDrawNumberCellPixels; Float_tTEveCaloViz::fEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tTEveCaloViz::fEndCapPosFforward end cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Float_tfFixedHeightValIn2DMode1% of whole height; Color_tfFontColor; Color_tfGridColor; Float_tfHPlaneVal; Bool_tfHasFixedHeightIn2DMode; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:10782,Security,Hash,Hash,10782,"leAbs() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; Float_tTEveCaloViz::GetTransitionEta() const; Float_tTEveCaloViz::GetTransitionEtaBackward() const; Float_tTEveCaloViz::GetTransitionEtaForward() const; Float_tTEveCaloViz::GetTransitionTheta() const; Float_tTEveCaloViz::GetTransitionThetaBackward() const; Float_tTEveCaloViz::GetTransitionThetaForward() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; virtual Float_tTEveCaloViz::GetValToHeight() const; Bool_tTEveCaloViz::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTEveCaloViz::InvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPicka",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:1479,Testability,Assert,AssertBBox,1479," virtual~TEveCaloLego(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProject",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:1512,Testability,Assert,AssertCellIdCache,1512,":AbstractMethod(const char* method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual ",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:1568,Testability,Assert,AssertPalette,1568,"l_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:19028,Testability,Test,TestBit,19028,"r); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidTEveCaloViz::SetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:19067,Testability,Test,TestBits,19067,"r); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidTEveCaloViz::SetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:19112,Testability,Test,TestCSCBits,19112,"r); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidTEveCaloViz::SetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveCaloViz::SetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:19927,Testability,Assert,AssertBBoxExtents,19927,"f_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var). protected:. virtual voidTEveElement::AnnihilateRecursively(); voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.005); voidTEveCaloViz::AssignCaloVizParameters(TEveCaloViz* cv); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1e6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); virtual voidBuildCellIdCache(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual voidTEveElement::PreDeleteElement(); virtual voidTEveElement::RemoveElementsInternal(); voidTEveCaloViz::SetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; static const char*TEveElement::ToString(Bool_t b). private:. TEveCaloLego(const TEveCaloLego&); TEveCaloLego&operator=(const TEveCaloLego&). Data Members; public:. enum EProjection_e { kAuto; k3D; k2D; };; enum E2DMode_e { kValColor; kValSize; kValSizeOutline; };; enum",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:2432,Usability,Clear,Clear,2432,"ring& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tTEveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEve",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:2491,Usability,Clear,ClearProjectedList,2491,"EveCaloViz::AssertCellIdCache() const; TEveRGBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveEle",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLego.html:2538,Usability,Clear,ClearStamps,2538,"GBAPalette*TEveCaloViz::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tTEveCaloViz::CellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidTEveCaloViz::CellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImplySelectAllChildren(); voidTEve",MatchSource.WIKI,root/html534/TEveCaloLego.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLego.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:4608,Availability,Error,Error,4608,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBa",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:4737,Availability,error,error,4737,"* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const;",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:4821,Availability,error,error,4821,"t(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const; virtual TDNDData*TGFrame::GetDNDData(Atom_t); virtual Int_tTGFrame::GetDragType() c",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:17825,Availability,mask,mask,17825,"ents; kEditDisableGrab; kEditDisableLayout; kEditDisableResize; kEditDisableHeight; kEditDisableWidth; kEditDisableBtnEnable; kEditDisableKeyEnable; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TGComboBox*f2DMode; TGCheckButton*fAutoRebin; Bool_tTGedFrame::fAvoidSignalflag for executing slots; Pixel_tTGFrame::fBackgroundframe background color; Int_tTGFrame::fBorderWidthframe border width; TGComboBox*fBoxMode; TEveGValuator*fCell2DTextMin; TGClient*TGObject::fClientConnection to display server; Int_tTGFrame::fDNDStateEDNDFlags; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; UInt_tTGFrame::fEventMaskcurrenty active event mask; TList*TGedFrame::fExtraTabsaddtional tabs in ged editor; TGFrameElement*TGFrame::fFEpointer to frame element; TGColorSelect*fFontColor; TGedEditor*TGedFrame::fGedEditormanager of this frame; TGColorSelect*fGridColor; UInt_tTGFrame::fHeightframe height; Handle_tTGObject::fIdX11/Win32 Window identifier; Bool_tTGedFrame::fInitinit flag for setting signals/slots; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TList*TGCompositeFrame::fListcontainer of frame elements; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TEveCaloLego*fMModel object.; Bool_tTGCompositeFrame::fMapSubwindowskTRUE - map subwindows; UInt_tTGFrame::fMaxHeightmaximal frame height; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TClass*TGedFrame::fModelClassclass corresponding to instantiated GedFrame; Int_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); TStringTGWindow::fNamenam",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:15302,Deployability,Update,Update,15302,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:10914,Integrability,Message,Message,10914,"Frame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTGCompositeFrame::Print(Option_t* option = """") const; virtual voidTGFrame::",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:9459,Modifiability,Inherit,InheritsFrom,9459,"irtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:9525,Modifiability,Inherit,InheritsFrom,9525," Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:20395,Modifiability,Inherit,Inheritance,20395,"ntry*fTransparency; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloLegoEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void MakeRebinFrame(). TGComboBox* MakeLabeledCombo(const char* name, Int_t off); Helper function. Creates TGComboBox with fixed size TGLabel. void SetModel(TObject* obj); Set model object. void DoGridColor(Pixel_t color); Slot for GridColor. void DoFontColor(Pixel_t color); Slot for FontColor. void DoPlaneColor(Pixel_t color); Slot for PlaneColor. void DoCell2DTextMin(); Slot for setting limit in pixels in which cell value is rendered. void DoProjection(); Slot for projection. void Do2DMode(); Slot for projection. void DoBoxMode(); Slot for projection. void DoTransparency(); Slot for Transparency. void DoPixelsPerBin(); Slot for PixelsPerBin. void DoAutoRebin(). void DoNormalize(). TEveCaloLegoEditor(const TEveCaloLegoEditor& ). TEveCaloLegoEditor& operator=(const TEveC",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:20408,Modifiability,Inherit,Inherited,20408,"ntry*fTransparency; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloLegoEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void MakeRebinFrame(). TGComboBox* MakeLabeledCombo(const char* name, Int_t off); Helper function. Creates TGComboBox with fixed size TGLabel. void SetModel(TObject* obj); Set model object. void DoGridColor(Pixel_t color); Slot for GridColor. void DoFontColor(Pixel_t color); Slot for FontColor. void DoPlaneColor(Pixel_t color); Slot for PlaneColor. void DoCell2DTextMin(); Slot for setting limit in pixels in which cell value is rendered. void DoProjection(); Slot for projection. void Do2DMode(); Slot for projection. void DoBoxMode(); Slot for projection. void DoTransparency(); Slot for Transparency. void DoPixelsPerBin(); Slot for PixelsPerBin. void DoAutoRebin(). void DoNormalize(). TEveCaloLegoEditor(const TEveCaloLegoEditor& ). TEveCaloLegoEditor& operator=(const TEveC",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:9169,Security,Hash,Hash,9169,"t_t, Int_t); virtual Bool_tTGCompositeFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWi",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:15068,Testability,Test,TestBit,15068,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:15107,Testability,Test,TestBits,15107,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoEditor.html:1602,Usability,Clear,Clear,1602,"ar* method) const; virtual Bool_tTGedFrame::AcceptModel(TObject*); virtual voidTGFrame::Activate(Bool_t); virtual voidTGedFrame::ActivateBaseClassEditors(TClass* cl); virtual voidTGedFrame::AddExtraTab(TGedFrame::TGedSubFrame* sf); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; virtual TGVerticalFrame*TGedFrame::CreateEditorTabSubFrame(const char* name); virtual voidTGFrame::Delete(Option_t* = """"); virtual voidTGFrame::DeleteWindow(); virtual voidTQObject::Destroyed()SIGNAL ; virtual voidTGWindow::DestroySubwindows(); virtual voidTGWindow::Des",MatchSource.WIKI,root/html534/TEveCaloLegoEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoEditor.html
https://root.cern/root/html534/TEveCaloLegoGL.html:2473,Deployability,Update,UpdateBoundingBox,2473,"gBox&TGLLogicalShape::BoundingBox() const; static TClass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidDLCacheDrop(); virtual voidDLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidDrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* ps, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tSupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveCaloLegoGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoGL.html
https://root.cern/root/html534/TEveCaloLegoGL.html:2515,Deployability,Update,UpdateBoundingBoxesOfPhysicals,2515,"gBox&TGLLogicalShape::BoundingBox() const; static TClass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidDLCacheDrop(); virtual voidDLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidDrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* ps, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tSupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveCaloLegoGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoGL.html
https://root.cern/root/html534/TEveCaloLegoGL.html:7043,Integrability,depend,dependent,7043,"l display-lists. void MakeQuad(Float_t x, Float_t y, Float_t z, Float_t xw, Float_t yw, Float_t zh) const; Draw an axis-aligned box using quads. void Make3DDisplayList(TEveCaloData::vCellId_t& cellList, TEveCaloLegoGL::SliceDLMap_t& map, Bool_t select) const; Create display-list that draws histogram bars for non-rebinned data.; It is used for filled and outline passes. void Make3DDisplayListRebin(TEveCaloData::RebinData_t& rebinData, TEveCaloLegoGL::SliceDLMap_t& map, Bool_t select) const; Create display-list that draws histogram bars for rebinned data.; It is used for filled and outline passes. void SetAxis3DTitlePos(TGLRnrCtx& rnrCtx, Float_t x0, Float_t x1, Float_t y0, Float_t y1) const. void DrawAxis3D(TGLRnrCtx& rnrCtx) const; Draw z-axis and z-box at the appropriate grid corner-point including; tick-marks and labels. void GetScaleForMatrix(Float_t& sx, Float_t& sy, Float_t& sz) const. void DrawAxis2D(TGLRnrCtx& rnrCtx) const; Draw XY axis. Int_t GetGridStep(TGLRnrCtx& rnrCtx) const; Calculate view-dependent grid density. void RebinAxis(TAxis* orig, TAxis* curr) const; Rebin eta, phi axis. void DrawHistBase(TGLRnrCtx& rnrCtx) const; Draw basic histogram components: x-y grid. void DrawCells3D(TGLRnrCtx& rnrCtx) const; Render the calo lego-plot with OpenGL. void PrepareCell2DData(TEveCaloData::vCellId_t& cellList, TEveCaloLegoGL::vCell2D_t& cells2D) const; Prepare cells 2D data non-rebinned for drawing. void PrepareCell2DDataRebin(TEveCaloData::RebinData_t& rebinData, TEveCaloLegoGL::vCell2D_t& cells2D) const; Prepare cells 2D rebinned data for drawing. void DrawCells2D(TGLRnrCtx& rnrCtx, TEveCaloLegoGL::vCell2D_t& cells2D) const; Draw cells in top view. void DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* ps, Int_t lvl = -1) const; Draw highligted cells. void DrawSelectedCells(TGLRnrCtx& rnrCtx, TEveCaloData::vCellId_t cells) const; Draw selected cells in highlight mode. void DirectDraw(TGLRnrCtx& rnrCtx) const; Draw the object. void ProcessSelection(TGL",MatchSource.WIKI,root/html534/TEveCaloLegoGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoGL.html
https://root.cern/root/html534/TEveCaloLegoGL.html:8111,Integrability,Wrap,WrapTwoPi,8111," x0, Float_t x1, Float_t y0, Float_t y1) const. void DrawAxis3D(TGLRnrCtx& rnrCtx) const; Draw z-axis and z-box at the appropriate grid corner-point including; tick-marks and labels. void GetScaleForMatrix(Float_t& sx, Float_t& sy, Float_t& sz) const. void DrawAxis2D(TGLRnrCtx& rnrCtx) const; Draw XY axis. Int_t GetGridStep(TGLRnrCtx& rnrCtx) const; Calculate view-dependent grid density. void RebinAxis(TAxis* orig, TAxis* curr) const; Rebin eta, phi axis. void DrawHistBase(TGLRnrCtx& rnrCtx) const; Draw basic histogram components: x-y grid. void DrawCells3D(TGLRnrCtx& rnrCtx) const; Render the calo lego-plot with OpenGL. void PrepareCell2DData(TEveCaloData::vCellId_t& cellList, TEveCaloLegoGL::vCell2D_t& cells2D) const; Prepare cells 2D data non-rebinned for drawing. void PrepareCell2DDataRebin(TEveCaloData::RebinData_t& rebinData, TEveCaloLegoGL::vCell2D_t& cells2D) const; Prepare cells 2D rebinned data for drawing. void DrawCells2D(TGLRnrCtx& rnrCtx, TEveCaloLegoGL::vCell2D_t& cells2D) const; Draw cells in top view. void DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* ps, Int_t lvl = -1) const; Draw highligted cells. void DrawSelectedCells(TGLRnrCtx& rnrCtx, TEveCaloData::vCellId_t cells) const; Draw selected cells in highlight mode. void DirectDraw(TGLRnrCtx& rnrCtx) const; Draw the object. void ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); Processes tower selection from TGLViewer. void WrapTwoPi(Float_t& min, Float_t& max) const. TEveCaloLegoGL(const TEveCaloLegoGL& ). TEveCaloLegoGL& operator=(const TEveCaloLegoGL& ). Bool_t SupportsSecondarySelect() const; { return kTRUE; }. Bool_t AlwaysSecondarySelect() const; { return kTRUE; }. » Author: Alja Mrak-Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCaloLegoGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoGL.html
https://root.cern/root/html534/TEveCaloLegoGL.html:5694,Modifiability,Inherit,Inheritance,5694,":fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. private:. TGLAxisPainterfAxisPainter; TEveVectorfBackPlaneXConst[2]; TEveVectorfBackPlaneYConst[2]; Int_tfBinStep; vector<TEveCaloLegoGL::Cell2D_t,allocator<TEveCaloLegoGL::Cell2D_t> >fCells2D; Bool_tfCells3D; Int_tfCurrentPixelsPerBin; Bool_tfDLCacheOK; map<int,unsigned int>fDLMap; TAxis*fEtaAxis; Color_tfFontColor; Color_tfGridColor; TEveCaloLego*fM; Float_tfMaxVal; TAxis*fPhiAxis; TEveCaloData::RebinData_tfRebinData; Float_tfValToPixeltop logaritmic viewview; TEveVectorfXAxisTitlePos; TEveVectorfYAxisTitlePos; TAxis*fZAxis; TEveVectorfZAxisTitlePos. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloLegoGL(); Constructor. ~TEveCaloLegoGL(); Destructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void DLCacheDrop(); Drop all display-list definitions. void DLCachePurge(); Unregister all display-lists. void MakeQuad(Float_t x, Float_t y, Float_t z, Float_t xw, Float_t yw, Float_t zh) const; Draw an axis-aligned box using quads. void Make3DDisplayList(TEveCaloData::vCellId_t& cellList, TEveCaloLegoGL::SliceDLMap_t& map, Bool_t select) const; Create display-list that draws histogram bars for non-rebinned data.; It is used for filled and outline passes. void Make3DDisplayListRebin(TEveCaloData::RebinData_t& rebinData, TEveCaloLegoGL::SliceDLMap_t& map, Bool_t select) const; Create display-list that draws histogram bars for rebinned data.; It is used for filled and outline passes. void SetAxis3DTitlePos(TGLRnrCtx& rnrCtx, Float_t x0, Float_t x1, Float_t y0, Float_t y1) con",MatchSource.WIKI,root/html534/TEveCaloLegoGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoGL.html
https://root.cern/root/html534/TEveCaloLegoGL.html:5707,Modifiability,Inherit,Inherited,5707,":fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. private:. TGLAxisPainterfAxisPainter; TEveVectorfBackPlaneXConst[2]; TEveVectorfBackPlaneYConst[2]; Int_tfBinStep; vector<TEveCaloLegoGL::Cell2D_t,allocator<TEveCaloLegoGL::Cell2D_t> >fCells2D; Bool_tfCells3D; Int_tfCurrentPixelsPerBin; Bool_tfDLCacheOK; map<int,unsigned int>fDLMap; TAxis*fEtaAxis; Color_tfFontColor; Color_tfGridColor; TEveCaloLego*fM; Float_tfMaxVal; TAxis*fPhiAxis; TEveCaloData::RebinData_tfRebinData; Float_tfValToPixeltop logaritmic viewview; TEveVectorfXAxisTitlePos; TEveVectorfYAxisTitlePos; TAxis*fZAxis; TEveVectorfZAxisTitlePos. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloLegoGL(); Constructor. ~TEveCaloLegoGL(); Destructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void DLCacheDrop(); Drop all display-list definitions. void DLCachePurge(); Unregister all display-lists. void MakeQuad(Float_t x, Float_t y, Float_t z, Float_t xw, Float_t yw, Float_t zh) const; Draw an axis-aligned box using quads. void Make3DDisplayList(TEveCaloData::vCellId_t& cellList, TEveCaloLegoGL::SliceDLMap_t& map, Bool_t select) const; Create display-list that draws histogram bars for non-rebinned data.; It is used for filled and outline passes. void Make3DDisplayListRebin(TEveCaloData::RebinData_t& rebinData, TEveCaloLegoGL::SliceDLMap_t& map, Bool_t select) const; Create display-list that draws histogram bars for rebinned data.; It is used for filled and outline passes. void SetAxis3DTitlePos(TGLRnrCtx& rnrCtx, Float_t x0, Float_t x1, Float_t y0, Float_t y1) con",MatchSource.WIKI,root/html534/TEveCaloLegoGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoGL.html
https://root.cern/root/html534/TEveCaloLegoGL.html:1823,Performance,cache,cached,1823,"gBox&TGLLogicalShape::BoundingBox() const; static TClass*Class(); voidTGLLogicalShape::DestroyPhysicals(); virtual voidDirectDraw(TGLRnrCtx& rnrCtx) const; virtual voidTGLLogicalShape::DLCacheClear(); virtual voidDLCacheDrop(); virtual voidDLCachePurge(); virtual UInt_tTGLLogicalShape::DLOffset(Short_t) const; virtual voidTGLLogicalShape::Draw(TGLRnrCtx& rnrCtx) const; virtual voidDrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* ps, Int_t lvl = -1) const; TObject*TGLLogicalShape::GetExternal() const; const TGLPhysicalShape*TGLLogicalShape::GetFirstPhysical() const; static TClass*TGLObject::GetGLRenderer(TClass* isa); static Bool_tTGLLogicalShape::GetIgnoreSizeForCameraInterest(); TGLScene*TGLLogicalShape::GetScene() const; TObject*TGLLogicalShape::ID() const; virtual Bool_tTGLLogicalShape::IgnoreSizeForOfInterest() const; voidTGLLogicalShape::InvokeContextMenu(TContextMenu& menu, UInt_t x, UInt_t y) const; virtual TClass*IsA() const; virtual Bool_tTGLObject::KeepDuringSmartRefresh() const; virtual voidProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); virtual Short_tTGLLogicalShape::QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; UInt_tTGLLogicalShape::Ref() const; virtual voidSetBBox(); Bool_tTGLLogicalShape::SetDLCache(Bool_t cached); static voidTGLLogicalShape::SetIgnoreSizeForCameraInterest(Bool_t isfci); virtual Bool_tSetModel(TObject* obj, Option_t* opt = 0); virtual Bool_tTGLObject::ShouldDLCache(const TGLRnrCtx& rnrCtx) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTGLLogicalShape::StrongRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tSupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLObject::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals().",MatchSource.WIKI,root/html534/TEveCaloLegoGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoGL.html
https://root.cern/root/html534/TEveCaloLegoGL.html:5567,Testability,log,logaritmic,5567,"he! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. private:. TGLAxisPainterfAxisPainter; TEveVectorfBackPlaneXConst[2]; TEveVectorfBackPlaneYConst[2]; Int_tfBinStep; vector<TEveCaloLegoGL::Cell2D_t,allocator<TEveCaloLegoGL::Cell2D_t> >fCells2D; Bool_tfCells3D; Int_tfCurrentPixelsPerBin; Bool_tfDLCacheOK; map<int,unsigned int>fDLMap; TAxis*fEtaAxis; Color_tfFontColor; Color_tfGridColor; TEveCaloLego*fM; Float_tfMaxVal; TAxis*fPhiAxis; TEveCaloData::RebinData_tfRebinData; Float_tfValToPixeltop logaritmic viewview; TEveVectorfXAxisTitlePos; TEveVectorfYAxisTitlePos; TAxis*fZAxis; TEveVectorfZAxisTitlePos. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloLegoGL(); Constructor. ~TEveCaloLegoGL(); Destructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void DLCacheDrop(); Drop all display-list definitions. void DLCachePurge(); Unregister all display-lists. void MakeQuad(Float_t x, Float_t y, Float_t z, Float_t xw, Float_t yw, Float_t zh) const; Draw an axis-aligned box using quads. void Make3DDisplayList(TEveCaloData::vCellId_t& cellList, TEveCaloLegoGL::SliceDLMap_t& map, Bool_t select) const; Create display-list that draws histogram bars for non-rebinned data.; It is used for filled and outline passes. void Make",MatchSource.WIKI,root/html534/TEveCaloLegoGL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoGL.html
https://root.cern/root/html534/TEveCaloLegoOverlay.html:5623,Integrability,interface,interface,5623,"rs; Includes; Libraries. Function documentation; TEveCaloLegoOverlay(); Constructor. Bool_t SetSliderVal(Event_t* event, TGLRnrCtx& rnrCtx); Set height of horizontal plane in the calorimeter. Bool_t Handle(TGLRnrCtx& rnrCtx, TGLOvlSelectRecord& selRec, Event_t* event); Handle overlay event.; Return TRUE if event was handled. Bool_t MouseEnter(TGLOvlSelectRecord& selRec); Mouse has entered overlay area. void MouseLeave(); Mouse has left overlay area. void SetScaleColorTransparency(Color_t colIdx, Char_t transp); Set color and transparency of scales. void SetScalePosition(Double_t x, Double_t y); Set scale coordinates in range [0,1]. void RenderHeader(TGLRnrCtx& rnrCtx); Render text on top right corner of the screen. void RenderPlaneInterface(TGLRnrCtx& rnrCtx); Render menu for plane-value and the plane if marked. void RenderLogaritmicScales(TGLRnrCtx& rnrCtx); Draw slider of calo 2D in mode TEveCalo:fValSize. void RenderPaletteScales(TGLRnrCtx& rnrCtx); Draw slider of calo 2D in mode TEveCalo:fValColor. void Render(TGLRnrCtx& rnrCtx); Draw calorimeter scale info and plane interface. TEveCaloLegoOverlay(const TEveCaloLegoOverlay& ). TEveCaloLegoOverlay& operator=(const TEveCaloLegoOverlay& ). virtual ~TEveCaloLegoOverlay(); {}. TEveCaloLego* GetCaloLego(); {return fCalo;}. void SetCaloLego(TEveCaloLego* c); {fCalo = c;}. void SetShowPlane(Bool_t x); { fShowPlane = x; }. Bool_t GetShowPlane() const; { return fShowPlane; }. void SetHeaderTxt(const char* txt); {fHeaderTxt = txt; }. const char* GetHeaderTxt() const; { return fHeaderTxt; }. void SetShowScales(Bool_t x); { fShowScales = x;}. void SetFrameAttribs(Color_t frameCol, Char_t lineTransp, Char_t bgTransp). » Author: Alja Mrak-Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCaloLegoOverlay.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoOverlay.html
https://root.cern/root/html534/TEveCaloLegoOverlay.html:4507,Modifiability,Inherit,Inheritance,4507,"alRefPlane; Char_tfFrameBgTransp; Color_tfFrameColor; Char_tfFrameLineTransp; Double_tTGLCameraOverlay::fFrustum[4]; Bool_tfHeaderSelected; TStringfHeaderTxt; Bool_tfInDrag; Float_tfMenuW; Int_tfMouseX; Int_tfMouseY! last mouse position; TGLCameraOverlay::EModeTGLCameraOverlay::fOrthographicMode; TGLCameraOverlay::EModeTGLCameraOverlay::fPerspectiveMode; TAxis*fPlaneAxis; TGLOverlayElement::ERoleTGLOverlayElement::fRole; Color_tfScaleColor; Double_tfScaleCoordX; Double_tfScaleCoordY; Double_tfScaleH; Char_tfScaleTransparencytransaprency in %; Double_tfScaleW; Bool_tTGLCameraOverlay::fShowOrthographic; Bool_tTGLCameraOverlay::fShowPerspective; Bool_tfShowPlane; Bool_tfShowScales; Bool_tfShowSlider; Float_tfSliderHslider height in % of viewport; Float_tfSliderPosYy position of slider bottom up; Float_tfSliderVal; TGLOverlayElement::EStateTGLOverlayElement::fState; Bool_tTGLCameraOverlay::fUseAxisColors; Bool_tTGLCameraOverlay::fUseExternalRefPlane. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloLegoOverlay(); Constructor. Bool_t SetSliderVal(Event_t* event, TGLRnrCtx& rnrCtx); Set height of horizontal plane in the calorimeter. Bool_t Handle(TGLRnrCtx& rnrCtx, TGLOvlSelectRecord& selRec, Event_t* event); Handle overlay event.; Return TRUE if event was handled. Bool_t MouseEnter(TGLOvlSelectRecord& selRec); Mouse has entered overlay area. void MouseLeave(); Mouse has left overlay area. void SetScaleColorTransparency(Color_t colIdx, Char_t transp); Set color and transparency of scales. void SetScalePosition(Double_t x, Double_t y); Set scale coordinates in range [0,1]. void RenderHeader(TGLRnrCtx& rnrCtx); Render text on top right corner of the screen. void RenderPlaneInterface(TGLRnrCtx& rnrCtx); Render menu for plane-value and the plane if marked. void RenderLogaritmicScales(TGLRnrCtx& rnrCtx); Draw slider of calo 2D in mode TEveCalo:fValSize. void RenderPaletteScales(TGLRnrCtx& rnrCtx); Draw slider of calo 2D in mode ",MatchSource.WIKI,root/html534/TEveCaloLegoOverlay.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoOverlay.html
https://root.cern/root/html534/TEveCaloLegoOverlay.html:4520,Modifiability,Inherit,Inherited,4520,"alRefPlane; Char_tfFrameBgTransp; Color_tfFrameColor; Char_tfFrameLineTransp; Double_tTGLCameraOverlay::fFrustum[4]; Bool_tfHeaderSelected; TStringfHeaderTxt; Bool_tfInDrag; Float_tfMenuW; Int_tfMouseX; Int_tfMouseY! last mouse position; TGLCameraOverlay::EModeTGLCameraOverlay::fOrthographicMode; TGLCameraOverlay::EModeTGLCameraOverlay::fPerspectiveMode; TAxis*fPlaneAxis; TGLOverlayElement::ERoleTGLOverlayElement::fRole; Color_tfScaleColor; Double_tfScaleCoordX; Double_tfScaleCoordY; Double_tfScaleH; Char_tfScaleTransparencytransaprency in %; Double_tfScaleW; Bool_tTGLCameraOverlay::fShowOrthographic; Bool_tTGLCameraOverlay::fShowPerspective; Bool_tfShowPlane; Bool_tfShowScales; Bool_tfShowSlider; Float_tfSliderHslider height in % of viewport; Float_tfSliderPosYy position of slider bottom up; Float_tfSliderVal; TGLOverlayElement::EStateTGLOverlayElement::fState; Bool_tTGLCameraOverlay::fUseAxisColors; Bool_tTGLCameraOverlay::fUseExternalRefPlane. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloLegoOverlay(); Constructor. Bool_t SetSliderVal(Event_t* event, TGLRnrCtx& rnrCtx); Set height of horizontal plane in the calorimeter. Bool_t Handle(TGLRnrCtx& rnrCtx, TGLOvlSelectRecord& selRec, Event_t* event); Handle overlay event.; Return TRUE if event was handled. Bool_t MouseEnter(TGLOvlSelectRecord& selRec); Mouse has entered overlay area. void MouseLeave(); Mouse has left overlay area. void SetScaleColorTransparency(Color_t colIdx, Char_t transp); Set color and transparency of scales. void SetScalePosition(Double_t x, Double_t y); Set scale coordinates in range [0,1]. void RenderHeader(TGLRnrCtx& rnrCtx); Render text on top right corner of the screen. void RenderPlaneInterface(TGLRnrCtx& rnrCtx); Render menu for plane-value and the plane if marked. void RenderLogaritmicScales(TGLRnrCtx& rnrCtx); Draw slider of calo 2D in mode TEveCalo:fValSize. void RenderPaletteScales(TGLRnrCtx& rnrCtx); Draw slider of calo 2D in mode ",MatchSource.WIKI,root/html534/TEveCaloLegoOverlay.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloLegoOverlay.html
https://root.cern/root/html534/TEveCaloViz.html:612,Availability,avail,available,612,". TEveCaloViz. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveCaloViz. class TEveCaloViz: public TEveElement, public TNamed, public TAtt3D, public TAttBBox, public TEveProjectable. Base class for calorimeter data visualization.; See TEveCalo2D and TEveCalo3D for concrete implementations. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TEveCaloViz(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tAssertCellIdCache() const; TEveRGBAPalette*AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voi",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:5099,Availability,Error,Error,5099,"istTreeItem* parent); virtual voidTEveElement::DestroyMainTrans(); virtual voidTEveElement::DestroyOrWarn(); voidTEveElement::DisableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildr",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:5228,Availability,error,error,5228,"ableListElements(Bool_t rnr_self = kFALSE, Bool_t rnr_children = kFALSE)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGLis",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:5312,Availability,error,error,5312,"al Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTEveElement::DumpSourceObject() constMENU ; virtual voidTEveElement::ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; TEveProjectable::ProjList_iTEveProjectable::EndProjecteds(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree); virtual TEveElement::sLTI_iTEveElement::FindItem(TGListTree* ltree, T",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:17662,Deployability,update,update,17662,"ment::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidSetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidSetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:17765,Deployability,update,update,17765,"ment::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidSetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidSetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:24215,Deployability,Update,Update,24215,"aSliceColor(Int_t slice, Color_t col); Set slice color in data. void SetEta(Float_t l, Float_t u); Set eta range. void SetPlotEt(Bool_t x); Set E/Et plot. Float_t GetMaxVal() const. void SetPhiWithRng(Float_t x, Float_t r); Set phi range. Float_t GetTransitionTheta() const; Get transition angle between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionEta() const; Get transition eta between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionThetaForward() const; Get transition angle between barrel and forward end-cap cells. Float_t GetTransitionEtaForward() const; Get transition eta between barrel and forward end-cap cells. Float_t GetTransitionThetaBackward() const; Get transition angle between barrel and backward end-cap cells. Float_t GetTransitionEtaBackward() const; Get transition eta between barrel and backward end-cap cells. void SetData(TEveCaloData* d); Set calorimeter event data. void DataChanged(); Update setting and cache on data changed.; Called from TEvecaloData::BroadcastDataChange(). Bool_t AssertCellIdCache() const; Assert cell id cache is ok.; Returns true if the cache has been updated. Bool_t CellInEtaPhiRng(TEveCaloData::CellData_t& ) const; Returns true if given cell is in the ceta phi range. void AssignCaloVizParameters(TEveCaloViz* cv); Assign paramteres from given model. void SetPalette(TEveRGBAPalette* p); Set TEveRGBAPalette object pointer. Float_t GetValToHeight() const; Get transformation factor from E/Et to height. TEveRGBAPalette* AssertPalette(); Make sure the TEveRGBAPalette pointer is not null.; If it is not set, a new one is instantiated and the range is set; to current min/max signal values. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveCalo2D class. void SetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; Set ",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:24405,Deployability,update,updated,24405,"tMaxVal() const. void SetPhiWithRng(Float_t x, Float_t r); Set phi range. Float_t GetTransitionTheta() const; Get transition angle between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionEta() const; Get transition eta between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionThetaForward() const; Get transition angle between barrel and forward end-cap cells. Float_t GetTransitionEtaForward() const; Get transition eta between barrel and forward end-cap cells. Float_t GetTransitionThetaBackward() const; Get transition angle between barrel and backward end-cap cells. Float_t GetTransitionEtaBackward() const; Get transition eta between barrel and backward end-cap cells. void SetData(TEveCaloData* d); Set calorimeter event data. void DataChanged(); Update setting and cache on data changed.; Called from TEvecaloData::BroadcastDataChange(). Bool_t AssertCellIdCache() const; Assert cell id cache is ok.; Returns true if the cache has been updated. Bool_t CellInEtaPhiRng(TEveCaloData::CellData_t& ) const; Returns true if given cell is in the ceta phi range. void AssignCaloVizParameters(TEveCaloViz* cv); Assign paramteres from given model. void SetPalette(TEveRGBAPalette* p); Set TEveRGBAPalette object pointer. Float_t GetValToHeight() const; Get transformation factor from E/Et to height. TEveRGBAPalette* AssertPalette(); Make sure the TEveRGBAPalette pointer is not null.; If it is not set, a new one is instantiated and the range is set; to current min/max signal values. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveCalo2D class. void SetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; Set color and height for a given value and slice using slice color or TEveRGBAPalette. TEveCaloViz& operator=(const TEveCaloViz& ). void BuildCellIdCache(). void CellSele",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:10438,Modifiability,Inherit,InheritsFrom,10438,"ual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; virtual Float_tGetValToHeight() const; Bool_tGetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidInvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static v",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:10504,Modifiability,Inherit,InheritsFrom,10504,"ata() const; virtual Float_tGetValToHeight() const; Bool_tGetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidInvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObje",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:21159,Modifiability,variab,variable,21159,"llow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; Bool_tfCellIdCacheOKdata cell ids cache state; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tfEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tfEndCapPosFforward end cap z coordinate in cm; Double_tfEtaMax; Double_tfEtaMin; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tfMaxTowerHbounding box z dimesion; Float_tfMaxValAbs; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tfPhi; Double_tfPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tfPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tfScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElem",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:21297,Modifiability,variab,variable,21297,"ata cell ids cache state; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tfEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tfEndCapPosFforward end cap z coordinate in cm; Double_tfEtaMax; Double_tfEtaMin; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tfMaxTowerHbounding box z dimesion; Float_tfMaxValAbs; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tfPhi; Double_tfPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tfPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tfScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assign",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:22517,Modifiability,Inherit,Inheritance,22517," for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tfPhi; Double_tfPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tfPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tfScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tfValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TEveCaloViz(); Destructor. Float_t GetDataSliceThreshold(Int_t slice) const; Get threshold for given slice. TEveElement* ForwardSelection(); Management of selection state and ownership of selected cell list; is done in TEveCaloData. This is a reason selection is forwared to it. TEveElement* ForwardEdit(); Management of selection state and ownership of selected cell list; is done in TEveCaloData. We still want GUI editor to disply; concrete calo-viz object. void SetDataSliceThreshold(Int_t slice, Float_t val); Set threshold for given slice. Color_t GetDataSliceColor(Int_t slice) const; Get slice color from data. void SetDataSliceColor(Int_t slice, Color_t col); Set slice color in data. void SetEta(Float_t l, Float_t u); Set eta range. void SetPlotEt(Bool_t x); Set E/Et plot. Float_t GetMaxVal() const. void SetPhiWithRng(Float_t x, Float_t r); Set phi range. Float_t GetTransitionTheta() const; Get transition angle between barrel and end",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:22530,Modifiability,Inherit,Inherited,22530," for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tfPhi; Double_tfPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tfPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tfScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tfValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TEveCaloViz(); Destructor. Float_t GetDataSliceThreshold(Int_t slice) const; Get threshold for given slice. TEveElement* ForwardSelection(); Management of selection state and ownership of selected cell list; is done in TEveCaloData. This is a reason selection is forwared to it. TEveElement* ForwardEdit(); Management of selection state and ownership of selected cell list; is done in TEveCaloData. We still want GUI editor to disply; concrete calo-viz object. void SetDataSliceThreshold(Int_t slice, Float_t val); Set threshold for given slice. Color_t GetDataSliceColor(Int_t slice) const; Get slice color from data. void SetDataSliceColor(Int_t slice, Color_t col); Set slice color in data. void SetEta(Float_t l, Float_t u); Set eta range. void SetPlotEt(Bool_t x); Set E/Et plot. Float_t GetMaxVal() const. void SetPhiWithRng(Float_t x, Float_t r); Set phi range. Float_t GetTransitionTheta() const; Get transition angle between barrel and end",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:20286,Performance,cache,cache,20286," kStandard; kAnnihilate; };; enum TEveElement::EChangeBits { kCBColorSelection; kCBTransBBox; kCBObjProps; kCBVisibility; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. static const TGPicture*TEveElement::fgListTreeIcons[9]; static const TGPicture*TEveElement::fgRnrIcons[4]. protected:. Bool_tfAutoRangeset eta phi limits on DataChanged(); Float_t*TAttBBox::fBBox! Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max); Float_tfBarrelRadiusbarrel raidus in cm; UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; Bool_tfCellIdCacheOKdata cell ids cache state; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tfEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tfEndCapPosFforward end cap z coordinate in cm; Double_tfEtaMax; Double_tfEtaMin; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tfMaxT",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:24234,Performance,cache,cache,24234,"aSliceColor(Int_t slice, Color_t col); Set slice color in data. void SetEta(Float_t l, Float_t u); Set eta range. void SetPlotEt(Bool_t x); Set E/Et plot. Float_t GetMaxVal() const. void SetPhiWithRng(Float_t x, Float_t r); Set phi range. Float_t GetTransitionTheta() const; Get transition angle between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionEta() const; Get transition eta between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionThetaForward() const; Get transition angle between barrel and forward end-cap cells. Float_t GetTransitionEtaForward() const; Get transition eta between barrel and forward end-cap cells. Float_t GetTransitionThetaBackward() const; Get transition angle between barrel and backward end-cap cells. Float_t GetTransitionEtaBackward() const; Get transition eta between barrel and backward end-cap cells. void SetData(TEveCaloData* d); Set calorimeter event data. void DataChanged(); Update setting and cache on data changed.; Called from TEvecaloData::BroadcastDataChange(). Bool_t AssertCellIdCache() const; Assert cell id cache is ok.; Returns true if the cache has been updated. Bool_t CellInEtaPhiRng(TEveCaloData::CellData_t& ) const; Returns true if given cell is in the ceta phi range. void AssignCaloVizParameters(TEveCaloViz* cv); Assign paramteres from given model. void SetPalette(TEveRGBAPalette* p); Set TEveRGBAPalette object pointer. Float_t GetValToHeight() const; Get transformation factor from E/Et to height. TEveRGBAPalette* AssertPalette(); Make sure the TEveRGBAPalette pointer is not null.; If it is not set, a new one is instantiated and the range is set; to current min/max signal values. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveCalo2D class. void SetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; Set ",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:24356,Performance,cache,cache,24356,". void SetPlotEt(Bool_t x); Set E/Et plot. Float_t GetMaxVal() const. void SetPhiWithRng(Float_t x, Float_t r); Set phi range. Float_t GetTransitionTheta() const; Get transition angle between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionEta() const; Get transition eta between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionThetaForward() const; Get transition angle between barrel and forward end-cap cells. Float_t GetTransitionEtaForward() const; Get transition eta between barrel and forward end-cap cells. Float_t GetTransitionThetaBackward() const; Get transition angle between barrel and backward end-cap cells. Float_t GetTransitionEtaBackward() const; Get transition eta between barrel and backward end-cap cells. void SetData(TEveCaloData* d); Set calorimeter event data. void DataChanged(); Update setting and cache on data changed.; Called from TEvecaloData::BroadcastDataChange(). Bool_t AssertCellIdCache() const; Assert cell id cache is ok.; Returns true if the cache has been updated. Bool_t CellInEtaPhiRng(TEveCaloData::CellData_t& ) const; Returns true if given cell is in the ceta phi range. void AssignCaloVizParameters(TEveCaloViz* cv); Assign paramteres from given model. void SetPalette(TEveRGBAPalette* p); Set TEveRGBAPalette object pointer. Float_t GetValToHeight() const; Get transformation factor from E/Et to height. TEveRGBAPalette* AssertPalette(); Make sure the TEveRGBAPalette pointer is not null.; If it is not set, a new one is instantiated and the range is set; to current min/max signal values. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveCalo2D class. void SetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; Set color and height for a given value and slice using slice color or TEveRGBAPalette. TEveCaloViz& operator=(const ",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:24390,Performance,cache,cache,24390,"tMaxVal() const. void SetPhiWithRng(Float_t x, Float_t r); Set phi range. Float_t GetTransitionTheta() const; Get transition angle between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionEta() const; Get transition eta between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionThetaForward() const; Get transition angle between barrel and forward end-cap cells. Float_t GetTransitionEtaForward() const; Get transition eta between barrel and forward end-cap cells. Float_t GetTransitionThetaBackward() const; Get transition angle between barrel and backward end-cap cells. Float_t GetTransitionEtaBackward() const; Get transition eta between barrel and backward end-cap cells. void SetData(TEveCaloData* d); Set calorimeter event data. void DataChanged(); Update setting and cache on data changed.; Called from TEvecaloData::BroadcastDataChange(). Bool_t AssertCellIdCache() const; Assert cell id cache is ok.; Returns true if the cache has been updated. Bool_t CellInEtaPhiRng(TEveCaloData::CellData_t& ) const; Returns true if given cell is in the ceta phi range. void AssignCaloVizParameters(TEveCaloViz* cv); Assign paramteres from given model. void SetPalette(TEveRGBAPalette* p); Set TEveRGBAPalette object pointer. Float_t GetValToHeight() const; Get transformation factor from E/Et to height. TEveRGBAPalette* AssertPalette(); Make sure the TEveRGBAPalette pointer is not null.; If it is not set, a new one is instantiated and the range is set; to current min/max signal values. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveCalo2D class. void SetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; Set color and height for a given value and slice using slice color or TEveRGBAPalette. TEveCaloViz& operator=(const TEveCaloViz& ). void BuildCellIdCache(). void CellSele",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:9909,Security,Hash,Hash,9909,"tual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; Bool_tGetScaleAbs() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; Float_tGetTransitionEta() const; Float_tGetTransitionEtaBackward() const; Float_tGetTransitionEtaForward() const; Float_tGetTransitionTheta() const; Float_tGetTransitionThetaBackward() const; Float_tGetTransitionThetaForward() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; virtual Float_tGetValToHeight() const; Bool_tGetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidInvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; ",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:1639,Testability,Assert,AssertBBox,1639," virtual~TEveCaloViz(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tAssertCellIdCache() const; TEveRGBAPalette*AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voi",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:1702,Testability,Assert,AssertPalette,1702,"method) const; virtual Bool_tTEveElement::AcceptElement(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tAssertCellIdCache() const; TEveRGBAPalette*AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tCellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newnam",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:17297,Testability,Test,TestBit,17297,"ment::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidSetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidSetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:17336,Testability,Test,TestBits,17336,"ment::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidSetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidSetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:17381,Testability,Test,TestCSCBits,17381,"ment::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); virtual voidSetScaleAbs(Bool_t x); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidSetValueIsColor(Bool_t x); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:18196,Testability,Assert,AssertBBoxExtents,18196,"f_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var). protected:. virtual voidTEveElement::AnnihilateRecursively(); voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.005); voidAssignCaloVizParameters(TEveCaloViz* cv); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1e6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); virtual voidBuildCellIdCache(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual voidTEveElement::PreDeleteElement(); virtual voidTEveElement::RemoveElementsInternal(); voidSetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; static const char*TEveElement::ToString(Bool_t b). private:. TEveCaloViz&operator=(const TEveCaloViz&). Data Members; public:. enum TEveElement::ECompoundSelectionColorBits { kCSCBImplySelectAllChildren; kCSCBTakeAnyParentAsMaster; kCSCBApplyMainColorToAllChildren; kCSCBApplyMainColorToMatching",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:24314,Testability,Assert,AssertCellIdCache,24314,". void SetPlotEt(Bool_t x); Set E/Et plot. Float_t GetMaxVal() const. void SetPhiWithRng(Float_t x, Float_t r); Set phi range. Float_t GetTransitionTheta() const; Get transition angle between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionEta() const; Get transition eta between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionThetaForward() const; Get transition angle between barrel and forward end-cap cells. Float_t GetTransitionEtaForward() const; Get transition eta between barrel and forward end-cap cells. Float_t GetTransitionThetaBackward() const; Get transition angle between barrel and backward end-cap cells. Float_t GetTransitionEtaBackward() const; Get transition eta between barrel and backward end-cap cells. void SetData(TEveCaloData* d); Set calorimeter event data. void DataChanged(); Update setting and cache on data changed.; Called from TEvecaloData::BroadcastDataChange(). Bool_t AssertCellIdCache() const; Assert cell id cache is ok.; Returns true if the cache has been updated. Bool_t CellInEtaPhiRng(TEveCaloData::CellData_t& ) const; Returns true if given cell is in the ceta phi range. void AssignCaloVizParameters(TEveCaloViz* cv); Assign paramteres from given model. void SetPalette(TEveRGBAPalette* p); Set TEveRGBAPalette object pointer. Float_t GetValToHeight() const; Get transformation factor from E/Et to height. TEveRGBAPalette* AssertPalette(); Make sure the TEveRGBAPalette pointer is not null.; If it is not set, a new one is instantiated and the range is set; to current min/max signal values. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveCalo2D class. void SetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; Set color and height for a given value and slice using slice color or TEveRGBAPalette. TEveCaloViz& operator=(const ",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:24341,Testability,Assert,Assert,24341,". void SetPlotEt(Bool_t x); Set E/Et plot. Float_t GetMaxVal() const. void SetPhiWithRng(Float_t x, Float_t r); Set phi range. Float_t GetTransitionTheta() const; Get transition angle between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionEta() const; Get transition eta between barrel and end-cap cells, assuming fEndCapPosF = -fEndCapPosB. Float_t GetTransitionThetaForward() const; Get transition angle between barrel and forward end-cap cells. Float_t GetTransitionEtaForward() const; Get transition eta between barrel and forward end-cap cells. Float_t GetTransitionThetaBackward() const; Get transition angle between barrel and backward end-cap cells. Float_t GetTransitionEtaBackward() const; Get transition eta between barrel and backward end-cap cells. void SetData(TEveCaloData* d); Set calorimeter event data. void DataChanged(); Update setting and cache on data changed.; Called from TEvecaloData::BroadcastDataChange(). Bool_t AssertCellIdCache() const; Assert cell id cache is ok.; Returns true if the cache has been updated. Bool_t CellInEtaPhiRng(TEveCaloData::CellData_t& ) const; Returns true if given cell is in the ceta phi range. void AssignCaloVizParameters(TEveCaloViz* cv); Assign paramteres from given model. void SetPalette(TEveRGBAPalette* p); Set TEveRGBAPalette object pointer. Float_t GetValToHeight() const; Get transformation factor from E/Et to height. TEveRGBAPalette* AssertPalette(); Make sure the TEveRGBAPalette pointer is not null.; If it is not set, a new one is instantiated and the range is set; to current min/max signal values. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveCalo2D class. void SetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; Set color and height for a given value and slice using slice color or TEveRGBAPalette. TEveCaloViz& operator=(const ",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:24777,Testability,Assert,AssertPalette,24777,"rward end-cap cells. Float_t GetTransitionEtaForward() const; Get transition eta between barrel and forward end-cap cells. Float_t GetTransitionThetaBackward() const; Get transition angle between barrel and backward end-cap cells. Float_t GetTransitionEtaBackward() const; Get transition eta between barrel and backward end-cap cells. void SetData(TEveCaloData* d); Set calorimeter event data. void DataChanged(); Update setting and cache on data changed.; Called from TEvecaloData::BroadcastDataChange(). Bool_t AssertCellIdCache() const; Assert cell id cache is ok.; Returns true if the cache has been updated. Bool_t CellInEtaPhiRng(TEveCaloData::CellData_t& ) const; Returns true if given cell is in the ceta phi range. void AssignCaloVizParameters(TEveCaloViz* cv); Assign paramteres from given model. void SetPalette(TEveRGBAPalette* p); Set TEveRGBAPalette object pointer. Float_t GetValToHeight() const; Get transformation factor from E/Et to height. TEveRGBAPalette* AssertPalette(); Make sure the TEveRGBAPalette pointer is not null.; If it is not set, a new one is instantiated and the range is set; to current min/max signal values. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveCalo2D class. void SetupColorHeight(Float_t value, Int_t slice, Float_t& height) const; Set color and height for a given value and slice using slice color or TEveRGBAPalette. TEveCaloViz& operator=(const TEveCaloViz& ). void BuildCellIdCache(). void CellSelectionChanged(); {}. void SetScaleAbs(Bool_t x); { fScaleAbs = x; }. TEveCaloData* GetData() const; { return fData; }. void InvalidateCellIdCache(); { fCellIdCacheOK=kFALSE; ResetBBox(); }. Float_t GetBarrelRadius() const; { return fBarrelRadius; }. void SetBarrelRadius(Float_t r); { fBarrelRadius = r; ResetBBox(); }. Float_t GetEndCapPos() const; { return fEndCapPosF; }. Float_t GetForwardEndCapPos() const; ",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:2540,Usability,Clear,Clear,2540,"veElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tAssertCellIdCache() const; TEveRGBAPalette*AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tCellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTAttBBox::ComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren()",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:2599,Usability,Clear,ClearProjectedList,2599,"k_tag = """"); Float_t*TAttBBox::AssertBBox(); Bool_tAssertCellIdCache() const; TEveRGBAPalette*AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tCellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTAttBBox::ComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); v",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloViz.html:2646,Usability,Clear,ClearStamps,2646," Bool_tAssertCellIdCache() const; TEveRGBAPalette*AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tCellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTAttBBox::ComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImplySelectAllChildren()",MatchSource.WIKI,root/html534/TEveCaloViz.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html
https://root.cern/root/html534/TEveCaloVizEditor.html:4548,Availability,Error,Error,4548,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBa",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:4677,Availability,error,error,4677,"* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const;",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:4761,Availability,error,error,4761,"t(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const; virtual TDNDData*TGFrame::GetDNDData(Atom_t); virtual Int_tTGFrame::GetDragType() c",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:17662,Availability,mask,mask,17662,"; kEditDisable; kEditDisableEvents; kEditDisableGrab; kEditDisableLayout; kEditDisableResize; kEditDisableHeight; kEditDisableWidth; kEditDisableBtnEnable; kEditDisableKeyEnable; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tTGedFrame::fAvoidSignalflag for executing slots; Pixel_tTGFrame::fBackgroundframe background color; Int_tTGFrame::fBorderWidthframe border width; TGClient*TGObject::fClientConnection to display server; Int_tTGFrame::fDNDStateEDNDFlags; TGVerticalFrame*fDataFrame; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; TEveGDoubleValuator*fEtaRng; UInt_tTGFrame::fEventMaskcurrenty active event mask; TList*TGedFrame::fExtraTabsaddtional tabs in ged editor; TGFrameElement*TGFrame::fFEpointer to frame element; TGNumberEntry*fFrameTransparency; TGedEditor*TGedFrame::fGedEditormanager of this frame; UInt_tTGFrame::fHeightframe height; Handle_tTGObject::fIdX11/Win32 Window identifier; Bool_tTGedFrame::fInitinit flag for setting signals/slots; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TList*TGCompositeFrame::fListcontainer of frame elements; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TEveCaloViz*fMModel object.; Bool_tTGCompositeFrame::fMapSubwindowskTRUE - map subwindows; UInt_tTGFrame::fMaxHeightmaximal frame height; TEveGValuator*fMaxTowerH; TEveGValuator*fMaxValAbs; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TClass*TGedFrame::fModelClassclass corresponding to instantiated GedFrame; Int_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); TSt",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:15242,Deployability,Update,Update,15242,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:10854,Integrability,Message,Message,10854,"Frame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTGCompositeFrame::Print(Option_t* option = """") const; virtual voidTGFrame::",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:9399,Modifiability,Inherit,InheritsFrom,9399,"irtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:9465,Modifiability,Inherit,InheritsFrom,9465," Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:20241,Modifiability,Inherit,Inheritance,20241,"lFrame*fSliceFrame; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloVizEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void MakeSliceInfo(). void SetModel(TObject* obj); Set model object. void DoMaxTowerH(); Slot for setting max tower height. void DoScaleAbs(); Slot for enabling/disabling absolute scale. void DoMaxValAbs(); Slot for setting max E in for absolute scale. void DoPlot(); Slot for setting E/Et plot. void DoEtaRange(); Slot for setting eta range. void DoPhi(); Slot for setting phi range. void DoSliceThreshold(); Slot for SliceThreshold. void DoSliceColor(Pixel_t color); Slot for slice info Color. void DoSliceTransparency(Long_t transp); Slot for slice transparency. TEveCaloVizEditor(const TEveCaloVizEditor& ). TEveCaloVizEditor& operator=(const TEveCaloVizEditor& ). virtual ~TEveCaloVizEditor(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Radem",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:20254,Modifiability,Inherit,Inherited,20254,"lFrame*fSliceFrame; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloVizEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void MakeSliceInfo(). void SetModel(TObject* obj); Set model object. void DoMaxTowerH(); Slot for setting max tower height. void DoScaleAbs(); Slot for enabling/disabling absolute scale. void DoMaxValAbs(); Slot for setting max E in for absolute scale. void DoPlot(); Slot for setting E/Et plot. void DoEtaRange(); Slot for setting eta range. void DoPhi(); Slot for setting phi range. void DoSliceThreshold(); Slot for SliceThreshold. void DoSliceColor(Pixel_t color); Slot for slice info Color. void DoSliceTransparency(Long_t transp); Slot for slice transparency. TEveCaloVizEditor(const TEveCaloVizEditor& ). TEveCaloVizEditor& operator=(const TEveCaloVizEditor& ). virtual ~TEveCaloVizEditor(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Radem",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:9109,Security,Hash,Hash,9109,"t_t, Int_t); virtual Bool_tTGCompositeFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWi",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:15008,Testability,Test,TestBit,15008,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:15047,Testability,Test,TestBits,15047,"tatic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGedFrame::SetGedEditor(TGedEditor* ed); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidSetModel(TObject* obj); voidTGedFrame::SetModelClass(TClass* mcl); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTGedFrame::Update(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveCaloVizEditor.html:1599,Usability,Clear,Clear,1599,"ar* method) const; virtual Bool_tTGedFrame::AcceptModel(TObject*); virtual voidTGFrame::Activate(Bool_t); virtual voidTGedFrame::ActivateBaseClassEditors(TClass* cl); virtual voidTGedFrame::AddExtraTab(TGedFrame::TGedSubFrame* sf); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; virtual TGVerticalFrame*TGedFrame::CreateEditorTabSubFrame(const char* name); virtual voidTGFrame::Delete(Option_t* = """"); virtual voidTGFrame::DeleteWindow(); virtual voidTQObject::Destroyed()SIGNAL ; virtual voidTGWindow::DestroySubwindows(); virtual voidTGWindow::Des",MatchSource.WIKI,root/html534/TEveCaloVizEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCaloVizEditor.html
https://root.cern/root/html534/TEveChunkManager.html:1732,Deployability,Release,ReleaseChunks,1732,"; virtual~TEveChunkManager(); Char_t*Atom(Int_t idx) const; Int_tCapacity() const; Char_t*Chunk(Int_t chk) const; static TClass*Class(); virtual TClass*IsA() const; Int_tN() const; Int_tNAtoms(Int_t chk) const; Char_t*NewAtom(); Char_t*NewChunk(); voidRefit(); voidReset(Int_t atom_size, Int_t chunk_size); Int_tS() const; virtual voidShowMembers(TMemberInspector&); Int_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Int_tVecSize() const. protected:. voidReleaseChunks(). private:. TEveChunkManager(const TEveChunkManager&); TEveChunkManager&operator=(const TEveChunkManager&). Data Members; protected:. Int_tfCapacityAvailable capacity within the chunks; vector<TArrayC*>fChunksMemory blocks; Int_tfNNumber of atoms in a chunk; Int_tfSSize of atom; Int_tfSizeSize of container, number of atoms; Int_tfVecSizeNumber of allocated chunks. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReleaseChunks(); Release all memory chunks. TEveChunkManager(); Default constructor.; Call reset for initialization. TEveChunkManager(Int_t atom_size, Int_t chunk_size); Constructor. ~TEveChunkManager(); Destructor. void Reset(Int_t atom_size, Int_t chunk_size); Empty the container and reset it with given atom and chunk sizes. void Refit(); Refit the container so that all current data fits into a single; chunk. Char_t* NewChunk(); Allocate a new memory chunk and register it. Char_t* NewAtom(). TEveChunkManager(const TEveChunkManager& ). TEveChunkManager& operator=(const TEveChunkManager& ). Int_t S() const; { return fS; }. Int_t N() const; { return fN; }. Int_t Size() const; { return fSize; }. Int_t VecSize() const; { return fVecSize; }. Int_t Capacity() const; { return fCapacity; }. Char_t* Atom(Int_t idx) const; { return fChunks[idx/fN]->fArray + idx%fN*fS; }. Char_t* Chunk(Int_t chk) const; { return fChunks[chk]->fArray; }. Int_t NAtoms(Int_t chk) const; { return (chk < fVecSize-1) ? fN : ",MatchSource.WIKI,root/html534/TEveChunkManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveChunkManager.html
https://root.cern/root/html534/TEveChunkManager.html:1749,Deployability,Release,Release,1749,"; virtual~TEveChunkManager(); Char_t*Atom(Int_t idx) const; Int_tCapacity() const; Char_t*Chunk(Int_t chk) const; static TClass*Class(); virtual TClass*IsA() const; Int_tN() const; Int_tNAtoms(Int_t chk) const; Char_t*NewAtom(); Char_t*NewChunk(); voidRefit(); voidReset(Int_t atom_size, Int_t chunk_size); Int_tS() const; virtual voidShowMembers(TMemberInspector&); Int_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Int_tVecSize() const. protected:. voidReleaseChunks(). private:. TEveChunkManager(const TEveChunkManager&); TEveChunkManager&operator=(const TEveChunkManager&). Data Members; protected:. Int_tfCapacityAvailable capacity within the chunks; vector<TArrayC*>fChunksMemory blocks; Int_tfNNumber of atoms in a chunk; Int_tfSSize of atom; Int_tfSizeSize of container, number of atoms; Int_tfVecSizeNumber of allocated chunks. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReleaseChunks(); Release all memory chunks. TEveChunkManager(); Default constructor.; Call reset for initialization. TEveChunkManager(Int_t atom_size, Int_t chunk_size); Constructor. ~TEveChunkManager(); Destructor. void Reset(Int_t atom_size, Int_t chunk_size); Empty the container and reset it with given atom and chunk sizes. void Refit(); Refit the container so that all current data fits into a single; chunk. Char_t* NewChunk(); Allocate a new memory chunk and register it. Char_t* NewAtom(). TEveChunkManager(const TEveChunkManager& ). TEveChunkManager& operator=(const TEveChunkManager& ). Int_t S() const; { return fS; }. Int_t N() const; { return fN; }. Int_t Size() const; { return fSize; }. Int_t VecSize() const; { return fVecSize; }. Int_t Capacity() const; { return fCapacity; }. Char_t* Atom(Int_t idx) const; { return fChunks[idx/fN]->fArray + idx%fN*fS; }. Char_t* Chunk(Int_t chk) const; { return fChunks[chk]->fArray; }. Int_t NAtoms(Int_t chk) const; { return (chk < fVecSize-1) ? fN : ",MatchSource.WIKI,root/html534/TEveChunkManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveChunkManager.html
https://root.cern/root/html534/TEveChunkManager.html:1618,Energy Efficiency,allocate,allocated,1618," not supported, neither is removal of atoms.; The structure can be Refit() to occupy a single contiguous array. Function Members (Methods); public:. TEveChunkManager(); TEveChunkManager(Int_t atom_size, Int_t chunk_size); virtual~TEveChunkManager(); Char_t*Atom(Int_t idx) const; Int_tCapacity() const; Char_t*Chunk(Int_t chk) const; static TClass*Class(); virtual TClass*IsA() const; Int_tN() const; Int_tNAtoms(Int_t chk) const; Char_t*NewAtom(); Char_t*NewChunk(); voidRefit(); voidReset(Int_t atom_size, Int_t chunk_size); Int_tS() const; virtual voidShowMembers(TMemberInspector&); Int_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Int_tVecSize() const. protected:. voidReleaseChunks(). private:. TEveChunkManager(const TEveChunkManager&); TEveChunkManager&operator=(const TEveChunkManager&). Data Members; protected:. Int_tfCapacityAvailable capacity within the chunks; vector<TArrayC*>fChunksMemory blocks; Int_tfNNumber of atoms in a chunk; Int_tfSSize of atom; Int_tfSizeSize of container, number of atoms; Int_tfVecSizeNumber of allocated chunks. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReleaseChunks(); Release all memory chunks. TEveChunkManager(); Default constructor.; Call reset for initialization. TEveChunkManager(Int_t atom_size, Int_t chunk_size); Constructor. ~TEveChunkManager(); Destructor. void Reset(Int_t atom_size, Int_t chunk_size); Empty the container and reset it with given atom and chunk sizes. void Refit(); Refit the container so that all current data fits into a single; chunk. Char_t* NewChunk(); Allocate a new memory chunk and register it. Char_t* NewAtom(). TEveChunkManager(const TEveChunkManager& ). TEveChunkManager& operator=(const TEveChunkManager& ). Int_t S() const; { return fS; }. Int_t N() const; { return fN; }. Int_t Size() const; { return fSize; }. Int_t VecSize() const; { return fVecSize; }. Int_t Capacity() const; { return fCapac",MatchSource.WIKI,root/html534/TEveChunkManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveChunkManager.html
https://root.cern/root/html534/TEveChunkManager.html:2167,Energy Efficiency,Allocate,Allocate,2167,"k(); voidRefit(); voidReset(Int_t atom_size, Int_t chunk_size); Int_tS() const; virtual voidShowMembers(TMemberInspector&); Int_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Int_tVecSize() const. protected:. voidReleaseChunks(). private:. TEveChunkManager(const TEveChunkManager&); TEveChunkManager&operator=(const TEveChunkManager&). Data Members; protected:. Int_tfCapacityAvailable capacity within the chunks; vector<TArrayC*>fChunksMemory blocks; Int_tfNNumber of atoms in a chunk; Int_tfSSize of atom; Int_tfSizeSize of container, number of atoms; Int_tfVecSizeNumber of allocated chunks. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReleaseChunks(); Release all memory chunks. TEveChunkManager(); Default constructor.; Call reset for initialization. TEveChunkManager(Int_t atom_size, Int_t chunk_size); Constructor. ~TEveChunkManager(); Destructor. void Reset(Int_t atom_size, Int_t chunk_size); Empty the container and reset it with given atom and chunk sizes. void Refit(); Refit the container so that all current data fits into a single; chunk. Char_t* NewChunk(); Allocate a new memory chunk and register it. Char_t* NewAtom(). TEveChunkManager(const TEveChunkManager& ). TEveChunkManager& operator=(const TEveChunkManager& ). Int_t S() const; { return fS; }. Int_t N() const; { return fN; }. Int_t Size() const; { return fSize; }. Int_t VecSize() const; { return fVecSize; }. Int_t Capacity() const; { return fCapacity; }. Char_t* Atom(Int_t idx) const; { return fChunks[idx/fN]->fArray + idx%fN*fS; }. Char_t* Chunk(Int_t chk) const; { return fChunks[chk]->fArray; }. Int_t NAtoms(Int_t chk) const; { return (chk < fVecSize-1) ? fN : (fSize-1)%fN + 1; }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveChunkManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveChunkManager.html
https://root.cern/root/html534/TEveChunkManager.html:1650,Modifiability,Inherit,Inheritance,1650,"kManager(); TEveChunkManager(Int_t atom_size, Int_t chunk_size); virtual~TEveChunkManager(); Char_t*Atom(Int_t idx) const; Int_tCapacity() const; Char_t*Chunk(Int_t chk) const; static TClass*Class(); virtual TClass*IsA() const; Int_tN() const; Int_tNAtoms(Int_t chk) const; Char_t*NewAtom(); Char_t*NewChunk(); voidRefit(); voidReset(Int_t atom_size, Int_t chunk_size); Int_tS() const; virtual voidShowMembers(TMemberInspector&); Int_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Int_tVecSize() const. protected:. voidReleaseChunks(). private:. TEveChunkManager(const TEveChunkManager&); TEveChunkManager&operator=(const TEveChunkManager&). Data Members; protected:. Int_tfCapacityAvailable capacity within the chunks; vector<TArrayC*>fChunksMemory blocks; Int_tfNNumber of atoms in a chunk; Int_tfSSize of atom; Int_tfSizeSize of container, number of atoms; Int_tfVecSizeNumber of allocated chunks. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReleaseChunks(); Release all memory chunks. TEveChunkManager(); Default constructor.; Call reset for initialization. TEveChunkManager(Int_t atom_size, Int_t chunk_size); Constructor. ~TEveChunkManager(); Destructor. void Reset(Int_t atom_size, Int_t chunk_size); Empty the container and reset it with given atom and chunk sizes. void Refit(); Refit the container so that all current data fits into a single; chunk. Char_t* NewChunk(); Allocate a new memory chunk and register it. Char_t* NewAtom(). TEveChunkManager(const TEveChunkManager& ). TEveChunkManager& operator=(const TEveChunkManager& ). Int_t S() const; { return fS; }. Int_t N() const; { return fN; }. Int_t Size() const; { return fSize; }. Int_t VecSize() const; { return fVecSize; }. Int_t Capacity() const; { return fCapacity; }. Char_t* Atom(Int_t idx) const; { return fChunks[idx/fN]->fArray + idx%fN*fS; }. Char_t* Chunk(Int_t chk) const; { return fChunks[chk]->fArray; }. Int",MatchSource.WIKI,root/html534/TEveChunkManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveChunkManager.html
https://root.cern/root/html534/TEveChunkManager.html:1663,Modifiability,Inherit,Inherited,1663,"kManager(); TEveChunkManager(Int_t atom_size, Int_t chunk_size); virtual~TEveChunkManager(); Char_t*Atom(Int_t idx) const; Int_tCapacity() const; Char_t*Chunk(Int_t chk) const; static TClass*Class(); virtual TClass*IsA() const; Int_tN() const; Int_tNAtoms(Int_t chk) const; Char_t*NewAtom(); Char_t*NewChunk(); voidRefit(); voidReset(Int_t atom_size, Int_t chunk_size); Int_tS() const; virtual voidShowMembers(TMemberInspector&); Int_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Int_tVecSize() const. protected:. voidReleaseChunks(). private:. TEveChunkManager(const TEveChunkManager&); TEveChunkManager&operator=(const TEveChunkManager&). Data Members; protected:. Int_tfCapacityAvailable capacity within the chunks; vector<TArrayC*>fChunksMemory blocks; Int_tfNNumber of atoms in a chunk; Int_tfSSize of atom; Int_tfSizeSize of container, number of atoms; Int_tfVecSizeNumber of allocated chunks. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReleaseChunks(); Release all memory chunks. TEveChunkManager(); Default constructor.; Call reset for initialization. TEveChunkManager(Int_t atom_size, Int_t chunk_size); Constructor. ~TEveChunkManager(); Destructor. void Reset(Int_t atom_size, Int_t chunk_size); Empty the container and reset it with given atom and chunk sizes. void Refit(); Refit the container so that all current data fits into a single; chunk. Char_t* NewChunk(); Allocate a new memory chunk and register it. Char_t* NewAtom(). TEveChunkManager(const TEveChunkManager& ). TEveChunkManager& operator=(const TEveChunkManager& ). Int_t S() const; { return fS; }. Int_t N() const; { return fN; }. Int_t Size() const; { return fSize; }. Int_t VecSize() const; { return fVecSize; }. Int_t Capacity() const; { return fCapacity; }. Char_t* Atom(Int_t idx) const; { return fChunks[idx/fN]->fArray + idx%fN*fS; }. Char_t* Chunk(Int_t chk) const; { return fChunks[chk]->fArray; }. Int",MatchSource.WIKI,root/html534/TEveChunkManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveChunkManager.html
https://root.cern/root/html534/TEveChunkManager__iterator.html:1270,Modifiability,Inherit,Inheritance,1270,". TEveChunkManager::iterator. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveChunkManager::iterator. class TEveChunkManager::iterator. Vector-like container with chunked memory allocation. Allocation chunk can accommodate fN atoms of byte-size fS each.; The chunks themselves are TArrayCs and are stored in a std::vector<TArrayC*>.; Holes in the structure are not supported, neither is removal of atoms.; The structure can be Refit() to occupy a single contiguous array. Function Members (Methods); public:. ~iterator(); Int_tindex(); TEveChunkManager::iteratoriterator(TEveChunkManager* p); TEveChunkManager::iteratoriterator(TEveChunkManager& p); TEveChunkManager::iteratoriterator(const TEveChunkManager::iterator& i); Bool_tnext(); Char_t*operator()(); Char_t*operator*(); TEveChunkManager::iterator&operator=(const TEveChunkManager::iterator& i); voidreset(). Data Members; public:. Int_tfAtomIndex; Int_tfAtomsToGo; Char_t*fCurrent; Int_tfNextChunk; TEveChunkManager*fPlex; set<Int_t>*fSelection; set<int,less<int>,allocator<int> >::iteratorfSelectionIterator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t next(); Go to next atom. TEveChunkManager& operator=(const TEveChunkManager::iterator& i). iterator(TEveChunkManager* p); {}. iterator(TEveChunkManager& p); {}. iterator(const TEveChunkManager::iterator& i); {}. void reset(); { fCurrent = 0; fAtomIndex = -1; fNextChunk = fAtomsToGo = 0; }. Char_t* operator()(); { return fCurrent; }. Char_t* operator*(); { return fCurrent; }. Int_t index(); { return fAtomIndex; }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveChunkManager__iterator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveChunkManager__iterator.html
https://root.cern/root/html534/TEveChunkManager__iterator.html:1283,Modifiability,Inherit,Inherited,1283,". TEveChunkManager::iterator. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveChunkManager::iterator. class TEveChunkManager::iterator. Vector-like container with chunked memory allocation. Allocation chunk can accommodate fN atoms of byte-size fS each.; The chunks themselves are TArrayCs and are stored in a std::vector<TArrayC*>.; Holes in the structure are not supported, neither is removal of atoms.; The structure can be Refit() to occupy a single contiguous array. Function Members (Methods); public:. ~iterator(); Int_tindex(); TEveChunkManager::iteratoriterator(TEveChunkManager* p); TEveChunkManager::iteratoriterator(TEveChunkManager& p); TEveChunkManager::iteratoriterator(const TEveChunkManager::iterator& i); Bool_tnext(); Char_t*operator()(); Char_t*operator*(); TEveChunkManager::iterator&operator=(const TEveChunkManager::iterator& i); voidreset(). Data Members; public:. Int_tfAtomIndex; Int_tfAtomsToGo; Char_t*fCurrent; Int_tfNextChunk; TEveChunkManager*fPlex; set<Int_t>*fSelection; set<int,less<int>,allocator<int> >::iteratorfSelectionIterator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t next(); Go to next atom. TEveChunkManager& operator=(const TEveChunkManager::iterator& i). iterator(TEveChunkManager* p); {}. iterator(TEveChunkManager& p); {}. iterator(const TEveChunkManager::iterator& i); {}. void reset(); { fCurrent = 0; fAtomIndex = -1; fNextChunk = fAtomsToGo = 0; }. Char_t* operator()(); { return fCurrent; }. Char_t* operator*(); { return fCurrent; }. Int_t index(); { return fAtomIndex; }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveChunkManager__iterator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveChunkManager__iterator.html
https://root.cern/root/html534/TEveCluster.html:1202,Availability,Error,Error,1202," TEveCluster(); TEveCluster(const TEveCluster&); virtual~TEveCluster(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:1331,Availability,error,error,1331," TEveCluster(); TEveCluster(const TEveCluster&); virtual~TEveCluster(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:1415,Availability,error,error,1415," voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:5506,Availability,Error,Errors,5506,"::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. UShort_tfDetIdCustom detector id.; Int_tfLabel[3]Labels of particles that contributed hits.; UShort_tfSubdetIdCustom sub-detector id.; TEveVectorfVVertex. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveCluster& ); { *((TParticle*)this) = p; return *this; }. TEveCluster(); TEveVector fW; // Cluster widths.; Coord system? Errors and/or widths Wz, Wy?. { fLabel[0] = fLabel[1] = fLabel[2] = 0; }. virtual ~TEveCluster(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:2295,Modifiability,Inherit,InheritsFrom,2295,"d, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:2361,Modifiability,Inherit,InheritsFrom,2361,"cute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEveCluster&operator=(c",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:5276,Modifiability,Inherit,Inheritance,5276,"::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. UShort_tfDetIdCustom detector id.; Int_tfLabel[3]Labels of particles that contributed hits.; UShort_tfSubdetIdCustom sub-detector id.; TEveVectorfVVertex. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveCluster& ); { *((TParticle*)this) = p; return *this; }. TEveCluster(); TEveVector fW; // Cluster widths.; Coord system? Errors and/or widths Wz, Wy?. { fLabel[0] = fLabel[1] = fLabel[2] = 0; }. virtual ~TEveCluster(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:5289,Modifiability,Inherit,Inherited,5289,"::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. UShort_tfDetIdCustom detector id.; Int_tfLabel[3]Labels of particles that contributed hits.; UShort_tfSubdetIdCustom sub-detector id.; TEveVectorfVVertex. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveCluster& ); { *((TParticle*)this) = p; return *this; }. TEveCluster(); TEveVector fW; // Cluster widths.; Coord system? Errors and/or widths Wz, Wy?. { fLabel[0] = fLabel[1] = fLabel[2] = 0; }. virtual ~TEveCluster(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:5128,Safety,detect,detector,5128,"::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. UShort_tfDetIdCustom detector id.; Int_tfLabel[3]Labels of particles that contributed hits.; UShort_tfSubdetIdCustom sub-detector id.; TEveVectorfVVertex. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveCluster& ); { *((TParticle*)this) = p; return *this; }. TEveCluster(); TEveVector fW; // Cluster widths.; Coord system? Errors and/or widths Wz, Wy?. { fLabel[0] = fLabel[1] = fLabel[2] = 0; }. virtual ~TEveCluster(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:5228,Safety,detect,detector,5228,"::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. UShort_tfDetIdCustom detector id.; Int_tfLabel[3]Labels of particles that contributed hits.; UShort_tfSubdetIdCustom sub-detector id.; TEveVectorfVVertex. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveCluster& ); { *((TParticle*)this) = p; return *this; }. TEveCluster(); TEveVector fW; // Cluster widths.; Coord system? Errors and/or widths Wz, Wy?. { fLabel[0] = fLabel[1] = fLabel[2] = 0; }. virtual ~TEveCluster(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:2185,Security,Hash,Hash,2185,"l voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:4322,Testability,Test,TestBit,4322,"_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEveCluster&operator=(const TEveCluster&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:4361,Testability,Test,TestBits,4361,"_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEveCluster&operator=(const TEveCluster&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCluster.html:662,Usability,Clear,Clear,662," TEveCluster(); TEveCluster(const TEveCluster&); virtual~TEveCluster(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::",MatchSource.WIKI,root/html534/TEveCluster.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCluster.html
https://root.cern/root/html534/TEveCompositeFrame.html:1089,Availability,avail,available,1089," Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveCompositeFrame. class TEveCompositeFrame: public TGCompositeFrame. Abstract base-class for frame-slots that encompass EVE-windows; (sub-classes of TEveWindow). The EVE-frame classes are managed by their embedded EVE-windows and; mostly serve as an interface to particular ROOT widgets; (sub-classes of TGCompositeFrame) they are embedded into. This base-class, a sub-class of a vertical composite-frame, creates; also the title-bar which can be used to interact with the embedded; window. Optionally, the title-bar can be replaced with a mini-bar; (a 4-pixel thin bar at the top). By clicking on the mini-bar, the; title-bar is restored. Sub-classes provide for specific behaviour and expectations of; individual ROOT GUI container frames. POSSIBLE EXTENSIONS. No frame is drawn around this composite-frame - frame style could be; available as a (static) member. Menus of embedded windows could also be managed - hidden or transposed; to a top-level menubar. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TEveCompositeFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidAcquireEveWindow(TEveWindow* ew); voidActionPressed(); virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)S",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:1351,Availability,avail,available,1351,"s for frame-slots that encompass EVE-windows; (sub-classes of TEveWindow). The EVE-frame classes are managed by their embedded EVE-windows and; mostly serve as an interface to particular ROOT widgets; (sub-classes of TGCompositeFrame) they are embedded into. This base-class, a sub-class of a vertical composite-frame, creates; also the title-bar which can be used to interact with the embedded; window. Optionally, the title-bar can be replaced with a mini-bar; (a 4-pixel thin bar at the top). By clicking on the mini-bar, the; title-bar is restored. Sub-classes provide for specific behaviour and expectations of; individual ROOT GUI container frames. POSSIBLE EXTENSIONS. No frame is drawn around this composite-frame - frame style could be; available as a (static) member. Menus of embedded windows could also be managed - hidden or transposed; to a top-level menubar. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TEveCompositeFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidAcquireEveWindow(TEveWindow* ew); voidActionPressed(); virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Cle",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:5037,Availability,Error,Error,5037,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFlipTitleBarState(); virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFr",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:5166,Availability,error,error,5166,"* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFlipTitleBarState(); virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame:",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:5250,Availability,error,error,5250,"t(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFlipTitleBarState(); virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const; virtual TDNDData*TGFrame::GetDNDData(Atom_t); virtual Int_",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:18195,Availability,mask,mask,18195,,MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:21106,Deployability,Update,Update,21106,"t; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static const TStringfgkEmptyFrameName. private:. static Bool_tfgAllowTopFrameCollapse; static void*fgIconBarCreator; static UInt_tfgMiniBarHeight; static UInt_tfgTopFrameHeight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupFrameMarkup(TEveCompositeFrame::IconBarCreator_foo creator, UInt_t top_frame_height = 14, UInt_t mini_bar_height = 4, Bool_t allow_top_collapse = kTRUE); Set properties of the EVE frame.; Should be called before the windows are created. ~TEveCompositeFrame(); If fEveWindow != 0 we are being deleted from the ROOT GUI side.; Relinquishe EveWindow and ref-counting should do the rest. void WindowNameChanged(const TString& name); Update widgets using window's name or title. void AcquireEveWindow(TEveWindow* ew); Accept window and increase its deny-destroy count.; Window's gui-frame is embedded and mapped.; Layout is not called. Throws an exception if a window is already embedded or if 0 is; passed as an argument. TEveWindow* RelinquishEveWindow(Bool_t reparent = kTRUE); Remove window and decrease its deny-destroy count.; Window's gui-frame is unmapped, removed and, if reparent flag is; true (default), reparented to default-root. TEveWindow* GetEveParentAsWindow() const; Returns eve-parent dynamic-casted to TEveWindow. void SetCurrent(Bool_t curr); Set current state of this frame.; This is called by the management functions in TEveWindow. void SetShowTitleBar(Bool_t show); Set state of title-bar. This toggles between the display of the full; title-bar and 4-pixel-high mini-bar. void HideAllDecorations(); Hide title-bar and mini-bar. void ShowNormalDecorations(); Show title-bar or mini-bar, as dictated by the wi",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:21892,Deployability,toggle,toggles,21892,"eFrame(); If fEveWindow != 0 we are being deleted from the ROOT GUI side.; Relinquishe EveWindow and ref-counting should do the rest. void WindowNameChanged(const TString& name); Update widgets using window's name or title. void AcquireEveWindow(TEveWindow* ew); Accept window and increase its deny-destroy count.; Window's gui-frame is embedded and mapped.; Layout is not called. Throws an exception if a window is already embedded or if 0 is; passed as an argument. TEveWindow* RelinquishEveWindow(Bool_t reparent = kTRUE); Remove window and decrease its deny-destroy count.; Window's gui-frame is unmapped, removed and, if reparent flag is; true (default), reparented to default-root. TEveWindow* GetEveParentAsWindow() const; Returns eve-parent dynamic-casted to TEveWindow. void SetCurrent(Bool_t curr); Set current state of this frame.; This is called by the management functions in TEveWindow. void SetShowTitleBar(Bool_t show); Set state of title-bar. This toggles between the display of the full; title-bar and 4-pixel-high mini-bar. void HideAllDecorations(); Hide title-bar and mini-bar. void ShowNormalDecorations(); Show title-bar or mini-bar, as dictated by the window. void ActionPressed(); The action-button of the title-bar was pressed.; This opens context menu of the eve-window. void FlipTitleBarState(); Change display-state of the title-bar / mini-bar.; This function is used as a slot and passes the call to eve-window. void TitleBarClicked(); Slot for mouse-click on the central part of the title-bar.; The call is passed to eve-window. TEveCompositeFrame& operator=(const TEveCompositeFrame& ). void Destroy(). TEveWindow* GetEveWindow() const; { return fEveWindow; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:506,Integrability,interface,interface,506,". TEveCompositeFrame. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveCompositeFrame. class TEveCompositeFrame: public TGCompositeFrame. Abstract base-class for frame-slots that encompass EVE-windows; (sub-classes of TEveWindow). The EVE-frame classes are managed by their embedded EVE-windows and; mostly serve as an interface to particular ROOT widgets; (sub-classes of TGCompositeFrame) they are embedded into. This base-class, a sub-class of a vertical composite-frame, creates; also the title-bar which can be used to interact with the embedded; window. Optionally, the title-bar can be replaced with a mini-bar; (a 4-pixel thin bar at the top). By clicking on the mini-bar, the; title-bar is restored. Sub-classes provide for specific behaviour and expectations of; individual ROOT GUI container frames. POSSIBLE EXTENSIONS. No frame is drawn around this composite-frame - frame style could be; available as a (static) member. Menus of embedded windows could also be managed - hidden or transposed; to a top-level menubar. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TEveCompositeFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidAcquireEveWindow(TEveWindow* ew); voidActionPressed(); virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:11337,Integrability,Message,Message,11337,"Frame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTGCompositeFrame::Print(Option_t* option = """") const; virtual voidTGFrame::",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:9882,Modifiability,Inherit,InheritsFrom,9882,"dleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidHideAllDecorations(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:9948,Modifiability,Inherit,InheritsFrom,9948,"t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidHideAllDecorations(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:20590,Modifiability,Inherit,Inheritance,20590,"gndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static TEveContextMenu*fgCtxMenu; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TList*fgFrameList; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static const TStringfgkEmptyFrameName. private:. static Bool_tfgAllowTopFrameCollapse; static void*fgIconBarCreator; static UInt_tfgMiniBarHeight; static UInt_tfgTopFrameHeight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupFrameMarkup(TEveCompositeFrame::IconBarCreator_foo creator, UInt_t top_frame_height = 14, UInt_t mini_bar_height = 4, Bool_t allow_top_collapse = kTRUE); Set properties of the EVE frame.; Should be called before the windows are created. ~TEveCompositeFrame(); If fEveWindow != 0 we are being deleted from the ROOT GUI side.; Relinquishe EveWindow and ref-counting should do the rest. void WindowNameChanged(const TString& name); Update widgets using window's name or title. void AcquireEveWindow(TEveWindow* ew); Accept window and increase its deny-destroy count.; Window's gui-frame is embedded and mapped.; Layout is not called. Throws an exception if a window is already embedded or if 0 is; passed as an argument. TEveWindow* RelinquishEveWindow(Bool_t reparent = kTRUE); Remove window and decrease its deny-destroy count.; Window's gui-frame is unmapped, removed and, if reparent flag is; true (default), reparented to default-root. T",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:20603,Modifiability,Inherit,Inherited,20603,"gndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static TEveContextMenu*fgCtxMenu; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TList*fgFrameList; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static const TStringfgkEmptyFrameName. private:. static Bool_tfgAllowTopFrameCollapse; static void*fgIconBarCreator; static UInt_tfgMiniBarHeight; static UInt_tfgTopFrameHeight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupFrameMarkup(TEveCompositeFrame::IconBarCreator_foo creator, UInt_t top_frame_height = 14, UInt_t mini_bar_height = 4, Bool_t allow_top_collapse = kTRUE); Set properties of the EVE frame.; Should be called before the windows are created. ~TEveCompositeFrame(); If fEveWindow != 0 we are being deleted from the ROOT GUI side.; Relinquishe EveWindow and ref-counting should do the rest. void WindowNameChanged(const TString& name); Update widgets using window's name or title. void AcquireEveWindow(TEveWindow* ew); Accept window and increase its deny-destroy count.; Window's gui-frame is embedded and mapped.; Layout is not called. Throws an exception if a window is already embedded or if 0 is; passed as an argument. TEveWindow* RelinquishEveWindow(Bool_t reparent = kTRUE); Remove window and decrease its deny-destroy count.; Window's gui-frame is unmapped, removed and, if reparent flag is; true (default), reparented to default-root. T",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:9558,Security,Hash,Hash,9558,"t_t, Int_t); virtual Bool_tTGCompositeFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidHideAllDecorations(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayout",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:15653,Testability,Test,TestBit,15653,"n = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetShowTitleBar(Bool_t show); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); static voidSetupFrameMarkup(TEveCompositeFrame::IconBarCreator_foo creator, UInt_t top_frame_height = 14, UInt_t mini_bar_height = 4, Bool_t allow_top_collapse = kTRUE); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidShowNormalDecorations(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTitleBarClicked(); virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual voidWindowNameChanged(const TString& name); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:15692,Testability,Test,TestBits,15692,"n = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetShowTitleBar(Bool_t show); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); static voidSetupFrameMarkup(TEveCompositeFrame::IconBarCreator_foo creator, UInt_t top_frame_height = 14, UInt_t mini_bar_height = 4, Bool_t allow_top_collapse = kTRUE); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidShowNormalDecorations(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTitleBarClicked(); virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual voidWindowNameChanged(const TString& name); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrame.html:2341,Usability,Clear,Clear,2341," virtual~TEveCompositeFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidAcquireEveWindow(TEveWindow* ew); voidActionPressed(); virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground",MatchSource.WIKI,root/html534/TEveCompositeFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:4249,Availability,Error,Error,4249,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidTEveCompositeFrame::FlipTitleBarState(); virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:4378,Availability,error,error,4378,"* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidTEveCompositeFrame::FlipTitleBarState(); virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UIn",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:4462,Availability,error,error,4462,"t(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidTEveCompositeFrame::FlipTitleBarState(); virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const; virtual TDNDData*TGFrame::GetDNDData(A",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:17969,Availability,mask,mask,17969,,MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:20765,Deployability,Update,Update,20765,"xtMenu*TEveCompositeFrame::fgCtxMenu; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TList*TEveCompositeFrame::fgFrameList; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static const TStringTEveCompositeFrame::fgkEmptyFrameName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCompositeFrameInMainFrame(TGCompositeFrame* parent, TEveWindow* eve_parent, TGMainFrame* mf); Constructor. ~TEveCompositeFrameInMainFrame(); Destructor. void WindowNameChanged(const TString& name); Update widgets using window's name or title. void Destroy(); Virtual function called from eve side when the frame should be; destroyed. This means we expect that fEveWindow is null. We simply call CloseWindow() on the main-frame which will in; turn generate the ""CloseWindow()"" signal.; This is then handled in MainFrameClosed(). void SetOriginalSlotAndContainer(TEveWindow* slot, TEveWindow* container); Set the container where to return the contained window on destruction. void SomeWindowClosed(TEveWindow* w); Slot called when a window is closed ... we check that this was; not our original container. void MainFrameClosed(); Slot for main-frame's ""CloseWindow()"" signal.; If an eve window is still present, it will be put into:; - original-container, if it is set;; - into window-managers default-container. TEveCompositeFrame& operator=(const TEveCompositeFrameInMainFrame& ). TEveCompositeFrameInMainFrame(const TEveCompositeFrameInMainFrame& ). TEveWindow* GetOriginalSlot() const; { return ",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:10729,Integrability,Message,Message,10729,"nst; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidMainFrameClosed(); virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTGCompositeFrame::Print(Option_t* option = """") const; virtual voidTGFrame::",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:9251,Modifiability,Inherit,InheritsFrom,9251,"e*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTEveCompositeFrame::HideAllDecorations(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:9317,Modifiability,Inherit,InheritsFrom,9317,"ool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTEveCompositeFrame::HideAllDecorations(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:20486,Modifiability,Inherit,Inheritance,20486,"ockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static TEveContextMenu*TEveCompositeFrame::fgCtxMenu; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TList*TEveCompositeFrame::fgFrameList; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static const TStringTEveCompositeFrame::fgkEmptyFrameName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCompositeFrameInMainFrame(TGCompositeFrame* parent, TEveWindow* eve_parent, TGMainFrame* mf); Constructor. ~TEveCompositeFrameInMainFrame(); Destructor. void WindowNameChanged(const TString& name); Update widgets using window's name or title. void Destroy(); Virtual function called from eve side when the frame should be; destroyed. This means we expect that fEveWindow is null. We simply call CloseWindow() on the main-frame which will in; turn generate the ""CloseWindow()"" signal.; This is then handled in MainFrameClosed(). void SetOriginalSlotAndContainer(TEveWindow* slot, TEveWindow* container); Set the container where to return the contained window on destruction. void SomeWindowClosed(TEveWindow* w); Slot called when a window is closed ... we check that this was; not our original container. void MainFrameClosed(); Slot for main-frame's ""CloseWindow()"" signal.; If an eve window is still present, it will be put into:; - original-co",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:20499,Modifiability,Inherit,Inherited,20499,"ockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static TEveContextMenu*TEveCompositeFrame::fgCtxMenu; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TList*TEveCompositeFrame::fgFrameList; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static const TStringTEveCompositeFrame::fgkEmptyFrameName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCompositeFrameInMainFrame(TGCompositeFrame* parent, TEveWindow* eve_parent, TGMainFrame* mf); Constructor. ~TEveCompositeFrameInMainFrame(); Destructor. void WindowNameChanged(const TString& name); Update widgets using window's name or title. void Destroy(); Virtual function called from eve side when the frame should be; destroyed. This means we expect that fEveWindow is null. We simply call CloseWindow() on the main-frame which will in; turn generate the ""CloseWindow()"" signal.; This is then handled in MainFrameClosed(). void SetOriginalSlotAndContainer(TEveWindow* slot, TEveWindow* container); Set the container where to return the contained window on destruction. void SomeWindowClosed(TEveWindow* w); Slot called when a window is closed ... we check that this was; not our original container. void MainFrameClosed(); Slot for main-frame's ""CloseWindow()"" signal.; If an eve window is still present, it will be put into:; - original-co",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:8907,Security,Hash,Hash,8907,"t_t, Int_t); virtual Bool_tTGCompositeFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTEveCompositeFrame::HideAllDecorations(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGComp",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:15256,Testability,Test,TestBit,15256,"oken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); voidSetOriginalSlotAndContainer(TEveWindow* slot, TEveWindow* container); virtual voidTEveCompositeFrame::SetShowTitleBar(Bool_t show); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); static voidTEveCompositeFrame::SetupFrameMarkup(TEveCompositeFrame::IconBarCreator_foo creator, UInt_t top_frame_height = 14, UInt_t mini_bar_height = 4, Bool_t allow_top_collapse = kTRUE); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidTEveCompositeFrame::ShowNormalDecorations(); voidSomeWindowClosed(TEveWindow* w); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTEveCompositeFrame::TitleBarClicked(); virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual voidWindowNameChanged(const TString& name); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:15295,Testability,Test,TestBits,15295,"oken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); voidSetOriginalSlotAndContainer(TEveWindow* slot, TEveWindow* container); virtual voidTEveCompositeFrame::SetShowTitleBar(Bool_t show); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); static voidTEveCompositeFrame::SetupFrameMarkup(TEveCompositeFrame::IconBarCreator_foo creator, UInt_t top_frame_height = 14, UInt_t mini_bar_height = 4, Bool_t allow_top_collapse = kTRUE); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidTEveCompositeFrame::ShowNormalDecorations(); voidSomeWindowClosed(TEveWindow* w); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTEveCompositeFrame::TitleBarClicked(); virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual voidWindowNameChanged(const TString& name); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:1553,Usability,Clear,Clear,1553,"veCompositeFrameInMainFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidTEveCompositeFrame::AcquireEveWindow(TEveWindow* ew); voidTEveCompositeFrame::ActionPressed(); virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTGFrame::Delete(Option_t* = """"); virtual voidTGFrame::DeleteWindow(); virtual voidDestroy(); virtual voidTQObject::Destroyed()SIGNAL ; virtual voidTGWindow::DestroySubwindows(); virtual voidTGWindow::DestroyWindow(); Bool_tTQObject::Disconnect(const char* si",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html:20950,Usability,simpl,simply,20950," hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TList*TEveCompositeFrame::fgFrameList; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static const TStringTEveCompositeFrame::fgkEmptyFrameName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCompositeFrameInMainFrame(TGCompositeFrame* parent, TEveWindow* eve_parent, TGMainFrame* mf); Constructor. ~TEveCompositeFrameInMainFrame(); Destructor. void WindowNameChanged(const TString& name); Update widgets using window's name or title. void Destroy(); Virtual function called from eve side when the frame should be; destroyed. This means we expect that fEveWindow is null. We simply call CloseWindow() on the main-frame which will in; turn generate the ""CloseWindow()"" signal.; This is then handled in MainFrameClosed(). void SetOriginalSlotAndContainer(TEveWindow* slot, TEveWindow* container); Set the container where to return the contained window on destruction. void SomeWindowClosed(TEveWindow* w); Slot called when a window is closed ... we check that this was; not our original container. void MainFrameClosed(); Slot for main-frame's ""CloseWindow()"" signal.; If an eve window is still present, it will be put into:; - original-container, if it is set;; - into window-managers default-container. TEveCompositeFrame& operator=(const TEveCompositeFrameInMainFrame& ). TEveCompositeFrameInMainFrame(const TEveCompositeFrameInMainFrame& ). TEveWindow* GetOriginalSlot() const; { return fOriginalSlot; }. TEveWindow* GetOriginalContainer() const; { return fOriginalContainer; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-",MatchSource.WIKI,root/html534/TEveCompositeFrameInMainFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInMainFrame.html
https://root.cern/root/html534/TEveCompositeFrameInPack.html:4229,Availability,Error,Error,4229,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidTEveCompositeFrame::FlipTitleBarState(); virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const",MatchSource.WIKI,root/html534/TEveCompositeFrameInPack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInPack.html
https://root.cern/root/html534/TEveCompositeFrameInPack.html:4358,Availability,error,error,4358,"* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidTEveCompositeFrame::FlipTitleBarState(); virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UIn",MatchSource.WIKI,root/html534/TEveCompositeFrameInPack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInPack.html
https://root.cern/root/html534/TEveCompositeFrameInPack.html:4442,Availability,error,error,4442,"t(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidTEveCompositeFrame::FlipTitleBarState(); virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const; virtual TDNDData*TGFrame::GetDNDData(A",MatchSource.WIKI,root/html534/TEveCompositeFrameInPack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInPack.html
https://root.cern/root/html534/TEveCompositeFrameInPack.html:17738,Availability,mask,mask,17738,,MatchSource.WIKI,root/html534/TEveCompositeFrameInPack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInPack.html
https://root.cern/root/html534/TEveCompositeFrameInPack.html:10609,Integrability,Message,Message,10609,"Frame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTGCompositeFrame::Print(Option_t* option = """") const; virtual voidTGFrame::",MatchSource.WIKI,root/html534/TEveCompositeFrameInPack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInPack.html
https://root.cern/root/html534/TEveCompositeFrameInPack.html:9154,Modifiability,Inherit,InheritsFrom,9154,"e*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTEveCompositeFrame::HideAllDecorations(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root/html534/TEveCompositeFrameInPack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInPack.html
https://root.cern/root/html534/TEveCompositeFrameInPack.html:9220,Modifiability,Inherit,InheritsFrom,9220,"ool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTEveCompositeFrame::HideAllDecorations(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root/html534/TEveCompositeFrameInPack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInPack.html
https://root.cern/root/html534/TEveCompositeFrameInPack.html:20188,Modifiability,Inherit,Inheritance,20188,"r; TGCompositeFrame*TEveCompositeFrame::fTopFrame; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static TEveContextMenu*TEveCompositeFrame::fgCtxMenu; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TList*TEveCompositeFrame::fgFrameList; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static const TStringTEveCompositeFrame::fgkEmptyFrameName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCompositeFrameInPack(TGCompositeFrame* parent, TEveWindow* eve_parent, TGPack* pack); Constructor. ~TEveCompositeFrameInPack(); Destructor. void Destroy(); Virtual function called from eve side when the frame should be; destroyed. This means we expect that fEveWindow is null. Remove the frame from pack and delete it. TEveCompositeFrame& operator=(const TEveCompositeFrameInPack& ). TEveCompositeFrameInPack(const TEveCompositeFrameInPack& ). » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCompositeFrameInPack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInPack.html
https://root.cern/root/html534/TEveCompositeFrameInPack.html:20201,Modifiability,Inherit,Inherited,20201,"r; TGCompositeFrame*TEveCompositeFrame::fTopFrame; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static TEveContextMenu*TEveCompositeFrame::fgCtxMenu; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TList*TEveCompositeFrame::fgFrameList; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static const TStringTEveCompositeFrame::fgkEmptyFrameName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCompositeFrameInPack(TGCompositeFrame* parent, TEveWindow* eve_parent, TGPack* pack); Constructor. ~TEveCompositeFrameInPack(); Destructor. void Destroy(); Virtual function called from eve side when the frame should be; destroyed. This means we expect that fEveWindow is null. Remove the frame from pack and delete it. TEveCompositeFrame& operator=(const TEveCompositeFrameInPack& ). TEveCompositeFrameInPack(const TEveCompositeFrameInPack& ). » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/TEveCompositeFrameInPack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInPack.html
https://root.cern/root/html534/TEveCompositeFrameInPack.html:8810,Security,Hash,Hash,8810,"t_t, Int_t); virtual Bool_tTGCompositeFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTEveCompositeFrame::HideAllDecorations(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGComp",MatchSource.WIKI,root/html534/TEveCompositeFrameInPack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInPack.html
https://root.cern/root/html534/TEveCompositeFrameInPack.html:15025,Testability,Test,TestBit,15025,"t* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTEveCompositeFrame::SetShowTitleBar(Bool_t show); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); static voidTEveCompositeFrame::SetupFrameMarkup(TEveCompositeFrame::IconBarCreator_foo creator, UInt_t top_frame_height = 14, UInt_t mini_bar_height = 4, Bool_t allow_top_collapse = kTRUE); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidTEveCompositeFrame::ShowNormalDecorations(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTEveCompositeFrame::TitleBarClicked(); virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual voidTEveCompositeFrame::WindowNameChanged(const TString& name); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/TEveCompositeFrameInPack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/TEveCompositeFrameInPack.html
