id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/qupath/qupath/issues/376#issuecomment-554797379:600,Availability,error,error,600,"Hi @ozen . The error message sounds like it is connected to drawing shapes, but to further diagnose the problem I would need the original .qpdata files - or at least the full error trace (usually under _View &rarr; Show log_). However as @Svidro says, the milestones aren't/can't be fully inter-compatible, and there can be no guarantee that an m5 project will work in m6 (although any that I've tried myself have worked ok). I've written about some of the major changes in v0.2.0-m6 [here](https://petebankhead.github.io/qupath/2019/11/17/sixth-milestone.html). I don't know why these would give an error in your case, but really I'm not able to do anything about it without further information and the ability to reproduce the problem myself. Can you reproduce the issue using a project created entirely in m6, and describe the steps required?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554797379
https://github.com/qupath/qupath/issues/376#issuecomment-554797379:21,Integrability,message,message,21,"Hi @ozen . The error message sounds like it is connected to drawing shapes, but to further diagnose the problem I would need the original .qpdata files - or at least the full error trace (usually under _View &rarr; Show log_). However as @Svidro says, the milestones aren't/can't be fully inter-compatible, and there can be no guarantee that an m5 project will work in m6 (although any that I've tried myself have worked ok). I've written about some of the major changes in v0.2.0-m6 [here](https://petebankhead.github.io/qupath/2019/11/17/sixth-milestone.html). I don't know why these would give an error in your case, but really I'm not able to do anything about it without further information and the ability to reproduce the problem myself. Can you reproduce the issue using a project created entirely in m6, and describe the steps required?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554797379
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1438,Availability,avail,available,1438,"ject in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1528,Availability,avail,available,1528,"github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1628,Availability,avail,available,1628,"t created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:160); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:231); at qupa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1732,Availability,ERROR,ERROR,1732,"ck trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:160); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:231); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1761); at qupath.lib.gui.viewer.QuPathVi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1229,Deployability,update,update,1229,"eport them on GitHub or image.sc - don’t just stick with an older milestone that seemed to work!. And this one under object hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(Pa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1292,Deployability,update,updates,1292,"hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1617,Energy Efficiency,power,power,1617,"t created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:160); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:231); at qupa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:819,Performance,Load,Loaded,819,"@Svidro I'm not trying to solve my problem, but reporting a potential bug. I'm fine with using 0.2.0-m5. I've already read the sentence you quoted, also the sentence right after it:. > If you find bugs, please report them on GitHub or image.sc - don’t just stick with an older milestone that seemed to work!. And this one under object hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:898,Performance,Load,Loaded,898,"ve my problem, but reporting a potential bug. I'm fine with using 0.2.0-m5. I've already read the sentence you quoted, also the sentence right after it:. > If you find bugs, please report them on GitHub or image.sc - don’t just stick with an older milestone that seemed to work!. And this one under object hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewe",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:952,Performance,Load,Loaded,952,"ve my problem, but reporting a potential bug. I'm fine with using 0.2.0-m5. I've already read the sentence you quoted, also the sentence right after it:. > If you find bugs, please report them on GitHub or image.sc - don’t just stick with an older milestone that seemed to work!. And this one under object hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewe",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1001,Performance,Load,Loaded,1001,"ve my problem, but reporting a potential bug. I'm fine with using 0.2.0-m5. I've already read the sentence you quoted, also the sentence right after it:. > If you find bugs, please report them on GitHub or image.sc - don’t just stick with an older milestone that seemed to work!. And this one under object hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewe",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1048,Performance,Load,Loaded,1048,"ve my problem, but reporting a potential bug. I'm fine with using 0.2.0-m5. I've already read the sentence you quoted, also the sentence right after it:. > If you find bugs, please report them on GitHub or image.sc - don’t just stick with an older milestone that seemed to work!. And this one under object hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewe",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1097,Performance,Load,Loaded,1097,"ve my problem, but reporting a potential bug. I'm fine with using 0.2.0-m5. I've already read the sentence you quoted, also the sentence right after it:. > If you find bugs, please report them on GitHub or image.sc - don’t just stick with an older milestone that seemed to work!. And this one under object hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewe",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1218,Performance,Perform,Performing,1218,"eport them on GitHub or image.sc - don’t just stick with an older milestone that seemed to work!. And this one under object hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(Pa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1967,Usability,simpl,simplifyPath,1967,"sion (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:160); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:231); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1761); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:420); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:257); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:508); at com.sun.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554873027:2074,Usability,simpl,simplifyByDownsample,2074,"nsion OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:160); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:231); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1761); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:420); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:257); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:508); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); ...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027
https://github.com/qupath/qupath/issues/376#issuecomment-554910235:59,Availability,error,error,59,"Thanks @ozen I can replicate the issue with this file. The error message shows that the problem comes as QuPath tries to draw the annotation on screen at a low resolution. If shouldn't affect files without annotations, but I should be able to take steps to make this bit of the code more robust. In the meantime, you can try this script to update the ROIs to the 'new' format. That appears to resolve the problem for me.; ```groovy; def annotations = getAnnotationObjects(); annotations = annotations.each { a ->; if (a.getROI().getClass().getSimpleName().contains('Area')); a.setROI(GeometryTools.geometryToROI(a.getROI().getGeometry(), a.getROI().getImagePlane())); }; fireHierarchyUpdate(); ```. I think (but haven't confirmed) that it should be possible to use _Run &rarr; Run for project_ to apply this across your project (but of course best to do it to a copy, not the original!).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554910235
https://github.com/qupath/qupath/issues/376#issuecomment-554910235:288,Availability,robust,robust,288,"Thanks @ozen I can replicate the issue with this file. The error message shows that the problem comes as QuPath tries to draw the annotation on screen at a low resolution. If shouldn't affect files without annotations, but I should be able to take steps to make this bit of the code more robust. In the meantime, you can try this script to update the ROIs to the 'new' format. That appears to resolve the problem for me.; ```groovy; def annotations = getAnnotationObjects(); annotations = annotations.each { a ->; if (a.getROI().getClass().getSimpleName().contains('Area')); a.setROI(GeometryTools.geometryToROI(a.getROI().getGeometry(), a.getROI().getImagePlane())); }; fireHierarchyUpdate(); ```. I think (but haven't confirmed) that it should be possible to use _Run &rarr; Run for project_ to apply this across your project (but of course best to do it to a copy, not the original!).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554910235
https://github.com/qupath/qupath/issues/376#issuecomment-554910235:340,Deployability,update,update,340,"Thanks @ozen I can replicate the issue with this file. The error message shows that the problem comes as QuPath tries to draw the annotation on screen at a low resolution. If shouldn't affect files without annotations, but I should be able to take steps to make this bit of the code more robust. In the meantime, you can try this script to update the ROIs to the 'new' format. That appears to resolve the problem for me.; ```groovy; def annotations = getAnnotationObjects(); annotations = annotations.each { a ->; if (a.getROI().getClass().getSimpleName().contains('Area')); a.setROI(GeometryTools.geometryToROI(a.getROI().getGeometry(), a.getROI().getImagePlane())); }; fireHierarchyUpdate(); ```. I think (but haven't confirmed) that it should be possible to use _Run &rarr; Run for project_ to apply this across your project (but of course best to do it to a copy, not the original!).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554910235
https://github.com/qupath/qupath/issues/376#issuecomment-554910235:65,Integrability,message,message,65,"Thanks @ozen I can replicate the issue with this file. The error message shows that the problem comes as QuPath tries to draw the annotation on screen at a low resolution. If shouldn't affect files without annotations, but I should be able to take steps to make this bit of the code more robust. In the meantime, you can try this script to update the ROIs to the 'new' format. That appears to resolve the problem for me.; ```groovy; def annotations = getAnnotationObjects(); annotations = annotations.each { a ->; if (a.getROI().getClass().getSimpleName().contains('Area')); a.setROI(GeometryTools.geometryToROI(a.getROI().getGeometry(), a.getROI().getImagePlane())); }; fireHierarchyUpdate(); ```. I think (but haven't confirmed) that it should be possible to use _Run &rarr; Run for project_ to apply this across your project (but of course best to do it to a copy, not the original!).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554910235
https://github.com/qupath/qupath/issues/380#issuecomment-561064260:211,Availability,error,error,211,"Thanks, have you been able to try this on any other operating system? I can't replicate it on my laptop but will try to test it on Ubuntu soon. Also, do you have a graphics tablet / pressure-sensitive pen?. The error takes me to https://github.com/qupath/qupath/blob/5ddf2cdf8b2b7eb689d70240878887af78de43cb/qupath-extension-processing/src/main/java/qupath/opencv/tools/WandToolCV.java#L420-L424; so my best guess is that the radius is somehow less than 0. I don't see why that would be the case, but you could try the following script; ```groovy; println qupath.lib.gui.viewer.tools.QuPathPenManager.getPenManager(); println qupath.lib.gui.viewer.tools.QuPathPenManager.getPenManager().getPressure(); ```; to investigate. If there can be an scenario when the pressure is < 0 then the fix might just require checking is `radius <= 0` at line 421... but I'm guessing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561064260
https://github.com/qupath/qupath/issues/380#issuecomment-561064260:120,Testability,test,test,120,"Thanks, have you been able to try this on any other operating system? I can't replicate it on my laptop but will try to test it on Ubuntu soon. Also, do you have a graphics tablet / pressure-sensitive pen?. The error takes me to https://github.com/qupath/qupath/blob/5ddf2cdf8b2b7eb689d70240878887af78de43cb/qupath-extension-processing/src/main/java/qupath/opencv/tools/WandToolCV.java#L420-L424; so my best guess is that the radius is somehow less than 0. I don't see why that would be the case, but you could try the following script; ```groovy; println qupath.lib.gui.viewer.tools.QuPathPenManager.getPenManager(); println qupath.lib.gui.viewer.tools.QuPathPenManager.getPenManager().getPressure(); ```; to investigate. If there can be an scenario when the pressure is < 0 then the fix might just require checking is `radius <= 0` at line 421... but I'm guessing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561064260
https://github.com/qupath/qupath/issues/380#issuecomment-561071266:95,Availability,error,error,95,Hi; Computer: Dell Latitude with touchpad. No graphics tablet/pen used at the moment. The firs error message was created using the wand. While playing around with the bit a bit I managed to get a slightly different error message... `ERROR: QuPath exception: Points of LinearRing do not form a closed linestring; at org.locationtech.jts.geom.LinearRing.validateConstruction(LinearRing.java:90); at org.locationtech.jts.geom.LinearRing.<init>(LinearRing.java:85); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:356); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:343); at org.locationtech.jts.util.GeometricShapeFactory.createEllipse(GeometricShapeFactory.java:231); at qupath.lib.gui.viewer.tools.BrushTool.createShape(BrushTool.java:489); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:326); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:302); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$0(AbstractPathTool.java:333); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchCha,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561071266
https://github.com/qupath/qupath/issues/380#issuecomment-561071266:215,Availability,error,error,215,Hi; Computer: Dell Latitude with touchpad. No graphics tablet/pen used at the moment. The firs error message was created using the wand. While playing around with the bit a bit I managed to get a slightly different error message... `ERROR: QuPath exception: Points of LinearRing do not form a closed linestring; at org.locationtech.jts.geom.LinearRing.validateConstruction(LinearRing.java:90); at org.locationtech.jts.geom.LinearRing.<init>(LinearRing.java:85); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:356); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:343); at org.locationtech.jts.util.GeometricShapeFactory.createEllipse(GeometricShapeFactory.java:231); at qupath.lib.gui.viewer.tools.BrushTool.createShape(BrushTool.java:489); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:326); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:302); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$0(AbstractPathTool.java:333); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchCha,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561071266
https://github.com/qupath/qupath/issues/380#issuecomment-561071266:233,Availability,ERROR,ERROR,233,Hi; Computer: Dell Latitude with touchpad. No graphics tablet/pen used at the moment. The firs error message was created using the wand. While playing around with the bit a bit I managed to get a slightly different error message... `ERROR: QuPath exception: Points of LinearRing do not form a closed linestring; at org.locationtech.jts.geom.LinearRing.validateConstruction(LinearRing.java:90); at org.locationtech.jts.geom.LinearRing.<init>(LinearRing.java:85); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:356); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:343); at org.locationtech.jts.util.GeometricShapeFactory.createEllipse(GeometricShapeFactory.java:231); at qupath.lib.gui.viewer.tools.BrushTool.createShape(BrushTool.java:489); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:326); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:302); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$0(AbstractPathTool.java:333); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchCha,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561071266
https://github.com/qupath/qupath/issues/380#issuecomment-561071266:101,Integrability,message,message,101,Hi; Computer: Dell Latitude with touchpad. No graphics tablet/pen used at the moment. The firs error message was created using the wand. While playing around with the bit a bit I managed to get a slightly different error message... `ERROR: QuPath exception: Points of LinearRing do not form a closed linestring; at org.locationtech.jts.geom.LinearRing.validateConstruction(LinearRing.java:90); at org.locationtech.jts.geom.LinearRing.<init>(LinearRing.java:85); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:356); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:343); at org.locationtech.jts.util.GeometricShapeFactory.createEllipse(GeometricShapeFactory.java:231); at qupath.lib.gui.viewer.tools.BrushTool.createShape(BrushTool.java:489); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:326); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:302); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$0(AbstractPathTool.java:333); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchCha,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561071266
https://github.com/qupath/qupath/issues/380#issuecomment-561071266:221,Integrability,message,message,221,Hi; Computer: Dell Latitude with touchpad. No graphics tablet/pen used at the moment. The firs error message was created using the wand. While playing around with the bit a bit I managed to get a slightly different error message... `ERROR: QuPath exception: Points of LinearRing do not form a closed linestring; at org.locationtech.jts.geom.LinearRing.validateConstruction(LinearRing.java:90); at org.locationtech.jts.geom.LinearRing.<init>(LinearRing.java:85); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:356); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:343); at org.locationtech.jts.util.GeometricShapeFactory.createEllipse(GeometricShapeFactory.java:231); at qupath.lib.gui.viewer.tools.BrushTool.createShape(BrushTool.java:489); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:326); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:302); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$0(AbstractPathTool.java:333); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchCha,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561071266
https://github.com/qupath/qupath/issues/380#issuecomment-561071266:352,Security,validat,validateConstruction,352,Hi; Computer: Dell Latitude with touchpad. No graphics tablet/pen used at the moment. The firs error message was created using the wand. While playing around with the bit a bit I managed to get a slightly different error message... `ERROR: QuPath exception: Points of LinearRing do not form a closed linestring; at org.locationtech.jts.geom.LinearRing.validateConstruction(LinearRing.java:90); at org.locationtech.jts.geom.LinearRing.<init>(LinearRing.java:85); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:356); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:343); at org.locationtech.jts.util.GeometricShapeFactory.createEllipse(GeometricShapeFactory.java:231); at qupath.lib.gui.viewer.tools.BrushTool.createShape(BrushTool.java:489); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:326); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:302); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$0(AbstractPathTool.java:333); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchCha,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561071266
https://github.com/qupath/qupath/issues/380#issuecomment-561071266:3553,Security,secur,security,3553,fx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3862); at javafx.scene.Scene.processMouseEvent(Scene.java:1849); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2590); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source)`,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561071266
https://github.com/qupath/qupath/issues/380#issuecomment-561071266:3562,Security,Access,AccessController,3562,fx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3862); at javafx.scene.Scene.processMouseEvent(Scene.java:1849); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2590); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source)`,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561071266
https://github.com/qupath/qupath/issues/380#issuecomment-561076442:32,Availability,error,error,32,"Hmmm... the plot thickens. That error has a completely different source, and occurs after `getBrushDiameter()` has been constrained to be >= 1. https://github.com/qupath/qupath/blob/cece52bff55965b72577e413be67d9a91df8b55e/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/tools/BrushTool.java#L481-L489. You could try resetting your preferences and testing on another computer. I will need to be able to replicate it to find a fix but currently I can't (on Windows) and it has not been reported before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561076442
https://github.com/qupath/qupath/issues/380#issuecomment-561076442:350,Testability,test,testing,350,"Hmmm... the plot thickens. That error has a completely different source, and occurs after `getBrushDiameter()` has been constrained to be >= 1. https://github.com/qupath/qupath/blob/cece52bff55965b72577e413be67d9a91df8b55e/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/tools/BrushTool.java#L481-L489. You could try resetting your preferences and testing on another computer. I will need to be able to replicate it to find a fix but currently I can't (on Windows) and it has not been reported before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561076442
https://github.com/qupath/qupath/issues/380#issuecomment-561079092:94,Deployability,install,installation,94,"Tested on m5 on another machine with ubuntu 18.04. Worked fine. So I guess it may be my local installation of OpenCV, java or some other issue. Will close this for now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561079092
https://github.com/qupath/qupath/issues/380#issuecomment-561079092:0,Testability,Test,Tested,0,"Tested on m5 on another machine with ubuntu 18.04. Worked fine. So I guess it may be my local installation of OpenCV, java or some other issue. Will close this for now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561079092
https://github.com/qupath/qupath/issues/380#issuecomment-632237435:74,Integrability,depend,dependent,74,"Closing this due to lack of activity, and because it seems quite hardware-dependent. I'm afraid I don't see any way to address it in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-632237435
https://github.com/qupath/qupath/issues/381#issuecomment-561272296:466,Availability,error,errors,466,"I expect it starts from the underlying Geometry becoming somehow invalid. However I don't know for sure if this is the case, haven't experienced it myself and have no idea how to reproduce it. If you _do_ press undo, have you tried doing so multiple times? I mean, if the shape is being modified then a 'valid' version might be 'several undos back'. Apart from that, I would likely need one or all of the following:; * the contents of _View &rarr; Show log_ (if any errors are reported); * a .qpdata file with a misbehaving annotation; * steps or a script that enable me to reproduce it. Oh yes, and as @Svidro says - the version number is essential. If it only happens before v0.2.0-m7 then it may already have been fixed (as I have made many changes in this area).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/381#issuecomment-561272296
https://github.com/qupath/qupath/issues/381#issuecomment-561272296:211,Usability,undo,undo,211,"I expect it starts from the underlying Geometry becoming somehow invalid. However I don't know for sure if this is the case, haven't experienced it myself and have no idea how to reproduce it. If you _do_ press undo, have you tried doing so multiple times? I mean, if the shape is being modified then a 'valid' version might be 'several undos back'. Apart from that, I would likely need one or all of the following:; * the contents of _View &rarr; Show log_ (if any errors are reported); * a .qpdata file with a misbehaving annotation; * steps or a script that enable me to reproduce it. Oh yes, and as @Svidro says - the version number is essential. If it only happens before v0.2.0-m7 then it may already have been fixed (as I have made many changes in this area).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/381#issuecomment-561272296
https://github.com/qupath/qupath/issues/381#issuecomment-561272296:337,Usability,undo,undos,337,"I expect it starts from the underlying Geometry becoming somehow invalid. However I don't know for sure if this is the case, haven't experienced it myself and have no idea how to reproduce it. If you _do_ press undo, have you tried doing so multiple times? I mean, if the shape is being modified then a 'valid' version might be 'several undos back'. Apart from that, I would likely need one or all of the following:; * the contents of _View &rarr; Show log_ (if any errors are reported); * a .qpdata file with a misbehaving annotation; * steps or a script that enable me to reproduce it. Oh yes, and as @Svidro says - the version number is essential. If it only happens before v0.2.0-m7 then it may already have been fixed (as I have made many changes in this area).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/381#issuecomment-561272296
https://github.com/qupath/qupath/issues/381#issuecomment-561275095:450,Deployability,install,installing,450,"'If you do press undo, have you tried doing so multiple times? I mean, if the shape is being modified then a 'valid' version might be 'several undos back'.'; Yep, that's exactly what I hoped for but it seems as if the geometry below is somehow corrupted. The shape of the annotation is still visible on the slide an can still be moved around on the slide. However, no modification whatsoever is possible any more if this bug appears. . I'll just try installing the M7 version. Didn't even know, M7 has already beeen released until Svidro mentioned that in his post 7 minutes ago. I deleted the annotation just after taking the screenshot. Sorry for that. If it happens again, I will follow your instructions :). Very pleased about your fast answer. Thanks a lot, folks! :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/381#issuecomment-561275095
https://github.com/qupath/qupath/issues/381#issuecomment-561275095:516,Deployability,release,released,516,"'If you do press undo, have you tried doing so multiple times? I mean, if the shape is being modified then a 'valid' version might be 'several undos back'.'; Yep, that's exactly what I hoped for but it seems as if the geometry below is somehow corrupted. The shape of the annotation is still visible on the slide an can still be moved around on the slide. However, no modification whatsoever is possible any more if this bug appears. . I'll just try installing the M7 version. Didn't even know, M7 has already beeen released until Svidro mentioned that in his post 7 minutes ago. I deleted the annotation just after taking the screenshot. Sorry for that. If it happens again, I will follow your instructions :). Very pleased about your fast answer. Thanks a lot, folks! :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/381#issuecomment-561275095
https://github.com/qupath/qupath/issues/381#issuecomment-561275095:17,Usability,undo,undo,17,"'If you do press undo, have you tried doing so multiple times? I mean, if the shape is being modified then a 'valid' version might be 'several undos back'.'; Yep, that's exactly what I hoped for but it seems as if the geometry below is somehow corrupted. The shape of the annotation is still visible on the slide an can still be moved around on the slide. However, no modification whatsoever is possible any more if this bug appears. . I'll just try installing the M7 version. Didn't even know, M7 has already beeen released until Svidro mentioned that in his post 7 minutes ago. I deleted the annotation just after taking the screenshot. Sorry for that. If it happens again, I will follow your instructions :). Very pleased about your fast answer. Thanks a lot, folks! :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/381#issuecomment-561275095
https://github.com/qupath/qupath/issues/381#issuecomment-561275095:143,Usability,undo,undos,143,"'If you do press undo, have you tried doing so multiple times? I mean, if the shape is being modified then a 'valid' version might be 'several undos back'.'; Yep, that's exactly what I hoped for but it seems as if the geometry below is somehow corrupted. The shape of the annotation is still visible on the slide an can still be moved around on the slide. However, no modification whatsoever is possible any more if this bug appears. . I'll just try installing the M7 version. Didn't even know, M7 has already beeen released until Svidro mentioned that in his post 7 minutes ago. I deleted the annotation just after taking the screenshot. Sorry for that. If it happens again, I will follow your instructions :). Very pleased about your fast answer. Thanks a lot, folks! :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/381#issuecomment-561275095
https://github.com/qupath/qupath/issues/382#issuecomment-561707434:260,Availability,error,error,260,It may work if you open the image within a project and specify that OpenSlide should be the image server. This could have been the default in v0.1.2 and the underlying issue is that Bio-Formats does not support this particular sort of tiff fully. Parts of the error message also bring back memories. You may also reduce problems using Bio-Formats by putting the image inside another (sub)folder: https://github.com/ome/bioformats/issues/3343,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/382#issuecomment-561707434
https://github.com/qupath/qupath/issues/382#issuecomment-561707434:313,Energy Efficiency,reduce,reduce,313,It may work if you open the image within a project and specify that OpenSlide should be the image server. This could have been the default in v0.1.2 and the underlying issue is that Bio-Formats does not support this particular sort of tiff fully. Parts of the error message also bring back memories. You may also reduce problems using Bio-Formats by putting the image inside another (sub)folder: https://github.com/ome/bioformats/issues/3343,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/382#issuecomment-561707434
https://github.com/qupath/qupath/issues/382#issuecomment-561707434:266,Integrability,message,message,266,It may work if you open the image within a project and specify that OpenSlide should be the image server. This could have been the default in v0.1.2 and the underlying issue is that Bio-Formats does not support this particular sort of tiff fully. Parts of the error message also bring back memories. You may also reduce problems using Bio-Formats by putting the image inside another (sub)folder: https://github.com/ome/bioformats/issues/3343,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/382#issuecomment-561707434
https://github.com/qupath/qupath/issues/383#issuecomment-586471597:4,Modifiability,enhance,enhancement,4,"The enhancement is now included in v0.2.0-m9, in terms of a popup dialog enabling specific series to be opened (thanks to @melvingelbard !): https://github.com/qupath/qupath/commit/553a5b0082fcf8bfb83ab69329f3284b24a8ecec",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/383#issuecomment-586471597
https://github.com/qupath/qupath/issues/384#issuecomment-562369854:395,Integrability,wrap,wrapper,395,"I would recommend taking a look through:; https://petebankhead.github.io/qupath/2019/08/21/scripting-in-v020.html; when updating any code.; Specifically this one in your case:; https://petebankhead.github.io/qupath/2019/08/21/scripting-in-v020.html#working-with-imagej. I haven't tried it, but I suspect the code Pete lists there is what you are looking for:; ""Often we don’t need the PathImage wrapper, but here we keep it so that we can pass it to IJTools.convertToIJRoi(roi, pathImage) later.""",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/384#issuecomment-562369854
https://github.com/qupath/qupath/issues/386#issuecomment-566096742:711,Availability,error,error,711,"This seems likely to be a bug in the image reading library (OpenSlide or Bio-Formats - you can tell which is used under the 'Image' tab by looking at the server type), or perhaps a non-standard representation of the pyramidal levels within the converted TIFF image. In general, it should be possible to work directly from the .ndpi image in QuPath. Because there are all sorts of (supposedly) pyramidal TIFFs in the wild, I really don't know what kind your conversion has produced. In any case, QuPath does not contain its own image readers, and therefore it is unlikely the issue can be resolved within QuPath alone. Also, v0.1.2 will not be further updated - so the first thing to do would be to check if the error persists in the latest milestone release (currently v0.2.0-m8). Depending upon the image reader used, you might want to report it as a Bio-Formats or OpenSlide issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/386#issuecomment-566096742
https://github.com/qupath/qupath/issues/386#issuecomment-566096742:651,Deployability,update,updated,651,"This seems likely to be a bug in the image reading library (OpenSlide or Bio-Formats - you can tell which is used under the 'Image' tab by looking at the server type), or perhaps a non-standard representation of the pyramidal levels within the converted TIFF image. In general, it should be possible to work directly from the .ndpi image in QuPath. Because there are all sorts of (supposedly) pyramidal TIFFs in the wild, I really don't know what kind your conversion has produced. In any case, QuPath does not contain its own image readers, and therefore it is unlikely the issue can be resolved within QuPath alone. Also, v0.1.2 will not be further updated - so the first thing to do would be to check if the error persists in the latest milestone release (currently v0.2.0-m8). Depending upon the image reader used, you might want to report it as a Bio-Formats or OpenSlide issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/386#issuecomment-566096742
https://github.com/qupath/qupath/issues/386#issuecomment-566096742:750,Deployability,release,release,750,"This seems likely to be a bug in the image reading library (OpenSlide or Bio-Formats - you can tell which is used under the 'Image' tab by looking at the server type), or perhaps a non-standard representation of the pyramidal levels within the converted TIFF image. In general, it should be possible to work directly from the .ndpi image in QuPath. Because there are all sorts of (supposedly) pyramidal TIFFs in the wild, I really don't know what kind your conversion has produced. In any case, QuPath does not contain its own image readers, and therefore it is unlikely the issue can be resolved within QuPath alone. Also, v0.1.2 will not be further updated - so the first thing to do would be to check if the error persists in the latest milestone release (currently v0.2.0-m8). Depending upon the image reader used, you might want to report it as a Bio-Formats or OpenSlide issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/386#issuecomment-566096742
https://github.com/qupath/qupath/issues/386#issuecomment-566096742:781,Integrability,Depend,Depending,781,"This seems likely to be a bug in the image reading library (OpenSlide or Bio-Formats - you can tell which is used under the 'Image' tab by looking at the server type), or perhaps a non-standard representation of the pyramidal levels within the converted TIFF image. In general, it should be possible to work directly from the .ndpi image in QuPath. Because there are all sorts of (supposedly) pyramidal TIFFs in the wild, I really don't know what kind your conversion has produced. In any case, QuPath does not contain its own image readers, and therefore it is unlikely the issue can be resolved within QuPath alone. Also, v0.1.2 will not be further updated - so the first thing to do would be to check if the error persists in the latest milestone release (currently v0.2.0-m8). Depending upon the image reader used, you might want to report it as a Bio-Formats or OpenSlide issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/386#issuecomment-566096742
https://github.com/qupath/qupath/issues/387#issuecomment-576671751:127,Availability,error,error,127,"![image](https://user-images.githubusercontent.com/60140243/72807082-40815980-3c5f-11ea-8429-ef7339054b88.png). I have similar error, the drop option doesn't work and when I just try to open image this is message I get. In previous version when bioformats weren't loaded in QuPath I could open vsi files",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-576671751
https://github.com/qupath/qupath/issues/387#issuecomment-576671751:205,Integrability,message,message,205,"![image](https://user-images.githubusercontent.com/60140243/72807082-40815980-3c5f-11ea-8429-ef7339054b88.png). I have similar error, the drop option doesn't work and when I just try to open image this is message I get. In previous version when bioformats weren't loaded in QuPath I could open vsi files",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-576671751
https://github.com/qupath/qupath/issues/387#issuecomment-576671751:264,Performance,load,loaded,264,"![image](https://user-images.githubusercontent.com/60140243/72807082-40815980-3c5f-11ea-8429-ef7339054b88.png). I have similar error, the drop option doesn't work and when I just try to open image this is message I get. In previous version when bioformats weren't loaded in QuPath I could open vsi files",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-576671751
https://github.com/qupath/qupath/issues/387#issuecomment-577108438:50,Availability,error,error,50,"@martyna90 Could you copy & paste the text of the error, or else scroll up a bit when making the screenshot? The bit with the most valuable information is usually near the top of the long list of 'at' statements; I'd need to see the first lines to better understand the problem. Thanks!. As far as I recall, VSI is *only* supported through Bio-Formats, but this is built-in with v0.2.0-m8. If you are using v0.2.0-m8, but still have the *old* Bio-Formats extension installed (for v0.1.2), then I believe both may fail to work properly. In case that's the issue, you can remove the Bio-Formats extension .jar files from QuPath's extensions folder, or use *Edit &rarr; Reset preferences* to reset the extensions folder itself in v0.2.0-m8. The second option leaves things unchanged for v0.1.2, in case you need to be able to use both versions on the same computer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-577108438
https://github.com/qupath/qupath/issues/387#issuecomment-577108438:465,Deployability,install,installed,465,"@martyna90 Could you copy & paste the text of the error, or else scroll up a bit when making the screenshot? The bit with the most valuable information is usually near the top of the long list of 'at' statements; I'd need to see the first lines to better understand the problem. Thanks!. As far as I recall, VSI is *only* supported through Bio-Formats, but this is built-in with v0.2.0-m8. If you are using v0.2.0-m8, but still have the *old* Bio-Formats extension installed (for v0.1.2), then I believe both may fail to work properly. In case that's the issue, you can remove the Bio-Formats extension .jar files from QuPath's extensions folder, or use *Edit &rarr; Reset preferences* to reset the extensions folder itself in v0.2.0-m8. The second option leaves things unchanged for v0.1.2, in case you need to be able to use both versions on the same computer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-577108438
https://github.com/qupath/qupath/issues/387#issuecomment-586470952:67,Usability,clear,clear,67,"I will close this issue because of lack of activity, and it is not clear if there is an issue within QuPath that can be solved.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-586470952
https://github.com/qupath/qupath/issues/388#issuecomment-567689754:150,Availability,toler,tolerate,150,"Going to have to make a few assumptions here, but I think that you probably changed locations or moved your project around from M2. M2 did not really tolerate changes to project locations very well, which led to the URI update detection and some other things. To work with the M2 projects in M2 again, the project file should either be in the same place, or I think you may need to edit the .qpproj file to update the new file path to the images. That is why the project will open (that path is set wherever you have run it from), but the images will not be found. If you open the log, I suspect that is the error message (and it will show the old file path). M8 will not run M2 projects, and I don't think it is very easy to even transfer annotations between them (you would probably need a script... and I'm not sure how well it would work even then).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567689754
https://github.com/qupath/qupath/issues/388#issuecomment-567689754:608,Availability,error,error,608,"Going to have to make a few assumptions here, but I think that you probably changed locations or moved your project around from M2. M2 did not really tolerate changes to project locations very well, which led to the URI update detection and some other things. To work with the M2 projects in M2 again, the project file should either be in the same place, or I think you may need to edit the .qpproj file to update the new file path to the images. That is why the project will open (that path is set wherever you have run it from), but the images will not be found. If you open the log, I suspect that is the error message (and it will show the old file path). M8 will not run M2 projects, and I don't think it is very easy to even transfer annotations between them (you would probably need a script... and I'm not sure how well it would work even then).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567689754
https://github.com/qupath/qupath/issues/388#issuecomment-567689754:220,Deployability,update,update,220,"Going to have to make a few assumptions here, but I think that you probably changed locations or moved your project around from M2. M2 did not really tolerate changes to project locations very well, which led to the URI update detection and some other things. To work with the M2 projects in M2 again, the project file should either be in the same place, or I think you may need to edit the .qpproj file to update the new file path to the images. That is why the project will open (that path is set wherever you have run it from), but the images will not be found. If you open the log, I suspect that is the error message (and it will show the old file path). M8 will not run M2 projects, and I don't think it is very easy to even transfer annotations between them (you would probably need a script... and I'm not sure how well it would work even then).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567689754
https://github.com/qupath/qupath/issues/388#issuecomment-567689754:407,Deployability,update,update,407,"Going to have to make a few assumptions here, but I think that you probably changed locations or moved your project around from M2. M2 did not really tolerate changes to project locations very well, which led to the URI update detection and some other things. To work with the M2 projects in M2 again, the project file should either be in the same place, or I think you may need to edit the .qpproj file to update the new file path to the images. That is why the project will open (that path is set wherever you have run it from), but the images will not be found. If you open the log, I suspect that is the error message (and it will show the old file path). M8 will not run M2 projects, and I don't think it is very easy to even transfer annotations between them (you would probably need a script... and I'm not sure how well it would work even then).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567689754
https://github.com/qupath/qupath/issues/388#issuecomment-567689754:614,Integrability,message,message,614,"Going to have to make a few assumptions here, but I think that you probably changed locations or moved your project around from M2. M2 did not really tolerate changes to project locations very well, which led to the URI update detection and some other things. To work with the M2 projects in M2 again, the project file should either be in the same place, or I think you may need to edit the .qpproj file to update the new file path to the images. That is why the project will open (that path is set wherever you have run it from), but the images will not be found. If you open the log, I suspect that is the error message (and it will show the old file path). M8 will not run M2 projects, and I don't think it is very easy to even transfer annotations between them (you would probably need a script... and I'm not sure how well it would work even then).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567689754
https://github.com/qupath/qupath/issues/388#issuecomment-567689754:227,Safety,detect,detection,227,"Going to have to make a few assumptions here, but I think that you probably changed locations or moved your project around from M2. M2 did not really tolerate changes to project locations very well, which led to the URI update detection and some other things. To work with the M2 projects in M2 again, the project file should either be in the same place, or I think you may need to edit the .qpproj file to update the new file path to the images. That is why the project will open (that path is set wherever you have run it from), but the images will not be found. If you open the log, I suspect that is the error message (and it will show the old file path). M8 will not run M2 projects, and I don't think it is very easy to even transfer annotations between them (you would probably need a script... and I'm not sure how well it would work even then).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567689754
https://github.com/qupath/qupath/issues/388#issuecomment-567689754:581,Testability,log,log,581,"Going to have to make a few assumptions here, but I think that you probably changed locations or moved your project around from M2. M2 did not really tolerate changes to project locations very well, which led to the URI update detection and some other things. To work with the M2 projects in M2 again, the project file should either be in the same place, or I think you may need to edit the .qpproj file to update the new file path to the images. That is why the project will open (that path is set wherever you have run it from), but the images will not be found. If you open the log, I suspect that is the error message (and it will show the old file path). M8 will not run M2 projects, and I don't think it is very easy to even transfer annotations between them (you would probably need a script... and I'm not sure how well it would work even then).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567689754
https://github.com/qupath/qupath/issues/388#issuecomment-567854079:360,Availability,error,error,360,"There is really not enough information here to answer, and since it does not relate to a bug https://forum.image.sc/tags/qupath would be the right place to post this question. My guess is that your images may have moved / be on an external disk that is not accessible when you try to reopen the m2 project using QuPath v0.2.0-m2. But I would need to know what error messages are displayed, and if anything appears under *View &rarr; Show log*. It is not expected that a project created using m2 will open with m8 because of large changes between milestones; specifically I recall the project structure changed from m2 to m3 (I don't remember if there were subsequent changes). There is a script to migrate old projects from m2 to m3, but use with caution (i.e. with backups) and be sure to read the description at the top if you use it: https://gist.github.com/petebankhead/8dfbaf2de91f6432b79c7678e2997d6a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567854079
https://github.com/qupath/qupath/issues/388#issuecomment-567854079:366,Integrability,message,messages,366,"There is really not enough information here to answer, and since it does not relate to a bug https://forum.image.sc/tags/qupath would be the right place to post this question. My guess is that your images may have moved / be on an external disk that is not accessible when you try to reopen the m2 project using QuPath v0.2.0-m2. But I would need to know what error messages are displayed, and if anything appears under *View &rarr; Show log*. It is not expected that a project created using m2 will open with m8 because of large changes between milestones; specifically I recall the project structure changed from m2 to m3 (I don't remember if there were subsequent changes). There is a script to migrate old projects from m2 to m3, but use with caution (i.e. with backups) and be sure to read the description at the top if you use it: https://gist.github.com/petebankhead/8dfbaf2de91f6432b79c7678e2997d6a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567854079
https://github.com/qupath/qupath/issues/388#issuecomment-567854079:257,Security,access,accessible,257,"There is really not enough information here to answer, and since it does not relate to a bug https://forum.image.sc/tags/qupath would be the right place to post this question. My guess is that your images may have moved / be on an external disk that is not accessible when you try to reopen the m2 project using QuPath v0.2.0-m2. But I would need to know what error messages are displayed, and if anything appears under *View &rarr; Show log*. It is not expected that a project created using m2 will open with m8 because of large changes between milestones; specifically I recall the project structure changed from m2 to m3 (I don't remember if there were subsequent changes). There is a script to migrate old projects from m2 to m3, but use with caution (i.e. with backups) and be sure to read the description at the top if you use it: https://gist.github.com/petebankhead/8dfbaf2de91f6432b79c7678e2997d6a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567854079
https://github.com/qupath/qupath/issues/388#issuecomment-567854079:438,Testability,log,log,438,"There is really not enough information here to answer, and since it does not relate to a bug https://forum.image.sc/tags/qupath would be the right place to post this question. My guess is that your images may have moved / be on an external disk that is not accessible when you try to reopen the m2 project using QuPath v0.2.0-m2. But I would need to know what error messages are displayed, and if anything appears under *View &rarr; Show log*. It is not expected that a project created using m2 will open with m8 because of large changes between milestones; specifically I recall the project structure changed from m2 to m3 (I don't remember if there were subsequent changes). There is a script to migrate old projects from m2 to m3, but use with caution (i.e. with backups) and be sure to read the description at the top if you use it: https://gist.github.com/petebankhead/8dfbaf2de91f6432b79c7678e2997d6a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567854079
https://github.com/qupath/qupath/issues/389#issuecomment-567863564:94,Availability,ERROR,ERROR,94,qupath version 0.0.2-alpha; After I install OpenSlide native libraries. `09:47:53.189 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!!; 09:47:53.200 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.0; 09:47:53.640 [main] [ERROR] q.l.i.s.b.BioFormatsServerBuilder - Unable to open file:/app/101.0.img.tif: {}; java.lang.NullPointerException: null; at loci.formats.in.APLReader.isThisType(APLReader.java:98); at loci.formats.ImageReader.getReader(ImageReader.java:188); at loci.formats.ImageReader.setId(ImageReader.java:839); at loci.formats.ReaderWrapper.setId(ReaderWrapper.java:650); at loci.formats.Memoizer.setId(Memoizer.java:690); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1148); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1082); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.getPrimaryReader(BioFormatsImageServer.java:996); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:215); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:179); at qupath.lib.images.servers.bioformats.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:53); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166); at qupath.lib.GenowisAPI.cellSegmentation(GenowisAPI.java:69)`,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-567863564
https://github.com/qupath/qupath/issues/389#issuecomment-567863564:301,Availability,ERROR,ERROR,301,qupath version 0.0.2-alpha; After I install OpenSlide native libraries. `09:47:53.189 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!!; 09:47:53.200 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.0; 09:47:53.640 [main] [ERROR] q.l.i.s.b.BioFormatsServerBuilder - Unable to open file:/app/101.0.img.tif: {}; java.lang.NullPointerException: null; at loci.formats.in.APLReader.isThisType(APLReader.java:98); at loci.formats.ImageReader.getReader(ImageReader.java:188); at loci.formats.ImageReader.setId(ImageReader.java:839); at loci.formats.ReaderWrapper.setId(ReaderWrapper.java:650); at loci.formats.Memoizer.setId(Memoizer.java:690); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1148); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1082); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.getPrimaryReader(BioFormatsImageServer.java:996); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:215); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:179); at qupath.lib.images.servers.bioformats.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:53); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166); at qupath.lib.GenowisAPI.cellSegmentation(GenowisAPI.java:69)`,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-567863564
https://github.com/qupath/qupath/issues/389#issuecomment-567863564:36,Deployability,install,install,36,qupath version 0.0.2-alpha; After I install OpenSlide native libraries. `09:47:53.189 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!!; 09:47:53.200 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.0; 09:47:53.640 [main] [ERROR] q.l.i.s.b.BioFormatsServerBuilder - Unable to open file:/app/101.0.img.tif: {}; java.lang.NullPointerException: null; at loci.formats.in.APLReader.isThisType(APLReader.java:98); at loci.formats.ImageReader.getReader(ImageReader.java:188); at loci.formats.ImageReader.setId(ImageReader.java:839); at loci.formats.ReaderWrapper.setId(ReaderWrapper.java:650); at loci.formats.Memoizer.setId(Memoizer.java:690); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1148); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1082); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.getPrimaryReader(BioFormatsImageServer.java:996); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:215); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:179); at qupath.lib.images.servers.bioformats.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:53); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166); at qupath.lib.GenowisAPI.cellSegmentation(GenowisAPI.java:69)`,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-567863564
https://github.com/qupath/qupath/issues/389#issuecomment-567871641:68,Availability,error,error,68,"There is no version with precisely the name v0.0.2-alpha. I see the error log mentions files that are not part of QuPath (e.g. `qupath.lib.GenowisAPI`), and refers indeed to 'celery_qupath_1'. Therefore it appears you are using a completely different distribution of QuPath modified by someone else and of which I know nothing. I am closing this issue because it is not related to the 'official' QuPath distribution and source code hosted here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-567871641
https://github.com/qupath/qupath/issues/389#issuecomment-567871641:74,Testability,log,log,74,"There is no version with precisely the name v0.0.2-alpha. I see the error log mentions files that are not part of QuPath (e.g. `qupath.lib.GenowisAPI`), and refers indeed to 'celery_qupath_1'. Therefore it appears you are using a completely different distribution of QuPath modified by someone else and of which I know nothing. I am closing this issue because it is not related to the 'official' QuPath distribution and source code hosted here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-567871641
https://github.com/qupath/qupath/issues/389#issuecomment-568362506:1500,Modifiability,Plugin,PluginRunner,1500,"I just want to use qupath by script. ```; private String lastOpenPath = """";; private ImageServer<BufferedImage> server;; private ImageData<BufferedImage> imageData;; private ObjectDetector<BufferedImage> detector;; private Collection<PathObject> cells;; public double threshold, thresholdPositive, expansions = 5;; public int threadNum = 4;; public String positiveMode = ""Cell: DAB OD mean"";; public Collection<PathObject> cellSegmentation(; String imagePath,; double x, double y,; double width, double height; ) throws IOException {. if (!imagePath.equals(lastOpenPath)) {; server = ImageServerProvider.buildServer(imagePath, BufferedImage.class);; imageData = new ImageData<>(server, ImageData.ImageType.BRIGHTFIELD_H_DAB);; lastOpenPath = imagePath;; }. RectangleROI roi = new RectangleROI(x, y, width, height);; ROI dup_roi =roi.duplicate();; PathAnnotationObject object = new PathAnnotationObject();; object.setROI(dup_roi);; imageData.getHierarchy().getSelectionModel().setSelectedObject(object);. PositiveCellDetection watershedDetector = new PositiveCellDetection();; watershedDetector.params.addDoubleParameter(""threshold"", ""Threshold"", threshold, null, ""Intensity threshold - detected nuclei must have a mean intensity >= threshold"");; watershedDetector.params.addDoubleParameter(""thresholdPositive1"", ""Threshold 1+"", thresholdPositive, null, 0, 1.5);. //ParameterList params = watershedDetector.getDefaultParameterList(imageData);; AbstractPluginRunner.setNumThreadsRequested(threadNum);; PluginRunner<BufferedImage> runner = new CommandLinePluginRunner<BufferedImage>(imageData,false);; watershedDetector.runPlugin(runner,null);; cells = imageData.getHierarchy().getSelectionModel().getSelectedObject().getChildObjects();. return cells;; }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-568362506
https://github.com/qupath/qupath/issues/389#issuecomment-568362506:204,Safety,detect,detector,204,"I just want to use qupath by script. ```; private String lastOpenPath = """";; private ImageServer<BufferedImage> server;; private ImageData<BufferedImage> imageData;; private ObjectDetector<BufferedImage> detector;; private Collection<PathObject> cells;; public double threshold, thresholdPositive, expansions = 5;; public int threadNum = 4;; public String positiveMode = ""Cell: DAB OD mean"";; public Collection<PathObject> cellSegmentation(; String imagePath,; double x, double y,; double width, double height; ) throws IOException {. if (!imagePath.equals(lastOpenPath)) {; server = ImageServerProvider.buildServer(imagePath, BufferedImage.class);; imageData = new ImageData<>(server, ImageData.ImageType.BRIGHTFIELD_H_DAB);; lastOpenPath = imagePath;; }. RectangleROI roi = new RectangleROI(x, y, width, height);; ROI dup_roi =roi.duplicate();; PathAnnotationObject object = new PathAnnotationObject();; object.setROI(dup_roi);; imageData.getHierarchy().getSelectionModel().setSelectedObject(object);. PositiveCellDetection watershedDetector = new PositiveCellDetection();; watershedDetector.params.addDoubleParameter(""threshold"", ""Threshold"", threshold, null, ""Intensity threshold - detected nuclei must have a mean intensity >= threshold"");; watershedDetector.params.addDoubleParameter(""thresholdPositive1"", ""Threshold 1+"", thresholdPositive, null, 0, 1.5);. //ParameterList params = watershedDetector.getDefaultParameterList(imageData);; AbstractPluginRunner.setNumThreadsRequested(threadNum);; PluginRunner<BufferedImage> runner = new CommandLinePluginRunner<BufferedImage>(imageData,false);; watershedDetector.runPlugin(runner,null);; cells = imageData.getHierarchy().getSelectionModel().getSelectedObject().getChildObjects();. return cells;; }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-568362506
https://github.com/qupath/qupath/issues/389#issuecomment-568362506:1186,Safety,detect,detected,1186,"I just want to use qupath by script. ```; private String lastOpenPath = """";; private ImageServer<BufferedImage> server;; private ImageData<BufferedImage> imageData;; private ObjectDetector<BufferedImage> detector;; private Collection<PathObject> cells;; public double threshold, thresholdPositive, expansions = 5;; public int threadNum = 4;; public String positiveMode = ""Cell: DAB OD mean"";; public Collection<PathObject> cellSegmentation(; String imagePath,; double x, double y,; double width, double height; ) throws IOException {. if (!imagePath.equals(lastOpenPath)) {; server = ImageServerProvider.buildServer(imagePath, BufferedImage.class);; imageData = new ImageData<>(server, ImageData.ImageType.BRIGHTFIELD_H_DAB);; lastOpenPath = imagePath;; }. RectangleROI roi = new RectangleROI(x, y, width, height);; ROI dup_roi =roi.duplicate();; PathAnnotationObject object = new PathAnnotationObject();; object.setROI(dup_roi);; imageData.getHierarchy().getSelectionModel().setSelectedObject(object);. PositiveCellDetection watershedDetector = new PositiveCellDetection();; watershedDetector.params.addDoubleParameter(""threshold"", ""Threshold"", threshold, null, ""Intensity threshold - detected nuclei must have a mean intensity >= threshold"");; watershedDetector.params.addDoubleParameter(""thresholdPositive1"", ""Threshold 1+"", thresholdPositive, null, 0, 1.5);. //ParameterList params = watershedDetector.getDefaultParameterList(imageData);; AbstractPluginRunner.setNumThreadsRequested(threadNum);; PluginRunner<BufferedImage> runner = new CommandLinePluginRunner<BufferedImage>(imageData,false);; watershedDetector.runPlugin(runner,null);; cells = imageData.getHierarchy().getSelectionModel().getSelectedObject().getChildObjects();. return cells;; }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-568362506
https://github.com/qupath/qupath/issues/390#issuecomment-567951991:195,Safety,avoid,avoid,195,"No, see for example https://github.com/qupath/qupath/issues/122 and also [this blog post](https://petebankhead.github.io/qupath/2019/08/21/scripting-in-v020.html#serialization--json). > **Please avoid creating issues for anything other than bug reports; use [the forum](http://forum.image.sc/tags/qupath/) instead.**; > ; > <img width=""696"" alt=""Issues"" src=""https://user-images.githubusercontent.com/4690904/71262757-5afea500-2338-11ea-8c14-91f68652c70b.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/390#issuecomment-567951991
https://github.com/qupath/qupath/issues/391#issuecomment-570329327:174,Availability,down,download,174,"I'm not sure what you mean by 'portable version', but it should be possible to use QuPath without installation, e.g. from a folder on the desktop. For Windows, you'd need to download the .zip distribution (not the .msi - which is the only one that required installation).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570329327
https://github.com/qupath/qupath/issues/391#issuecomment-570329327:98,Deployability,install,installation,98,"I'm not sure what you mean by 'portable version', but it should be possible to use QuPath without installation, e.g. from a folder on the desktop. For Windows, you'd need to download the .zip distribution (not the .msi - which is the only one that required installation).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570329327
https://github.com/qupath/qupath/issues/391#issuecomment-570329327:257,Deployability,install,installation,257,"I'm not sure what you mean by 'portable version', but it should be possible to use QuPath without installation, e.g. from a folder on the desktop. For Windows, you'd need to download the .zip distribution (not the .msi - which is the only one that required installation).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570329327
https://github.com/qupath/qupath/issues/391#issuecomment-570329327:31,Modifiability,portab,portable,31,"I'm not sure what you mean by 'portable version', but it should be possible to use QuPath without installation, e.g. from a folder on the desktop. For Windows, you'd need to download the .zip distribution (not the .msi - which is the only one that required installation).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570329327
https://github.com/qupath/qupath/issues/391#issuecomment-570505027:72,Deployability,install,installation,72,"Hi!. Yes, for ""portable"" I was meaning a version quich does not require installation and thus admin priviledges.; Silly me, I hadn't tried the .zip distribution even if it was written _and it should work without further installation_ :-/. Anyway, I just tried and works as intended.; Thank you! I can flag this as closed",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570505027
https://github.com/qupath/qupath/issues/391#issuecomment-570505027:15,Modifiability,portab,portable,15,"Hi!. Yes, for ""portable"" I was meaning a version quich does not require installation and thus admin priviledges.; Silly me, I hadn't tried the .zip distribution even if it was written _and it should work without further installation_ :-/. Anyway, I just tried and works as intended.; Thank you! I can flag this as closed",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570505027
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:79,Energy Efficiency,monitor,monitor,79,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:218,Energy Efficiency,monitor,monitor--show-input,218,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:1156,Integrability,message,message,1156,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:125,Performance,cache,cache,125,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:279,Performance,cache,cached,279,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:307,Performance,cache,cache,307,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:376,Performance,cache,cache,376,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:619,Performance,cache,cache,619,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:819,Performance,cache,cache,819,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:1152,Testability,log,log,1152,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:115,Usability,clear,clear,115,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576002136:849,Usability,clear,cleared,849,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136
https://github.com/qupath/qupath/issues/393#issuecomment-576188125:63,Performance,cache,cache,63,"I am using QuPath 0.1.2, I don't find the setting of the title cache here. The .bfmemo files are only 9 MB. Is there a way to clear the cache manually before opening the next slide?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576188125
https://github.com/qupath/qupath/issues/393#issuecomment-576188125:136,Performance,cache,cache,136,"I am using QuPath 0.1.2, I don't find the setting of the title cache here. The .bfmemo files are only 9 MB. Is there a way to clear the cache manually before opening the next slide?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576188125
https://github.com/qupath/qupath/issues/393#issuecomment-576188125:126,Usability,clear,clear,126,"I am using QuPath 0.1.2, I don't find the setting of the title cache here. The .bfmemo files are only 9 MB. Is there a way to clear the cache manually before opening the next slide?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576188125
https://github.com/qupath/qupath/issues/393#issuecomment-576193690:66,Deployability,update,updated,66,"The setting doesn't exist in v0.1.2, and this version will not be updated further. Even if you do not wish to switch to v0.2.0 yet (while it is still unstable/regularly changing, and not backwards compatible with v0.1.2) I would be interested to know if the issue remains there or if it has already been resolved by one of the changes in the new version.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576193690
https://github.com/qupath/qupath/issues/394#issuecomment-579836335:40,Availability,error,error,40,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335
https://github.com/qupath/qupath/issues/394#issuecomment-579836335:308,Availability,error,errors,308,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335
https://github.com/qupath/qupath/issues/394#issuecomment-579836335:449,Availability,error,error,449,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335
https://github.com/qupath/qupath/issues/394#issuecomment-579836335:602,Availability,down,down,602,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335
https://github.com/qupath/qupath/issues/394#issuecomment-579836335:662,Availability,error,errors,662,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335
https://github.com/qupath/qupath/issues/394#issuecomment-579836335:394,Deployability,update,updates,394,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335
https://github.com/qupath/qupath/issues/394#issuecomment-579836335:347,Integrability,depend,depends,347,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335
https://github.com/qupath/qupath/issues/394#issuecomment-579836335:691,Safety,avoid,avoid,691,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335
https://github.com/qupath/qupath/issues/394#issuecomment-579836335:105,Testability,Log,Logistic,105,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335
https://github.com/qupath/qupath/issues/394#issuecomment-579836335:279,Testability,Log,Logistic,279,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335
https://github.com/qupath/qupath/issues/394#issuecomment-579836335:768,Testability,Log,Logistic,768,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335
https://github.com/qupath/qupath/issues/394#issuecomment-580236559:79,Availability,error,error,79,"Thank you for your quick response, Pete. Today morning I tried to provoke this error with different classifiers. The error occured with 'Random trees', 'Artificial neural network' and 'Logistic regression'. I think the more settings I change, the more likely the error will occur - but I couldn't figure out if a single setting is the reason. With my usual approach I train the pixel classifier on a project training image. If I could successfully save the classifier and load it for another image in the project, I get the following error messages for ANN and KNN:. ANN classifier:; ![err_ann](https://user-images.githubusercontent.com/59967282/73450688-34d01a00-4366-11ea-9c8f-7e08251c6261.png). KNN classifier:; ![err_knn](https://user-images.githubusercontent.com/59967282/73450694-37cb0a80-4366-11ea-98f8-17df5cefcf52.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-580236559
https://github.com/qupath/qupath/issues/394#issuecomment-580236559:117,Availability,error,error,117,"Thank you for your quick response, Pete. Today morning I tried to provoke this error with different classifiers. The error occured with 'Random trees', 'Artificial neural network' and 'Logistic regression'. I think the more settings I change, the more likely the error will occur - but I couldn't figure out if a single setting is the reason. With my usual approach I train the pixel classifier on a project training image. If I could successfully save the classifier and load it for another image in the project, I get the following error messages for ANN and KNN:. ANN classifier:; ![err_ann](https://user-images.githubusercontent.com/59967282/73450688-34d01a00-4366-11ea-9c8f-7e08251c6261.png). KNN classifier:; ![err_knn](https://user-images.githubusercontent.com/59967282/73450694-37cb0a80-4366-11ea-98f8-17df5cefcf52.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-580236559
https://github.com/qupath/qupath/issues/394#issuecomment-580236559:263,Availability,error,error,263,"Thank you for your quick response, Pete. Today morning I tried to provoke this error with different classifiers. The error occured with 'Random trees', 'Artificial neural network' and 'Logistic regression'. I think the more settings I change, the more likely the error will occur - but I couldn't figure out if a single setting is the reason. With my usual approach I train the pixel classifier on a project training image. If I could successfully save the classifier and load it for another image in the project, I get the following error messages for ANN and KNN:. ANN classifier:; ![err_ann](https://user-images.githubusercontent.com/59967282/73450688-34d01a00-4366-11ea-9c8f-7e08251c6261.png). KNN classifier:; ![err_knn](https://user-images.githubusercontent.com/59967282/73450694-37cb0a80-4366-11ea-98f8-17df5cefcf52.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-580236559
https://github.com/qupath/qupath/issues/394#issuecomment-580236559:534,Availability,error,error,534,"Thank you for your quick response, Pete. Today morning I tried to provoke this error with different classifiers. The error occured with 'Random trees', 'Artificial neural network' and 'Logistic regression'. I think the more settings I change, the more likely the error will occur - but I couldn't figure out if a single setting is the reason. With my usual approach I train the pixel classifier on a project training image. If I could successfully save the classifier and load it for another image in the project, I get the following error messages for ANN and KNN:. ANN classifier:; ![err_ann](https://user-images.githubusercontent.com/59967282/73450688-34d01a00-4366-11ea-9c8f-7e08251c6261.png). KNN classifier:; ![err_knn](https://user-images.githubusercontent.com/59967282/73450694-37cb0a80-4366-11ea-98f8-17df5cefcf52.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-580236559
https://github.com/qupath/qupath/issues/394#issuecomment-580236559:540,Integrability,message,messages,540,"Thank you for your quick response, Pete. Today morning I tried to provoke this error with different classifiers. The error occured with 'Random trees', 'Artificial neural network' and 'Logistic regression'. I think the more settings I change, the more likely the error will occur - but I couldn't figure out if a single setting is the reason. With my usual approach I train the pixel classifier on a project training image. If I could successfully save the classifier and load it for another image in the project, I get the following error messages for ANN and KNN:. ANN classifier:; ![err_ann](https://user-images.githubusercontent.com/59967282/73450688-34d01a00-4366-11ea-9c8f-7e08251c6261.png). KNN classifier:; ![err_knn](https://user-images.githubusercontent.com/59967282/73450694-37cb0a80-4366-11ea-98f8-17df5cefcf52.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-580236559
https://github.com/qupath/qupath/issues/394#issuecomment-580236559:472,Performance,load,load,472,"Thank you for your quick response, Pete. Today morning I tried to provoke this error with different classifiers. The error occured with 'Random trees', 'Artificial neural network' and 'Logistic regression'. I think the more settings I change, the more likely the error will occur - but I couldn't figure out if a single setting is the reason. With my usual approach I train the pixel classifier on a project training image. If I could successfully save the classifier and load it for another image in the project, I get the following error messages for ANN and KNN:. ANN classifier:; ![err_ann](https://user-images.githubusercontent.com/59967282/73450688-34d01a00-4366-11ea-9c8f-7e08251c6261.png). KNN classifier:; ![err_knn](https://user-images.githubusercontent.com/59967282/73450694-37cb0a80-4366-11ea-98f8-17df5cefcf52.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-580236559
https://github.com/qupath/qupath/issues/394#issuecomment-580236559:185,Testability,Log,Logistic,185,"Thank you for your quick response, Pete. Today morning I tried to provoke this error with different classifiers. The error occured with 'Random trees', 'Artificial neural network' and 'Logistic regression'. I think the more settings I change, the more likely the error will occur - but I couldn't figure out if a single setting is the reason. With my usual approach I train the pixel classifier on a project training image. If I could successfully save the classifier and load it for another image in the project, I get the following error messages for ANN and KNN:. ANN classifier:; ![err_ann](https://user-images.githubusercontent.com/59967282/73450688-34d01a00-4366-11ea-9c8f-7e08251c6261.png). KNN classifier:; ![err_knn](https://user-images.githubusercontent.com/59967282/73450694-37cb0a80-4366-11ea-98f8-17df5cefcf52.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-580236559
https://github.com/qupath/qupath/issues/394#issuecomment-581003877:29,Availability,error,errors,29,"I think the saving/reloading errors are completely different from the complete crashes. I'm a bit lost regarding which occurs with which classifiers and when, and I can't replicate most of what you report (except for the logistic regression thing). I also notice that you're running your classifiers at a very high resolution, and also with the parameters you're using the model could become rather complex. I haven't really had a chance to explore the limits of the pixel classifier, but it may well be that it really requires simpler models in its current form (the really complex stuff will likely need deep learning... and therefore quite a different approach). With that in mind. * Do you experience the same errors when using the default parameters?; * Do you experience the same errors when using simpler models (e.g. less training data, applied at a lower resolution)?; * If you try things on another computer, do you see exactly the same behavior?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-581003877
https://github.com/qupath/qupath/issues/394#issuecomment-581003877:714,Availability,error,errors,714,"I think the saving/reloading errors are completely different from the complete crashes. I'm a bit lost regarding which occurs with which classifiers and when, and I can't replicate most of what you report (except for the logistic regression thing). I also notice that you're running your classifiers at a very high resolution, and also with the parameters you're using the model could become rather complex. I haven't really had a chance to explore the limits of the pixel classifier, but it may well be that it really requires simpler models in its current form (the really complex stuff will likely need deep learning... and therefore quite a different approach). With that in mind. * Do you experience the same errors when using the default parameters?; * Do you experience the same errors when using simpler models (e.g. less training data, applied at a lower resolution)?; * If you try things on another computer, do you see exactly the same behavior?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-581003877
https://github.com/qupath/qupath/issues/394#issuecomment-581003877:786,Availability,error,errors,786,"I think the saving/reloading errors are completely different from the complete crashes. I'm a bit lost regarding which occurs with which classifiers and when, and I can't replicate most of what you report (except for the logistic regression thing). I also notice that you're running your classifiers at a very high resolution, and also with the parameters you're using the model could become rather complex. I haven't really had a chance to explore the limits of the pixel classifier, but it may well be that it really requires simpler models in its current form (the really complex stuff will likely need deep learning... and therefore quite a different approach). With that in mind. * Do you experience the same errors when using the default parameters?; * Do you experience the same errors when using simpler models (e.g. less training data, applied at a lower resolution)?; * If you try things on another computer, do you see exactly the same behavior?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-581003877
https://github.com/qupath/qupath/issues/394#issuecomment-581003877:221,Testability,log,logistic,221,"I think the saving/reloading errors are completely different from the complete crashes. I'm a bit lost regarding which occurs with which classifiers and when, and I can't replicate most of what you report (except for the logistic regression thing). I also notice that you're running your classifiers at a very high resolution, and also with the parameters you're using the model could become rather complex. I haven't really had a chance to explore the limits of the pixel classifier, but it may well be that it really requires simpler models in its current form (the really complex stuff will likely need deep learning... and therefore quite a different approach). With that in mind. * Do you experience the same errors when using the default parameters?; * Do you experience the same errors when using simpler models (e.g. less training data, applied at a lower resolution)?; * If you try things on another computer, do you see exactly the same behavior?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-581003877
https://github.com/qupath/qupath/issues/394#issuecomment-581003877:528,Usability,simpl,simpler,528,"I think the saving/reloading errors are completely different from the complete crashes. I'm a bit lost regarding which occurs with which classifiers and when, and I can't replicate most of what you report (except for the logistic regression thing). I also notice that you're running your classifiers at a very high resolution, and also with the parameters you're using the model could become rather complex. I haven't really had a chance to explore the limits of the pixel classifier, but it may well be that it really requires simpler models in its current form (the really complex stuff will likely need deep learning... and therefore quite a different approach). With that in mind. * Do you experience the same errors when using the default parameters?; * Do you experience the same errors when using simpler models (e.g. less training data, applied at a lower resolution)?; * If you try things on another computer, do you see exactly the same behavior?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-581003877
https://github.com/qupath/qupath/issues/394#issuecomment-581003877:611,Usability,learn,learning,611,"I think the saving/reloading errors are completely different from the complete crashes. I'm a bit lost regarding which occurs with which classifiers and when, and I can't replicate most of what you report (except for the logistic regression thing). I also notice that you're running your classifiers at a very high resolution, and also with the parameters you're using the model could become rather complex. I haven't really had a chance to explore the limits of the pixel classifier, but it may well be that it really requires simpler models in its current form (the really complex stuff will likely need deep learning... and therefore quite a different approach). With that in mind. * Do you experience the same errors when using the default parameters?; * Do you experience the same errors when using simpler models (e.g. less training data, applied at a lower resolution)?; * If you try things on another computer, do you see exactly the same behavior?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-581003877
https://github.com/qupath/qupath/issues/394#issuecomment-581003877:804,Usability,simpl,simpler,804,"I think the saving/reloading errors are completely different from the complete crashes. I'm a bit lost regarding which occurs with which classifiers and when, and I can't replicate most of what you report (except for the logistic regression thing). I also notice that you're running your classifiers at a very high resolution, and also with the parameters you're using the model could become rather complex. I haven't really had a chance to explore the limits of the pixel classifier, but it may well be that it really requires simpler models in its current form (the really complex stuff will likely need deep learning... and therefore quite a different approach). With that in mind. * Do you experience the same errors when using the default parameters?; * Do you experience the same errors when using simpler models (e.g. less training data, applied at a lower resolution)?; * If you try things on another computer, do you see exactly the same behavior?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-581003877
https://github.com/qupath/qupath/issues/394#issuecomment-589578173:122,Availability,error,errors,122,"@petebankhead sorry for the late answer, but I finally had time to continue with this project. No I never experienced any errors when I used default parameters. Simpler models with lower resolution greatly reduce the error rate! So I guess you are right, that my classifiers were too complex and that this is part of the problem. I tried my approach on four different computers and I've had the same errors every time, when I started the pixel classifier on full resolution. . I've added one of my JSON files below. [2020-02-21 Pixel Model.zip](https://github.com/qupath/qupath/files/4235332/2020-02-21.Pixel.Model.zip)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-589578173
https://github.com/qupath/qupath/issues/394#issuecomment-589578173:217,Availability,error,error,217,"@petebankhead sorry for the late answer, but I finally had time to continue with this project. No I never experienced any errors when I used default parameters. Simpler models with lower resolution greatly reduce the error rate! So I guess you are right, that my classifiers were too complex and that this is part of the problem. I tried my approach on four different computers and I've had the same errors every time, when I started the pixel classifier on full resolution. . I've added one of my JSON files below. [2020-02-21 Pixel Model.zip](https://github.com/qupath/qupath/files/4235332/2020-02-21.Pixel.Model.zip)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-589578173
https://github.com/qupath/qupath/issues/394#issuecomment-589578173:400,Availability,error,errors,400,"@petebankhead sorry for the late answer, but I finally had time to continue with this project. No I never experienced any errors when I used default parameters. Simpler models with lower resolution greatly reduce the error rate! So I guess you are right, that my classifiers were too complex and that this is part of the problem. I tried my approach on four different computers and I've had the same errors every time, when I started the pixel classifier on full resolution. . I've added one of my JSON files below. [2020-02-21 Pixel Model.zip](https://github.com/qupath/qupath/files/4235332/2020-02-21.Pixel.Model.zip)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-589578173
https://github.com/qupath/qupath/issues/394#issuecomment-589578173:206,Energy Efficiency,reduce,reduce,206,"@petebankhead sorry for the late answer, but I finally had time to continue with this project. No I never experienced any errors when I used default parameters. Simpler models with lower resolution greatly reduce the error rate! So I guess you are right, that my classifiers were too complex and that this is part of the problem. I tried my approach on four different computers and I've had the same errors every time, when I started the pixel classifier on full resolution. . I've added one of my JSON files below. [2020-02-21 Pixel Model.zip](https://github.com/qupath/qupath/files/4235332/2020-02-21.Pixel.Model.zip)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-589578173
https://github.com/qupath/qupath/issues/394#issuecomment-589578173:161,Usability,Simpl,Simpler,161,"@petebankhead sorry for the late answer, but I finally had time to continue with this project. No I never experienced any errors when I used default parameters. Simpler models with lower resolution greatly reduce the error rate! So I guess you are right, that my classifiers were too complex and that this is part of the problem. I tried my approach on four different computers and I've had the same errors every time, when I started the pixel classifier on full resolution. . I've added one of my JSON files below. [2020-02-21 Pixel Model.zip](https://github.com/qupath/qupath/files/4235332/2020-02-21.Pixel.Model.zip)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-589578173
https://github.com/qupath/qupath/issues/394#issuecomment-589757504:54,Performance,load,loads,54,"The classifier is indeed extremely large, although it loads for me on both Mac and Windows using v0.2.0-m9. Which exact problem do you see with this file?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-589757504
https://github.com/qupath/qupath/issues/394#issuecomment-617734172:18,Availability,avail,available,18,"v0.2.0-m10 is now available, which contains an updated version of OpenCV that I think/hope should have fixed the issue. But since I couldn't reproduce it in the first place, I'm not certain. I'll close this issue, but if you find the problem remains - or you can confirm it's resolved in m10 - please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-617734172
https://github.com/qupath/qupath/issues/394#issuecomment-617734172:47,Deployability,update,updated,47,"v0.2.0-m10 is now available, which contains an updated version of OpenCV that I think/hope should have fixed the issue. But since I couldn't reproduce it in the first place, I'm not certain. I'll close this issue, but if you find the problem remains - or you can confirm it's resolved in m10 - please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-617734172
https://github.com/qupath/qupath/issues/395#issuecomment-581003028:9,Safety,avoid,avoid,9,"**Please avoid creating issues for anything other than bug reports; use [the forum](http://forum.image.sc/tags/qupath/) instead.**. <img width=""696"" alt=""Issues"" src=""https://user-images.githubusercontent.com/4690904/71262757-5afea500-2338-11ea-8c14-91f68652c70b.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/395#issuecomment-581003028
https://github.com/qupath/qupath/issues/396#issuecomment-582272973:486,Modifiability,maintainab,maintainable,486,"Thanks for this, I can confirm the issue and that it all can work in QuPath if the `zeissczi.autostitch` option is set to false when reading the image. I suspect the setting needs to be encoded in such a way that it lives on in projects, associated with specific images, rather than a global setting in the software that can be turned on and off... and ideally would support other options for other readers. It'll take a bit more thinking to figure out how to get this into QuPath in a maintainable way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-582272973
https://github.com/qupath/qupath/issues/396#issuecomment-582323621:417,Security,access,access,417,"Well this turned into something rather a lot more complicated than I'd hoped... Attempted fix in https://github.com/petebankhead/qupath/commit/c331ba1a79223311f31e82d33482dc3102f99480. What *should* happen is that behavior remains the same, however unbeknown to most the Bio-Formats server now accepts arguments of the form `[""--bfOptions"" ""key=value""]` that will be passed to the reader. The 'easy' (sort of) way to access these is via the following script:; ```groovy; def bfOptions = qupath.lib.images.servers.bioformats.BioFormatsServerOptions.getInstance(); bfOptions.setReaderOptions([""zeissczi.autostitch"": ""false""]); ```; This will set the option for the current QuPath session; to reset it, either restart QuPath or call `options.clearReaderOptions()`. The necessary autostitching flag should then be retained if the image is added to a project. Because this happens regardless of whether the flag is relevant (e.g. it's for a totally different file type) it's best to clear the options when they aren't needed. If you can build QuPath from the same branch as the commit, please let me know if you find any problems. > Sidenote: Thanks to @melvingelbard you should also see a Bio-Formats series chooser when opening images even outside a project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-582323621
https://github.com/qupath/qupath/issues/396#issuecomment-582323621:739,Usability,clear,clearReaderOptions,739,"Well this turned into something rather a lot more complicated than I'd hoped... Attempted fix in https://github.com/petebankhead/qupath/commit/c331ba1a79223311f31e82d33482dc3102f99480. What *should* happen is that behavior remains the same, however unbeknown to most the Bio-Formats server now accepts arguments of the form `[""--bfOptions"" ""key=value""]` that will be passed to the reader. The 'easy' (sort of) way to access these is via the following script:; ```groovy; def bfOptions = qupath.lib.images.servers.bioformats.BioFormatsServerOptions.getInstance(); bfOptions.setReaderOptions([""zeissczi.autostitch"": ""false""]); ```; This will set the option for the current QuPath session; to reset it, either restart QuPath or call `options.clearReaderOptions()`. The necessary autostitching flag should then be retained if the image is added to a project. Because this happens regardless of whether the flag is relevant (e.g. it's for a totally different file type) it's best to clear the options when they aren't needed. If you can build QuPath from the same branch as the commit, please let me know if you find any problems. > Sidenote: Thanks to @melvingelbard you should also see a Bio-Formats series chooser when opening images even outside a project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-582323621
https://github.com/qupath/qupath/issues/396#issuecomment-582323621:978,Usability,clear,clear,978,"Well this turned into something rather a lot more complicated than I'd hoped... Attempted fix in https://github.com/petebankhead/qupath/commit/c331ba1a79223311f31e82d33482dc3102f99480. What *should* happen is that behavior remains the same, however unbeknown to most the Bio-Formats server now accepts arguments of the form `[""--bfOptions"" ""key=value""]` that will be passed to the reader. The 'easy' (sort of) way to access these is via the following script:; ```groovy; def bfOptions = qupath.lib.images.servers.bioformats.BioFormatsServerOptions.getInstance(); bfOptions.setReaderOptions([""zeissczi.autostitch"": ""false""]); ```; This will set the option for the current QuPath session; to reset it, either restart QuPath or call `options.clearReaderOptions()`. The necessary autostitching flag should then be retained if the image is added to a project. Because this happens regardless of whether the flag is relevant (e.g. it's for a totally different file type) it's best to clear the options when they aren't needed. If you can build QuPath from the same branch as the commit, please let me know if you find any problems. > Sidenote: Thanks to @melvingelbard you should also see a Bio-Formats series chooser when opening images even outside a project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-582323621
https://github.com/qupath/qupath/issues/396#issuecomment-586470278:47,Availability,avail,available,47,I'll close this issue because v0.2.0-m9 is now available - please reopen if you find it doesn't solve the problem.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-586470278
https://github.com/qupath/qupath/issues/396#issuecomment-826477900:135,Availability,error,error,135,"Can anyone help me with any suggestions, please? I am not able to open the images although the project file is opening I am getting an error message: Caused by Unable to build ImageServer for file. Thank you,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-826477900
https://github.com/qupath/qupath/issues/396#issuecomment-826477900:141,Integrability,message,message,141,"Can anyone help me with any suggestions, please? I am not able to open the images although the project file is opening I am getting an error message: Caused by Unable to build ImageServer for file. Thank you,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-826477900
https://github.com/qupath/qupath/issues/396#issuecomment-826532977:138,Availability,error,error,138,@subanookala Please post questions on the forum at http://forum.image.sc/tag/qupath and provide more detail (you may find a more complete error message under *View &rarr; Show log*).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-826532977
https://github.com/qupath/qupath/issues/396#issuecomment-826532977:144,Integrability,message,message,144,@subanookala Please post questions on the forum at http://forum.image.sc/tag/qupath and provide more detail (you may find a more complete error message under *View &rarr; Show log*).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-826532977
https://github.com/qupath/qupath/issues/396#issuecomment-826532977:176,Testability,log,log,176,@subanookala Please post questions on the forum at http://forum.image.sc/tag/qupath and provide more detail (you may find a more complete error message under *View &rarr; Show log*).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-826532977
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:270,Availability,error,error,270,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:1649,Availability,ERROR,ERROR,1649,"ion (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.images.servers.openslide.OpenslideServerBuilder; ERROR: Load ImageData; at; qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:341); at; qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:152); at; qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:718); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2695); at; qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at; com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at; com.sun.jav",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:2048,Availability,ERROR,ERROR,2048,"eral\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.images.servers.openslide.OpenslideServerBuilder; ERROR: Load ImageData; at; qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:341); at; qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:152); at; qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:718); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2695); at; qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at; com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at; com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at; com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at; com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at; com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at; com.sun.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:6217,Availability,error,error,6217,"spatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3597); at javafx.scene.Scene$MouseHandler.process(Scene.java:3899); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at; com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at; com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). On Mon, Apr 26, 2021 at 1:07 AM Pete ***@***.***> wrote:. > @subanookala <https://github.com/subanookala> Please post questions on; > the forum at http://forum.image.sc/tag/qupath and provide more detail; > (you may find a more complete error message under *View → Show log*).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/396#issuecomment-826532977>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ATAT3NBZJC2UITEIJLWE66DTKT7LRANCNFSM4KPPDA2Q>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:503,Energy Efficiency,adapt,adapters,503,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:84,Integrability,message,message,84,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:276,Integrability,message,message,276,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:503,Integrability,adapter,adapters,503,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:6223,Integrability,message,message,6223,"spatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3597); at javafx.scene.Scene$MouseHandler.process(Scene.java:3899); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at; com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at; com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). On Mon, Apr 26, 2021 at 1:07 AM Pete ***@***.***> wrote:. > @subanookala <https://github.com/subanookala> Please post questions on; > the forum at http://forum.image.sc/tag/qupath and provide more detail; > (you may find a more complete error message under *View → Show log*).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/396#issuecomment-826532977>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ATAT3NBZJC2UITEIJLWE66DTKT7LRANCNFSM4KPPDA2Q>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:503,Modifiability,adapt,adapters,503,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:163,Performance,load,load,163,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:552,Performance,Load,Loaded,552,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:624,Performance,Load,Loaded,624,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:678,Performance,Load,Loaded,678,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:727,Performance,Load,Loaded,727,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:774,Performance,Load,Loaded,774,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:827,Performance,Load,Loaded,827,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:889,Performance,Load,Loaded,889,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:1025,Performance,load,load,1025,"m, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.images.servers.openslide.OpenslideServerBuilder; ERROR: Load ImageDat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:1656,Performance,Load,Load,1656,"ion (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.images.servers.openslide.OpenslideServerBuilder; ERROR: Load ImageData; at; qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:341); at; qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:152); at; qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:718); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2695); at; qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at; com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at; com.sun.jav",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:2055,Performance,Load,Load,2055,"eral\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.images.servers.openslide.OpenslideServerBuilder; ERROR: Load ImageData; at; qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:341); at; qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:152); at; qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:718); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2695); at; qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at; com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at; com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at; com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at; com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at; com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at; com.sun.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:5310,Security,secur,security,5310,"ent(BasicEventDispatcher.java:56); at; com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at; com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at; com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3597); at javafx.scene.Scene$MouseHandler.process(Scene.java:3899); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at; com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at; com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). On Mon, Apr 26, 2021 at 1:07 AM Pete ***@***.***> wrote:. > @subanookala <https://github.com/subanookala> Please post questions on; > the forum at http://forum.image.sc/tag/qupath and provide more detail; > (you may find a more complete error message under *View → Show log*).; >; > —; > You are receiving this because you were mention",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:5319,Security,Access,AccessController,5319,"tDispatcher.java:56); at; com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at; com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at; com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3597); at javafx.scene.Scene$MouseHandler.process(Scene.java:3899); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at; com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at; com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). On Mon, Apr 26, 2021 at 1:07 AM Pete ***@***.***> wrote:. > @subanookala <https://github.com/subanookala> Please post questions on; > the forum at http://forum.image.sc/tag/qupath and provide more detail; > (you may find a more complete error message under *View → Show log*).; >; > —; > You are receiving this because you were mentioned.; > Reply ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:325,Testability,log,log,325,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:6250,Testability,log,log,6250,"spatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3597); at javafx.scene.Scene$MouseHandler.process(Scene.java:3899); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at; com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at; com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). On Mon, Apr 26, 2021 at 1:07 AM Pete ***@***.***> wrote:. > @subanookala <https://github.com/subanookala> Please post questions on; > the forum at http://forum.image.sc/tag/qupath and provide more detail; > (you may find a more complete error message under *View → Show log*).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/396#issuecomment-826532977>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ATAT3NBZJC2UITEIJLWE66DTKT7LRANCNFSM4KPPDA2Q>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/396#issuecomment-827610434:25,Usability,learn,learning,25,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434
https://github.com/qupath/qupath/issues/397#issuecomment-582753754:7,Safety,avoid,avoid,7,Please avoid creating issues for anything other than bug reports; [use the forum instead](http://forum.image.sc/tags/qupath/).; ![image](https://user-images.githubusercontent.com/23145209/73910566-914ea000-4864-11ea-8072-8310ead5efb2.png),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/397#issuecomment-582753754
https://github.com/qupath/qupath/issues/401#issuecomment-587001656:23,Availability,error,error,23,"If you search for this error you should find many discussions about it and Java Topology Suite. It is a frequent source of problems since QuPath started using JTS routinely for ROIs, although I still think that on balance there are many more advantages of using JTS overall. I had tried to put in additional steps to reduce the frequency of occurrence in m9, but it seems from this issue that is can still happen. I can see from the screenshot roughly where this occurs, but without steps to reproduce it I am not sure I can do much in the near future. Two questions: are you using pixel snapping to round ROI coordinates to integers here? And how did you generate all the annotations (ie by hand or automatically)? These are likely to be more relevant than the many cells.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-587001656
https://github.com/qupath/qupath/issues/401#issuecomment-587001656:317,Energy Efficiency,reduce,reduce,317,"If you search for this error you should find many discussions about it and Java Topology Suite. It is a frequent source of problems since QuPath started using JTS routinely for ROIs, although I still think that on balance there are many more advantages of using JTS overall. I had tried to put in additional steps to reduce the frequency of occurrence in m9, but it seems from this issue that is can still happen. I can see from the screenshot roughly where this occurs, but without steps to reproduce it I am not sure I can do much in the near future. Two questions: are you using pixel snapping to round ROI coordinates to integers here? And how did you generate all the annotations (ie by hand or automatically)? These are likely to be more relevant than the many cells.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-587001656
https://github.com/qupath/qupath/issues/401#issuecomment-587001656:163,Integrability,rout,routinely,163,"If you search for this error you should find many discussions about it and Java Topology Suite. It is a frequent source of problems since QuPath started using JTS routinely for ROIs, although I still think that on balance there are many more advantages of using JTS overall. I had tried to put in additional steps to reduce the frequency of occurrence in m9, but it seems from this issue that is can still happen. I can see from the screenshot roughly where this occurs, but without steps to reproduce it I am not sure I can do much in the near future. Two questions: are you using pixel snapping to round ROI coordinates to integers here? And how did you generate all the annotations (ie by hand or automatically)? These are likely to be more relevant than the many cells.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-587001656
https://github.com/qupath/qupath/issues/401#issuecomment-587058614:159,Availability,down,downsampled,159,"Pixel snapping is turned on, but I'm not sure if it applies to script generated annotations. And these are script generated annotations, and generated using a downsampled imageprocessor, I should have included that. . Would it work to try and round all of the annotation points prior to using addObjects(), and if so do you have any recommendations on how to do that (the annotations could, theoretically, have holes)? Or is it possible to snap objects to the grid with a function similar to resolveHierarchy?. As a note, I would probably do this at the ROI stage, where I use IJTools.convertToROI(). Looking into options to edit the point values within those ROI objects now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-587058614
https://github.com/qupath/qupath/issues/401#issuecomment-587112781:510,Testability,log,logic,510,"You're right pixel-snapping will only impact the ROIs drawn manually. Apart from that I don't think there's an easy solution, because the underlying problem concerns self-intersections in the shapes that may be very subtle/due to excessive precision. Rounding the vertices alone isn't certain to help, and may make the situation worse (e.g. by introducing *new* self-intersections) - any rounding will likely need to be done very cautiously. The solution/workaround will likely involve trying to add even more logic into QuPath to try to capture and fix these problems internally as early as possible, but that will likely require gathering more information here about when they can occur - ideally with reproducible examples.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-587112781
https://github.com/qupath/qupath/issues/401#issuecomment-595979672:86,Availability,error,error,86,"Closing this with the note that I was able to use Simplify Annotations to prevent the error from occurring. As mentioned it only happened with script generated annotations, and even then only when creating them off of a downsampled ImageProcessor, followed by upscaling them back into annotations in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-595979672
https://github.com/qupath/qupath/issues/401#issuecomment-595979672:220,Availability,down,downsampled,220,"Closing this with the note that I was able to use Simplify Annotations to prevent the error from occurring. As mentioned it only happened with script generated annotations, and even then only when creating them off of a downsampled ImageProcessor, followed by upscaling them back into annotations in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-595979672
https://github.com/qupath/qupath/issues/401#issuecomment-595979672:50,Usability,Simpl,Simplify,50,"Closing this with the note that I was able to use Simplify Annotations to prevent the error from occurring. As mentioned it only happened with script generated annotations, and even then only when creating them off of a downsampled ImageProcessor, followed by upscaling them back into annotations in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-595979672
https://github.com/qupath/qupath/issues/402#issuecomment-588430406:100,Safety,detect,detection,100,"Classifiers trained in v0.1.2 aren't compatible with v0.2.0. Some of the many changes (e.g. to cell detection) mean that the features calculated would not be identical, and so results are expected to differ. Classifiers should really only be used in the same version of the software for which they were trained.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/402#issuecomment-588430406
https://github.com/qupath/qupath/issues/403#issuecomment-588527393:70,Performance,load,load,70,"Working off of the last line of the previous post, I found that I can load and create objects if I set the other areas to some sort of a classification and create objects for them as well. Unfortunately, the primary ""Above Threshold"" objects are never created, which was the issue. So **objects can be created for ""below"" threshold classes,** but not above threshold classes. This was confusing since that behavior makes sense for brightfield images, but the current implementation favors fluorescent images until deconvolved channels are included.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/403#issuecomment-588527393
https://github.com/qupath/qupath/issues/403#issuecomment-588528261:479,Availability,error,errors,479,"Thanks, the command is unfinished & needs more attention at some point, but the fact it works for 'below threshold' is probably why I've never seen the issue (and it seemed to work for me when I tried it). > Side note: Classify Detections, when working off of a loaded classifier, seems to try to do something, then fails with a whole lot of:; `WARN: Classification Unclassified is invalid! Will be set to null instead`. Does it fail or is it just wordy? Because warnings aren't errors, this alone does not necessarily mean it fails.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/403#issuecomment-588528261
https://github.com/qupath/qupath/issues/403#issuecomment-588528261:262,Performance,load,loaded,262,"Thanks, the command is unfinished & needs more attention at some point, but the fact it works for 'below threshold' is probably why I've never seen the issue (and it seemed to work for me when I tried it). > Side note: Classify Detections, when working off of a loaded classifier, seems to try to do something, then fails with a whole lot of:; `WARN: Classification Unclassified is invalid! Will be set to null instead`. Does it fail or is it just wordy? Because warnings aren't errors, this alone does not necessarily mean it fails.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/403#issuecomment-588528261
https://github.com/qupath/qupath/issues/403#issuecomment-588528261:228,Safety,Detect,Detections,228,"Thanks, the command is unfinished & needs more attention at some point, but the fact it works for 'below threshold' is probably why I've never seen the issue (and it seemed to work for me when I tried it). > Side note: Classify Detections, when working off of a loaded classifier, seems to try to do something, then fails with a whole lot of:; `WARN: Classification Unclassified is invalid! Will be set to null instead`. Does it fail or is it just wordy? Because warnings aren't errors, this alone does not necessarily mean it fails.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/403#issuecomment-588528261
https://github.com/qupath/qupath/issues/403#issuecomment-588529231:205,Performance,load,loaded,205,"Fails in the same way as above; Tumor or other ""above"" thresholded cells are not classified. The warning isn't important, but it did let me figure out why I thought the command wasn't working overall when loaded. It does create ""Above"" objects and classify them when initially creating the classifier. And in case anyone else comes across this, you can work around the current problem with scripting! Create the below threshold objects (assuming an either/or situation) and then invert the annotation and delete the first set.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/403#issuecomment-588529231
https://github.com/qupath/qupath/issues/403#issuecomment-618000560:39,Availability,avail,available,39,I'll close this as the proposed fix is available in v0.2.0-m10 - please reopen if the problem persists.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/403#issuecomment-618000560
https://github.com/qupath/qupath/issues/405#issuecomment-596597264:156,Safety,detect,detections,156,"In case this is still an issue for one of your projects, I think the best workaround would be to run each of the individual classifiers and the distance to detections right after it by script using. https://forum.image.sc/t/scripting-json-classifiers-in-qupath-0-2-0-m9/34614/2. followed by detectionCentroidDistances(). Both functions tend to run pretty fast, so it shouldn't be too problematic to write or run. *Note that if you run detectionCentroidDistances again after running the full classifier, that will overwrite things you don't want to overwrite, but as long as each of the base classes are named differently, the measurements should stack up nicely and independently.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/405#issuecomment-596597264
https://github.com/qupath/qupath/issues/405#issuecomment-596597264:291,Safety,detect,detectionCentroidDistances,291,"In case this is still an issue for one of your projects, I think the best workaround would be to run each of the individual classifiers and the distance to detections right after it by script using. https://forum.image.sc/t/scripting-json-classifiers-in-qupath-0-2-0-m9/34614/2. followed by detectionCentroidDistances(). Both functions tend to run pretty fast, so it shouldn't be too problematic to write or run. *Note that if you run detectionCentroidDistances again after running the full classifier, that will overwrite things you don't want to overwrite, but as long as each of the base classes are named differently, the measurements should stack up nicely and independently.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/405#issuecomment-596597264
https://github.com/qupath/qupath/issues/405#issuecomment-596597264:435,Safety,detect,detectionCentroidDistances,435,"In case this is still an issue for one of your projects, I think the best workaround would be to run each of the individual classifiers and the distance to detections right after it by script using. https://forum.image.sc/t/scripting-json-classifiers-in-qupath-0-2-0-m9/34614/2. followed by detectionCentroidDistances(). Both functions tend to run pretty fast, so it shouldn't be too problematic to write or run. *Note that if you run detectionCentroidDistances again after running the full classifier, that will overwrite things you don't want to overwrite, but as long as each of the base classes are named differently, the measurements should stack up nicely and independently.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/405#issuecomment-596597264
https://github.com/qupath/qupath/issues/406#issuecomment-593752993:134,Performance,load,loading-issue,134,I am closing this issue because you have also created an identical post on image.sc [here](https://forum.image.sc/t/object-classifier-loading-issue/34622). . Not enough information is provided to demonstrate that there is a bug in QuPath. so I'll respond at image.sc.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/406#issuecomment-593752993
https://github.com/qupath/qupath/issues/409#issuecomment-595586902:44,Availability,error,error,44,"I think that since this is not an issue/bug/error, it should be posted on the forum, as indicated during the process of creating the issue :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/409#issuecomment-595586902
https://github.com/qupath/qupath/issues/410#issuecomment-597049593:122,Performance,load,load,122,"This is intended behavior rather than a bug, although I'm not sure if it is the *right* intended behavior. The ability to load points wasn't really intended for this purpose - rather, it's an easy way to exchange points with other software (e.g. someone writes a Python script and wants to visualize detected locations within QuPath). The current implementation is agnostic regarding whether a name or classification is set during export. The current *best* way to export/import annotations is using a method described at https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_annotations.html (probably GeoJSON). This should preserve the class (if not, then that *would* be a bug). With that in mind, I don't know if it's better to 1) add complexity to the save/load command to support classes, or 2) remove those buttons altogether (since I suspect it is rarely used for its original purpose, and points can be loaded by scripting anyway). What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-597049593
https://github.com/qupath/qupath/issues/410#issuecomment-597049593:772,Performance,load,load,772,"This is intended behavior rather than a bug, although I'm not sure if it is the *right* intended behavior. The ability to load points wasn't really intended for this purpose - rather, it's an easy way to exchange points with other software (e.g. someone writes a Python script and wants to visualize detected locations within QuPath). The current implementation is agnostic regarding whether a name or classification is set during export. The current *best* way to export/import annotations is using a method described at https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_annotations.html (probably GeoJSON). This should preserve the class (if not, then that *would* be a bug). With that in mind, I don't know if it's better to 1) add complexity to the save/load command to support classes, or 2) remove those buttons altogether (since I suspect it is rarely used for its original purpose, and points can be loaded by scripting anyway). What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-597049593
https://github.com/qupath/qupath/issues/410#issuecomment-597049593:922,Performance,load,loaded,922,"This is intended behavior rather than a bug, although I'm not sure if it is the *right* intended behavior. The ability to load points wasn't really intended for this purpose - rather, it's an easy way to exchange points with other software (e.g. someone writes a Python script and wants to visualize detected locations within QuPath). The current implementation is agnostic regarding whether a name or classification is set during export. The current *best* way to export/import annotations is using a method described at https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_annotations.html (probably GeoJSON). This should preserve the class (if not, then that *would* be a bug). With that in mind, I don't know if it's better to 1) add complexity to the save/load command to support classes, or 2) remove those buttons altogether (since I suspect it is rarely used for its original purpose, and points can be loaded by scripting anyway). What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-597049593
https://github.com/qupath/qupath/issues/410#issuecomment-597049593:300,Safety,detect,detected,300,"This is intended behavior rather than a bug, although I'm not sure if it is the *right* intended behavior. The ability to load points wasn't really intended for this purpose - rather, it's an easy way to exchange points with other software (e.g. someone writes a Python script and wants to visualize detected locations within QuPath). The current implementation is agnostic regarding whether a name or classification is set during export. The current *best* way to export/import annotations is using a method described at https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_annotations.html (probably GeoJSON). This should preserve the class (if not, then that *would* be a bug). With that in mind, I don't know if it's better to 1) add complexity to the save/load command to support classes, or 2) remove those buttons altogether (since I suspect it is rarely used for its original purpose, and points can be loaded by scripting anyway). What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-597049593
https://github.com/qupath/qupath/issues/410#issuecomment-597122571:278,Performance,Load,Load,278,"Ah, ok. My bad. I am loathe to remove functionality, but with the increased emphasis on points for picking out individual cells in multiplexes, I have a feeling it may come up more often. A couple of other possibilities that require more or less coding...; 3) Move the Save and Load buttons to the ... along with create points for all classes so that they are less obvious.; 4) Instead of one text box, have a columns for the points that include ""Name"" ""Count"" and ""Class"" fields. That would at least make it slightly more obvious that loaded points are unclassified.; 5) One more button (possibly in combination with 3) to ""Set Points names as Classes""; 6) One new Label beneath the Load and Save points buttons that says ""Points loaded in this way will not have classes"" possibly with a link to the Exporting annotations page you posted above. Easiest seems like 6, though as long as the current functionality is scriptable anyway.; I'm pretty sure there was a comic about removing functionality that I saw somewhere recently. Aaaanyway...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-597122571
https://github.com/qupath/qupath/issues/410#issuecomment-597122571:536,Performance,load,loaded,536,"Ah, ok. My bad. I am loathe to remove functionality, but with the increased emphasis on points for picking out individual cells in multiplexes, I have a feeling it may come up more often. A couple of other possibilities that require more or less coding...; 3) Move the Save and Load buttons to the ... along with create points for all classes so that they are less obvious.; 4) Instead of one text box, have a columns for the points that include ""Name"" ""Count"" and ""Class"" fields. That would at least make it slightly more obvious that loaded points are unclassified.; 5) One more button (possibly in combination with 3) to ""Set Points names as Classes""; 6) One new Label beneath the Load and Save points buttons that says ""Points loaded in this way will not have classes"" possibly with a link to the Exporting annotations page you posted above. Easiest seems like 6, though as long as the current functionality is scriptable anyway.; I'm pretty sure there was a comic about removing functionality that I saw somewhere recently. Aaaanyway...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-597122571
https://github.com/qupath/qupath/issues/410#issuecomment-597122571:684,Performance,Load,Load,684,"Ah, ok. My bad. I am loathe to remove functionality, but with the increased emphasis on points for picking out individual cells in multiplexes, I have a feeling it may come up more often. A couple of other possibilities that require more or less coding...; 3) Move the Save and Load buttons to the ... along with create points for all classes so that they are less obvious.; 4) Instead of one text box, have a columns for the points that include ""Name"" ""Count"" and ""Class"" fields. That would at least make it slightly more obvious that loaded points are unclassified.; 5) One more button (possibly in combination with 3) to ""Set Points names as Classes""; 6) One new Label beneath the Load and Save points buttons that says ""Points loaded in this way will not have classes"" possibly with a link to the Exporting annotations page you posted above. Easiest seems like 6, though as long as the current functionality is scriptable anyway.; I'm pretty sure there was a comic about removing functionality that I saw somewhere recently. Aaaanyway...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-597122571
https://github.com/qupath/qupath/issues/410#issuecomment-597122571:731,Performance,load,loaded,731,"Ah, ok. My bad. I am loathe to remove functionality, but with the increased emphasis on points for picking out individual cells in multiplexes, I have a feeling it may come up more often. A couple of other possibilities that require more or less coding...; 3) Move the Save and Load buttons to the ... along with create points for all classes so that they are less obvious.; 4) Instead of one text box, have a columns for the points that include ""Name"" ""Count"" and ""Class"" fields. That would at least make it slightly more obvious that loaded points are unclassified.; 5) One more button (possibly in combination with 3) to ""Set Points names as Classes""; 6) One new Label beneath the Load and Save points buttons that says ""Points loaded in this way will not have classes"" possibly with a link to the Exporting annotations page you posted above. Easiest seems like 6, though as long as the current functionality is scriptable anyway.; I'm pretty sure there was a comic about removing functionality that I saw somewhere recently. Aaaanyway...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-597122571
https://github.com/qupath/qupath/issues/410#issuecomment-597155651:529,Performance,load,loading,529,"I've discussed this with @melvingelbard and we propose to change the export to a single csv/tsv table that includes class and name as optional columns, and avoids the 'header' information in the current export format. I suspect that the main usefulness of this is to support spatial analysis outside QuPath, or import points from other sources. Following the instructions in the tutorial to create duplicate images, or using the annotation export methods in the docs, there shouldn't be any need to rely on this method of saving/loading points for training.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-597155651
https://github.com/qupath/qupath/issues/410#issuecomment-597155651:156,Safety,avoid,avoids,156,"I've discussed this with @melvingelbard and we propose to change the export to a single csv/tsv table that includes class and name as optional columns, and avoids the 'header' information in the current export format. I suspect that the main usefulness of this is to support spatial analysis outside QuPath, or import points from other sources. Following the instructions in the tutorial to create duplicate images, or using the annotation export methods in the docs, there shouldn't be any need to rely on this method of saving/loading points for training.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-597155651
https://github.com/qupath/qupath/issues/410#issuecomment-600574775:34,Deployability,update,update,34,"These changes from @melvingelbard update the way the points are saved/loaded, which makes them more portable and can retain the classification: https://github.com/petebankhead/qupath/pull/42",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-600574775
https://github.com/qupath/qupath/issues/410#issuecomment-600574775:100,Modifiability,portab,portable,100,"These changes from @melvingelbard update the way the points are saved/loaded, which makes them more portable and can retain the classification: https://github.com/petebankhead/qupath/pull/42",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-600574775
https://github.com/qupath/qupath/issues/410#issuecomment-600574775:70,Performance,load,loaded,70,"These changes from @melvingelbard update the way the points are saved/loaded, which makes them more portable and can retain the classification: https://github.com/petebankhead/qupath/pull/42",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-600574775
https://github.com/qupath/qupath/issues/416#issuecomment-601616473:93,Safety,avoid,avoid,93,"There is a shape simplification step used when viewing annotations at a lower resolution, to avoid needing to paint all the vertices frequently. I'm not sure why it is failing in this case. Does the issue occur only when combined with your code, or also when QuPath is used alone?; Can you provide any steps to reproduce, or files containing annotations that exhibit this behavior?. Just in case, note that ROIs are supposed to be immutable - so if any exterior code violates that (e.g. by manipulating private fields with ROIs) then the result would be Bad.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/416#issuecomment-601616473
https://github.com/qupath/qupath/issues/416#issuecomment-601616473:17,Usability,simpl,simplification,17,"There is a shape simplification step used when viewing annotations at a lower resolution, to avoid needing to paint all the vertices frequently. I'm not sure why it is failing in this case. Does the issue occur only when combined with your code, or also when QuPath is used alone?; Can you provide any steps to reproduce, or files containing annotations that exhibit this behavior?. Just in case, note that ROIs are supposed to be immutable - so if any exterior code violates that (e.g. by manipulating private fields with ROIs) then the result would be Bad.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/416#issuecomment-601616473
https://github.com/qupath/qupath/issues/416#issuecomment-617786012:169,Deployability,release,release,169,"I will close this issue because of a lack of a response, and I haven't been able to replicate it. Please reopen it again if you are able to replicate it with the latest release (currently v0.2.0-m10) and provide further information.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/416#issuecomment-617786012
https://github.com/qupath/qupath/issues/422#issuecomment-604962678:84,Deployability,install,installation,84,*Edit &rarr; Reset preferences* should fix it (preferences aren't impacted by a new installation).; I notice you're using v0.1.2 - I think this bug should already have been fixed since then.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/422#issuecomment-604962678
https://github.com/qupath/qupath/issues/422#issuecomment-606430083:129,Performance,load,loading,129,"Hi Pete, ; thank you for your answer. Indeed reset preferences enables the automate menu. ; We can reopen the scirpt editor. But loading the script causes the bug again and again. ; It happens directly with opening the script, before the first run. ; Is there anything else we can try to avoid it?. best; David",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/422#issuecomment-606430083
https://github.com/qupath/qupath/issues/422#issuecomment-606430083:288,Safety,avoid,avoid,288,"Hi Pete, ; thank you for your answer. Indeed reset preferences enables the automate menu. ; We can reopen the scirpt editor. But loading the script causes the bug again and again. ; It happens directly with opening the script, before the first run. ; Is there anything else we can try to avoid it?. best; David",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/422#issuecomment-606430083
https://github.com/qupath/qupath/issues/422#issuecomment-606432591:255,Deployability,install,installed,255,"I don't know; to better understand what has gone wrong I'd need to know more information about what might be different in this case from previous times when you loaded scripts and didn't have a problem (e.g. anything appearing in the log, where QuPath is installed / where the script is located, if other scripts have the same effect). Since I can't replicate the problem myself, I'm afraid I can't really help much- also since the underlying issue should already be fixed in v0.2.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/422#issuecomment-606432591
https://github.com/qupath/qupath/issues/422#issuecomment-606432591:161,Performance,load,loaded,161,"I don't know; to better understand what has gone wrong I'd need to know more information about what might be different in this case from previous times when you loaded scripts and didn't have a problem (e.g. anything appearing in the log, where QuPath is installed / where the script is located, if other scripts have the same effect). Since I can't replicate the problem myself, I'm afraid I can't really help much- also since the underlying issue should already be fixed in v0.2.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/422#issuecomment-606432591
https://github.com/qupath/qupath/issues/422#issuecomment-606432591:234,Testability,log,log,234,"I don't know; to better understand what has gone wrong I'd need to know more information about what might be different in this case from previous times when you loaded scripts and didn't have a problem (e.g. anything appearing in the log, where QuPath is installed / where the script is located, if other scripts have the same effect). Since I can't replicate the problem myself, I'm afraid I can't really help much- also since the underlying issue should already be fixed in v0.2.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/422#issuecomment-606432591
https://github.com/qupath/qupath/pull/425#issuecomment-606125263:1839,Availability,avail,available,1839,"This looks good and very useful! Nice touches with auto-updating the image name based on the delimiter, and auto-disabling the column include/exclude as needed :). Some small things:; * Beware invalid characters in the fields... if the filename contains commas, the entire table becomes shifted if exporting as .csv. It appears to work properly (at least in MS Excel) if the name is enclosed in ""inverted commas"". There are rules for this [here](https://en.wikipedia.org/wiki/Comma-separated_values#Basic_rules).; * Avoid including spaces when before/after the delimiter.; * Try to get the controls to align at the right, and fill the entire space at the bottom of the dialog. For example, for the combo boxes you'll need to set the max width to Double.MAX_VALUE and (assuming you're using a GridPane) some other grow/fill properties (I forget which).; * Rename 'Choose path' to 'Choose...' and 'Output File' to 'Output file' (for capitalization consistency), and add tooltip text to this row.; * Change 'Apply on' to 'Export type' or similar. Try adding 'Image' as an option, i.e. the root object, and perhaps also TMA cores. 'Image' should probably be the default.; * Add tooltip to the 'Output File' option (and rename to 'Output file' for consistency); * Fix the tooltip for 'Columns to exclude' (says 'include'); * Revise the javadocs for 'ProjectDialogs'; add for getSourceItems, and standardize for createImageChoicePane (i.e. use the `@param` tags). Not essential at this point, but after playing with it a bit I think there would be a way to improve the control even further: the choice of columns could be a CheckComboBox, which is populated *if* the user presses a *Populate* button. This needs to be an explicit choice, because it would require opening all the currently-selected images to figure out which column headings are available... and this may be slow. Perhaps not worth the effort for now, having this at all will be a major improvement!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/425#issuecomment-606125263
https://github.com/qupath/qupath/pull/425#issuecomment-606125263:516,Safety,Avoid,Avoid,516,"This looks good and very useful! Nice touches with auto-updating the image name based on the delimiter, and auto-disabling the column include/exclude as needed :). Some small things:; * Beware invalid characters in the fields... if the filename contains commas, the entire table becomes shifted if exporting as .csv. It appears to work properly (at least in MS Excel) if the name is enclosed in ""inverted commas"". There are rules for this [here](https://en.wikipedia.org/wiki/Comma-separated_values#Basic_rules).; * Avoid including spaces when before/after the delimiter.; * Try to get the controls to align at the right, and fill the entire space at the bottom of the dialog. For example, for the combo boxes you'll need to set the max width to Double.MAX_VALUE and (assuming you're using a GridPane) some other grow/fill properties (I forget which).; * Rename 'Choose path' to 'Choose...' and 'Output File' to 'Output file' (for capitalization consistency), and add tooltip text to this row.; * Change 'Apply on' to 'Export type' or similar. Try adding 'Image' as an option, i.e. the root object, and perhaps also TMA cores. 'Image' should probably be the default.; * Add tooltip to the 'Output File' option (and rename to 'Output file' for consistency); * Fix the tooltip for 'Columns to exclude' (says 'include'); * Revise the javadocs for 'ProjectDialogs'; add for getSourceItems, and standardize for createImageChoicePane (i.e. use the `@param` tags). Not essential at this point, but after playing with it a bit I think there would be a way to improve the control even further: the choice of columns could be a CheckComboBox, which is populated *if* the user presses a *Populate* button. This needs to be an explicit choice, because it would require opening all the currently-selected images to figure out which column headings are available... and this may be slow. Perhaps not worth the effort for now, having this at all will be a major improvement!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/425#issuecomment-606125263
https://github.com/qupath/qupath/issues/426#issuecomment-606410721:144,Availability,error,error,144,"To troubleshoot installation issues, including recent Mac issues, see https://qupath.readthedocs.io/en/latest/docs/intro/installation.html. The error you get when building from source is because you need jpackage, as described at https://qupath.readthedocs.io/en/latest/docs/reference/building.html. (Note this won't be necessary for the next release; the build script will change and require JDK 14, which includes jpackage already.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/426#issuecomment-606410721
https://github.com/qupath/qupath/issues/426#issuecomment-606410721:16,Deployability,install,installation,16,"To troubleshoot installation issues, including recent Mac issues, see https://qupath.readthedocs.io/en/latest/docs/intro/installation.html. The error you get when building from source is because you need jpackage, as described at https://qupath.readthedocs.io/en/latest/docs/reference/building.html. (Note this won't be necessary for the next release; the build script will change and require JDK 14, which includes jpackage already.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/426#issuecomment-606410721
https://github.com/qupath/qupath/issues/426#issuecomment-606410721:121,Deployability,install,installation,121,"To troubleshoot installation issues, including recent Mac issues, see https://qupath.readthedocs.io/en/latest/docs/intro/installation.html. The error you get when building from source is because you need jpackage, as described at https://qupath.readthedocs.io/en/latest/docs/reference/building.html. (Note this won't be necessary for the next release; the build script will change and require JDK 14, which includes jpackage already.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/426#issuecomment-606410721
https://github.com/qupath/qupath/issues/426#issuecomment-606410721:343,Deployability,release,release,343,"To troubleshoot installation issues, including recent Mac issues, see https://qupath.readthedocs.io/en/latest/docs/intro/installation.html. The error you get when building from source is because you need jpackage, as described at https://qupath.readthedocs.io/en/latest/docs/reference/building.html. (Note this won't be necessary for the next release; the build script will change and require JDK 14, which includes jpackage already.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/426#issuecomment-606410721
https://github.com/qupath/qupath/issues/427#issuecomment-606731627:661,Availability,avail,available,661,"As I mentioned at both https://github.com/qupath/qupath/issues/363#issuecomment-606369334 and https://github.com/qupath/qupath/issues/426 the *next* release of QuPath will use JDK 14; v0.2.0-m9 does not (because it was not released at the time, and the version of Gradle used with it is not compatible with JDK 14). If you want v0.2.0-m9, you should follow the build instructions I posted under the above links using JDK 13 to build, but pointing to jpackage within JDK 14. It's cumbersome, but necessary because of the incompatibilities and the fact JDK 14 is extremely new. Otherwise you can build from the dev branch using JDK 14 or wait until v0.2.0-m10 is available. I will update the build documentation at that time. > **Please avoid creating issues for anything other than bug reports, and do not create multiple issues for the same thing. Use [the forum](http://forum.image.sc/tags/qupath/) for questions instead, as requested in the documentation and on the 'Issues' page itself.**; > ; > <img width=""696"" alt=""Issues"" src=""https://user-images.githubusercontent.com/4690904/71262757-5afea500-2338-11ea-8c14-91f68652c70b.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-606731627
https://github.com/qupath/qupath/issues/427#issuecomment-606731627:149,Deployability,release,release,149,"As I mentioned at both https://github.com/qupath/qupath/issues/363#issuecomment-606369334 and https://github.com/qupath/qupath/issues/426 the *next* release of QuPath will use JDK 14; v0.2.0-m9 does not (because it was not released at the time, and the version of Gradle used with it is not compatible with JDK 14). If you want v0.2.0-m9, you should follow the build instructions I posted under the above links using JDK 13 to build, but pointing to jpackage within JDK 14. It's cumbersome, but necessary because of the incompatibilities and the fact JDK 14 is extremely new. Otherwise you can build from the dev branch using JDK 14 or wait until v0.2.0-m10 is available. I will update the build documentation at that time. > **Please avoid creating issues for anything other than bug reports, and do not create multiple issues for the same thing. Use [the forum](http://forum.image.sc/tags/qupath/) for questions instead, as requested in the documentation and on the 'Issues' page itself.**; > ; > <img width=""696"" alt=""Issues"" src=""https://user-images.githubusercontent.com/4690904/71262757-5afea500-2338-11ea-8c14-91f68652c70b.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-606731627
https://github.com/qupath/qupath/issues/427#issuecomment-606731627:223,Deployability,release,released,223,"As I mentioned at both https://github.com/qupath/qupath/issues/363#issuecomment-606369334 and https://github.com/qupath/qupath/issues/426 the *next* release of QuPath will use JDK 14; v0.2.0-m9 does not (because it was not released at the time, and the version of Gradle used with it is not compatible with JDK 14). If you want v0.2.0-m9, you should follow the build instructions I posted under the above links using JDK 13 to build, but pointing to jpackage within JDK 14. It's cumbersome, but necessary because of the incompatibilities and the fact JDK 14 is extremely new. Otherwise you can build from the dev branch using JDK 14 or wait until v0.2.0-m10 is available. I will update the build documentation at that time. > **Please avoid creating issues for anything other than bug reports, and do not create multiple issues for the same thing. Use [the forum](http://forum.image.sc/tags/qupath/) for questions instead, as requested in the documentation and on the 'Issues' page itself.**; > ; > <img width=""696"" alt=""Issues"" src=""https://user-images.githubusercontent.com/4690904/71262757-5afea500-2338-11ea-8c14-91f68652c70b.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-606731627
https://github.com/qupath/qupath/issues/427#issuecomment-606731627:679,Deployability,update,update,679,"As I mentioned at both https://github.com/qupath/qupath/issues/363#issuecomment-606369334 and https://github.com/qupath/qupath/issues/426 the *next* release of QuPath will use JDK 14; v0.2.0-m9 does not (because it was not released at the time, and the version of Gradle used with it is not compatible with JDK 14). If you want v0.2.0-m9, you should follow the build instructions I posted under the above links using JDK 13 to build, but pointing to jpackage within JDK 14. It's cumbersome, but necessary because of the incompatibilities and the fact JDK 14 is extremely new. Otherwise you can build from the dev branch using JDK 14 or wait until v0.2.0-m10 is available. I will update the build documentation at that time. > **Please avoid creating issues for anything other than bug reports, and do not create multiple issues for the same thing. Use [the forum](http://forum.image.sc/tags/qupath/) for questions instead, as requested in the documentation and on the 'Issues' page itself.**; > ; > <img width=""696"" alt=""Issues"" src=""https://user-images.githubusercontent.com/4690904/71262757-5afea500-2338-11ea-8c14-91f68652c70b.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-606731627
https://github.com/qupath/qupath/issues/427#issuecomment-606731627:735,Safety,avoid,avoid,735,"As I mentioned at both https://github.com/qupath/qupath/issues/363#issuecomment-606369334 and https://github.com/qupath/qupath/issues/426 the *next* release of QuPath will use JDK 14; v0.2.0-m9 does not (because it was not released at the time, and the version of Gradle used with it is not compatible with JDK 14). If you want v0.2.0-m9, you should follow the build instructions I posted under the above links using JDK 13 to build, but pointing to jpackage within JDK 14. It's cumbersome, but necessary because of the incompatibilities and the fact JDK 14 is extremely new. Otherwise you can build from the dev branch using JDK 14 or wait until v0.2.0-m10 is available. I will update the build documentation at that time. > **Please avoid creating issues for anything other than bug reports, and do not create multiple issues for the same thing. Use [the forum](http://forum.image.sc/tags/qupath/) for questions instead, as requested in the documentation and on the 'Issues' page itself.**; > ; > <img width=""696"" alt=""Issues"" src=""https://user-images.githubusercontent.com/4690904/71262757-5afea500-2338-11ea-8c14-91f68652c70b.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-606731627
https://github.com/qupath/qupath/issues/427#issuecomment-617995278:10,Deployability,release,release,10,Since the release of v0.2.0-m10 the master branch should work with OpenJDK 14 and I've updated the docs accordingly.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-617995278
https://github.com/qupath/qupath/issues/427#issuecomment-617995278:87,Deployability,update,updated,87,Since the release of v0.2.0-m10 the master branch should work with OpenJDK 14 and I've updated the docs accordingly.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-617995278
https://github.com/qupath/qupath/issues/429#issuecomment-607431796:160,Availability,error,error,160,"This is how it looks like one of the offending AreaROIs. Just a hypothesis, but zooming in one can spot tiny spurious subregions that might be the cause of the error. ![Screenshot 2020-04-01 at 20 53 08](https://user-images.githubusercontent.com/642252/78175265-dfde7c00-745a-11ea-98be-62f14f087079.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607431796
https://github.com/qupath/qupath/issues/429#issuecomment-607483340:213,Deployability,release,release,213,"Converting arbitrary shapes to Geometry objects has proven horribly difficult, although m9 should be better than any previous version. From your example I can see a way to improve the conversion a bit in the next release. New complex annotations should be Geometry objects immediately, avoiding the need for the conversion later. In the meantime, this script works for me to create a slightly simplified shape that can be converted to a valid Geometry for your example:; ```groovy; def file = new File('/path/to/broken_area_roi.ser'). def obj; file.withObjectInputStream {; obj = it.readObject(); }. obj = ROIs.createAreaROI(obj.getShape(), obj.getImagePlane()); roi = qupath.lib.roi.ShapeSimplifier.simplifyShape(obj, 0.5). println roi.getGeometry(); println roi.getGeometry().isValid(). println obj.getArea(); println roi.getGeometry().getArea(); ```; The area has been changed slightly, but not by much. Perhaps this, or the *Objects &rarr; Annotations... &rarr; Simplify shape* command might help resolve the conversion for you?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607483340
https://github.com/qupath/qupath/issues/429#issuecomment-607483340:286,Safety,avoid,avoiding,286,"Converting arbitrary shapes to Geometry objects has proven horribly difficult, although m9 should be better than any previous version. From your example I can see a way to improve the conversion a bit in the next release. New complex annotations should be Geometry objects immediately, avoiding the need for the conversion later. In the meantime, this script works for me to create a slightly simplified shape that can be converted to a valid Geometry for your example:; ```groovy; def file = new File('/path/to/broken_area_roi.ser'). def obj; file.withObjectInputStream {; obj = it.readObject(); }. obj = ROIs.createAreaROI(obj.getShape(), obj.getImagePlane()); roi = qupath.lib.roi.ShapeSimplifier.simplifyShape(obj, 0.5). println roi.getGeometry(); println roi.getGeometry().isValid(). println obj.getArea(); println roi.getGeometry().getArea(); ```; The area has been changed slightly, but not by much. Perhaps this, or the *Objects &rarr; Annotations... &rarr; Simplify shape* command might help resolve the conversion for you?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607483340
https://github.com/qupath/qupath/issues/429#issuecomment-607483340:393,Usability,simpl,simplified,393,"Converting arbitrary shapes to Geometry objects has proven horribly difficult, although m9 should be better than any previous version. From your example I can see a way to improve the conversion a bit in the next release. New complex annotations should be Geometry objects immediately, avoiding the need for the conversion later. In the meantime, this script works for me to create a slightly simplified shape that can be converted to a valid Geometry for your example:; ```groovy; def file = new File('/path/to/broken_area_roi.ser'). def obj; file.withObjectInputStream {; obj = it.readObject(); }. obj = ROIs.createAreaROI(obj.getShape(), obj.getImagePlane()); roi = qupath.lib.roi.ShapeSimplifier.simplifyShape(obj, 0.5). println roi.getGeometry(); println roi.getGeometry().isValid(). println obj.getArea(); println roi.getGeometry().getArea(); ```; The area has been changed slightly, but not by much. Perhaps this, or the *Objects &rarr; Annotations... &rarr; Simplify shape* command might help resolve the conversion for you?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607483340
https://github.com/qupath/qupath/issues/429#issuecomment-607483340:700,Usability,simpl,simplifyShape,700,"Converting arbitrary shapes to Geometry objects has proven horribly difficult, although m9 should be better than any previous version. From your example I can see a way to improve the conversion a bit in the next release. New complex annotations should be Geometry objects immediately, avoiding the need for the conversion later. In the meantime, this script works for me to create a slightly simplified shape that can be converted to a valid Geometry for your example:; ```groovy; def file = new File('/path/to/broken_area_roi.ser'). def obj; file.withObjectInputStream {; obj = it.readObject(); }. obj = ROIs.createAreaROI(obj.getShape(), obj.getImagePlane()); roi = qupath.lib.roi.ShapeSimplifier.simplifyShape(obj, 0.5). println roi.getGeometry(); println roi.getGeometry().isValid(). println obj.getArea(); println roi.getGeometry().getArea(); ```; The area has been changed slightly, but not by much. Perhaps this, or the *Objects &rarr; Annotations... &rarr; Simplify shape* command might help resolve the conversion for you?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607483340
https://github.com/qupath/qupath/issues/429#issuecomment-607483340:966,Usability,Simpl,Simplify,966,"Converting arbitrary shapes to Geometry objects has proven horribly difficult, although m9 should be better than any previous version. From your example I can see a way to improve the conversion a bit in the next release. New complex annotations should be Geometry objects immediately, avoiding the need for the conversion later. In the meantime, this script works for me to create a slightly simplified shape that can be converted to a valid Geometry for your example:; ```groovy; def file = new File('/path/to/broken_area_roi.ser'). def obj; file.withObjectInputStream {; obj = it.readObject(); }. obj = ROIs.createAreaROI(obj.getShape(), obj.getImagePlane()); roi = qupath.lib.roi.ShapeSimplifier.simplifyShape(obj, 0.5). println roi.getGeometry(); println roi.getGeometry().isValid(). println obj.getArea(); println roi.getGeometry().getArea(); ```; The area has been changed slightly, but not by much. Perhaps this, or the *Objects &rarr; Annotations... &rarr; Simplify shape* command might help resolve the conversion for you?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607483340
https://github.com/qupath/qupath/issues/429#issuecomment-607685002:129,Deployability,release,released,129,"You can try building the v0.2.0-m10 snapshot from the `dev` branch to see if the change helps, or alternatively wait until it is released (should be in the next week or so). To build, you'll need to use JDK 14 (there's no longer any need to add jpackage separately as described [here](https://qupath.readthedocs.io/en/latest/docs/reference/building.html)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607685002
https://github.com/qupath/qupath/issues/429#issuecomment-610165162:134,Testability,test,test,134,"We do not have any more problems of this type, but still have other conversion problems. I will open new issues for these and provide test cases. Thanks a lot @petebankhead",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-610165162
https://github.com/qupath/qupath/issues/433#issuecomment-613380468:229,Testability,test,test,229,"I created a new script with _Automate/Project Scripts/New Script_ (and _Automate/Shared Scripts/New Script_) but it seems to add '.groovy' each time appropriately. Did you try with the latest changes (QuPath/dev, which I used to test this)?. Tested on: Windows 10/MacOS",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/433#issuecomment-613380468
https://github.com/qupath/qupath/issues/433#issuecomment-613380468:242,Testability,Test,Tested,242,"I created a new script with _Automate/Project Scripts/New Script_ (and _Automate/Shared Scripts/New Script_) but it seems to add '.groovy' each time appropriately. Did you try with the latest changes (QuPath/dev, which I used to test this)?. Tested on: Windows 10/MacOS",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/433#issuecomment-613380468
https://github.com/qupath/qupath/issues/433#issuecomment-613481580:90,Deployability,release,release,90,"Hmm, I am no longer seeing this behavior (no changes that I am aware of). It was the full release of M9. I am actually using the same project now that I was before, with untyped files still in the project Scripts folder when I was testing it before. I will reopen if I can reproduce the exact steps, since it seems to be more involved than simply happening every time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/433#issuecomment-613481580
https://github.com/qupath/qupath/issues/433#issuecomment-613481580:231,Testability,test,testing,231,"Hmm, I am no longer seeing this behavior (no changes that I am aware of). It was the full release of M9. I am actually using the same project now that I was before, with untyped files still in the project Scripts folder when I was testing it before. I will reopen if I can reproduce the exact steps, since it seems to be more involved than simply happening every time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/433#issuecomment-613481580
https://github.com/qupath/qupath/issues/433#issuecomment-613481580:340,Usability,simpl,simply,340,"Hmm, I am no longer seeing this behavior (no changes that I am aware of). It was the full release of M9. I am actually using the same project now that I was before, with untyped files still in the project Scripts folder when I was testing it before. I will reopen if I can reproduce the exact steps, since it seems to be more involved than simply happening every time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/433#issuecomment-613481580
https://github.com/qupath/qupath/issues/434#issuecomment-610230010:405,Safety,avoid,avoid,405,"Thanks for the clear description & example - could you have a look at the pull request to see if that resolves the problem? If you're able to test it with all your thousands of ROIs that would be great, in case any new badness has been introduced. My hope is that this will only be important for updating 'old' ROIs, since anything new created in v0.2.0 from now on will use JTS from an earlier stage and avoid the Shape &rarr; Geometry pain. (Side note is interesting, I'll check it out!)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/434#issuecomment-610230010
https://github.com/qupath/qupath/issues/434#issuecomment-610230010:142,Testability,test,test,142,"Thanks for the clear description & example - could you have a look at the pull request to see if that resolves the problem? If you're able to test it with all your thousands of ROIs that would be great, in case any new badness has been introduced. My hope is that this will only be important for updating 'old' ROIs, since anything new created in v0.2.0 from now on will use JTS from an earlier stage and avoid the Shape &rarr; Geometry pain. (Side note is interesting, I'll check it out!)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/434#issuecomment-610230010
https://github.com/qupath/qupath/issues/434#issuecomment-610230010:15,Usability,clear,clear,15,"Thanks for the clear description & example - could you have a look at the pull request to see if that resolves the problem? If you're able to test it with all your thousands of ROIs that would be great, in case any new badness has been introduced. My hope is that this will only be important for updating 'old' ROIs, since anything new created in v0.2.0 from now on will use JTS from an earlier stage and avoid the Shape &rarr; Geometry pain. (Side note is interesting, I'll check it out!)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/434#issuecomment-610230010
https://github.com/qupath/qupath/issues/434#issuecomment-610277278:31,Availability,failure,failure,31,"It seems to work, not a single failure reported. Some stats:. ```; Converted 47303 regions.; 43 regions had ""warnings"" on conversion.; The warnings affected 64 ""problematic but small"" subregions.; Area changes stats (original_pixel_sq - fixed_pixel_sq):; mean 0.903476; std 1.829168; min -0.032314; 25% -0.003454; 50% -0.000293; 75% 0.732723; max 7.054605; ```; ![area_changes](https://user-images.githubusercontent.com/642252/78652097-8f837600-78c1-11ea-9345-c8e58fcf69b8.png). We are missing some visual inspection that I hope will happen soon, but I would tentatively declare this case closed. Thank you so much for your prompt help, this is the classiest support I have seen in quite a long time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/434#issuecomment-610277278
https://github.com/qupath/qupath/issues/434#issuecomment-610278806:98,Testability,test,tests,98,"By the way, feel free to use the serialized regions I uploaded if you want to add some regression tests.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/434#issuecomment-610278806
https://github.com/qupath/qupath/issues/434#issuecomment-610283142:70,Testability,test,tests,70,"Excellent, thanks - I wanted to ask about using the regions in future tests.; Also the classiest bug reporting & follow-up I've seen in a long time :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/434#issuecomment-610283142
https://github.com/qupath/qupath/issues/436#issuecomment-612953950:21,Availability,error,error,21,"I have seen the same error before, but not since updating to JDK 14 (which will be a minimum requirement for v0.2.0, since it greatly simplifies building by including jpackage). To avoid the error with JDK 11-13, I think you'd need to change the build script to include more modules with jlink.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612953950
https://github.com/qupath/qupath/issues/436#issuecomment-612953950:191,Availability,error,error,191,"I have seen the same error before, but not since updating to JDK 14 (which will be a minimum requirement for v0.2.0, since it greatly simplifies building by including jpackage). To avoid the error with JDK 11-13, I think you'd need to change the build script to include more modules with jlink.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612953950
https://github.com/qupath/qupath/issues/436#issuecomment-612953950:181,Safety,avoid,avoid,181,"I have seen the same error before, but not since updating to JDK 14 (which will be a minimum requirement for v0.2.0, since it greatly simplifies building by including jpackage). To avoid the error with JDK 11-13, I think you'd need to change the build script to include more modules with jlink.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612953950
https://github.com/qupath/qupath/issues/436#issuecomment-612953950:134,Usability,simpl,simplifies,134,"I have seen the same error before, but not since updating to JDK 14 (which will be a minimum requirement for v0.2.0, since it greatly simplifies building by including jpackage). To avoid the error with JDK 11-13, I think you'd need to change the build script to include more modules with jlink.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612953950
https://github.com/qupath/qupath/issues/436#issuecomment-612963510:38,Deployability,install,installed,38,"As a workaround, I launch QuPath with installed JAVA on my PC(e.g. OpenJDK or Amazon Corretto). Do you have a plan to fix this issue in QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612963510
https://github.com/qupath/qupath/issues/436#issuecomment-612965106:136,Availability,error,errors,136,Not for earlier releases; https://github.com/qupath/qupath/commit/857d7670007e31631a97e7a854aba098ebc70d34 + JDK 14 fixes any handshake errors I have seen and will be in future releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612965106
https://github.com/qupath/qupath/issues/436#issuecomment-612965106:16,Deployability,release,releases,16,Not for earlier releases; https://github.com/qupath/qupath/commit/857d7670007e31631a97e7a854aba098ebc70d34 + JDK 14 fixes any handshake errors I have seen and will be in future releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612965106
https://github.com/qupath/qupath/issues/436#issuecomment-612965106:177,Deployability,release,releases,177,Not for earlier releases; https://github.com/qupath/qupath/commit/857d7670007e31631a97e7a854aba098ebc70d34 + JDK 14 fixes any handshake errors I have seen and will be in future releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612965106
https://github.com/qupath/qupath/issues/436#issuecomment-613082361:651,Modifiability,plugin,plugins,651,"xref: https://github.com/GoogleCloudPlatform/qupath-chcapi-extension/issues/33. Thanks for looking into this @arvgord. I can confirm that using a full-blown runtime gets me past the handshake - I quickly tried with a self-compiled qupath version from master, the precompiled cloud extension v2.0.5 and a complete adoptopenjdk 14 runtime - all this trouble because it actually was for me the easiest thing to quickly try. I have some other problems now, but that might just be because of compiling everything from source. I will check in the next few days and report when needed. I guess it would be wise to recommend using a complete runtime whenever plugins come into the picture, or even build alternative qupath packages with ""fat runtimes""?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-613082361
https://github.com/qupath/qupath/issues/436#issuecomment-613250191:79,Deployability,update,updated,79,"Yes, that may be necessary. Until now it has not been an issue, but I recently updated `build.gradle` on the dev branch to optionally include all modules to make this easier:; ```; ./gradlew clean build test createPackage -PjreModules=all; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-613250191
https://github.com/qupath/qupath/issues/436#issuecomment-613250191:203,Testability,test,test,203,"Yes, that may be necessary. Until now it has not been an issue, but I recently updated `build.gradle` on the dev branch to optionally include all modules to make this easier:; ```; ./gradlew clean build test createPackage -PjreModules=all; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-613250191
https://github.com/qupath/qupath/issues/436#issuecomment-617733292:18,Availability,avail,available,18,"v0.2.0-m10 is now available. Please let me know if is has the same problem, or if the issue can be closed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-617733292
https://github.com/qupath/qupath/issues/436#issuecomment-618204880:36,Energy Efficiency,adapt,adapted,36,"I'm waiting for the extension to be adapted to the new APIs (see https://github.com/GoogleCloudPlatform/qupath-chcapi-extension/issues/35). I will close once I confirm that works. Otherwise, I think allowing to ship all JRE modules is already a great step solving these issues, and just wonder if it would be worth releasing also these ""fat versions"".",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-618204880
https://github.com/qupath/qupath/issues/436#issuecomment-618204880:36,Modifiability,adapt,adapted,36,"I'm waiting for the extension to be adapted to the new APIs (see https://github.com/GoogleCloudPlatform/qupath-chcapi-extension/issues/35). I will close once I confirm that works. Otherwise, I think allowing to ship all JRE modules is already a great step solving these issues, and just wonder if it would be worth releasing also these ""fat versions"".",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-618204880
https://github.com/qupath/qupath/issues/437#issuecomment-1410779242:119,Availability,error,error,119,"I have an issue with certain ome.tiff images not opening in QuPath. In the command line console, Im receiving the Java error: NegativeArraySizeException and when I try to edit in the command line, it will not allow me to and I dont know how to access that. If you have any help or advice to get these images open, please let me know",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/437#issuecomment-1410779242
https://github.com/qupath/qupath/issues/437#issuecomment-1410779242:244,Security,access,access,244,"I have an issue with certain ome.tiff images not opening in QuPath. In the command line console, Im receiving the Java error: NegativeArraySizeException and when I try to edit in the command line, it will not allow me to and I dont know how to access that. If you have any help or advice to get these images open, please let me know",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/437#issuecomment-1410779242
https://github.com/qupath/qupath/issues/440#issuecomment-614145319:1054,Deployability,release,release,1054,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319
https://github.com/qupath/qupath/issues/440#issuecomment-614145319:159,Integrability,depend,depends,159,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319
https://github.com/qupath/qupath/issues/440#issuecomment-614145319:102,Performance,cache,caches,102,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319
https://github.com/qupath/qupath/issues/440#issuecomment-614145319:119,Performance,perform,performance,119,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319
https://github.com/qupath/qupath/issues/440#issuecomment-614145319:573,Performance,latency,latency,573,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319
https://github.com/qupath/qupath/issues/440#issuecomment-614145319:690,Performance,latency,latency,690,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319
https://github.com/qupath/qupath/issues/440#issuecomment-614145319:839,Performance,cache,cached,839,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319
https://github.com/qupath/qupath/issues/440#issuecomment-614145319:858,Performance,perform,performance,858,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319
https://github.com/qupath/qupath/issues/440#issuecomment-614145319:244,Safety,detect,detections,244,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319
https://github.com/qupath/qupath/issues/440#issuecomment-614145319:422,Safety,detect,detections,422,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319
https://github.com/qupath/qupath/issues/440#issuecomment-614145319:756,Safety,detect,detections,756,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319
https://github.com/qupath/qupath/issues/440#issuecomment-614153366:218,Deployability,toggle,toggle,218,"Hi Pete,; thanks for your reply!. The latency is about 3 seconds, maybe this is to be expected. :-). If I understand you correctly then the cached tiles don't have to be regenerated on each pan action but will be if I toggle annotations, detections, etc., right?. I've attached a gif animation of the behavior. ![latency-demo](https://user-images.githubusercontent.com/4951046/79364460-ad984880-7f49-11ea-8d93-1c529efe4d56.gif)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614153366
https://github.com/qupath/qupath/issues/440#issuecomment-614153366:38,Performance,latency,latency,38,"Hi Pete,; thanks for your reply!. The latency is about 3 seconds, maybe this is to be expected. :-). If I understand you correctly then the cached tiles don't have to be regenerated on each pan action but will be if I toggle annotations, detections, etc., right?. I've attached a gif animation of the behavior. ![latency-demo](https://user-images.githubusercontent.com/4951046/79364460-ad984880-7f49-11ea-8d93-1c529efe4d56.gif)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614153366
https://github.com/qupath/qupath/issues/440#issuecomment-614153366:140,Performance,cache,cached,140,"Hi Pete,; thanks for your reply!. The latency is about 3 seconds, maybe this is to be expected. :-). If I understand you correctly then the cached tiles don't have to be regenerated on each pan action but will be if I toggle annotations, detections, etc., right?. I've attached a gif animation of the behavior. ![latency-demo](https://user-images.githubusercontent.com/4951046/79364460-ad984880-7f49-11ea-8d93-1c529efe4d56.gif)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614153366
https://github.com/qupath/qupath/issues/440#issuecomment-614153366:313,Performance,latency,latency-demo,313,"Hi Pete,; thanks for your reply!. The latency is about 3 seconds, maybe this is to be expected. :-). If I understand you correctly then the cached tiles don't have to be regenerated on each pan action but will be if I toggle annotations, detections, etc., right?. I've attached a gif animation of the behavior. ![latency-demo](https://user-images.githubusercontent.com/4951046/79364460-ad984880-7f49-11ea-8d93-1c529efe4d56.gif)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614153366
https://github.com/qupath/qupath/issues/440#issuecomment-614153366:238,Safety,detect,detections,238,"Hi Pete,; thanks for your reply!. The latency is about 3 seconds, maybe this is to be expected. :-). If I understand you correctly then the cached tiles don't have to be regenerated on each pan action but will be if I toggle annotations, detections, etc., right?. I've attached a gif animation of the behavior. ![latency-demo](https://user-images.githubusercontent.com/4951046/79364460-ad984880-7f49-11ea-8d93-1c529efe4d56.gif)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614153366
https://github.com/qupath/qupath/issues/440#issuecomment-614158136:353,Energy Efficiency,power,powerful,353,"Yes, the cached tiles will be generated only when needed - but at different magnifications (so different tiles may be required based upon the field of view and zoom level). But assuming that when the circle appears in the GIF that means your mouse is pressed, I haven't seen this behavior before and I haven't been able to replicate it on my (much less powerful) computer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614158136
https://github.com/qupath/qupath/issues/440#issuecomment-614158136:9,Performance,cache,cached,9,"Yes, the cached tiles will be generated only when needed - but at different magnifications (so different tiles may be required based upon the field of view and zoom level). But assuming that when the circle appears in the GIF that means your mouse is pressed, I haven't seen this behavior before and I haven't been able to replicate it on my (much less powerful) computer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614158136
https://github.com/qupath/qupath/issues/440#issuecomment-614159617:421,Availability,avail,available,421,"If you can provide more information about when it does/doesn't happen that would be helpful. Also if you have seen it across different versions of the software and different methods of generating detections (e.g. using the built-in cell detection instead). And also if it persists after restarting QuPath. Since you mention pixel classification, I wonder if it is still active in the background. (When v0.2.0-m10 becomes available you will be able to use VisualVM to profile it and see what might be causing slowdowns... but it doesn't work easily with v0.2.0-m9)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614159617
https://github.com/qupath/qupath/issues/440#issuecomment-614159617:196,Safety,detect,detections,196,"If you can provide more information about when it does/doesn't happen that would be helpful. Also if you have seen it across different versions of the software and different methods of generating detections (e.g. using the built-in cell detection instead). And also if it persists after restarting QuPath. Since you mention pixel classification, I wonder if it is still active in the background. (When v0.2.0-m10 becomes available you will be able to use VisualVM to profile it and see what might be causing slowdowns... but it doesn't work easily with v0.2.0-m9)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614159617
https://github.com/qupath/qupath/issues/440#issuecomment-614159617:237,Safety,detect,detection,237,"If you can provide more information about when it does/doesn't happen that would be helpful. Also if you have seen it across different versions of the software and different methods of generating detections (e.g. using the built-in cell detection instead). And also if it persists after restarting QuPath. Since you mention pixel classification, I wonder if it is still active in the background. (When v0.2.0-m10 becomes available you will be able to use VisualVM to profile it and see what might be causing slowdowns... but it doesn't work easily with v0.2.0-m9)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614159617
https://github.com/qupath/qupath/issues/440#issuecomment-614175536:138,Testability,test,test,138,It seems to be related to extremly detailed ROIs such as those that can be generated from very messy pixel classifiers!. With the extreme test case below I managed to stall QuPath for about half a minute. So it's maybe just a case of me not cleaning up properly after autogenerating ROIs. :-); ![messy-ROIs](https://user-images.githubusercontent.com/4951046/79368383-93f9ff80-7f4f-11ea-9290-bceda372b2b4.png),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614175536
https://github.com/qupath/qupath/issues/440#issuecomment-615264945:216,Integrability,depend,depends,216,"After some more testing, I noted that there's something weird going on.; Yesterday, I was using a few ROIs of no particular complexity, put the Computer in standby, started to work on it just now and the latency now depends on zoom level! On 1% zoom, the latency (about 3 seconds) is there on *each* click-drag-operation although the whole slide just occupies a small part of the entire view. At 100% it is working fine. I just closed qupath and recreated the setup and now... the latency is gone at 1% zoom. Could this be a memory leak somewhere that only surfaces after a while? Very very puzzling...; Edit: The computer was running for probably 10 hours between creation and attempted manipulation of the ROIs, of course not counting standby time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-615264945
https://github.com/qupath/qupath/issues/440#issuecomment-615264945:204,Performance,latency,latency,204,"After some more testing, I noted that there's something weird going on.; Yesterday, I was using a few ROIs of no particular complexity, put the Computer in standby, started to work on it just now and the latency now depends on zoom level! On 1% zoom, the latency (about 3 seconds) is there on *each* click-drag-operation although the whole slide just occupies a small part of the entire view. At 100% it is working fine. I just closed qupath and recreated the setup and now... the latency is gone at 1% zoom. Could this be a memory leak somewhere that only surfaces after a while? Very very puzzling...; Edit: The computer was running for probably 10 hours between creation and attempted manipulation of the ROIs, of course not counting standby time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-615264945
https://github.com/qupath/qupath/issues/440#issuecomment-615264945:255,Performance,latency,latency,255,"After some more testing, I noted that there's something weird going on.; Yesterday, I was using a few ROIs of no particular complexity, put the Computer in standby, started to work on it just now and the latency now depends on zoom level! On 1% zoom, the latency (about 3 seconds) is there on *each* click-drag-operation although the whole slide just occupies a small part of the entire view. At 100% it is working fine. I just closed qupath and recreated the setup and now... the latency is gone at 1% zoom. Could this be a memory leak somewhere that only surfaces after a while? Very very puzzling...; Edit: The computer was running for probably 10 hours between creation and attempted manipulation of the ROIs, of course not counting standby time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-615264945
https://github.com/qupath/qupath/issues/440#issuecomment-615264945:481,Performance,latency,latency,481,"After some more testing, I noted that there's something weird going on.; Yesterday, I was using a few ROIs of no particular complexity, put the Computer in standby, started to work on it just now and the latency now depends on zoom level! On 1% zoom, the latency (about 3 seconds) is there on *each* click-drag-operation although the whole slide just occupies a small part of the entire view. At 100% it is working fine. I just closed qupath and recreated the setup and now... the latency is gone at 1% zoom. Could this be a memory leak somewhere that only surfaces after a while? Very very puzzling...; Edit: The computer was running for probably 10 hours between creation and attempted manipulation of the ROIs, of course not counting standby time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-615264945
https://github.com/qupath/qupath/issues/440#issuecomment-615264945:16,Testability,test,testing,16,"After some more testing, I noted that there's something weird going on.; Yesterday, I was using a few ROIs of no particular complexity, put the Computer in standby, started to work on it just now and the latency now depends on zoom level! On 1% zoom, the latency (about 3 seconds) is there on *each* click-drag-operation although the whole slide just occupies a small part of the entire view. At 100% it is working fine. I just closed qupath and recreated the setup and now... the latency is gone at 1% zoom. Could this be a memory leak somewhere that only surfaces after a while? Very very puzzling...; Edit: The computer was running for probably 10 hours between creation and attempted manipulation of the ROIs, of course not counting standby time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-615264945
https://github.com/qupath/qupath/issues/440#issuecomment-615275446:32,Energy Efficiency,monitor,monitor,32,"You can use the built-in memory monitor to investigate this (and also to reclaim memory), although best would be to build m10-SNAPSHOT from the `dev` branch and see if the issue remains there. With m10 you'll also be able to use [VisualVM](https://visualvm.github.io) for profiling.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-615275446
https://github.com/qupath/qupath/issues/440#issuecomment-615278338:106,Energy Efficiency,monitor,monitor,106,"I set up an experiment to check for memory leaks - I'll leave qupath on with my ROIs and check the memory monitor (took a screenshot at the start), let's see what happens tomorrow. :-). I have built qupath dev branch versions before but only on Linux, not on Windows. I'll have at look at it. :-); Thanks for your support!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-615278338
https://github.com/qupath/qupath/issues/440#issuecomment-615316832:20,Testability,test,test,20,"Ok, I have a second test setup in parallel using m10-SNAPSHOT, VisualVM is running, sampling and I have taken a snapshot at the start. Anything else to help with debugging? ;-)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-615316832
https://github.com/qupath/qupath/issues/440#issuecomment-617732952:41,Availability,avail,available,41,"@skalteis any updates? v0.2.0-m10 is now available, and should be capable of working with VisualVM directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-617732952
https://github.com/qupath/qupath/issues/440#issuecomment-617732952:14,Deployability,update,updates,14,"@skalteis any updates? v0.2.0-m10 is now available, and should be capable of working with VisualVM directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-617732952
https://github.com/qupath/qupath/issues/454#issuecomment-618237750:147,Testability,log,log,147,"Proposed improvement at https://github.com/petebankhead/qupath/commit/601605c0339cec278499b570972175aef65ee028; This should automatically open the log window with more information and advice. Note that v0.2.0-m10 introduces a [BuildInfo](https://github.com/qupath/qupath/blob/master/qupath-gui-fx/src/main/java/qupath/lib/gui/BuildInfo.java) class to query QuPath's version, which may be used by developers of new extensions to help fail as elegantly as they wish.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/454#issuecomment-618237750
https://github.com/qupath/qupath/issues/455#issuecomment-618586510:344,Integrability,depend,dependencies,344,"This isn't a bug, `groovy-xml` has never been included with QuPath... you need to add it as an extension (which ought to be documented with scripts using it). I've been wondering if it ought to be included since I know a few people have written scripts that use it, but nothing within QuPath requires it and I don't really want to increase the dependencies unnecessarily. Java has a lot built in to work with XML, even if it might not be quite as Groovy...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/455#issuecomment-618586510
https://github.com/qupath/qupath/issues/455#issuecomment-618592948:166,Integrability,depend,dependencies,166,"Ah, ok - the instructions to add the extension were missing from the image.sc thread. No worries then, I can understand not wanting to inflate the number of external dependencies. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/455#issuecomment-618592948
https://github.com/qupath/qupath/issues/455#issuecomment-1934515325:416,Availability,error,error,416,"I'm trying to use a similar script for creating an annotation from an XML, but I cannot get XMLSlurper to work. If I understand this thread correctly, `groovy-xml` should be included in base QuPath. I do indeed see `groovy-xml-4.0.15.jar` in `/Applications/QuPath-0.5.0-arm64.app/Contents/app/` (I'm on an M2 Mac). I did try dropping that jar file on QuPath to add to extensions and met the same result. This is the error I get:. ```; ERROR: It looks like you've tried to import a class 'XmlSlurper' that couldn't be found. ERROR: startup failed:; QuPathScript: 7: unable to resolve class XmlSlurper; @ line 6, column 12.; def list = new XmlSlurper().parseText(file.getText()); ^; ```. Here's the (minimal) code that produces this. Of course, the error occurs on startup, so all that matters here is the import list, I believe.; ```; import qupath.lib.scripting.QP; import qupath.fx.dialogs.Dialogs; import qupath.fx.dialogs.FileChoosers. def file = FileChoosers.promptForFile(""Choose file""); def list = new XmlSlurper().parseText(file.getText()); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/455#issuecomment-1934515325
https://github.com/qupath/qupath/issues/455#issuecomment-1934515325:435,Availability,ERROR,ERROR,435,"I'm trying to use a similar script for creating an annotation from an XML, but I cannot get XMLSlurper to work. If I understand this thread correctly, `groovy-xml` should be included in base QuPath. I do indeed see `groovy-xml-4.0.15.jar` in `/Applications/QuPath-0.5.0-arm64.app/Contents/app/` (I'm on an M2 Mac). I did try dropping that jar file on QuPath to add to extensions and met the same result. This is the error I get:. ```; ERROR: It looks like you've tried to import a class 'XmlSlurper' that couldn't be found. ERROR: startup failed:; QuPathScript: 7: unable to resolve class XmlSlurper; @ line 6, column 12.; def list = new XmlSlurper().parseText(file.getText()); ^; ```. Here's the (minimal) code that produces this. Of course, the error occurs on startup, so all that matters here is the import list, I believe.; ```; import qupath.lib.scripting.QP; import qupath.fx.dialogs.Dialogs; import qupath.fx.dialogs.FileChoosers. def file = FileChoosers.promptForFile(""Choose file""); def list = new XmlSlurper().parseText(file.getText()); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/455#issuecomment-1934515325
https://github.com/qupath/qupath/issues/455#issuecomment-1934515325:524,Availability,ERROR,ERROR,524,"I'm trying to use a similar script for creating an annotation from an XML, but I cannot get XMLSlurper to work. If I understand this thread correctly, `groovy-xml` should be included in base QuPath. I do indeed see `groovy-xml-4.0.15.jar` in `/Applications/QuPath-0.5.0-arm64.app/Contents/app/` (I'm on an M2 Mac). I did try dropping that jar file on QuPath to add to extensions and met the same result. This is the error I get:. ```; ERROR: It looks like you've tried to import a class 'XmlSlurper' that couldn't be found. ERROR: startup failed:; QuPathScript: 7: unable to resolve class XmlSlurper; @ line 6, column 12.; def list = new XmlSlurper().parseText(file.getText()); ^; ```. Here's the (minimal) code that produces this. Of course, the error occurs on startup, so all that matters here is the import list, I believe.; ```; import qupath.lib.scripting.QP; import qupath.fx.dialogs.Dialogs; import qupath.fx.dialogs.FileChoosers. def file = FileChoosers.promptForFile(""Choose file""); def list = new XmlSlurper().parseText(file.getText()); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/455#issuecomment-1934515325
https://github.com/qupath/qupath/issues/455#issuecomment-1934515325:747,Availability,error,error,747,"I'm trying to use a similar script for creating an annotation from an XML, but I cannot get XMLSlurper to work. If I understand this thread correctly, `groovy-xml` should be included in base QuPath. I do indeed see `groovy-xml-4.0.15.jar` in `/Applications/QuPath-0.5.0-arm64.app/Contents/app/` (I'm on an M2 Mac). I did try dropping that jar file on QuPath to add to extensions and met the same result. This is the error I get:. ```; ERROR: It looks like you've tried to import a class 'XmlSlurper' that couldn't be found. ERROR: startup failed:; QuPathScript: 7: unable to resolve class XmlSlurper; @ line 6, column 12.; def list = new XmlSlurper().parseText(file.getText()); ^; ```. Here's the (minimal) code that produces this. Of course, the error occurs on startup, so all that matters here is the import list, I believe.; ```; import qupath.lib.scripting.QP; import qupath.fx.dialogs.Dialogs; import qupath.fx.dialogs.FileChoosers. def file = FileChoosers.promptForFile(""Choose file""); def list = new XmlSlurper().parseText(file.getText()); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/455#issuecomment-1934515325
https://github.com/qupath/qupath/issues/456#issuecomment-619373343:57,Safety,detect,detections,57,"I can't replicate this - on my Mac, if the simple tissue detections have been unlocked then I can edit them using the brush tool as expected. I am not sure what is the significance of shift/cmd here. Can the annotations be edited if these are not pressed?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619373343
https://github.com/qupath/qupath/issues/456#issuecomment-619373343:43,Usability,simpl,simple,43,"I can't replicate this - on my Mac, if the simple tissue detections have been unlocked then I can edit them using the brush tool as expected. I am not sure what is the significance of shift/cmd here. Can the annotations be edited if these are not pressed?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619373343
https://github.com/qupath/qupath/issues/456#issuecomment-619374419:15,Availability,error,errors,15,"Do you see any errors under *View &rarr; Show log*?; Does it happen with annotations that have been generated in m10, or only ones that have been generated earlier?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374419
https://github.com/qupath/qupath/issues/456#issuecomment-619374419:46,Testability,log,log,46,"Do you see any errors under *View &rarr; Show log*?; Does it happen with annotations that have been generated in m10, or only ones that have been generated earlier?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374419
https://github.com/qupath/qupath/issues/456#issuecomment-619374801:15,Availability,error,error,15,"It did show an error message when it first happened, but not since then. The log shows it this way:. ERROR: Error updating ROI; at org.locationtech.jts.geomgraph.EdgeEndStar.propagateSideLabels(EdgeEndStar.java:286); at org.locationtech.jts.geomgraph.EdgeEndStar.computeLabelling(EdgeEndStar.java:122); at org.locationtech.jts.operation.relate.RelateComputer.labelNodeEdges(RelateComputer.java:290); at org.locationtech.jts.operation.relate.RelateComputer.computeIM(RelateComputer.java:125); at org.locationtech.jts.operation.relate.RelateOp.getIntersectionMatrix(RelateOp.java:112); at org.locationtech.jts.operation.relate.RelateOp.relate(RelateOp.java:57); at org.locationtech.jts.geom.Geometry.relate(Geometry.java:1026); at org.locationtech.jts.geom.Geometry.intersects(Geometry.java:758); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:340); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:298); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:413); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.ev",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374801
https://github.com/qupath/qupath/issues/456#issuecomment-619374801:101,Availability,ERROR,ERROR,101,"It did show an error message when it first happened, but not since then. The log shows it this way:. ERROR: Error updating ROI; at org.locationtech.jts.geomgraph.EdgeEndStar.propagateSideLabels(EdgeEndStar.java:286); at org.locationtech.jts.geomgraph.EdgeEndStar.computeLabelling(EdgeEndStar.java:122); at org.locationtech.jts.operation.relate.RelateComputer.labelNodeEdges(RelateComputer.java:290); at org.locationtech.jts.operation.relate.RelateComputer.computeIM(RelateComputer.java:125); at org.locationtech.jts.operation.relate.RelateOp.getIntersectionMatrix(RelateOp.java:112); at org.locationtech.jts.operation.relate.RelateOp.relate(RelateOp.java:57); at org.locationtech.jts.geom.Geometry.relate(Geometry.java:1026); at org.locationtech.jts.geom.Geometry.intersects(Geometry.java:758); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:340); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:298); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:413); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.ev",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374801
https://github.com/qupath/qupath/issues/456#issuecomment-619374801:108,Availability,Error,Error,108,"It did show an error message when it first happened, but not since then. The log shows it this way:. ERROR: Error updating ROI; at org.locationtech.jts.geomgraph.EdgeEndStar.propagateSideLabels(EdgeEndStar.java:286); at org.locationtech.jts.geomgraph.EdgeEndStar.computeLabelling(EdgeEndStar.java:122); at org.locationtech.jts.operation.relate.RelateComputer.labelNodeEdges(RelateComputer.java:290); at org.locationtech.jts.operation.relate.RelateComputer.computeIM(RelateComputer.java:125); at org.locationtech.jts.operation.relate.RelateOp.getIntersectionMatrix(RelateOp.java:112); at org.locationtech.jts.operation.relate.RelateOp.relate(RelateOp.java:57); at org.locationtech.jts.geom.Geometry.relate(Geometry.java:1026); at org.locationtech.jts.geom.Geometry.intersects(Geometry.java:758); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:340); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:298); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:413); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.ev",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374801
https://github.com/qupath/qupath/issues/456#issuecomment-619374801:21,Integrability,message,message,21,"It did show an error message when it first happened, but not since then. The log shows it this way:. ERROR: Error updating ROI; at org.locationtech.jts.geomgraph.EdgeEndStar.propagateSideLabels(EdgeEndStar.java:286); at org.locationtech.jts.geomgraph.EdgeEndStar.computeLabelling(EdgeEndStar.java:122); at org.locationtech.jts.operation.relate.RelateComputer.labelNodeEdges(RelateComputer.java:290); at org.locationtech.jts.operation.relate.RelateComputer.computeIM(RelateComputer.java:125); at org.locationtech.jts.operation.relate.RelateOp.getIntersectionMatrix(RelateOp.java:112); at org.locationtech.jts.operation.relate.RelateOp.relate(RelateOp.java:57); at org.locationtech.jts.geom.Geometry.relate(Geometry.java:1026); at org.locationtech.jts.geom.Geometry.intersects(Geometry.java:758); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:340); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:298); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:413); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.ev",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374801
https://github.com/qupath/qupath/issues/456#issuecomment-619374801:3795,Security,secur,security,3795,.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3890); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.mac.MacView.notifyMouse(MacView.java:127). The annotations were all created using earlier versions (all of them were created in m9). Annotations that I create in m10 are editable.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374801
https://github.com/qupath/qupath/issues/456#issuecomment-619374801:3804,Security,Access,AccessController,3804,.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3890); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.mac.MacView.notifyMouse(MacView.java:127). The annotations were all created using earlier versions (all of them were created in m9). Annotations that I create in m10 are editable.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374801
https://github.com/qupath/qupath/issues/456#issuecomment-619374801:77,Testability,log,log,77,"It did show an error message when it first happened, but not since then. The log shows it this way:. ERROR: Error updating ROI; at org.locationtech.jts.geomgraph.EdgeEndStar.propagateSideLabels(EdgeEndStar.java:286); at org.locationtech.jts.geomgraph.EdgeEndStar.computeLabelling(EdgeEndStar.java:122); at org.locationtech.jts.operation.relate.RelateComputer.labelNodeEdges(RelateComputer.java:290); at org.locationtech.jts.operation.relate.RelateComputer.computeIM(RelateComputer.java:125); at org.locationtech.jts.operation.relate.RelateOp.getIntersectionMatrix(RelateOp.java:112); at org.locationtech.jts.operation.relate.RelateOp.relate(RelateOp.java:57); at org.locationtech.jts.geom.Geometry.relate(Geometry.java:1026); at org.locationtech.jts.geom.Geometry.intersects(Geometry.java:758); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:340); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:298); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:413); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.ev",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374801
https://github.com/qupath/qupath/issues/456#issuecomment-619377874:277,Availability,error,error,277,"Hmm, not sure but it might have been collateral damage from the other recent ROI/Geometry fixes, eg https://github.com/qupath/qupath/issues/429. I'll look out for it, but I haven't seen the problem myself and would probably need an example of a broken ROI/way to reproduce the error to be able to do anything about it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619377874
https://github.com/qupath/qupath/issues/456#issuecomment-632239499:61,Deployability,release,release,61,"I'll close amidst my issue-closing spree ahead of the v0.2.0 release because it traced back to an invalid geometry. Each new milestone in recent months has tried to reduce the occurrence of these issues, but since they are rather intermittent it is difficult to be sure when they have been fixed or not. Please reopen (or create a new issue) if you are provide a troublesome example that fails in the latest release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-632239499
https://github.com/qupath/qupath/issues/456#issuecomment-632239499:408,Deployability,release,release,408,"I'll close amidst my issue-closing spree ahead of the v0.2.0 release because it traced back to an invalid geometry. Each new milestone in recent months has tried to reduce the occurrence of these issues, but since they are rather intermittent it is difficult to be sure when they have been fixed or not. Please reopen (or create a new issue) if you are provide a troublesome example that fails in the latest release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-632239499
https://github.com/qupath/qupath/issues/456#issuecomment-632239499:165,Energy Efficiency,reduce,reduce,165,"I'll close amidst my issue-closing spree ahead of the v0.2.0 release because it traced back to an invalid geometry. Each new milestone in recent months has tried to reduce the occurrence of these issues, but since they are rather intermittent it is difficult to be sure when they have been fixed or not. Please reopen (or create a new issue) if you are provide a troublesome example that fails in the latest release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-632239499
https://github.com/qupath/qupath/issues/458#issuecomment-620339935:55,Availability,error,error,55,"Have you tried removing the Weka extension causing the error?. On Mon, Apr 27, 2020, 7:19 PM ajerusalmi <notifications@github.com> wrote:. > getting Failed to launch JVM error. Can open m8 without problems; > Thanks; >; > [image: image]; > <https://user-images.githubusercontent.com/62674450/80439704-1cc05600-88d5-11ea-95fe-ebbe661cc4ed.png>; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/458>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AFQSV6L7W4UXZTAEQFZDAWTROY4LXANCNFSM4MSNUQHQ>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620339935
https://github.com/qupath/qupath/issues/458#issuecomment-620339935:170,Availability,error,error,170,"Have you tried removing the Weka extension causing the error?. On Mon, Apr 27, 2020, 7:19 PM ajerusalmi <notifications@github.com> wrote:. > getting Failed to launch JVM error. Can open m8 without problems; > Thanks; >; > [image: image]; > <https://user-images.githubusercontent.com/62674450/80439704-1cc05600-88d5-11ea-95fe-ebbe661cc4ed.png>; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/458>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AFQSV6L7W4UXZTAEQFZDAWTROY4LXANCNFSM4MSNUQHQ>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620339935
https://github.com/qupath/qupath/issues/458#issuecomment-620375806:16,Availability,error,error,16,"@ajerusalmi the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:; * delete the Weka extension; to find its location, go to *Edit &rarr; Preferences* and check the 'QuPath user directory'; * use *Edit &rarr; Reset preferences* to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see https://github.com/qupath/qupath/issues/454",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620375806
https://github.com/qupath/qupath/issues/458#issuecomment-620375806:511,Availability,recover,recover,511,"@ajerusalmi the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:; * delete the Weka extension; to find its location, go to *Edit &rarr; Preferences* and check the 'QuPath user directory'; * use *Edit &rarr; Reset preferences* to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see https://github.com/qupath/qupath/issues/454",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620375806
https://github.com/qupath/qupath/issues/458#issuecomment-620375806:64,Deployability,install,installed,64,"@ajerusalmi the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:; * delete the Weka extension; to find its location, go to *Edit &rarr; Preferences* and check the 'QuPath user directory'; * use *Edit &rarr; Reset preferences* to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see https://github.com/qupath/qupath/issues/454",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620375806
https://github.com/qupath/qupath/issues/458#issuecomment-620375806:511,Safety,recover,recover,511,"@ajerusalmi the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:; * delete the Weka extension; to find its location, go to *Edit &rarr; Preferences* and check the 'QuPath user directory'; * use *Edit &rarr; Reset preferences* to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see https://github.com/qupath/qupath/issues/454",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620375806
https://github.com/qupath/qupath/issues/458#issuecomment-620601601:351,Availability,error,error,351,"Thank you. Alan. From: Pete <notifications@github.com>; Sent: Tuesday, April 28, 2020 12:38 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Alan Jerusalmi <ajerusalmi@bioaihealth.com>; Mention <mention@noreply.github.com>; Subject: Re: [qupath/qupath] Issue staring QuPath 0.2.0 m9 or m10 (#458). @ajerusalmi<https://github.com/ajerusalmi> the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:. * delete the Weka extension; to find its location, go to Edit → Preferences and check the 'QuPath user directory'; * use Edit → Reset preferences to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see #454<https://github.com/qupath/qupath/issues/454>. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/458#issuecomment-620375806>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AO6FMERJ4NRH6754WL7Q6ELROZMSBANCNFSM4MSNUQHQ>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620601601
https://github.com/qupath/qupath/issues/458#issuecomment-620601601:832,Availability,recover,recover,832,"Thank you. Alan. From: Pete <notifications@github.com>; Sent: Tuesday, April 28, 2020 12:38 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Alan Jerusalmi <ajerusalmi@bioaihealth.com>; Mention <mention@noreply.github.com>; Subject: Re: [qupath/qupath] Issue staring QuPath 0.2.0 m9 or m10 (#458). @ajerusalmi<https://github.com/ajerusalmi> the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:. * delete the Weka extension; to find its location, go to Edit → Preferences and check the 'QuPath user directory'; * use Edit → Reset preferences to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see #454<https://github.com/qupath/qupath/issues/454>. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/458#issuecomment-620375806>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AO6FMERJ4NRH6754WL7Q6ELROZMSBANCNFSM4MSNUQHQ>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620601601
https://github.com/qupath/qupath/issues/458#issuecomment-620601601:399,Deployability,install,installed,399,"Thank you. Alan. From: Pete <notifications@github.com>; Sent: Tuesday, April 28, 2020 12:38 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Alan Jerusalmi <ajerusalmi@bioaihealth.com>; Mention <mention@noreply.github.com>; Subject: Re: [qupath/qupath] Issue staring QuPath 0.2.0 m9 or m10 (#458). @ajerusalmi<https://github.com/ajerusalmi> the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:. * delete the Weka extension; to find its location, go to Edit → Preferences and check the 'QuPath user directory'; * use Edit → Reset preferences to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see #454<https://github.com/qupath/qupath/issues/454>. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/458#issuecomment-620375806>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AO6FMERJ4NRH6754WL7Q6ELROZMSBANCNFSM4MSNUQHQ>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620601601
https://github.com/qupath/qupath/issues/458#issuecomment-620601601:832,Safety,recover,recover,832,"Thank you. Alan. From: Pete <notifications@github.com>; Sent: Tuesday, April 28, 2020 12:38 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Alan Jerusalmi <ajerusalmi@bioaihealth.com>; Mention <mention@noreply.github.com>; Subject: Re: [qupath/qupath] Issue staring QuPath 0.2.0 m9 or m10 (#458). @ajerusalmi<https://github.com/ajerusalmi> the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:. * delete the Weka extension; to find its location, go to Edit → Preferences and check the 'QuPath user directory'; * use Edit → Reset preferences to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see #454<https://github.com/qupath/qupath/issues/454>. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/458#issuecomment-620375806>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AO6FMERJ4NRH6754WL7Q6ELROZMSBANCNFSM4MSNUQHQ>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620601601
https://github.com/qupath/qupath/issues/459#issuecomment-620641833:112,Availability,down,downloading,112,"Thanks @reynoldscem, I haven't seen this before. Is there an easy way for me to get an image that fails without downloading the whole dataset? I will only have a few minutes to look at it today and couldn't easily identify the offending image through the ANHIR link. Otherwise I can wrap the code where the error occurs in a try/catch block so that if it can't resolve the overlap it will at least fail less catastrophically... but I will be guessing the fix without being able to test it directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620641833
https://github.com/qupath/qupath/issues/459#issuecomment-620641833:307,Availability,error,error,307,"Thanks @reynoldscem, I haven't seen this before. Is there an easy way for me to get an image that fails without downloading the whole dataset? I will only have a few minutes to look at it today and couldn't easily identify the offending image through the ANHIR link. Otherwise I can wrap the code where the error occurs in a try/catch block so that if it can't resolve the overlap it will at least fail less catastrophically... but I will be guessing the fix without being able to test it directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620641833
https://github.com/qupath/qupath/issues/459#issuecomment-620641833:283,Integrability,wrap,wrap,283,"Thanks @reynoldscem, I haven't seen this before. Is there an easy way for me to get an image that fails without downloading the whole dataset? I will only have a few minutes to look at it today and couldn't easily identify the offending image through the ANHIR link. Otherwise I can wrap the code where the error occurs in a try/catch block so that if it can't resolve the overlap it will at least fail less catastrophically... but I will be guessing the fix without being able to test it directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620641833
https://github.com/qupath/qupath/issues/459#issuecomment-620641833:481,Testability,test,test,481,"Thanks @reynoldscem, I haven't seen this before. Is there an easy way for me to get an image that fails without downloading the whole dataset? I will only have a few minutes to look at it today and couldn't easily identify the offending image through the ANHIR link. Otherwise I can wrap the code where the error occurs in a try/catch block so that if it can't resolve the overlap it will at least fail less catastrophically... but I will be guessing the fix without being able to test it directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620641833
https://github.com/qupath/qupath/issues/459#issuecomment-620642254:90,Availability,error,error,90,"It appears that raising the min area fixes this issue, at least on the example image. The error goes away with `minArea` set to `5.0`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620642254
https://github.com/qupath/qupath/issues/459#issuecomment-620643098:187,Availability,down,download,187,"@petebankhead Hi, thanks for the prompt and clear response. Their website is a little unclear about obtaining the data. There is a link on their page to a directory listing where you can download individual images. You unfortunately have to sign in to their site I believe to access this. These files are listed [here](http://ptak.felk.cvut.cz/Medical/dataset_ANHIR/images/), and the password can be seen on [this page](https://anhir.grand-challenge.org/Download/) after signing in. Edit: It's worth noting that this happens with many images, and the example is just one of them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620643098
https://github.com/qupath/qupath/issues/459#issuecomment-620643098:454,Availability,Down,Download,454,"@petebankhead Hi, thanks for the prompt and clear response. Their website is a little unclear about obtaining the data. There is a link on their page to a directory listing where you can download individual images. You unfortunately have to sign in to their site I believe to access this. These files are listed [here](http://ptak.felk.cvut.cz/Medical/dataset_ANHIR/images/), and the password can be seen on [this page](https://anhir.grand-challenge.org/Download/) after signing in. Edit: It's worth noting that this happens with many images, and the example is just one of them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620643098
https://github.com/qupath/qupath/issues/459#issuecomment-620643098:276,Security,access,access,276,"@petebankhead Hi, thanks for the prompt and clear response. Their website is a little unclear about obtaining the data. There is a link on their page to a directory listing where you can download individual images. You unfortunately have to sign in to their site I believe to access this. These files are listed [here](http://ptak.felk.cvut.cz/Medical/dataset_ANHIR/images/), and the password can be seen on [this page](https://anhir.grand-challenge.org/Download/) after signing in. Edit: It's worth noting that this happens with many images, and the example is just one of them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620643098
https://github.com/qupath/qupath/issues/459#issuecomment-620643098:384,Security,password,password,384,"@petebankhead Hi, thanks for the prompt and clear response. Their website is a little unclear about obtaining the data. There is a link on their page to a directory listing where you can download individual images. You unfortunately have to sign in to their site I believe to access this. These files are listed [here](http://ptak.felk.cvut.cz/Medical/dataset_ANHIR/images/), and the password can be seen on [this page](https://anhir.grand-challenge.org/Download/) after signing in. Edit: It's worth noting that this happens with many images, and the example is just one of them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620643098
https://github.com/qupath/qupath/issues/459#issuecomment-620643098:44,Usability,clear,clear,44,"@petebankhead Hi, thanks for the prompt and clear response. Their website is a little unclear about obtaining the data. There is a link on their page to a directory listing where you can download individual images. You unfortunately have to sign in to their site I believe to access this. These files are listed [here](http://ptak.felk.cvut.cz/Medical/dataset_ANHIR/images/), and the password can be seen on [this page](https://anhir.grand-challenge.org/Download/) after signing in. Edit: It's worth noting that this happens with many images, and the example is just one of them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620643098
https://github.com/qupath/qupath/issues/459#issuecomment-620678819:279,Safety,detect,detection,279,"Interesting, I hadn't seen that challenge. . I notice the image you reference is a jpeg. If that is the case, the min size is 5pixels? That seems rather small for defining a cell. I saw on the website a mention of the images being 40x. . The other settings in the watershed cell detection part of your script do suggest that you are running your detection in pixels.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620678819
https://github.com/qupath/qupath/issues/459#issuecomment-620678819:346,Safety,detect,detection,346,"Interesting, I hadn't seen that challenge. . I notice the image you reference is a jpeg. If that is the case, the min size is 5pixels? That seems rather small for defining a cell. I saw on the website a mention of the images being 40x. . The other settings in the watershed cell detection part of your script do suggest that you are running your detection in pixels.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620678819
https://github.com/qupath/qupath/issues/459#issuecomment-620737325:133,Availability,avail,available,133,"@Svidro Yes it is rather small. They mention their images being up to that size, but images only a quarter of that size are actually available. I realize it's incredibly small, but there's not much I can do about it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620737325
https://github.com/qupath/qupath/issues/459#issuecomment-621609187:24,Availability,recover,recover,24,"v0.2.0-m11 now tries to recover more gracefully when this happens. It can't resolve the problematic overlap, but at least it doesn't lose the other cells. I'll close this issue because I think it is now as fixed as it is going to be (the whole overlapping code may be revised before v1.0.0), but feel free to reopen if you find it reoccurs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-621609187
https://github.com/qupath/qupath/issues/459#issuecomment-621609187:24,Safety,recover,recover,24,"v0.2.0-m11 now tries to recover more gracefully when this happens. It can't resolve the problematic overlap, but at least it doesn't lose the other cells. I'll close this issue because I think it is now as fixed as it is going to be (the whole overlapping code may be revised before v1.0.0), but feel free to reopen if you find it reoccurs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-621609187
https://github.com/qupath/qupath/issues/464#issuecomment-622245598:44,Usability,clear,clear,44,"Hi,. I'll look into it, but it's not really clear to me what the 'right' behavior is, since some kind of automatic contrast adjustment can be necessary to handle any kind of image with any kind of staining and any combination of stain vectors. As far as I recall (although it is a long time since I look at that part of the code...) this is what QuPath tries to do. In your screenshots I personally preferred the 'strange' appearance :). Note that the 'Auto' and 'Reset' buttons in the Brightness/Contrast window try to make it straightforward to adjust to a consistent appearance (either scaled with a specified saturation percentage, or using the minimum/maximum values). The 'Auto Brightness/Contrast saturation %' can be adjusted in the user preferences.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/464#issuecomment-622245598
https://github.com/qupath/qupath/issues/464#issuecomment-622249526:390,Usability,clear,clear,390,"I forgot to add: the display in the viewer is only for visualization and doesn't affect the analysis. I've looked at setting the stain vectors with a few images, and I couldn't find anything wrong or inconsistent. @cfmoro can you give any exact sequence of steps that can show any bug / inconsistent behavior?. @melvingelbard and I now use GitHub Issues for planning our work, so we need a clear definition of something definitely wrong that we can fix :) Without this I'd like to close the issue - discussions are better at http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/464#issuecomment-622249526
https://github.com/qupath/qupath/issues/464#issuecomment-622329244:270,Safety,safe,safe,270,"Thank you for the feedback. Unfortunately it cannot be consistently reproduced. True, I am messing with the stain vectors, working with 2-plex brightfield IHC. Knowing it is just a matter of visualization and brightness/contrast and that does not affect analysis sounds safe to close this issue. Best wishes,; Carlos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/464#issuecomment-622329244
https://github.com/qupath/qupath/issues/464#issuecomment-622329244:18,Usability,feedback,feedback,18,"Thank you for the feedback. Unfortunately it cannot be consistently reproduced. True, I am messing with the stain vectors, working with 2-plex brightfield IHC. Knowing it is just a matter of visualization and brightness/contrast and that does not affect analysis sounds safe to close this issue. Best wishes,; Carlos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/464#issuecomment-622329244
https://github.com/qupath/qupath/issues/464#issuecomment-622330814:648,Usability,clear,clearly,648,"Thanks, feel free to reopen in the future if this changes. The longer term plan is to revise how the brightness/contrast works and computes image histograms, so the issue might change... (Specifically, the histogram used to determine contrast settings is currently generated from a lower-resolution image. But the min/max values calculated at a lower resolution don't necessarily match with the 'true' min/max values in the image. They might also be thwarted by compression artifacts. So I'd like to improve this behavior generally in a later version with a smarter histogram calculation, and only fix things in the current implementation that are clearly broken.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/464#issuecomment-622330814
https://github.com/qupath/qupath/issues/466#issuecomment-622334575:84,Usability,clear,clearly,84,"sorry for the bug tag, I cannot for the life of me find where to remove that. It is clearly not a bug, just a request.... . All the best",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/466#issuecomment-622334575
https://github.com/qupath/qupath/issues/466#issuecomment-622346953:68,Availability,down,down,68,"Yes, lots more things are package private now to try to trim things down and have fewer public things moving. The thinking with `ObjectMeasurements` is that it really should be tied to QuPath's built-in cell measurement command, since this is the only place it's currently used. But future cell detection commands deserve better measurements. Because the functionality is pretty limited, I'd suggest just copying the code into your own package if you want it. For similar functionality for other cell detection methods, I myself plan to use JTS - since this avoids ImageJ's need to rasterize things when making measurements. (Since this isn't a bug, I'd really rather use image.sc...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/466#issuecomment-622346953
https://github.com/qupath/qupath/issues/466#issuecomment-622346953:295,Safety,detect,detection,295,"Yes, lots more things are package private now to try to trim things down and have fewer public things moving. The thinking with `ObjectMeasurements` is that it really should be tied to QuPath's built-in cell measurement command, since this is the only place it's currently used. But future cell detection commands deserve better measurements. Because the functionality is pretty limited, I'd suggest just copying the code into your own package if you want it. For similar functionality for other cell detection methods, I myself plan to use JTS - since this avoids ImageJ's need to rasterize things when making measurements. (Since this isn't a bug, I'd really rather use image.sc...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/466#issuecomment-622346953
https://github.com/qupath/qupath/issues/466#issuecomment-622346953:501,Safety,detect,detection,501,"Yes, lots more things are package private now to try to trim things down and have fewer public things moving. The thinking with `ObjectMeasurements` is that it really should be tied to QuPath's built-in cell measurement command, since this is the only place it's currently used. But future cell detection commands deserve better measurements. Because the functionality is pretty limited, I'd suggest just copying the code into your own package if you want it. For similar functionality for other cell detection methods, I myself plan to use JTS - since this avoids ImageJ's need to rasterize things when making measurements. (Since this isn't a bug, I'd really rather use image.sc...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/466#issuecomment-622346953
https://github.com/qupath/qupath/issues/466#issuecomment-622346953:558,Safety,avoid,avoids,558,"Yes, lots more things are package private now to try to trim things down and have fewer public things moving. The thinking with `ObjectMeasurements` is that it really should be tied to QuPath's built-in cell measurement command, since this is the only place it's currently used. But future cell detection commands deserve better measurements. Because the functionality is pretty limited, I'd suggest just copying the code into your own package if you want it. For similar functionality for other cell detection methods, I myself plan to use JTS - since this avoids ImageJ's need to rasterize things when making measurements. (Since this isn't a bug, I'd really rather use image.sc...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/466#issuecomment-622346953
https://github.com/qupath/qupath/issues/466#issuecomment-622349306:517,Safety,detect,detections,517,"BTW I plan to revisit my StarDist-related code soon. [`CellMeasurements`](https://github.com/qupath/qupath/blob/cf618cb91a7e43716c3a4bc7b431de6a88ee98be/qupath-core-processing/src/main/java/qupath/imagej/tools/CellMeasurements.java) was created to aid with adding intensity measurements to cells from different sources. Still very early and everything subject to change (we remain far from v1.0.0 and any API stability promises...), but my intention is to make it 'easy' to add standardized measurements to cells and detections generated from any source. This is also why the 'intensity measurements' command is deprecated - but it will remain for now, since replacing it is rather more complicated (since it needs to support measurement intensities in regions that may be larger than what can be reasonably rasterized in one go).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/466#issuecomment-622349306
https://github.com/qupath/qupath/issues/468#issuecomment-623497951:1512,Availability,down,down,1512,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951
https://github.com/qupath/qupath/issues/468#issuecomment-623497951:560,Deployability,update,update,560,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951
https://github.com/qupath/qupath/issues/468#issuecomment-623497951:646,Deployability,update,updated,646,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951
https://github.com/qupath/qupath/issues/468#issuecomment-623497951:775,Deployability,update,updated,775,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951
https://github.com/qupath/qupath/issues/468#issuecomment-623497951:923,Deployability,update,updated,923,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951
https://github.com/qupath/qupath/issues/468#issuecomment-623497951:1155,Deployability,update,update,1155,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951
https://github.com/qupath/qupath/issues/468#issuecomment-623497951:1317,Deployability,update,update,1317,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951
https://github.com/qupath/qupath/issues/468#issuecomment-623497951:1144,Safety,avoid,avoid,1144,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951
https://github.com/qupath/qupath/issues/468#issuecomment-623497951:208,Usability,simpl,simpler,208,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951
https://github.com/qupath/qupath/issues/468#issuecomment-623989433:371,Availability,down,down,371,"> To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the project.qpproj file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a Recent Projects option to reopen the last project. Thanks for the suggestion, we will be doing that then. I apologize for the use of GitHub issues. I really thought that for some reason it was not taking the relative paths in windows and not that the feature had been removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623989433
https://github.com/qupath/qupath/issues/468#issuecomment-623989433:16,Deployability,update,update,16,"> To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the project.qpproj file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a Recent Projects option to reopen the last project. Thanks for the suggestion, we will be doing that then. I apologize for the use of GitHub issues. I really thought that for some reason it was not taking the relative paths in windows and not that the feature had been removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623989433
https://github.com/qupath/qupath/issues/468#issuecomment-623989433:176,Deployability,update,update,176,"> To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the project.qpproj file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a Recent Projects option to reopen the last project. Thanks for the suggestion, we will be doing that then. I apologize for the use of GitHub issues. I really thought that for some reason it was not taking the relative paths in windows and not that the feature had been removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623989433
https://github.com/qupath/qupath/issues/468#issuecomment-623989433:5,Safety,avoid,avoid,5,"> To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the project.qpproj file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a Recent Projects option to reopen the last project. Thanks for the suggestion, we will be doing that then. I apologize for the use of GitHub issues. I really thought that for some reason it was not taking the relative paths in windows and not that the feature had been removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623989433
https://github.com/qupath/qupath/pull/472#issuecomment-625399963:72,Availability,down,down,72,"I think you also need to consume the event, to ensure it doesn't filter down somewhere else.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/472#issuecomment-625399963
https://github.com/qupath/qupath/pull/475#issuecomment-655369068:174,Performance,load,loading,174,"Hi mr. Bankhead,. I am having difficulty with pixel classification. I trained a pixel classifier that I want to apply to annotations I made in advance only. However, when im loading a pixel classifier after selecting the annotation of interest, the pixel classifier continues to classify the entire image, rather than the selected annotation. How does it work & what am I doing wrong here?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/475#issuecomment-655369068
https://github.com/qupath/qupath/pull/475#issuecomment-655385110:24,Performance,load,load,24,"Hi sberkerss,. When you load your pixel classifier, you can choose where to apply it. In this case I believe you want to select 'Any annotations' as Region. Also, it is important to note that the classification preview often goes over the annotations edges, as it uses tile information rather than strict annotation edges. However, the final objects created from the pixel classifier will be restricted to the area of the annotations (if selected in the combo box). Also, this is a pull request, in the future it would be preferable if you could use the [forum](https://forum.image.sc/tag/qupath) to ask questions. We'd prefer to keep the Github PR page (& issues) as clean as possible for organisation's sake. Plus you might find previous answers from the QuPath community there that migh be useful to you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/475#issuecomment-655385110
https://github.com/qupath/qupath/pull/475#issuecomment-655387105:195,Performance,load,load,195,"Thank you very much!; Sorry, I'm new here: I will make sure to use the forum next time!. Op wo 8 jul. 2020 10:53 schreef melvingelbard <notifications@github.com>:. > Hi sberkerss,; >; > When you load your pixel classifier, you can choose where to apply it. In; > this case I believe you want to select 'Any annotations' as Region. Also,; > it is important to note that the classification preview often goes over the; > annotations edges, as it uses tile information rather than strict; > annotation edges. However, the final objects created from the pixel; > classifier will be restricted to the area of the annotations (if selected; > in the combo box).; >; > Also, this is a pull request, in the future it would be preferable if you; > could use the forum <https://forum.image.sc/tag/qupath> to ask questions.; > We'd prefer to keep the Github PR page (& issues) as clean as possible for; > organisation's sake. Plus you might find previous answers from the QuPath; > community there that migh be useful to you!; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/pull/475#issuecomment-655385110>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AQG2BA4N4GOFAE67AQID4WTR2QXXVANCNFSM4M73SRLA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/475#issuecomment-655387105
https://github.com/qupath/qupath/issues/481#issuecomment-630152060:264,Availability,error,errors,264,"I'm afraid not, since `The crash happened outside the Java Virtual Machine in native code.` it will probably be very hard to debug. The actual problem has happened outside of QuPath, and the best QuPath can do is to try to avoid calling the problematic code. Such errors have been quite common when using OpenCV, and it is a constant battle to eliminate them as far as possible... I will look out for it, but since the TensorFlow code is still at a very early and experimental stage (and not part of the public release) I'm afraid it really isn't something I'm able to support at this stage. If you are able to replicate it with a minimal sequence of steps and/or find any solution, please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630152060
https://github.com/qupath/qupath/issues/481#issuecomment-630152060:511,Deployability,release,release,511,"I'm afraid not, since `The crash happened outside the Java Virtual Machine in native code.` it will probably be very hard to debug. The actual problem has happened outside of QuPath, and the best QuPath can do is to try to avoid calling the problematic code. Such errors have been quite common when using OpenCV, and it is a constant battle to eliminate them as far as possible... I will look out for it, but since the TensorFlow code is still at a very early and experimental stage (and not part of the public release) I'm afraid it really isn't something I'm able to support at this stage. If you are able to replicate it with a minimal sequence of steps and/or find any solution, please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630152060
https://github.com/qupath/qupath/issues/481#issuecomment-630152060:223,Safety,avoid,avoid,223,"I'm afraid not, since `The crash happened outside the Java Virtual Machine in native code.` it will probably be very hard to debug. The actual problem has happened outside of QuPath, and the best QuPath can do is to try to avoid calling the problematic code. Such errors have been quite common when using OpenCV, and it is a constant battle to eliminate them as far as possible... I will look out for it, but since the TensorFlow code is still at a very early and experimental stage (and not part of the public release) I'm afraid it really isn't something I'm able to support at this stage. If you are able to replicate it with a minimal sequence of steps and/or find any solution, please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630152060
https://github.com/qupath/qupath/issues/481#issuecomment-630637888:217,Availability,error,errors,217,"@SahPet can you confirm:; * Are you using TensorFlow CPU or GPU?; * Does it work for small images?; * Does it run for a bit and *then* crash terribly, or does it not run at all?. In the past with OpenCV/JavaCPP these errors have often been because an object (e.g. a Mat) has been freed too soon and then some later code tries to use it... which is often prompted by the garbage collector running during some intensive processing. If this is the issue, then I'd expect that it works for a while... and then suddenly everything disappears. Does that fit what you're seeing?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630637888
https://github.com/qupath/qupath/issues/481#issuecomment-630671434:528,Energy Efficiency,monitor,monitor,528,"Hmmm, I can't replicate any problem on my Mac but it will be a while before I can try it for any really long-running process. I've worked with large regions before and not seen problems like this. I have just submitted a small commit that introduces a `nThreads(n)` option to the builder to control the parallelisation. You can also use the `doLog()` option to get a little bit more information being printed.; https://github.com/petebankhead/qupath/commit/cb9b0a7473d084f37a1482bf8426a5d8030a1dc4. You can also use the *Memory monitor* to track memory use, and occasionally force the garbage collector with the *Reclaim memory* button. It would be interesting to know if the issue coincides with garbage collection, or if the memory steadily increases with time -- regardless of garbage collection. Please do add any further information that may be relevant (e.g. the type of the image [RGB, fluorescence], approximate size/number of nuclei, anything else that happens in your script...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630671434
https://github.com/qupath/qupath/issues/481#issuecomment-630737119:577,Availability,avail,available,577,"For small TMA cores and small biopsies (*.vsi and *.ndpi files, H-DAB, RGB, 100 - 500 mb, small images with one core or biopsy per image) the simple tissue detection and Stardist script often worked through the entire project in batch mode, about 100 images, without issues. For whole slides image projects (100 mb - 3,5 GB images) it can do 0 -1 images before crashing and more often crashes on the gigabyte whole slide images, so some sort of memory trouble can indeed be a possible issue (the m12 Tensorflow Qupath build only allows 32 GB memory I see, even though 64 GB is available - any way of forcing it to expand that?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630737119
https://github.com/qupath/qupath/issues/481#issuecomment-630737119:156,Safety,detect,detection,156,"For small TMA cores and small biopsies (*.vsi and *.ndpi files, H-DAB, RGB, 100 - 500 mb, small images with one core or biopsy per image) the simple tissue detection and Stardist script often worked through the entire project in batch mode, about 100 images, without issues. For whole slides image projects (100 mb - 3,5 GB images) it can do 0 -1 images before crashing and more often crashes on the gigabyte whole slide images, so some sort of memory trouble can indeed be a possible issue (the m12 Tensorflow Qupath build only allows 32 GB memory I see, even though 64 GB is available - any way of forcing it to expand that?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630737119
https://github.com/qupath/qupath/issues/481#issuecomment-630737119:142,Usability,simpl,simple,142,"For small TMA cores and small biopsies (*.vsi and *.ndpi files, H-DAB, RGB, 100 - 500 mb, small images with one core or biopsy per image) the simple tissue detection and Stardist script often worked through the entire project in batch mode, about 100 images, without issues. For whole slides image projects (100 mb - 3,5 GB images) it can do 0 -1 images before crashing and more often crashes on the gigabyte whole slide images, so some sort of memory trouble can indeed be a possible issue (the m12 Tensorflow Qupath build only allows 32 GB memory I see, even though 64 GB is available - any way of forcing it to expand that?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630737119
https://github.com/qupath/qupath/issues/481#issuecomment-630760110:69,Availability,error,error,69,"Not quite sure what you mean, but Qupath just closes. Attaching some error reports. [hs_err_pid19784.log](https://github.com/qupath/qupath/files/4650037/hs_err_pid19784.log); [hs_err_pid1100.log](https://github.com/qupath/qupath/files/4650038/hs_err_pid1100.log); [hs_err_pid17304.log](https://github.com/qupath/qupath/files/4650039/hs_err_pid17304.log)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630760110
https://github.com/qupath/qupath/issues/481#issuecomment-630760110:101,Testability,log,log,101,"Not quite sure what you mean, but Qupath just closes. Attaching some error reports. [hs_err_pid19784.log](https://github.com/qupath/qupath/files/4650037/hs_err_pid19784.log); [hs_err_pid1100.log](https://github.com/qupath/qupath/files/4650038/hs_err_pid1100.log); [hs_err_pid17304.log](https://github.com/qupath/qupath/files/4650039/hs_err_pid17304.log)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630760110
https://github.com/qupath/qupath/issues/481#issuecomment-630760110:169,Testability,log,log,169,"Not quite sure what you mean, but Qupath just closes. Attaching some error reports. [hs_err_pid19784.log](https://github.com/qupath/qupath/files/4650037/hs_err_pid19784.log); [hs_err_pid1100.log](https://github.com/qupath/qupath/files/4650038/hs_err_pid1100.log); [hs_err_pid17304.log](https://github.com/qupath/qupath/files/4650039/hs_err_pid17304.log)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630760110
https://github.com/qupath/qupath/issues/481#issuecomment-630760110:191,Testability,log,log,191,"Not quite sure what you mean, but Qupath just closes. Attaching some error reports. [hs_err_pid19784.log](https://github.com/qupath/qupath/files/4650037/hs_err_pid19784.log); [hs_err_pid1100.log](https://github.com/qupath/qupath/files/4650038/hs_err_pid1100.log); [hs_err_pid17304.log](https://github.com/qupath/qupath/files/4650039/hs_err_pid17304.log)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630760110
https://github.com/qupath/qupath/issues/481#issuecomment-630760110:258,Testability,log,log,258,"Not quite sure what you mean, but Qupath just closes. Attaching some error reports. [hs_err_pid19784.log](https://github.com/qupath/qupath/files/4650037/hs_err_pid19784.log); [hs_err_pid1100.log](https://github.com/qupath/qupath/files/4650038/hs_err_pid1100.log); [hs_err_pid17304.log](https://github.com/qupath/qupath/files/4650039/hs_err_pid17304.log)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630760110
https://github.com/qupath/qupath/issues/481#issuecomment-630760110:281,Testability,log,log,281,"Not quite sure what you mean, but Qupath just closes. Attaching some error reports. [hs_err_pid19784.log](https://github.com/qupath/qupath/files/4650037/hs_err_pid19784.log); [hs_err_pid1100.log](https://github.com/qupath/qupath/files/4650038/hs_err_pid1100.log); [hs_err_pid17304.log](https://github.com/qupath/qupath/files/4650039/hs_err_pid17304.log)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630760110
https://github.com/qupath/qupath/issues/481#issuecomment-630760110:349,Testability,log,log,349,"Not quite sure what you mean, but Qupath just closes. Attaching some error reports. [hs_err_pid19784.log](https://github.com/qupath/qupath/files/4650037/hs_err_pid19784.log); [hs_err_pid1100.log](https://github.com/qupath/qupath/files/4650038/hs_err_pid1100.log); [hs_err_pid17304.log](https://github.com/qupath/qupath/files/4650039/hs_err_pid17304.log)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630760110
https://github.com/qupath/qupath/issues/481#issuecomment-630761406:42,Availability,error,error,42,"I mean the memory limit - does it show an error, or just ignore your request? How are you setting the request for increased memory?; Is 64 GB the total amount for the system, or the total amount you want QuPath to use?; Is the behavior any different in v0.2.0-m11?. I do not recall any intentional change that would make this any different from m11, but I don't have so much RAM myself...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630761406
https://github.com/qupath/qupath/issues/481#issuecomment-630858222:139,Availability,error,error,139,"Ok, I understand. No one expects support on one week old experimental features on an experimental build of a testversion of 0.2.0:) Got an error message from Windows this time, by the way, and it seems to be a memory issue. ![error message qupath memory](https://user-images.githubusercontent.com/43611111/82339241-1d3ca000-99ee-11ea-830f-7595fa33621b.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630858222
https://github.com/qupath/qupath/issues/481#issuecomment-630858222:226,Availability,error,error,226,"Ok, I understand. No one expects support on one week old experimental features on an experimental build of a testversion of 0.2.0:) Got an error message from Windows this time, by the way, and it seems to be a memory issue. ![error message qupath memory](https://user-images.githubusercontent.com/43611111/82339241-1d3ca000-99ee-11ea-830f-7595fa33621b.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630858222
https://github.com/qupath/qupath/issues/481#issuecomment-630858222:145,Integrability,message,message,145,"Ok, I understand. No one expects support on one week old experimental features on an experimental build of a testversion of 0.2.0:) Got an error message from Windows this time, by the way, and it seems to be a memory issue. ![error message qupath memory](https://user-images.githubusercontent.com/43611111/82339241-1d3ca000-99ee-11ea-830f-7595fa33621b.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630858222
https://github.com/qupath/qupath/issues/481#issuecomment-630858222:232,Integrability,message,message,232,"Ok, I understand. No one expects support on one week old experimental features on an experimental build of a testversion of 0.2.0:) Got an error message from Windows this time, by the way, and it seems to be a memory issue. ![error message qupath memory](https://user-images.githubusercontent.com/43611111/82339241-1d3ca000-99ee-11ea-830f-7595fa33621b.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630858222
https://github.com/qupath/qupath/issues/481#issuecomment-630858222:109,Testability,test,testversion,109,"Ok, I understand. No one expects support on one week old experimental features on an experimental build of a testversion of 0.2.0:) Got an error message from Windows this time, by the way, and it seems to be a memory issue. ![error message qupath memory](https://user-images.githubusercontent.com/43611111/82339241-1d3ca000-99ee-11ea-830f-7595fa33621b.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630858222
https://github.com/qupath/qupath/issues/481#issuecomment-630879107:23,Energy Efficiency,monitor,monitor,23,And this is the memory monitor and system monitor right before it crashes. ![Skjermbilde (199)](https://user-images.githubusercontent.com/43611111/82342768-524af180-99f2-11ea-9d24-27af3ab82c7f.png),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630879107
https://github.com/qupath/qupath/issues/481#issuecomment-630879107:42,Energy Efficiency,monitor,monitor,42,And this is the memory monitor and system monitor right before it crashes. ![Skjermbilde (199)](https://user-images.githubusercontent.com/43611111/82342768-524af180-99f2-11ea-9d24-27af3ab82c7f.png),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630879107
https://github.com/qupath/qupath/issues/481#issuecomment-630892684:440,Availability,down,down,440,"Hmmm, so the rising memory is to be expected - but it should decrease again any time the garbage collector/Reclaim memory is called. I've just tried it several times with a moderately large region (> 50,000 nuclei) on my moderately old computer and can find no sign of a memory leak. You'll certainly have more threads on your better computer than my meagre 8, but I found it worked fine... sometimes rising > 10 GB, but regularly dropping down to ~1.5 GB when the garbage collector was triggered (either automatically or manually). And after everything was done, if I cleaned up the objects the memory use for QuPath as a whole went down to < 400 MB... so nothing was lingering too long. However I've just made a change that will try to make memory available again sooner: https://github.com/petebankhead/qupath/commit/9d2150ae1d2b08e6eefd2d9800baf6eecf6336cc; This may or may not help. You could also try the `nThreads()` option. Your bug report indicates you've 20 cores... not sure if that means 20 threads are working with stardist, or 40. Either way, it's probably worth reducing that number, e.g. by inserting `nThreads(10)` to your script in the place where the stardist model is being customized. Finally, from the look of your profiling, QuPath never gets close to its personal maximum of 32 GB -- but your 64 GB is pretty much full. Could something else be stealing memory that QuPath really wants?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630892684
https://github.com/qupath/qupath/issues/481#issuecomment-630892684:634,Availability,down,down,634,"Hmmm, so the rising memory is to be expected - but it should decrease again any time the garbage collector/Reclaim memory is called. I've just tried it several times with a moderately large region (> 50,000 nuclei) on my moderately old computer and can find no sign of a memory leak. You'll certainly have more threads on your better computer than my meagre 8, but I found it worked fine... sometimes rising > 10 GB, but regularly dropping down to ~1.5 GB when the garbage collector was triggered (either automatically or manually). And after everything was done, if I cleaned up the objects the memory use for QuPath as a whole went down to < 400 MB... so nothing was lingering too long. However I've just made a change that will try to make memory available again sooner: https://github.com/petebankhead/qupath/commit/9d2150ae1d2b08e6eefd2d9800baf6eecf6336cc; This may or may not help. You could also try the `nThreads()` option. Your bug report indicates you've 20 cores... not sure if that means 20 threads are working with stardist, or 40. Either way, it's probably worth reducing that number, e.g. by inserting `nThreads(10)` to your script in the place where the stardist model is being customized. Finally, from the look of your profiling, QuPath never gets close to its personal maximum of 32 GB -- but your 64 GB is pretty much full. Could something else be stealing memory that QuPath really wants?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630892684
https://github.com/qupath/qupath/issues/481#issuecomment-630892684:750,Availability,avail,available,750,"Hmmm, so the rising memory is to be expected - but it should decrease again any time the garbage collector/Reclaim memory is called. I've just tried it several times with a moderately large region (> 50,000 nuclei) on my moderately old computer and can find no sign of a memory leak. You'll certainly have more threads on your better computer than my meagre 8, but I found it worked fine... sometimes rising > 10 GB, but regularly dropping down to ~1.5 GB when the garbage collector was triggered (either automatically or manually). And after everything was done, if I cleaned up the objects the memory use for QuPath as a whole went down to < 400 MB... so nothing was lingering too long. However I've just made a change that will try to make memory available again sooner: https://github.com/petebankhead/qupath/commit/9d2150ae1d2b08e6eefd2d9800baf6eecf6336cc; This may or may not help. You could also try the `nThreads()` option. Your bug report indicates you've 20 cores... not sure if that means 20 threads are working with stardist, or 40. Either way, it's probably worth reducing that number, e.g. by inserting `nThreads(10)` to your script in the place where the stardist model is being customized. Finally, from the look of your profiling, QuPath never gets close to its personal maximum of 32 GB -- but your 64 GB is pretty much full. Could something else be stealing memory that QuPath really wants?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630892684
https://github.com/qupath/qupath/issues/481#issuecomment-630894744:314,Availability,down,down,314,"Thanks for the tip. ; ![Skjermbilde (205)](https://user-images.githubusercontent.com/43611111/82345329-6e9c5d80-99f5-11ea-9534-a5303ee739bf.png); Seems like the 64 GB system memory fills up quite quickly, while the Qupath program itself in the windows systems monitor actually reads out as using much less memory (down below 1 GB at times) after a while (while 99 percent of the system memory still used).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630894744
https://github.com/qupath/qupath/issues/481#issuecomment-630894744:260,Energy Efficiency,monitor,monitor,260,"Thanks for the tip. ; ![Skjermbilde (205)](https://user-images.githubusercontent.com/43611111/82345329-6e9c5d80-99f5-11ea-9534-a5303ee739bf.png); Seems like the 64 GB system memory fills up quite quickly, while the Qupath program itself in the windows systems monitor actually reads out as using much less memory (down below 1 GB at times) after a while (while 99 percent of the system memory still used).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630894744
https://github.com/qupath/qupath/issues/481#issuecomment-630898801:175,Availability,down,down,175,"That *might* be normal behavior with Java... I'm not 100% sure but I think that, by default, once Java has grabbed some memory, it is reluctant to give it back until shutting down. But it shouldn't go beyond the maximum of 32 GB. Since it is calling TensorFlow and OpenCV, which are outside Java's normal world, normal rules might not apply entirely. The last changes I made are my current best guess for something that might help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630898801
https://github.com/qupath/qupath/issues/481#issuecomment-630948935:1966,Availability,FAILURE,FAILURE,1966,"of JavaFX, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an exception. * Where:; Build file 'C:\Users\IT-bruker\Documents\GitHub\qupath\build.gradle' line: 569. * What went wrong:; A problem occurred evaluating root project 'qupath'.; > Could not resolve all files for configuration ':runtimeClasspath'.; > Could not find tensorflow-1.15.2-1.5.3-windows-x86.jar (org.bytedeco:tensorflow:1.15.2-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/tensorflow/1.15.2-1.5.3/tensorflow-1.15.2-1.5.3-windows-x86.jar; > Could not find mkl-dnn-0.21.4-1.5.3-windows-x86.jar (org.bytedeco:mkl-dnn:0.21.4-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/mkl-dnn/0.21.4-1.5.3/mkl-dnn-0.21.4-1.5.3-windows-x86.jar. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 7s. C:\Users\IT-bruker\Documents\GitHu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935
https://github.com/qupath/qupath/issues/481#issuecomment-630948935:88,Deployability,Update,Updated,88,"Thanks again. Tried to rebuild Qupath to get the new changes, but now the build failed. Updated Java, maybe I need a previous version of Java... Anyway, here is the command prompt with the failed build. Don't want to take more of your time, Pete, so just leave it if you feel like it's unimportant:. Microsoft Windows [Version 10.0.18363.836]; (c) 2019 Microsoft Corporation. Med enerett. C:\Users\IT-bruker\Documents\GitHub\qupath>gradlew clean build createPackage -Ptensorflow-cpu=true; Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. > Configure project :; Building QuPath version 0.2.0-m12-SNAPSHOT; Current Java version: 1.8; C:\Program Files (x86)\Java\jre1.8.0_251; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Windows 10 10.0 x86; You appear to be using a 32-bit JDK - If I can't find a 32-bit version of JavaFX, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an excep",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935
https://github.com/qupath/qupath/issues/481#issuecomment-630948935:863,Deployability,install,installed,863,"Thanks again. Tried to rebuild Qupath to get the new changes, but now the build failed. Updated Java, maybe I need a previous version of Java... Anyway, here is the command prompt with the failed build. Don't want to take more of your time, Pete, so just leave it if you feel like it's unimportant:. Microsoft Windows [Version 10.0.18363.836]; (c) 2019 Microsoft Corporation. Med enerett. C:\Users\IT-bruker\Documents\GitHub\qupath>gradlew clean build createPackage -Ptensorflow-cpu=true; Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. > Configure project :; Building QuPath version 0.2.0-m12-SNAPSHOT; Current Java version: 1.8; C:\Program Files (x86)\Java\jre1.8.0_251; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Windows 10 10.0 x86; You appear to be using a 32-bit JDK - If I can't find a 32-bit version of JavaFX, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an excep",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935
https://github.com/qupath/qupath/issues/481#issuecomment-630948935:2205,Deployability,configurat,configuration,2205, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an exception. * Where:; Build file 'C:\Users\IT-bruker\Documents\GitHub\qupath\build.gradle' line: 569. * What went wrong:; A problem occurred evaluating root project 'qupath'.; > Could not resolve all files for configuration ':runtimeClasspath'.; > Could not find tensorflow-1.15.2-1.5.3-windows-x86.jar (org.bytedeco:tensorflow:1.15.2-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/tensorflow/1.15.2-1.5.3/tensorflow-1.15.2-1.5.3-windows-x86.jar; > Could not find mkl-dnn-0.21.4-1.5.3-windows-x86.jar (org.bytedeco:mkl-dnn:0.21.4-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/mkl-dnn/0.21.4-1.5.3/mkl-dnn-0.21.4-1.5.3-windows-x86.jar. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 7s. C:\Users\IT-bruker\Documents\GitHub\qupath>,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935
https://github.com/qupath/qupath/issues/481#issuecomment-630948935:601,Modifiability,Config,Configure,601,"Thanks again. Tried to rebuild Qupath to get the new changes, but now the build failed. Updated Java, maybe I need a previous version of Java... Anyway, here is the command prompt with the failed build. Don't want to take more of your time, Pete, so just leave it if you feel like it's unimportant:. Microsoft Windows [Version 10.0.18363.836]; (c) 2019 Microsoft Corporation. Med enerett. C:\Users\IT-bruker\Documents\GitHub\qupath>gradlew clean build createPackage -Ptensorflow-cpu=true; Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. > Configure project :; Building QuPath version 0.2.0-m12-SNAPSHOT; Current Java version: 1.8; C:\Program Files (x86)\Java\jre1.8.0_251; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Windows 10 10.0 x86; You appear to be using a 32-bit JDK - If I can't find a 32-bit version of JavaFX, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an excep",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935
https://github.com/qupath/qupath/issues/481#issuecomment-630948935:2205,Modifiability,config,configuration,2205, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an exception. * Where:; Build file 'C:\Users\IT-bruker\Documents\GitHub\qupath\build.gradle' line: 569. * What went wrong:; A problem occurred evaluating root project 'qupath'.; > Could not resolve all files for configuration ':runtimeClasspath'.; > Could not find tensorflow-1.15.2-1.5.3-windows-x86.jar (org.bytedeco:tensorflow:1.15.2-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/tensorflow/1.15.2-1.5.3/tensorflow-1.15.2-1.5.3-windows-x86.jar; > Could not find mkl-dnn-0.21.4-1.5.3-windows-x86.jar (org.bytedeco:mkl-dnn:0.21.4-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/mkl-dnn/0.21.4-1.5.3/mkl-dnn-0.21.4-1.5.3-windows-x86.jar. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 7s. C:\Users\IT-bruker\Documents\GitHub\qupath>,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935
https://github.com/qupath/qupath/issues/481#issuecomment-630948935:1029,Testability,test,test,1029,"Thanks again. Tried to rebuild Qupath to get the new changes, but now the build failed. Updated Java, maybe I need a previous version of Java... Anyway, here is the command prompt with the failed build. Don't want to take more of your time, Pete, so just leave it if you feel like it's unimportant:. Microsoft Windows [Version 10.0.18363.836]; (c) 2019 Microsoft Corporation. Med enerett. C:\Users\IT-bruker\Documents\GitHub\qupath>gradlew clean build createPackage -Ptensorflow-cpu=true; Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. > Configure project :; Building QuPath version 0.2.0-m12-SNAPSHOT; Current Java version: 1.8; C:\Program Files (x86)\Java\jre1.8.0_251; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Windows 10 10.0 x86; You appear to be using a 32-bit JDK - If I can't find a 32-bit version of JavaFX, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an excep",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935
https://github.com/qupath/qupath/issues/481#issuecomment-630948935:2838,Testability,log,log,2838, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an exception. * Where:; Build file 'C:\Users\IT-bruker\Documents\GitHub\qupath\build.gradle' line: 569. * What went wrong:; A problem occurred evaluating root project 'qupath'.; > Could not resolve all files for configuration ':runtimeClasspath'.; > Could not find tensorflow-1.15.2-1.5.3-windows-x86.jar (org.bytedeco:tensorflow:1.15.2-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/tensorflow/1.15.2-1.5.3/tensorflow-1.15.2-1.5.3-windows-x86.jar; > Could not find mkl-dnn-0.21.4-1.5.3-windows-x86.jar (org.bytedeco:mkl-dnn:0.21.4-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/mkl-dnn/0.21.4-1.5.3/mkl-dnn-0.21.4-1.5.3-windows-x86.jar. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 7s. C:\Users\IT-bruker\Documents\GitHub\qupath>,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935
https://github.com/qupath/qupath/issues/481#issuecomment-631299162:378,Availability,avail,available,378,"Uninstalled Java and was able to make a new build from the updated master - and now, (so far) IT WORKS! No seeming memory leakage (system RAM use keeps under 45 GB, not contantly pushing 64 GB like before). Did not add any nThreads() command or anything, so I guess it's your memory trick that did the trick:; ""[...] However I've just made a change that will try to make memory available again sooner: petebankhead@9d2150a; This may or may not help. [...]"". Thanks so much, Pete!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-631299162
https://github.com/qupath/qupath/issues/481#issuecomment-631299162:59,Deployability,update,updated,59,"Uninstalled Java and was able to make a new build from the updated master - and now, (so far) IT WORKS! No seeming memory leakage (system RAM use keeps under 45 GB, not contantly pushing 64 GB like before). Did not add any nThreads() command or anything, so I guess it's your memory trick that did the trick:; ""[...] However I've just made a change that will try to make memory available again sooner: petebankhead@9d2150a; This may or may not help. [...]"". Thanks so much, Pete!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-631299162
https://github.com/qupath/qupath/issues/484#issuecomment-630295536:75,Availability,down,downloadable,75,Have you tried building off a tag that corresponds to a release?; Does the downloadable v0.2.0-m11 for Linux work (built on Ubuntu)?. The current master builds for me fine on the Mac I'm currently using. The specific line that is causing you trouble is creating a Mat with JavaCPP + OpenCV. Therefore you might also try building any minimal code using these libraries to assess what is going wrong.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630295536
https://github.com/qupath/qupath/issues/484#issuecomment-630295536:56,Deployability,release,release,56,Have you tried building off a tag that corresponds to a release?; Does the downloadable v0.2.0-m11 for Linux work (built on Ubuntu)?. The current master builds for me fine on the Mac I'm currently using. The specific line that is causing you trouble is creating a Mat with JavaCPP + OpenCV. Therefore you might also try building any minimal code using these libraries to assess what is going wrong.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630295536
https://github.com/qupath/qupath/issues/484#issuecomment-630429685:18,Availability,down,download,18,"I can run the m11 download, but not build it (same errors). Will try the minimal approach",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630429685
https://github.com/qupath/qupath/issues/484#issuecomment-630429685:51,Availability,error,errors,51,"I can run the m11 download, but not build it (same errors). Will try the minimal approach",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630429685
https://github.com/qupath/qupath/issues/484#issuecomment-630584161:187,Availability,avail,available,187,"Does m11 run with all features? Specifically, does the *Wand* tool appear in the toolbar and does it work...?. QuPath is written so that if certain dependencies (including OpenCV) aren't available then the rest of the application should work, just with missing options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630584161
https://github.com/qupath/qupath/issues/484#issuecomment-630584161:148,Integrability,depend,dependencies,148,"Does m11 run with all features? Specifically, does the *Wand* tool appear in the toolbar and does it work...?. QuPath is written so that if certain dependencies (including OpenCV) aren't available then the rest of the application should work, just with missing options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630584161
https://github.com/qupath/qupath/issues/484#issuecomment-630736057:26,Availability,down,download,26,"yes, the wand tool in the download works fine",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630736057
https://github.com/qupath/qupath/issues/484#issuecomment-630746162:118,Availability,error,error,118,"Ok, good. Can you provide more information about what exactly is printed when running the build (including before the error)?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630746162
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:6106,Availability,FAILURE,FAILURE,6106,"ask :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 8s; 59 actionable tasks: 58 executed, 1 up-to-date; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:286,Deployability,install,installed,286,Here's the complete output:; ```; > Configure project :; Building QuPath version 0.2.0-m12-SNAPSHOT; Current Java version: 14; /home/gordon/src/jdk-14.0.1+7; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Linux 5.4.39-1-MANJARO amd64; Use -Ptensorflow-cpu=true or -Ptensorflow-gpu=true if you wish to include experimental TensorFlow module; Excluding project ':qupath-extension-tensorflow'; Copying license directories: ; /home/gordon/src/qupath/qupath-core/src/main/resources/licenses; /home/gordon/src/qupath/qupath-core-processing/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-bioformats/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-openslide/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-pen/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-processing/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-script-editor/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-svg/src/main/resources/licenses; /home/gordon/src/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /home/gordon/src/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /home/gordon/src/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /home/gordon/src/qupath/license-unknown.txt; > Task :clean; > Task :qupath-core:clean; > Task :qupath-core-processing:clean; > Task :qupath-experimental:clean; > Task :qupath-extension-bioformats:clean; > Task :qupath-extension-omero:clean; > Task :qupath-extension-openslide:clean; > Task :qupath-extension-pen:clean; > Task :qupath-extension-processing:clean; > Task :qupath-extension-script-editor:clean; > Task :qupath-extension-svg:clean; > Task :qupath-exte,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:36,Modifiability,Config,Configure,36,Here's the complete output:; ```; > Configure project :; Building QuPath version 0.2.0-m12-SNAPSHOT; Current Java version: 14; /home/gordon/src/jdk-14.0.1+7; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Linux 5.4.39-1-MANJARO amd64; Use -Ptensorflow-cpu=true or -Ptensorflow-gpu=true if you wish to include experimental TensorFlow module; Excluding project ':qupath-extension-tensorflow'; Copying license directories: ; /home/gordon/src/qupath/qupath-core/src/main/resources/licenses; /home/gordon/src/qupath/qupath-core-processing/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-bioformats/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-openslide/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-pen/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-processing/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-script-editor/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-svg/src/main/resources/licenses; /home/gordon/src/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /home/gordon/src/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /home/gordon/src/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /home/gordon/src/qupath/license-unknown.txt; > Task :clean; > Task :qupath-core:clean; > Task :qupath-core-processing:clean; > Task :qupath-experimental:clean; > Task :qupath-extension-bioformats:clean; > Task :qupath-extension-omero:clean; > Task :qupath-extension-openslide:clean; > Task :qupath-extension-pen:clean; > Task :qupath-extension-processing:clean; > Task :qupath-extension-script-editor:clean; > Task :qupath-extension-svg:clean; > Task :qupath-exte,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:2250,Safety,unsafe,unsafe,2250,ries from /home/gordon/src/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /home/gordon/src/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /home/gordon/src/qupath/license-unknown.txt; > Task :clean; > Task :qupath-core:clean; > Task :qupath-core-processing:clean; > Task :qupath-experimental:clean; > Task :qupath-extension-bioformats:clean; > Task :qupath-extension-omero:clean; > Task :qupath-extension-openslide:clean; > Task :qupath-extension-pen:clean; > Task :qupath-extension-processing:clean; > Task :qupath-extension-script-editor:clean; > Task :qupath-extension-svg:clean; > Task :qupath-extension-tensorflow:clean UP-TO-DATE; > Task :qupath-gui-fx:clean. > Task :qupath-core:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: Some input files use unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core-processing:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: Some input files use unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-gui-fx:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: Some input files use unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-extension-processing:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details. > Task :qupath-experimental:compileJava; Note: /home/gordon/src/qupath/qupath-experimental/src/main/java/qupath/lib/gui/align/ImageAlignmentPane.java uses or overrides a deprecated API.; Note: Recompile with -Xlint:deprecation for d,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:2517,Safety,unsafe,unsafe,2517,into build/qupath; LICENSE PATH: /home/gordon/src/qupath/license-unknown.txt; > Task :clean; > Task :qupath-core:clean; > Task :qupath-core-processing:clean; > Task :qupath-experimental:clean; > Task :qupath-extension-bioformats:clean; > Task :qupath-extension-omero:clean; > Task :qupath-extension-openslide:clean; > Task :qupath-extension-pen:clean; > Task :qupath-extension-processing:clean; > Task :qupath-extension-script-editor:clean; > Task :qupath-extension-svg:clean; > Task :qupath-extension-tensorflow:clean UP-TO-DATE; > Task :qupath-gui-fx:clean. > Task :qupath-core:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: Some input files use unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core-processing:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: Some input files use unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-gui-fx:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: Some input files use unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-extension-processing:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details. > Task :qupath-experimental:compileJava; Note: /home/gordon/src/qupath/qupath-experimental/src/main/java/qupath/lib/gui/align/ImageAlignmentPane.java uses or overrides a deprecated API.; Note: Recompile with -Xlint:deprecation for details. > Task :qupath-extension-bioformats:compileJava; > Task :qupath-extension-omero:compileJava; > Task :qupath-extension-openslide:compileJava; > Task :qupath-extension-pen:compileJava; > Task :qupath-extension-script-editor:compileJava; > Task :qupath-extension,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:2775,Safety,unsafe,unsafe,2775,on-omero:clean; > Task :qupath-extension-openslide:clean; > Task :qupath-extension-pen:clean; > Task :qupath-extension-processing:clean; > Task :qupath-extension-script-editor:clean; > Task :qupath-extension-svg:clean; > Task :qupath-extension-tensorflow:clean UP-TO-DATE; > Task :qupath-gui-fx:clean. > Task :qupath-core:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: Some input files use unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core-processing:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: Some input files use unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-gui-fx:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: Some input files use unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-extension-processing:compileJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details. > Task :qupath-experimental:compileJava; Note: /home/gordon/src/qupath/qupath-experimental/src/main/java/qupath/lib/gui/align/ImageAlignmentPane.java uses or overrides a deprecated API.; Note: Recompile with -Xlint:deprecation for details. > Task :qupath-extension-bioformats:compileJava; > Task :qupath-extension-omero:compileJava; > Task :qupath-extension-openslide:compileJava; > Task :qupath-extension-pen:compileJava; > Task :qupath-extension-script-editor:compileJava; > Task :qupath-extension-svg:compileJava; > Task :compileJava; > Task :processResources; > Task :classes; > Task :copyChangelog; > Task :qupath-core:processResources; > Task :qupath-core:classes; > Task :qupath-core:jar; > Task :qupath-core-processing:processResources; > Task :qupa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:5580,Safety,unsafe,unsafe,5580,"-extension-processing:jar; > Task :qupath-extension-script-editor:processResources; > Task :qupath-extension-script-editor:classes; > Task :qupath-extension-script-editor:jar; > Task :qupath-extension-svg:processResources; > Task :qupath-extension-svg:classes; > Task :qupath-extension-svg:jar; > Task :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were use",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:5159,Testability,test,testClasses,5159,on-omero:compileJava; > Task :qupath-extension-openslide:compileJava; > Task :qupath-extension-pen:compileJava; > Task :qupath-extension-script-editor:compileJava; > Task :qupath-extension-svg:compileJava; > Task :compileJava; > Task :processResources; > Task :classes; > Task :copyChangelog; > Task :qupath-core:processResources; > Task :qupath-core:classes; > Task :qupath-core:jar; > Task :qupath-core-processing:processResources; > Task :qupath-core-processing:classes; > Task :qupath-core-processing:jar; > Task :qupath-experimental:processResources; > Task :qupath-experimental:classes; > Task :qupath-experimental:jar; > Task :qupath-extension-bioformats:processResources; > Task :qupath-extension-bioformats:classes; > Task :qupath-extension-bioformats:jar; > Task :qupath-extension-omero:processResources; > Task :qupath-extension-omero:classes; > Task :qupath-extension-omero:jar; > Task :qupath-extension-openslide:processResources; > Task :qupath-extension-openslide:classes; > Task :qupath-extension-openslide:jar; > Task :qupath-extension-pen:processResources; > Task :qupath-extension-pen:classes; > Task :qupath-extension-pen:jar; > Task :qupath-extension-processing:processResources; > Task :qupath-extension-processing:classes; > Task :qupath-extension-processing:jar; > Task :qupath-extension-script-editor:processResources; > Task :qupath-extension-script-editor:classes; > Task :qupath-extension-script-editor:jar; > Task :qupath-extension-svg:processResources; > Task :qupath-extension-svg:classes; > Task :qupath-extension-svg:jar; > Task :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:5180,Testability,test,test,5180,on-omero:compileJava; > Task :qupath-extension-openslide:compileJava; > Task :qupath-extension-pen:compileJava; > Task :qupath-extension-script-editor:compileJava; > Task :qupath-extension-svg:compileJava; > Task :compileJava; > Task :processResources; > Task :classes; > Task :copyChangelog; > Task :qupath-core:processResources; > Task :qupath-core:classes; > Task :qupath-core:jar; > Task :qupath-core-processing:processResources; > Task :qupath-core-processing:classes; > Task :qupath-core-processing:jar; > Task :qupath-experimental:processResources; > Task :qupath-experimental:classes; > Task :qupath-experimental:jar; > Task :qupath-extension-bioformats:processResources; > Task :qupath-extension-bioformats:classes; > Task :qupath-extension-bioformats:jar; > Task :qupath-extension-omero:processResources; > Task :qupath-extension-omero:classes; > Task :qupath-extension-omero:jar; > Task :qupath-extension-openslide:processResources; > Task :qupath-extension-openslide:classes; > Task :qupath-extension-openslide:jar; > Task :qupath-extension-pen:processResources; > Task :qupath-extension-pen:classes; > Task :qupath-extension-pen:jar; > Task :qupath-extension-processing:processResources; > Task :qupath-extension-processing:classes; > Task :qupath-extension-processing:jar; > Task :qupath-extension-script-editor:processResources; > Task :qupath-extension-script-editor:classes; > Task :qupath-extension-script-editor:jar; > Task :qupath-extension-svg:processResources; > Task :qupath-extension-svg:classes; > Task :qupath-extension-svg:jar; > Task :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:5514,Testability,test,test,5514,"urces; > Task :qupath-extension-processing:classes; > Task :qupath-extension-processing:jar; > Task :qupath-extension-script-editor:processResources; > Task :qupath-extension-script-editor:classes; > Task :qupath-extension-script-editor:jar; > Task :qupath-extension-svg:processResources; > Task :qupath-extension-svg:classes; > Task :qupath-extension-svg:jar; > Task :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more he",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:5713,Testability,test,testClasses,5713,"cript-editor:classes; > Task :qupath-extension-script-editor:jar; > Task :qupath-extension-svg:processResources; > Task :qupath-extension-svg:classes; > Task :qupath-extension-svg:jar; > Task :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual depr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:5746,Testability,test,test,5746,"editor:jar; > Task :qupath-extension-svg:processResources; > Task :qupath-extension-svg:classes; > Task :qupath-extension-svg:jar; > Task :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/use",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:5780,Testability,test,testGetOpenCVTypeAdaptorFactory,5780,"ources; > Task :qupath-extension-svg:classes; > Task :qupath-extension-svg:jar; > Task :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:5985,Testability,test,testGetTypeAdaptor,5985,"ask :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 8s; 59 actionable tasks: 58 executed, 1 up-to-date; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:6079,Testability,test,tests,6079,"ask :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 8s; 59 actionable tasks: 58 executed, 1 up-to-date; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:6207,Testability,test,test,6207,"ask :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 8s; 59 actionable tasks: 58 executed, 1 up-to-date; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:6236,Testability,test,tests,6236,"ask :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 8s; 59 actionable tasks: 58 executed, 1 up-to-date; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:6319,Testability,test,tests,6319,"ask :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 8s; 59 actionable tasks: 58 executed, 1 up-to-date; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:6325,Testability,test,test,6325,"ask :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 8s; 59 actionable tasks: 58 executed, 1 up-to-date; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-630769356:6449,Testability,log,log,6449,"ask :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 8s; 59 actionable tasks: 58 executed, 1 up-to-date; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356
https://github.com/qupath/qupath/issues/484#issuecomment-631377861:30,Availability,failure,failures,30,"I'm getting the same two test failures when trying to build on ubuntu 18.04 and java14 installed from adoptopenjdk.net. For master, m11, and m10 too. And the wand tool does fail on the pre-built m11:. ```; ERROR: QuPath exception: OpenCV(4.3.0) /home/travis/build/javacpp-presets/opencv/cppbuild/linux-x86_64/opencv-4.3.0/modules/imgproc/src/drawing.cpp:1866: error: (-215:Assertion failed) radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT in function 'circle'. at org.bytedeco.opencv.global.opencv_imgproc.circle(Native Method); at qupath.process.gui.WandToolCV.createShape(WandToolCV.java:423); at qupath.lib.gui.viewer.tools.BrushTool.createNewROI(BrushTool.java:497); at qupath.lib.gui.viewer.tools.AbstractPathROITool.createNewAnnotation(AbstractPathROITool.java:92); at qupath.lib.gui.viewer.tools.BrushTool.mousePressed(BrushTool.java:259); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:419); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861
https://github.com/qupath/qupath/issues/484#issuecomment-631377861:206,Availability,ERROR,ERROR,206,"I'm getting the same two test failures when trying to build on ubuntu 18.04 and java14 installed from adoptopenjdk.net. For master, m11, and m10 too. And the wand tool does fail on the pre-built m11:. ```; ERROR: QuPath exception: OpenCV(4.3.0) /home/travis/build/javacpp-presets/opencv/cppbuild/linux-x86_64/opencv-4.3.0/modules/imgproc/src/drawing.cpp:1866: error: (-215:Assertion failed) radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT in function 'circle'. at org.bytedeco.opencv.global.opencv_imgproc.circle(Native Method); at qupath.process.gui.WandToolCV.createShape(WandToolCV.java:423); at qupath.lib.gui.viewer.tools.BrushTool.createNewROI(BrushTool.java:497); at qupath.lib.gui.viewer.tools.AbstractPathROITool.createNewAnnotation(AbstractPathROITool.java:92); at qupath.lib.gui.viewer.tools.BrushTool.mousePressed(BrushTool.java:259); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:419); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861
https://github.com/qupath/qupath/issues/484#issuecomment-631377861:360,Availability,error,error,360,"I'm getting the same two test failures when trying to build on ubuntu 18.04 and java14 installed from adoptopenjdk.net. For master, m11, and m10 too. And the wand tool does fail on the pre-built m11:. ```; ERROR: QuPath exception: OpenCV(4.3.0) /home/travis/build/javacpp-presets/opencv/cppbuild/linux-x86_64/opencv-4.3.0/modules/imgproc/src/drawing.cpp:1866: error: (-215:Assertion failed) radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT in function 'circle'. at org.bytedeco.opencv.global.opencv_imgproc.circle(Native Method); at qupath.process.gui.WandToolCV.createShape(WandToolCV.java:423); at qupath.lib.gui.viewer.tools.BrushTool.createNewROI(BrushTool.java:497); at qupath.lib.gui.viewer.tools.AbstractPathROITool.createNewAnnotation(AbstractPathROITool.java:92); at qupath.lib.gui.viewer.tools.BrushTool.mousePressed(BrushTool.java:259); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:419); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861
https://github.com/qupath/qupath/issues/484#issuecomment-631377861:87,Deployability,install,installed,87,"I'm getting the same two test failures when trying to build on ubuntu 18.04 and java14 installed from adoptopenjdk.net. For master, m11, and m10 too. And the wand tool does fail on the pre-built m11:. ```; ERROR: QuPath exception: OpenCV(4.3.0) /home/travis/build/javacpp-presets/opencv/cppbuild/linux-x86_64/opencv-4.3.0/modules/imgproc/src/drawing.cpp:1866: error: (-215:Assertion failed) radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT in function 'circle'. at org.bytedeco.opencv.global.opencv_imgproc.circle(Native Method); at qupath.process.gui.WandToolCV.createShape(WandToolCV.java:423); at qupath.lib.gui.viewer.tools.BrushTool.createNewROI(BrushTool.java:497); at qupath.lib.gui.viewer.tools.AbstractPathROITool.createNewAnnotation(AbstractPathROITool.java:92); at qupath.lib.gui.viewer.tools.BrushTool.mousePressed(BrushTool.java:259); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:419); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861
https://github.com/qupath/qupath/issues/484#issuecomment-631377861:3722,Security,secur,security,3722,vent.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3890); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861
https://github.com/qupath/qupath/issues/484#issuecomment-631377861:3731,Security,Access,AccessController,3731,vent.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3890); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861
https://github.com/qupath/qupath/issues/484#issuecomment-631377861:25,Testability,test,test,25,"I'm getting the same two test failures when trying to build on ubuntu 18.04 and java14 installed from adoptopenjdk.net. For master, m11, and m10 too. And the wand tool does fail on the pre-built m11:. ```; ERROR: QuPath exception: OpenCV(4.3.0) /home/travis/build/javacpp-presets/opencv/cppbuild/linux-x86_64/opencv-4.3.0/modules/imgproc/src/drawing.cpp:1866: error: (-215:Assertion failed) radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT in function 'circle'. at org.bytedeco.opencv.global.opencv_imgproc.circle(Native Method); at qupath.process.gui.WandToolCV.createShape(WandToolCV.java:423); at qupath.lib.gui.viewer.tools.BrushTool.createNewROI(BrushTool.java:497); at qupath.lib.gui.viewer.tools.AbstractPathROITool.createNewAnnotation(AbstractPathROITool.java:92); at qupath.lib.gui.viewer.tools.BrushTool.mousePressed(BrushTool.java:259); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:419); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861
https://github.com/qupath/qupath/issues/484#issuecomment-631377861:373,Testability,Assert,Assertion,373,"I'm getting the same two test failures when trying to build on ubuntu 18.04 and java14 installed from adoptopenjdk.net. For master, m11, and m10 too. And the wand tool does fail on the pre-built m11:. ```; ERROR: QuPath exception: OpenCV(4.3.0) /home/travis/build/javacpp-presets/opencv/cppbuild/linux-x86_64/opencv-4.3.0/modules/imgproc/src/drawing.cpp:1866: error: (-215:Assertion failed) radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT in function 'circle'. at org.bytedeco.opencv.global.opencv_imgproc.circle(Native Method); at qupath.process.gui.WandToolCV.createShape(WandToolCV.java:423); at qupath.lib.gui.viewer.tools.BrushTool.createNewROI(BrushTool.java:497); at qupath.lib.gui.viewer.tools.AbstractPathROITool.createNewAnnotation(AbstractPathROITool.java:92); at qupath.lib.gui.viewer.tools.BrushTool.mousePressed(BrushTool.java:259); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:419); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861
https://github.com/qupath/qupath/issues/484#issuecomment-631493326:53,Availability,error,errors,53,"It is a 64 bit machine and I get exact same two test errors during build on m12 too. And I've just noticed that on the pre-built m11 the wand tool does work even if there's an error. Also, most of the time there's no error! In fact, now that I'm writing this, I don't get an error at all now. So, these wand tool errors might have been unrelated to the test failures during build.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631493326
https://github.com/qupath/qupath/issues/484#issuecomment-631493326:176,Availability,error,error,176,"It is a 64 bit machine and I get exact same two test errors during build on m12 too. And I've just noticed that on the pre-built m11 the wand tool does work even if there's an error. Also, most of the time there's no error! In fact, now that I'm writing this, I don't get an error at all now. So, these wand tool errors might have been unrelated to the test failures during build.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631493326
https://github.com/qupath/qupath/issues/484#issuecomment-631493326:217,Availability,error,error,217,"It is a 64 bit machine and I get exact same two test errors during build on m12 too. And I've just noticed that on the pre-built m11 the wand tool does work even if there's an error. Also, most of the time there's no error! In fact, now that I'm writing this, I don't get an error at all now. So, these wand tool errors might have been unrelated to the test failures during build.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631493326
https://github.com/qupath/qupath/issues/484#issuecomment-631493326:275,Availability,error,error,275,"It is a 64 bit machine and I get exact same two test errors during build on m12 too. And I've just noticed that on the pre-built m11 the wand tool does work even if there's an error. Also, most of the time there's no error! In fact, now that I'm writing this, I don't get an error at all now. So, these wand tool errors might have been unrelated to the test failures during build.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631493326
https://github.com/qupath/qupath/issues/484#issuecomment-631493326:313,Availability,error,errors,313,"It is a 64 bit machine and I get exact same two test errors during build on m12 too. And I've just noticed that on the pre-built m11 the wand tool does work even if there's an error. Also, most of the time there's no error! In fact, now that I'm writing this, I don't get an error at all now. So, these wand tool errors might have been unrelated to the test failures during build.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631493326
https://github.com/qupath/qupath/issues/484#issuecomment-631493326:358,Availability,failure,failures,358,"It is a 64 bit machine and I get exact same two test errors during build on m12 too. And I've just noticed that on the pre-built m11 the wand tool does work even if there's an error. Also, most of the time there's no error! In fact, now that I'm writing this, I don't get an error at all now. So, these wand tool errors might have been unrelated to the test failures during build.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631493326
https://github.com/qupath/qupath/issues/484#issuecomment-631493326:48,Testability,test,test,48,"It is a 64 bit machine and I get exact same two test errors during build on m12 too. And I've just noticed that on the pre-built m11 the wand tool does work even if there's an error. Also, most of the time there's no error! In fact, now that I'm writing this, I don't get an error at all now. So, these wand tool errors might have been unrelated to the test failures during build.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631493326
https://github.com/qupath/qupath/issues/484#issuecomment-631493326:353,Testability,test,test,353,"It is a 64 bit machine and I get exact same two test errors during build on m12 too. And I've just noticed that on the pre-built m11 the wand tool does work even if there's an error. Also, most of the time there's no error! In fact, now that I'm writing this, I don't get an error at all now. So, these wand tool errors might have been unrelated to the test failures during build.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631493326
https://github.com/qupath/qupath/issues/484#issuecomment-631584620:97,Availability,error,errors,97,"I only mentioned the Wand tool because, if this works, it means that OpenCV is working. The test errors occur when OpenCV Mats are being created, so it sounds like - in these cases - OpenCV is not being loaded correctly. I do not know why this is happening for you but not for me.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631584620
https://github.com/qupath/qupath/issues/484#issuecomment-631584620:203,Performance,load,loaded,203,"I only mentioned the Wand tool because, if this works, it means that OpenCV is working. The test errors occur when OpenCV Mats are being created, so it sounds like - in these cases - OpenCV is not being loaded correctly. I do not know why this is happening for you but not for me.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631584620
https://github.com/qupath/qupath/issues/484#issuecomment-631584620:92,Testability,test,test,92,"I only mentioned the Wand tool because, if this works, it means that OpenCV is working. The test errors occur when OpenCV Mats are being created, so it sounds like - in these cases - OpenCV is not being loaded correctly. I do not know why this is happening for you but not for me.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631584620
https://github.com/qupath/qupath/issues/484#issuecomment-633258192:164,Availability,failure,failures,164,I got a fresh Windows 10 vm from https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ java 14 from https://jdk.java.net/14/ and I get the exact two test failures when building m12.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633258192
https://github.com/qupath/qupath/issues/484#issuecomment-633258192:159,Testability,test,test,159,I got a fresh Windows 10 vm from https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ java 14 from https://jdk.java.net/14/ and I get the exact two test failures when building m12.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633258192
https://github.com/qupath/qupath/issues/484#issuecomment-633259796:75,Availability,error,errors,75,"Did you change anything in the build script?. Specifically, I get the same errors as you if I change `useGPU = true`... which is one of the reasons why `useGPU = false`. I have not been able to replicate the problem on any platform where `useGPU = false`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633259796
https://github.com/qupath/qupath/issues/484#issuecomment-633265261:79,Performance,load,load,79,"Hmmm, well the problem certainly seems to be related to OpenCV being unable to load. Perhaps the binaries from JavaCPP are not supported on your system? But then it would be weird if the pre-build QuPath can use them (e.g. via the wand tool, pixel/object classifiers)... Is there any reason you need to build from source, rather than use the pre-built binaries?. Since I'm unable to replicate the problem on any computer I have access to, I'm really not sure I can help much further. Anything else I suggest to try would be a complete guess.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633265261
https://github.com/qupath/qupath/issues/484#issuecomment-633265261:428,Security,access,access,428,"Hmmm, well the problem certainly seems to be related to OpenCV being unable to load. Perhaps the binaries from JavaCPP are not supported on your system? But then it would be weird if the pre-build QuPath can use them (e.g. via the wand tool, pixel/object classifiers)... Is there any reason you need to build from source, rather than use the pre-built binaries?. Since I'm unable to replicate the problem on any computer I have access to, I'm really not sure I can help much further. Anything else I suggest to try would be a complete guess.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633265261
https://github.com/qupath/qupath/issues/484#issuecomment-633285245:154,Availability,error,error,154,"> Is there any reason you need to build from source, rather than use the pre-built binaries?. I'd like to get stardist working eventually. I get the same error when building it with tensorflow too but I always tried without that first. And when I run `build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12` after the failed build I get `Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: jnijavacpp (Not found in java.library.path)` followed by a segfault. The following ticket from just yesterday might be the same issue: https://github.com/bytedeco/javacpp/issues/399 and the latest commit there is about gradle too: https://github.com/bytedeco/javacpp/commit/3189a117080ca63ad93c6427cd367ed7395d5103 These might all be red herrings of course, I have very little experience with java, so I can't tell. . Looking at the stack trace this UnsatisfiedLinkError is coming from the `installWand` method (`Loader.load(opencv_core.class);`), which I guess is expected.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633285245
https://github.com/qupath/qupath/issues/484#issuecomment-633285245:888,Deployability,install,installWand,888,"> Is there any reason you need to build from source, rather than use the pre-built binaries?. I'd like to get stardist working eventually. I get the same error when building it with tensorflow too but I always tried without that first. And when I run `build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12` after the failed build I get `Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: jnijavacpp (Not found in java.library.path)` followed by a segfault. The following ticket from just yesterday might be the same issue: https://github.com/bytedeco/javacpp/issues/399 and the latest commit there is about gradle too: https://github.com/bytedeco/javacpp/commit/3189a117080ca63ad93c6427cd367ed7395d5103 These might all be red herrings of course, I have very little experience with java, so I can't tell. . Looking at the stack trace this UnsatisfiedLinkError is coming from the `installWand` method (`Loader.load(opencv_core.class);`), which I guess is expected.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633285245
https://github.com/qupath/qupath/issues/484#issuecomment-633285245:351,Performance,load,load,351,"> Is there any reason you need to build from source, rather than use the pre-built binaries?. I'd like to get stardist working eventually. I get the same error when building it with tensorflow too but I always tried without that first. And when I run `build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12` after the failed build I get `Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: jnijavacpp (Not found in java.library.path)` followed by a segfault. The following ticket from just yesterday might be the same issue: https://github.com/bytedeco/javacpp/issues/399 and the latest commit there is about gradle too: https://github.com/bytedeco/javacpp/commit/3189a117080ca63ad93c6427cd367ed7395d5103 These might all be red herrings of course, I have very little experience with java, so I can't tell. . Looking at the stack trace this UnsatisfiedLinkError is coming from the `installWand` method (`Loader.load(opencv_core.class);`), which I guess is expected.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633285245
https://github.com/qupath/qupath/issues/484#issuecomment-633285245:910,Performance,Load,Loader,910,"> Is there any reason you need to build from source, rather than use the pre-built binaries?. I'd like to get stardist working eventually. I get the same error when building it with tensorflow too but I always tried without that first. And when I run `build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12` after the failed build I get `Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: jnijavacpp (Not found in java.library.path)` followed by a segfault. The following ticket from just yesterday might be the same issue: https://github.com/bytedeco/javacpp/issues/399 and the latest commit there is about gradle too: https://github.com/bytedeco/javacpp/commit/3189a117080ca63ad93c6427cd367ed7395d5103 These might all be red herrings of course, I have very little experience with java, so I can't tell. . Looking at the stack trace this UnsatisfiedLinkError is coming from the `installWand` method (`Loader.load(opencv_core.class);`), which I guess is expected.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633285245
https://github.com/qupath/qupath/issues/484#issuecomment-633285245:917,Performance,load,load,917,"> Is there any reason you need to build from source, rather than use the pre-built binaries?. I'd like to get stardist working eventually. I get the same error when building it with tensorflow too but I always tried without that first. And when I run `build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12` after the failed build I get `Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: jnijavacpp (Not found in java.library.path)` followed by a segfault. The following ticket from just yesterday might be the same issue: https://github.com/bytedeco/javacpp/issues/399 and the latest commit there is about gradle too: https://github.com/bytedeco/javacpp/commit/3189a117080ca63ad93c6427cd367ed7395d5103 These might all be red herrings of course, I have very little experience with java, so I can't tell. . Looking at the stack trace this UnsatisfiedLinkError is coming from the `installWand` method (`Loader.load(opencv_core.class);`), which I guess is expected.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633285245
https://github.com/qupath/qupath/issues/484#issuecomment-633287941:38,Availability,down,down,38,"I get the Pointer warnings too (I dug down into them once - as far as I can tell they can be ignored)... but not the segfault. Yesterday's ticket does indeed look relevant, albeit a bit lacking in detail. Have you tried also building the JavaCpp example project+? It would be good to be able to figure out if the source of the problem exists entirely outside of QuPath. Also check out JavaCpp-presets - https://github.com/bytedeco/javacpp-presets/wiki. In times of desperation, you might replace the opencv declarations in build.gradle with opencv-platform: https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The difference is that opencv-platform does a rather more complete job of resolving dependencies... which here involves downloading binaries for *all* platforms, i.e. a lot more than is needed. This can help debug issues if QuPath's more stripped-down inclusions are the source of the problem - but I don't think that's the case here. Finally, you could try getting Gradle to skip tests (I haven't done this myself, so would also be googling the process) to see if the build works. > +I don't know exactly what the example project refers to...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633287941
https://github.com/qupath/qupath/issues/484#issuecomment-633287941:758,Availability,down,downloading,758,"I get the Pointer warnings too (I dug down into them once - as far as I can tell they can be ignored)... but not the segfault. Yesterday's ticket does indeed look relevant, albeit a bit lacking in detail. Have you tried also building the JavaCpp example project+? It would be good to be able to figure out if the source of the problem exists entirely outside of QuPath. Also check out JavaCpp-presets - https://github.com/bytedeco/javacpp-presets/wiki. In times of desperation, you might replace the opencv declarations in build.gradle with opencv-platform: https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The difference is that opencv-platform does a rather more complete job of resolving dependencies... which here involves downloading binaries for *all* platforms, i.e. a lot more than is needed. This can help debug issues if QuPath's more stripped-down inclusions are the source of the problem - but I don't think that's the case here. Finally, you could try getting Gradle to skip tests (I haven't done this myself, so would also be googling the process) to see if the build works. > +I don't know exactly what the example project refers to...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633287941
https://github.com/qupath/qupath/issues/484#issuecomment-633287941:885,Availability,down,down,885,"I get the Pointer warnings too (I dug down into them once - as far as I can tell they can be ignored)... but not the segfault. Yesterday's ticket does indeed look relevant, albeit a bit lacking in detail. Have you tried also building the JavaCpp example project+? It would be good to be able to figure out if the source of the problem exists entirely outside of QuPath. Also check out JavaCpp-presets - https://github.com/bytedeco/javacpp-presets/wiki. In times of desperation, you might replace the opencv declarations in build.gradle with opencv-platform: https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The difference is that opencv-platform does a rather more complete job of resolving dependencies... which here involves downloading binaries for *all* platforms, i.e. a lot more than is needed. This can help debug issues if QuPath's more stripped-down inclusions are the source of the problem - but I don't think that's the case here. Finally, you could try getting Gradle to skip tests (I haven't done this myself, so would also be googling the process) to see if the build works. > +I don't know exactly what the example project refers to...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633287941
https://github.com/qupath/qupath/issues/484#issuecomment-633287941:722,Integrability,depend,dependencies,722,"I get the Pointer warnings too (I dug down into them once - as far as I can tell they can be ignored)... but not the segfault. Yesterday's ticket does indeed look relevant, albeit a bit lacking in detail. Have you tried also building the JavaCpp example project+? It would be good to be able to figure out if the source of the problem exists entirely outside of QuPath. Also check out JavaCpp-presets - https://github.com/bytedeco/javacpp-presets/wiki. In times of desperation, you might replace the opencv declarations in build.gradle with opencv-platform: https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The difference is that opencv-platform does a rather more complete job of resolving dependencies... which here involves downloading binaries for *all* platforms, i.e. a lot more than is needed. This can help debug issues if QuPath's more stripped-down inclusions are the source of the problem - but I don't think that's the case here. Finally, you could try getting Gradle to skip tests (I haven't done this myself, so would also be googling the process) to see if the build works. > +I don't know exactly what the example project refers to...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633287941
https://github.com/qupath/qupath/issues/484#issuecomment-633287941:1019,Testability,test,tests,1019,"I get the Pointer warnings too (I dug down into them once - as far as I can tell they can be ignored)... but not the segfault. Yesterday's ticket does indeed look relevant, albeit a bit lacking in detail. Have you tried also building the JavaCpp example project+? It would be good to be able to figure out if the source of the problem exists entirely outside of QuPath. Also check out JavaCpp-presets - https://github.com/bytedeco/javacpp-presets/wiki. In times of desperation, you might replace the opencv declarations in build.gradle with opencv-platform: https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The difference is that opencv-platform does a rather more complete job of resolving dependencies... which here involves downloading binaries for *all* platforms, i.e. a lot more than is needed. This can help debug issues if QuPath's more stripped-down inclusions are the source of the problem - but I don't think that's the case here. Finally, you could try getting Gradle to skip tests (I haven't done this myself, so would also be googling the process) to see if the build works. > +I don't know exactly what the example project refers to...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633287941
https://github.com/qupath/qupath/issues/484#issuecomment-633306373:39,Testability,test,tests,39,"> you could try getting Gradle to skip tests (I haven't done this myself, so would also be googling the process) to see if the build works. Yeah, I've commented out the failing tests already. But it just segfaults when trying to run the resulting build. > Have you tried also building the JavaCpp example project+?. I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink. I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). > Also check out JavaCpp-presets - https://github.com/bytedeco/javacpp-presets/wiki; >; > In times of desperation, you might replace the opencv declarations in build.gradle with opencv-platform: https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. Not sure what to do with these I'm afraid. Well, I did build javacpp locally but no idea how to make use of that. If that's what you were suggesting maybe it's worth giving it a try. Although, I don't want to take up too much of your time with this because for the most part I don't really know what I'm doing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633306373
https://github.com/qupath/qupath/issues/484#issuecomment-633306373:177,Testability,test,tests,177,"> you could try getting Gradle to skip tests (I haven't done this myself, so would also be googling the process) to see if the build works. Yeah, I've commented out the failing tests already. But it just segfaults when trying to run the resulting build. > Have you tried also building the JavaCpp example project+?. I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink. I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). > Also check out JavaCpp-presets - https://github.com/bytedeco/javacpp-presets/wiki; >; > In times of desperation, you might replace the opencv declarations in build.gradle with opencv-platform: https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. Not sure what to do with these I'm afraid. Well, I did build javacpp locally but no idea how to make use of that. If that's what you were suggesting maybe it's worth giving it a try. Although, I don't want to take up too much of your time with this because for the most part I don't really know what I'm doing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633306373
https://github.com/qupath/qupath/issues/484#issuecomment-633364724:814,Availability,avail,available,814,"> > Have you tried also building the JavaCpp example project+?; > ; > I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink; > ; > I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). Interesting... I found this surprising, but then saw that the OpenCV version is comparatively old: https://github.com/bytedeco/sample-projects/blob/master/opencv-stitching-jlink/pom.xml#L41. That uses `4.0.1-1.5` rather than `4.3.0-1.5.3`. You can find the available versions (there are two in between) via https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The next version of OpenCV after that one you find works introduced a dependency on OpenBLAS. I recall this causes me some trouble, mentioned briefly in the build script: https://github.com/qupath/qupath/blob/master/build.gradle#L148. If this is connected, I think the sample should fail for you if you update the version to `4.3.0-1.5.3` (or any in between). QuPath *might* build for your if you downgrade the version in the build script to `4.0.1-1.5`, but this isn't really a solution... JavaCPP is a shared dependency for TensorFlow, and the versions end up rather tied to one another. I suspect other problems may arise if going back more versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633364724
https://github.com/qupath/qupath/issues/484#issuecomment-633364724:1341,Availability,down,downgrade,1341,"> > Have you tried also building the JavaCpp example project+?; > ; > I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink; > ; > I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). Interesting... I found this surprising, but then saw that the OpenCV version is comparatively old: https://github.com/bytedeco/sample-projects/blob/master/opencv-stitching-jlink/pom.xml#L41. That uses `4.0.1-1.5` rather than `4.3.0-1.5.3`. You can find the available versions (there are two in between) via https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The next version of OpenCV after that one you find works introduced a dependency on OpenBLAS. I recall this causes me some trouble, mentioned briefly in the build script: https://github.com/qupath/qupath/blob/master/build.gradle#L148. If this is connected, I think the sample should fail for you if you update the version to `4.3.0-1.5.3` (or any in between). QuPath *might* build for your if you downgrade the version in the build script to `4.0.1-1.5`, but this isn't really a solution... JavaCPP is a shared dependency for TensorFlow, and the versions end up rather tied to one another. I suspect other problems may arise if going back more versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633364724
https://github.com/qupath/qupath/issues/484#issuecomment-633364724:1247,Deployability,update,update,1247,"> > Have you tried also building the JavaCpp example project+?; > ; > I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink; > ; > I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). Interesting... I found this surprising, but then saw that the OpenCV version is comparatively old: https://github.com/bytedeco/sample-projects/blob/master/opencv-stitching-jlink/pom.xml#L41. That uses `4.0.1-1.5` rather than `4.3.0-1.5.3`. You can find the available versions (there are two in between) via https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The next version of OpenCV after that one you find works introduced a dependency on OpenBLAS. I recall this causes me some trouble, mentioned briefly in the build script: https://github.com/qupath/qupath/blob/master/build.gradle#L148. If this is connected, I think the sample should fail for you if you update the version to `4.3.0-1.5.3` (or any in between). QuPath *might* build for your if you downgrade the version in the build script to `4.0.1-1.5`, but this isn't really a solution... JavaCPP is a shared dependency for TensorFlow, and the versions end up rather tied to one another. I suspect other problems may arise if going back more versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633364724
https://github.com/qupath/qupath/issues/484#issuecomment-633364724:1014,Integrability,depend,dependency,1014,"> > Have you tried also building the JavaCpp example project+?; > ; > I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink; > ; > I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). Interesting... I found this surprising, but then saw that the OpenCV version is comparatively old: https://github.com/bytedeco/sample-projects/blob/master/opencv-stitching-jlink/pom.xml#L41. That uses `4.0.1-1.5` rather than `4.3.0-1.5.3`. You can find the available versions (there are two in between) via https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The next version of OpenCV after that one you find works introduced a dependency on OpenBLAS. I recall this causes me some trouble, mentioned briefly in the build script: https://github.com/qupath/qupath/blob/master/build.gradle#L148. If this is connected, I think the sample should fail for you if you update the version to `4.3.0-1.5.3` (or any in between). QuPath *might* build for your if you downgrade the version in the build script to `4.0.1-1.5`, but this isn't really a solution... JavaCPP is a shared dependency for TensorFlow, and the versions end up rather tied to one another. I suspect other problems may arise if going back more versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633364724
https://github.com/qupath/qupath/issues/484#issuecomment-633364724:1455,Integrability,depend,dependency,1455,"> > Have you tried also building the JavaCpp example project+?; > ; > I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink; > ; > I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). Interesting... I found this surprising, but then saw that the OpenCV version is comparatively old: https://github.com/bytedeco/sample-projects/blob/master/opencv-stitching-jlink/pom.xml#L41. That uses `4.0.1-1.5` rather than `4.3.0-1.5.3`. You can find the available versions (there are two in between) via https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The next version of OpenCV after that one you find works introduced a dependency on OpenBLAS. I recall this causes me some trouble, mentioned briefly in the build script: https://github.com/qupath/qupath/blob/master/build.gradle#L148. If this is connected, I think the sample should fail for you if you update the version to `4.3.0-1.5.3` (or any in between). QuPath *might* build for your if you downgrade the version in the build script to `4.0.1-1.5`, but this isn't really a solution... JavaCPP is a shared dependency for TensorFlow, and the versions end up rather tied to one another. I suspect other problems may arise if going back more versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633364724
https://github.com/qupath/qupath/issues/484#issuecomment-633366327:341,Performance,load,loaded,341,"FWIW you need 5 jars for QuPath + OpenCV to work:; ```; javacpp-1.5.3.jar; opencv-4.3.0-1.5.3.jar; openblas-0.3.9-1.5.3.jar; opencv-4.3.0-1.5.3-linux-x86_64.jar; openblas-0.3.9-1.5.3-linux-x86_64.jar; ```; The first three should be enough for everything to build - but not run. If either of the last two are missing - *or* if they cannot be loaded for some reason - then you get the kind of issue you report at runtime/test time. For earlier versions of QuPath/JavaCPP, the two OpenBLAS jars were not needed. If OpenBLAS seems to be the culprit, there are BLAS-related changes that can be made via system properties or by including other libraries... but I'm a bit out of my depth when it comes to them. A good starting point is ; https://github.com/bytedeco/javacpp-presets/tree/master/openblas",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633366327
https://github.com/qupath/qupath/issues/484#issuecomment-633366327:419,Testability,test,test,419,"FWIW you need 5 jars for QuPath + OpenCV to work:; ```; javacpp-1.5.3.jar; opencv-4.3.0-1.5.3.jar; openblas-0.3.9-1.5.3.jar; opencv-4.3.0-1.5.3-linux-x86_64.jar; openblas-0.3.9-1.5.3-linux-x86_64.jar; ```; The first three should be enough for everything to build - but not run. If either of the last two are missing - *or* if they cannot be loaded for some reason - then you get the kind of issue you report at runtime/test time. For earlier versions of QuPath/JavaCPP, the two OpenBLAS jars were not needed. If OpenBLAS seems to be the culprit, there are BLAS-related changes that can be made via system properties or by including other libraries... but I'm a bit out of my depth when it comes to them. A good starting point is ; https://github.com/bytedeco/javacpp-presets/tree/master/openblas",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633366327
https://github.com/qupath/qupath/issues/484#issuecomment-633513166:125,Testability,test,testing,125,"Intriguing... building and running worked, or just building?; Building should work with QuPath... if it stops before running/testing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633513166
https://github.com/qupath/qupath/issues/484#issuecomment-633518010:546,Modifiability,config,configure,546,> I changed it in pom.xml and opencv-stitching-jlink did work with 4.3.0-1.5.3. The stitching worked too. (I deleted the previous result first.). > Building this succeeded as well: https://github.com/bytedeco/gradle-javacpp/tree/master/samples/javacv-demo. `java -jar build/libs/javacv-demo-1.5.3.jar` does seem to do face detection correctly (only had to change 0 to 1 in `FrameGrabber.createDefault(0)` because the IR cam is the default one). > Building should work with QuPath... if it stops before running/testing. I just have no idea how to configure it correctly in `build.gradle`. (edit: typo),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633518010
https://github.com/qupath/qupath/issues/484#issuecomment-633518010:323,Safety,detect,detection,323,> I changed it in pom.xml and opencv-stitching-jlink did work with 4.3.0-1.5.3. The stitching worked too. (I deleted the previous result first.). > Building this succeeded as well: https://github.com/bytedeco/gradle-javacpp/tree/master/samples/javacv-demo. `java -jar build/libs/javacv-demo-1.5.3.jar` does seem to do face detection correctly (only had to change 0 to 1 in `FrameGrabber.createDefault(0)` because the IR cam is the default one). > Building should work with QuPath... if it stops before running/testing. I just have no idea how to configure it correctly in `build.gradle`. (edit: typo),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633518010
https://github.com/qupath/qupath/issues/484#issuecomment-633518010:510,Testability,test,testing,510,> I changed it in pom.xml and opencv-stitching-jlink did work with 4.3.0-1.5.3. The stitching worked too. (I deleted the previous result first.). > Building this succeeded as well: https://github.com/bytedeco/gradle-javacpp/tree/master/samples/javacv-demo. `java -jar build/libs/javacv-demo-1.5.3.jar` does seem to do face detection correctly (only had to change 0 to 1 in `FrameGrabber.createDefault(0)` because the IR cam is the default one). > Building should work with QuPath... if it stops before running/testing. I just have no idea how to configure it correctly in `build.gradle`. (edit: typo),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633518010
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:314,Availability,error,error,314,"I've since managed to build both m11 and m12 with `./gradlew clean assemble CreatePackage` and jdk 14 (it also seems to work using the current arch linux jdk v13 to build qupath m12). . When I first tried to skip the tests using the same approach last week the builds would segfault (I think with the same pointer error balazs described above). I got the that error today on one attempt , but can't seem to repeat it. . ```; Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on; 12:35:11.253 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:35:11.260 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:3",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:360,Availability,error,error,360,"I've since managed to build both m11 and m12 with `./gradlew clean assemble CreatePackage` and jdk 14 (it also seems to work using the current arch linux jdk v13 to build qupath m12). . When I first tried to skip the tests using the same approach last week the builds would segfault (I think with the same pointer error balazs described above). I got the that error today on one attempt , but can't seem to repeat it. . ```; Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on; 12:35:11.253 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:35:11.260 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:3",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:983,Availability,error,error,983,"I've since managed to build both m11 and m12 with `./gradlew clean assemble CreatePackage` and jdk 14 (it also seems to work using the current arch linux jdk v13 to build qupath m12). . When I first tried to skip the tests using the same approach last week the builds would segfault (I think with the same pointer error balazs described above). I got the that error today on one attempt , but can't seem to repeat it. . ```; Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on; 12:35:11.253 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:35:11.260 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:3",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:2442,Availability,error,error,2442,"s); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); #; # An error report file with more information is saved as:; # /home/gordon/src/qupath/hs_err_pid49988.log; [thread 50020 also had an error]; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-support/issues; #; [1] 49988 abort (core dumped) ./build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12; ```. The build I currently have with `-Ptensorflow-cpu=true` is working, including the wand tool and stardist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:2526,Availability,error,error,2526,"s); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); #; # An error report file with more information is saved as:; # /home/gordon/src/qupath/hs_err_pid49988.log; [thread 50020 also had an error]; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-support/issues; #; [1] 49988 abort (core dumped) ./build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12; ```. The build I currently have with `-Ptensorflow-cpu=true` is working, including the wand tool and stardist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:3074,Availability,error,error,3074,"s); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); #; # An error report file with more information is saved as:; # /home/gordon/src/qupath/hs_err_pid49988.log; [thread 50020 also had an error]; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-support/issues; #; [1] 49988 abort (core dumped) ./build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12; ```. The build I currently have with `-Ptensorflow-cpu=true` is working, including the wand tool and stardist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:3201,Availability,error,error,3201,"s); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); #; # An error report file with more information is saved as:; # /home/gordon/src/qupath/hs_err_pid49988.log; [thread 50020 also had an error]; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-support/issues; #; [1] 49988 abort (core dumped) ./build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12; ```. The build I currently have with `-Ptensorflow-cpu=true` is working, including the wand tool and stardist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:845,Performance,cache,cache,845,"I've since managed to build both m11 and m12 with `./gradlew clean assemble CreatePackage` and jdk 14 (it also seems to work using the current arch linux jdk v13 to build qupath m12). . When I first tried to skip the tests using the same approach last week the builds would segfault (I think with the same pointer error balazs described above). I got the that error today on one attempt , but can't seem to repeat it. . ```; Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on; 12:35:11.253 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:35:11.260 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:3",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:1208,Performance,Load,Loaded,1208,"e same approach last week the builds would segfault (I think with the same pointer error balazs described above). I got the that error today on one attempt , but can't seem to repeat it. . ```; Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on; 12:35:11.253 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:35:11.260 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:1357,Performance,Load,Loaded,1357,"attempt , but can't seem to repeat it. . ```; Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on; 12:35:11.253 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:35:11.260 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/go",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:1480,Performance,Load,Loaded,1480,"FX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:35:11.260 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [th",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:1604,Performance,Load,Loaded,1604,"plication Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Env",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:1666,Performance,load,load,1666,"plication Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Env",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:1671,Performance,Load,Loader,1671,"plication Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Env",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:1943,Performance,Load,Loaded,1943,"with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/system",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:2056,Performance,load,loading,2056," q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:2200,Performance,load,loaded,2200,"PathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); #; # An error report file with more information is saved as:; # /home/gordon/src/qupath/hs_err_pid49988.log; [thread 50020 also had a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:2227,Performance,load,load,2227,"PathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); #; # An error report file with more information is saved as:; # /home/gordon/src/qupath/hs_err_pid49988.log; [thread 50020 also had a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:2457,Safety,detect,detected,2457,"s); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); #; # An error report file with more information is saved as:; # /home/gordon/src/qupath/hs_err_pid49988.log; [thread 50020 also had an error]; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-support/issues; #; [1] 49988 abort (core dumped) ./build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12; ```. The build I currently have with `-Ptensorflow-cpu=true` is working, including the wand tool and stardist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:3342,Safety,abort,abort,3342,"s); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); #; # An error report file with more information is saved as:; # /home/gordon/src/qupath/hs_err_pid49988.log; [thread 50020 also had an error]; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-support/issues; #; [1] 49988 abort (core dumped) ./build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12; ```. The build I currently have with `-Ptensorflow-cpu=true` is working, including the wand tool and stardist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:217,Testability,test,tests,217,"I've since managed to build both m11 and m12 with `./gradlew clean assemble CreatePackage` and jdk 14 (it also seems to work using the current arch linux jdk v13 to build qupath m12). . When I first tried to skip the tests using the same approach last week the builds would segfault (I think with the same pointer error balazs described above). I got the that error today on one attempt , but can't seem to repeat it. . ```; Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on; 12:35:11.253 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:35:11.260 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:3",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:581,Testability,log,log,581,"I've since managed to build both m11 and m12 with `./gradlew clean assemble CreatePackage` and jdk 14 (it also seems to work using the current arch linux jdk v13 to build qupath m12). . When I first tried to skip the tests using the same approach last week the builds would segfault (I think with the same pointer error balazs described above). I got the that error today on one attempt , but can't seem to repeat it. . ```; Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on; 12:35:11.253 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:35:11.260 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:3",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-634101819:3170,Testability,log,log,3170,"s); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); #; # An error report file with more information is saved as:; # /home/gordon/src/qupath/hs_err_pid49988.log; [thread 50020 also had an error]; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-support/issues; #; [1] 49988 abort (core dumped) ./build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12; ```. The build I currently have with `-Ptensorflow-cpu=true` is working, including the wand tool and stardist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819
https://github.com/qupath/qupath/issues/484#issuecomment-642557843:737,Availability,error,error,737,"ps://github.com/qupath/qupath/commit/7e7e95. But when I run it (without tensorflow) it either hangs:. ```; 11:55:44.676 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (143 ms); 11:55:44.708 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (32 ms); Jun 11, 2020 11:55:44 AM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; ```. Or segfaults:. ```; 12:20:05.035 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; Unhandled exception; Type=Segmentation error vmState=0x00000000; J9Generic_Signal_Number=00000018 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00007F6CE64C99B0 Handler2=00007F6CE5DBD9F0 InaccessibleAddress=0000000000000000; RDI=00007F6CE8D56C03 RSI=0000000000000000 RAX=0000000000000000 RBX=00007F6CE8F580E0; RCX=000000000000000E RDX=0000000000000000 R8=0000000000000000 R9=0000000000000073; R10=0000000000000000 R11=0000000000000073 R12=00007F6ACBE8D7B0 R13=00007F6CE6C01340; R14=00007F6ACBE8D7B0 R15=00007F6A6C019B08; RIP=00007F6CE8D56622 GS=0000 FS=0000 RSP=00007F6ACBE8D710; EFlags=0000000000010213 CS=0033 RBP=00007F6CE877A0F2 ERR=0000000000000004; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000000; xmm0 61622f656d6f682f (f: 1836017664.000000, d: 1.278334e+161); xmm1 2e302d6874615075 (f: 1952534656.000000, d: 3.252889e-86); xmm2 4e203a296c6c756e (f: 1819047296.000000, d: 2.187422e+68); xmm3 642f62696c2f656d (f: 1815045504.000000, d: 3.881161e+174); xmm4 7369646572206e61 (f: 1914728064.000000, d: 8.877002e+247); xmm5 6f6d2e6362696c2f (f: 1651076096.000000, d: 5.530316e+228); xmm6 5f434c2f6e652f65 (f: 1852125056.000000, d: 7.896072e+150); xmm7 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm8 6e75007325203a73 (f: 622869120.000000, d: 1.214654e+224); xmm9 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm10 3f8eb851eb851eb9 ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642557843
https://github.com/qupath/qupath/issues/484#issuecomment-642557843:275,Performance,Load,Loaded,275,"The build now succeeds without any tests failing! With or without tensorflow as well, at https://github.com/qupath/qupath/commit/7e7e95. But when I run it (without tensorflow) it either hangs:. ```; 11:55:44.676 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (143 ms); 11:55:44.708 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (32 ms); Jun 11, 2020 11:55:44 AM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; ```. Or segfaults:. ```; 12:20:05.035 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; Unhandled exception; Type=Segmentation error vmState=0x00000000; J9Generic_Signal_Number=00000018 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00007F6CE64C99B0 Handler2=00007F6CE5DBD9F0 InaccessibleAddress=0000000000000000; RDI=00007F6CE8D56C03 RSI=0000000000000000 RAX=0000000000000000 RBX=00007F6CE8F580E0; RCX=000000000000000E RDX=0000000000000000 R8=0000000000000000 R9=0000000000000073; R10=0000000000000000 R11=0000000000000073 R12=00007F6ACBE8D7B0 R13=00007F6CE6C01340; R14=00007F6ACBE8D7B0 R15=00007F6A6C019B08; RIP=00007F6CE8D56622 GS=0000 FS=0000 RSP=00007F6ACBE8D710; EFlags=0000000000010213 CS=0033 RBP=00007F6CE877A0F2 ERR=0000000000000004; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000000; xmm0 61622f656d6f682f (f: 1836017664.000000, d: 1.278334e+161); xmm1 2e302d6874615075 (f: 1952534656.000000, d: 3.252889e-86); xmm2 4e203a296c6c756e (f: 1819047296.000000, d: 2.187422e+68); xmm3 642f62696c2f656d (f: 1815045504.000000, d: 3.881161e+174); xmm4 7369646572206e61 (f: 1914728064.000000, d: 8.877002e+247); xmm5 6f6d2e6362696c2f (f: 1651076096.000000, d: 5.530316e+228); xmm6 5f434c2f6e652f65 (f: 1852125056.000000, d: 7.896072e+150); xmm7 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm8 6e75007325203a73 (f: 622869120.000000, d: 1",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642557843
https://github.com/qupath/qupath/issues/484#issuecomment-642557843:395,Performance,Load,Loaded,395,"The build now succeeds without any tests failing! With or without tensorflow as well, at https://github.com/qupath/qupath/commit/7e7e95. But when I run it (without tensorflow) it either hangs:. ```; 11:55:44.676 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (143 ms); 11:55:44.708 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (32 ms); Jun 11, 2020 11:55:44 AM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; ```. Or segfaults:. ```; 12:20:05.035 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; Unhandled exception; Type=Segmentation error vmState=0x00000000; J9Generic_Signal_Number=00000018 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00007F6CE64C99B0 Handler2=00007F6CE5DBD9F0 InaccessibleAddress=0000000000000000; RDI=00007F6CE8D56C03 RSI=0000000000000000 RAX=0000000000000000 RBX=00007F6CE8F580E0; RCX=000000000000000E RDX=0000000000000000 R8=0000000000000000 R9=0000000000000073; R10=0000000000000000 R11=0000000000000073 R12=00007F6ACBE8D7B0 R13=00007F6CE6C01340; R14=00007F6ACBE8D7B0 R15=00007F6A6C019B08; RIP=00007F6CE8D56622 GS=0000 FS=0000 RSP=00007F6ACBE8D710; EFlags=0000000000010213 CS=0033 RBP=00007F6CE877A0F2 ERR=0000000000000004; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000000; xmm0 61622f656d6f682f (f: 1836017664.000000, d: 1.278334e+161); xmm1 2e302d6874615075 (f: 1952534656.000000, d: 3.252889e-86); xmm2 4e203a296c6c756e (f: 1819047296.000000, d: 2.187422e+68); xmm3 642f62696c2f656d (f: 1815045504.000000, d: 3.881161e+174); xmm4 7369646572206e61 (f: 1914728064.000000, d: 8.877002e+247); xmm5 6f6d2e6362696c2f (f: 1651076096.000000, d: 5.530316e+228); xmm6 5f434c2f6e652f65 (f: 1852125056.000000, d: 7.896072e+150); xmm7 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm8 6e75007325203a73 (f: 622869120.000000, d: 1",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642557843
https://github.com/qupath/qupath/issues/484#issuecomment-642557843:508,Performance,load,loading,508,"The build now succeeds without any tests failing! With or without tensorflow as well, at https://github.com/qupath/qupath/commit/7e7e95. But when I run it (without tensorflow) it either hangs:. ```; 11:55:44.676 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (143 ms); 11:55:44.708 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (32 ms); Jun 11, 2020 11:55:44 AM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; ```. Or segfaults:. ```; 12:20:05.035 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; Unhandled exception; Type=Segmentation error vmState=0x00000000; J9Generic_Signal_Number=00000018 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00007F6CE64C99B0 Handler2=00007F6CE5DBD9F0 InaccessibleAddress=0000000000000000; RDI=00007F6CE8D56C03 RSI=0000000000000000 RAX=0000000000000000 RBX=00007F6CE8F580E0; RCX=000000000000000E RDX=0000000000000000 R8=0000000000000000 R9=0000000000000073; R10=0000000000000000 R11=0000000000000073 R12=00007F6ACBE8D7B0 R13=00007F6CE6C01340; R14=00007F6ACBE8D7B0 R15=00007F6A6C019B08; RIP=00007F6CE8D56622 GS=0000 FS=0000 RSP=00007F6ACBE8D710; EFlags=0000000000010213 CS=0033 RBP=00007F6CE877A0F2 ERR=0000000000000004; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000000; xmm0 61622f656d6f682f (f: 1836017664.000000, d: 1.278334e+161); xmm1 2e302d6874615075 (f: 1952534656.000000, d: 3.252889e-86); xmm2 4e203a296c6c756e (f: 1819047296.000000, d: 2.187422e+68); xmm3 642f62696c2f656d (f: 1815045504.000000, d: 3.881161e+174); xmm4 7369646572206e61 (f: 1914728064.000000, d: 8.877002e+247); xmm5 6f6d2e6362696c2f (f: 1651076096.000000, d: 5.530316e+228); xmm6 5f434c2f6e652f65 (f: 1852125056.000000, d: 7.896072e+150); xmm7 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm8 6e75007325203a73 (f: 622869120.000000, d: 1",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642557843
https://github.com/qupath/qupath/issues/484#issuecomment-642557843:35,Testability,test,tests,35,"The build now succeeds without any tests failing! With or without tensorflow as well, at https://github.com/qupath/qupath/commit/7e7e95. But when I run it (without tensorflow) it either hangs:. ```; 11:55:44.676 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (143 ms); 11:55:44.708 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (32 ms); Jun 11, 2020 11:55:44 AM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; ```. Or segfaults:. ```; 12:20:05.035 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; Unhandled exception; Type=Segmentation error vmState=0x00000000; J9Generic_Signal_Number=00000018 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00007F6CE64C99B0 Handler2=00007F6CE5DBD9F0 InaccessibleAddress=0000000000000000; RDI=00007F6CE8D56C03 RSI=0000000000000000 RAX=0000000000000000 RBX=00007F6CE8F580E0; RCX=000000000000000E RDX=0000000000000000 R8=0000000000000000 R9=0000000000000073; R10=0000000000000000 R11=0000000000000073 R12=00007F6ACBE8D7B0 R13=00007F6CE6C01340; R14=00007F6ACBE8D7B0 R15=00007F6A6C019B08; RIP=00007F6CE8D56622 GS=0000 FS=0000 RSP=00007F6ACBE8D710; EFlags=0000000000010213 CS=0033 RBP=00007F6CE877A0F2 ERR=0000000000000004; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000000; xmm0 61622f656d6f682f (f: 1836017664.000000, d: 1.278334e+161); xmm1 2e302d6874615075 (f: 1952534656.000000, d: 3.252889e-86); xmm2 4e203a296c6c756e (f: 1819047296.000000, d: 2.187422e+68); xmm3 642f62696c2f656d (f: 1815045504.000000, d: 3.881161e+174); xmm4 7369646572206e61 (f: 1914728064.000000, d: 8.877002e+247); xmm5 6f6d2e6362696c2f (f: 1651076096.000000, d: 5.530316e+228); xmm6 5f434c2f6e652f65 (f: 1852125056.000000, d: 7.896072e+150); xmm7 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm8 6e75007325203a73 (f: 622869120.000000, d: 1",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642557843
https://github.com/qupath/qupath/issues/484#issuecomment-642557843:2638,Testability,log,logical,2638,"36017664.000000, d: 1.278334e+161); xmm1 2e302d6874615075 (f: 1952534656.000000, d: 3.252889e-86); xmm2 4e203a296c6c756e (f: 1819047296.000000, d: 2.187422e+68); xmm3 642f62696c2f656d (f: 1815045504.000000, d: 3.881161e+174); xmm4 7369646572206e61 (f: 1914728064.000000, d: 8.877002e+247); xmm5 6f6d2e6362696c2f (f: 1651076096.000000, d: 5.530316e+228); xmm6 5f434c2f6e652f65 (f: 1852125056.000000, d: 7.896072e+150); xmm7 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm8 6e75007325203a73 (f: 622869120.000000, d: 1.214654e+224); xmm9 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm10 3f8eb851eb851eb9 (f: 3951369984.000000, d: 1.500000e-02); xmm11 412fa9352e9352e9 (f: 781406976.000000, d: 1.037467e+06); xmm12 43e0000000000000 (f: 0.000000, d: 9.223372e+18); xmm13 3f847ae147ae147b (f: 1202590848.000000, d: 1.000000e-02); xmm14 000000004a2c510c (f: 1244418304.000000, d: 6.148243e-315); xmm15 000000004889da70 (f: 1216993920.000000, d: 6.012749e-315); Module=/lib/x86_64-linux-gnu/libdl.so.2; Module_base_address=00007F6CE8D55000 Symbol=dlerror; Symbol_address=00007F6CE8D56470; Target=2_90_20200416_45 (Linux 4.15.0-101-generic); CPU=amd64 (8 logical CPUs) (0x3e3f99000 RAM); ----------- Stack Backtrace -----------; dlerror+0x1b2 (0x00007F6CE8D56622 [libdl.so.2+0x1622]); (0x00007F6CE5DC0575 [libj9prt29.so+0x1d575]); (0x00007F6CE5DC0906 [libj9prt29.so+0x1d906]); (0x00007F6CE64FCD87 [libj9vm29.so+0xc3d87]); (0x00007F6CE64FD37D [libj9vm29.so+0xc437d]); (0x00007F6CE64FD5B9 [libj9vm29.so+0xc45b9]); (0x00007F6CE644EFDD [libj9vm29.so+0x15fdd]); (0x00007F6CE644BB04 [libj9vm29.so+0x12b04]); (0x00007F6CE6504ED2 [libj9vm29.so+0xcbed2]); ---------------------------------------. $ ls -l /lib/x86_64-linux-gnu/libdl.so.2; lrwxrwxrwx 1 root root 13 Apr 16 2018 /lib/x86_64-linux-gnu/libdl.so.2 -> libdl-2.27.so; $ ls -l /lib/x86_64-linux-gnu/libdl-2.27.so; -rw-r--r-- 1 root root 14560 Apr 16 2018 /lib/x86_64-linux-gnu/libdl-2.27.so; ```. These two are happening on the same build randomly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642557843
https://github.com/qupath/qupath/issues/484#issuecomment-642570985:101,Availability,ERROR,ERROR,101,"After removing jpen jar files one by one I got this:. ```; 12:48:39.843 [JavaFX Application Thread] [ERROR] qupath.lib.gui.dialogs.Dialogs - Extension error: Error loading extension - check 'View -> Show log' for details.; 12:48:40.031 [JavaFX Application Thread] [ERROR] qupath.lib.gui.QuPathGUI - qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; java.util.ServiceConfigurationError: qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; ```. I guess I'd need to comment out some code too. I can probably figure that out. I'll also try it on Windows later, because the same tests used to fail there too, so that might just work now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642570985
https://github.com/qupath/qupath/issues/484#issuecomment-642570985:151,Availability,error,error,151,"After removing jpen jar files one by one I got this:. ```; 12:48:39.843 [JavaFX Application Thread] [ERROR] qupath.lib.gui.dialogs.Dialogs - Extension error: Error loading extension - check 'View -> Show log' for details.; 12:48:40.031 [JavaFX Application Thread] [ERROR] qupath.lib.gui.QuPathGUI - qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; java.util.ServiceConfigurationError: qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; ```. I guess I'd need to comment out some code too. I can probably figure that out. I'll also try it on Windows later, because the same tests used to fail there too, so that might just work now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642570985
https://github.com/qupath/qupath/issues/484#issuecomment-642570985:158,Availability,Error,Error,158,"After removing jpen jar files one by one I got this:. ```; 12:48:39.843 [JavaFX Application Thread] [ERROR] qupath.lib.gui.dialogs.Dialogs - Extension error: Error loading extension - check 'View -> Show log' for details.; 12:48:40.031 [JavaFX Application Thread] [ERROR] qupath.lib.gui.QuPathGUI - qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; java.util.ServiceConfigurationError: qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; ```. I guess I'd need to comment out some code too. I can probably figure that out. I'll also try it on Windows later, because the same tests used to fail there too, so that might just work now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642570985
https://github.com/qupath/qupath/issues/484#issuecomment-642570985:265,Availability,ERROR,ERROR,265,"After removing jpen jar files one by one I got this:. ```; 12:48:39.843 [JavaFX Application Thread] [ERROR] qupath.lib.gui.dialogs.Dialogs - Extension error: Error loading extension - check 'View -> Show log' for details.; 12:48:40.031 [JavaFX Application Thread] [ERROR] qupath.lib.gui.QuPathGUI - qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; java.util.ServiceConfigurationError: qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; ```. I guess I'd need to comment out some code too. I can probably figure that out. I'll also try it on Windows later, because the same tests used to fail there too, so that might just work now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642570985
https://github.com/qupath/qupath/issues/484#issuecomment-642570985:164,Performance,load,loading,164,"After removing jpen jar files one by one I got this:. ```; 12:48:39.843 [JavaFX Application Thread] [ERROR] qupath.lib.gui.dialogs.Dialogs - Extension error: Error loading extension - check 'View -> Show log' for details.; 12:48:40.031 [JavaFX Application Thread] [ERROR] qupath.lib.gui.QuPathGUI - qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; java.util.ServiceConfigurationError: qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; ```. I guess I'd need to comment out some code too. I can probably figure that out. I'll also try it on Windows later, because the same tests used to fail there too, so that might just work now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642570985
https://github.com/qupath/qupath/issues/484#issuecomment-642570985:204,Testability,log,log,204,"After removing jpen jar files one by one I got this:. ```; 12:48:39.843 [JavaFX Application Thread] [ERROR] qupath.lib.gui.dialogs.Dialogs - Extension error: Error loading extension - check 'View -> Show log' for details.; 12:48:40.031 [JavaFX Application Thread] [ERROR] qupath.lib.gui.QuPathGUI - qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; java.util.ServiceConfigurationError: qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; ```. I guess I'd need to comment out some code too. I can probably figure that out. I'll also try it on Windows later, because the same tests used to fail there too, so that might just work now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642570985
https://github.com/qupath/qupath/issues/484#issuecomment-642570985:720,Testability,test,tests,720,"After removing jpen jar files one by one I got this:. ```; 12:48:39.843 [JavaFX Application Thread] [ERROR] qupath.lib.gui.dialogs.Dialogs - Extension error: Error loading extension - check 'View -> Show log' for details.; 12:48:40.031 [JavaFX Application Thread] [ERROR] qupath.lib.gui.QuPathGUI - qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; java.util.ServiceConfigurationError: qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; ```. I guess I'd need to comment out some code too. I can probably figure that out. I'll also try it on Windows later, because the same tests used to fail there too, so that might just work now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642570985
https://github.com/qupath/qupath/issues/484#issuecomment-642573508:223,Performance,load,load,223,"Actually, I see the thing to remove is `qupath-extension-pen-0.2.0.jar` - then the warning shouldn't appear (removing the other jpen jars is fine too). But the main thing is that it doesn't segfault - if an extension can't load then everything else should still work. Incidentally, what is the source of your OpenJDK distribution? Wondering if that is different from the AdoptOpenJDK version I have relied upon.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642573508
https://github.com/qupath/qupath/issues/484#issuecomment-648053127:427,Deployability,release,released,427,"@balazs-endresz looking again at your exception, I see a reference to `J9Generic_Signal_Number`. This causes me to guess that you're using OpenJ9 rather than Hotspot (you can get either from AdoptOpenJDK): https://www.eclipse.org/openj9/oj9_faq.html. I've only tested things using Hotspot (the default with OpenJDK); conceivably there might be some OpenJ9-related problem I've not seen before.. In any case, v0.2.1 is also now released - I'd be interested to know if you experience the same exceptions there. It would be great if you or @gawells could confirm if there remains any fixable issue here, or if it can be closed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-648053127
https://github.com/qupath/qupath/issues/484#issuecomment-648053127:261,Testability,test,tested,261,"@balazs-endresz looking again at your exception, I see a reference to `J9Generic_Signal_Number`. This causes me to guess that you're using OpenJ9 rather than Hotspot (you can get either from AdoptOpenJDK): https://www.eclipse.org/openj9/oj9_faq.html. I've only tested things using Hotspot (the default with OpenJDK); conceivably there might be some OpenJ9-related problem I've not seen before.. In any case, v0.2.1 is also now released - I'd be interested to know if you experience the same exceptions there. It would be great if you or @gawells could confirm if there remains any fixable issue here, or if it can be closed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-648053127
https://github.com/qupath/qupath/issues/484#issuecomment-648114847:198,Deployability,install,install,198,"Ah, I didn't realize there are two different kinds of java distributions! **It does work with Hotspot**, thank you!. For the record, on ubuntu, and similar distros the following should be enough to install java. Not having used java on linux before the adoptopenjdk site was a bit confusing to me. ```; wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | sudo apt-key add -; sudo add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/; # sudo apt remove adoptopenjdk-*; sudo apt install adoptopenjdk-14-hotspot; export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/ # add to ~/.bashrc; ```. Before:; ```; $ java --version; openjdk 14.0.1 2020-04-14; OpenJDK Runtime Environment AdoptOpenJDK (build 14.0.1+7); Eclipse OpenJ9 VM AdoptOpenJDK (build openj9-0.20.0, JRE 14 Linux amd64-64-Bit 20200416_45 (JIT enabled, AOT enabled); OpenJ9 - 05fa2d361; OMR - d4365f371; JCL - 5757187cae based on jdk-14.0.1+7); ```. After:; ```; $ java --version; openjdk 14.0.1 2020-04-14; OpenJDK Runtime Environment AdoptOpenJDK (build 14.0.1+7); OpenJDK 64-Bit Server VM AdoptOpenJDK (build 14.0.1+7, mixed mode, sharing); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-648114847
https://github.com/qupath/qupath/issues/484#issuecomment-648114847:520,Deployability,install,install,520,"Ah, I didn't realize there are two different kinds of java distributions! **It does work with Hotspot**, thank you!. For the record, on ubuntu, and similar distros the following should be enough to install java. Not having used java on linux before the adoptopenjdk site was a bit confusing to me. ```; wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | sudo apt-key add -; sudo add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/; # sudo apt remove adoptopenjdk-*; sudo apt install adoptopenjdk-14-hotspot; export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/ # add to ~/.bashrc; ```. Before:; ```; $ java --version; openjdk 14.0.1 2020-04-14; OpenJDK Runtime Environment AdoptOpenJDK (build 14.0.1+7); Eclipse OpenJ9 VM AdoptOpenJDK (build openj9-0.20.0, JRE 14 Linux amd64-64-Bit 20200416_45 (JIT enabled, AOT enabled); OpenJ9 - 05fa2d361; OMR - d4365f371; JCL - 5757187cae based on jdk-14.0.1+7); ```. After:; ```; $ java --version; openjdk 14.0.1 2020-04-14; OpenJDK Runtime Environment AdoptOpenJDK (build 14.0.1+7); OpenJDK 64-Bit Server VM AdoptOpenJDK (build 14.0.1+7, mixed mode, sharing); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-648114847
https://github.com/qupath/qupath/issues/490#issuecomment-631258118:158,Deployability,install,installer,158,"I've tested this on two computers and found:. * It works for me on Windows; * It works from me on Mac if I build the code from source... but not if I use the installer. This makes me think it *might* be a permissions issue within the operating system, but I'm not sure. Any more info you can provide would be helpful. In case it cannot be resolved, I've added documentation on setting the memory manually to; https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-can-i-not-set-the-maximum-memory",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-631258118
https://github.com/qupath/qupath/issues/490#issuecomment-631258118:5,Testability,test,tested,5,"I've tested this on two computers and found:. * It works for me on Windows; * It works from me on Mac if I build the code from source... but not if I use the installer. This makes me think it *might* be a permissions issue within the operating system, but I'm not sure. Any more info you can provide would be helpful. In case it cannot be resolved, I've added documentation on setting the memory manually to; https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-can-i-not-set-the-maximum-memory",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-631258118
https://github.com/qupath/qupath/issues/490#issuecomment-631288823:138,Modifiability,config,config,138,"A permission issue may be possible. I use Windows 10. . That is the log output:; INFO: Starting QuPath with parameters: []; INFO: Reading config file C:\Research\Software\QuPath-0.2.0-m12\app\QuPath-0.2.0-m12.cfg; INFO: Setting JVM option to -Xmx28672M. After changing QuPath-0.2.0-m12.cfg manually, it works without any problems. I think it is a permission issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-631288823
https://github.com/qupath/qupath/issues/490#issuecomment-631288823:68,Testability,log,log,68,"A permission issue may be possible. I use Windows 10. . That is the log output:; INFO: Starting QuPath with parameters: []; INFO: Reading config file C:\Research\Software\QuPath-0.2.0-m12\app\QuPath-0.2.0-m12.cfg; INFO: Setting JVM option to -Xmx28672M. After changing QuPath-0.2.0-m12.cfg manually, it works without any problems. I think it is a permission issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-631288823
https://github.com/qupath/qupath/issues/490#issuecomment-631420619:104,Deployability,release,release,104,"Turns out it wasn't permissions - thanks for reporting the problem, it should now be fixed in the final release :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-631420619
https://github.com/qupath/qupath/issues/490#issuecomment-1430091897:422,Availability,avail,available,422,"> Can I ask how did you edited cfg file in terminal?. First, locate `.cfg` file. On a Mac, you’ll need to right-click on QuPath.app and choose Show package contents.; The config file is inside the Contents/app directory.; Open the terminal, type ` sudo nano pathtoqupath/QuPath-0.2.3.cfg`. Enter password and edit this line at the end:; `java-options=-XX:MaxRAMPercentage=50`. In my case I set it to 85 instead of 50 % of available RAM.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-1430091897
https://github.com/qupath/qupath/issues/490#issuecomment-1430091897:171,Modifiability,config,config,171,"> Can I ask how did you edited cfg file in terminal?. First, locate `.cfg` file. On a Mac, you’ll need to right-click on QuPath.app and choose Show package contents.; The config file is inside the Contents/app directory.; Open the terminal, type ` sudo nano pathtoqupath/QuPath-0.2.3.cfg`. Enter password and edit this line at the end:; `java-options=-XX:MaxRAMPercentage=50`. In my case I set it to 85 instead of 50 % of available RAM.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-1430091897
https://github.com/qupath/qupath/issues/490#issuecomment-1430091897:296,Security,password,password,296,"> Can I ask how did you edited cfg file in terminal?. First, locate `.cfg` file. On a Mac, you’ll need to right-click on QuPath.app and choose Show package contents.; The config file is inside the Contents/app directory.; Open the terminal, type ` sudo nano pathtoqupath/QuPath-0.2.3.cfg`. Enter password and edit this line at the end:; `java-options=-XX:MaxRAMPercentage=50`. In my case I set it to 85 instead of 50 % of available RAM.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-1430091897
https://github.com/qupath/qupath/issues/490#issuecomment-1431663502:427,Availability,avail,available,427,"> > Can I ask how did you edited cfg file in terminal?; > ; > First, locate `.cfg` file. On a Mac, you’ll need to right-click on QuPath.app and choose Show package contents. The config file is inside the Contents/app directory. Open the terminal, type ` sudo nano pathtoqupath/QuPath-0.2.3.cfg`. Enter password and edit this line at the end: `java-options=-XX:MaxRAMPercentage=50`. In my case I set it to 85 instead of 50 % of available RAM. That's great. It worked! Thanks so much :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-1431663502
https://github.com/qupath/qupath/issues/490#issuecomment-1431663502:178,Modifiability,config,config,178,"> > Can I ask how did you edited cfg file in terminal?; > ; > First, locate `.cfg` file. On a Mac, you’ll need to right-click on QuPath.app and choose Show package contents. The config file is inside the Contents/app directory. Open the terminal, type ` sudo nano pathtoqupath/QuPath-0.2.3.cfg`. Enter password and edit this line at the end: `java-options=-XX:MaxRAMPercentage=50`. In my case I set it to 85 instead of 50 % of available RAM. That's great. It worked! Thanks so much :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-1431663502
https://github.com/qupath/qupath/issues/490#issuecomment-1431663502:302,Security,password,password,302,"> > Can I ask how did you edited cfg file in terminal?; > ; > First, locate `.cfg` file. On a Mac, you’ll need to right-click on QuPath.app and choose Show package contents. The config file is inside the Contents/app directory. Open the terminal, type ` sudo nano pathtoqupath/QuPath-0.2.3.cfg`. Enter password and edit this line at the end: `java-options=-XX:MaxRAMPercentage=50`. In my case I set it to 85 instead of 50 % of available RAM. That's great. It worked! Thanks so much :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-1431663502
https://github.com/qupath/qupath/pull/491#issuecomment-631304763:48,Modifiability,plugin,plugins,48,"Not sure about built-in, but there are Hunspell plugins for both!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/491#issuecomment-631304763
https://github.com/qupath/qupath/issues/493#issuecomment-631451060:119,Availability,error,error,119,"I haven't tried the new classifier with a large training set, and I'm afraid I really cannot help more without a clear error message (e.g. from the log). However, the new object classifier is not really intended to scale to 200,000 objects for interactive training... or, at least, doing so is likely to require more memory. Therefore this sounds like it may be a limitation rather than a bug. This may change in the future; in particular, a future release may document how to train a classifier via scripting in a way that requires less memory. The legacy classifier might cope with larger training sets but at a cost of being much more restricted in how it works, and having other issues (e.g. needing to be retrained when reloaded https://github.com/qupath/qupath/issues/343). It is deprecated, but not yet removed in case anyone still needs to use it: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-are-some-commands-marked-as-deprecated. For now I'd recommend trying to be more selective for training examples when using the new classifier, or else resort to the legacy classifier if you prefer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-631451060
https://github.com/qupath/qupath/issues/493#issuecomment-631451060:449,Deployability,release,release,449,"I haven't tried the new classifier with a large training set, and I'm afraid I really cannot help more without a clear error message (e.g. from the log). However, the new object classifier is not really intended to scale to 200,000 objects for interactive training... or, at least, doing so is likely to require more memory. Therefore this sounds like it may be a limitation rather than a bug. This may change in the future; in particular, a future release may document how to train a classifier via scripting in a way that requires less memory. The legacy classifier might cope with larger training sets but at a cost of being much more restricted in how it works, and having other issues (e.g. needing to be retrained when reloaded https://github.com/qupath/qupath/issues/343). It is deprecated, but not yet removed in case anyone still needs to use it: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-are-some-commands-marked-as-deprecated. For now I'd recommend trying to be more selective for training examples when using the new classifier, or else resort to the legacy classifier if you prefer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-631451060
https://github.com/qupath/qupath/issues/493#issuecomment-631451060:125,Integrability,message,message,125,"I haven't tried the new classifier with a large training set, and I'm afraid I really cannot help more without a clear error message (e.g. from the log). However, the new object classifier is not really intended to scale to 200,000 objects for interactive training... or, at least, doing so is likely to require more memory. Therefore this sounds like it may be a limitation rather than a bug. This may change in the future; in particular, a future release may document how to train a classifier via scripting in a way that requires less memory. The legacy classifier might cope with larger training sets but at a cost of being much more restricted in how it works, and having other issues (e.g. needing to be retrained when reloaded https://github.com/qupath/qupath/issues/343). It is deprecated, but not yet removed in case anyone still needs to use it: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-are-some-commands-marked-as-deprecated. For now I'd recommend trying to be more selective for training examples when using the new classifier, or else resort to the legacy classifier if you prefer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-631451060
https://github.com/qupath/qupath/issues/493#issuecomment-631451060:148,Testability,log,log,148,"I haven't tried the new classifier with a large training set, and I'm afraid I really cannot help more without a clear error message (e.g. from the log). However, the new object classifier is not really intended to scale to 200,000 objects for interactive training... or, at least, doing so is likely to require more memory. Therefore this sounds like it may be a limitation rather than a bug. This may change in the future; in particular, a future release may document how to train a classifier via scripting in a way that requires less memory. The legacy classifier might cope with larger training sets but at a cost of being much more restricted in how it works, and having other issues (e.g. needing to be retrained when reloaded https://github.com/qupath/qupath/issues/343). It is deprecated, but not yet removed in case anyone still needs to use it: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-are-some-commands-marked-as-deprecated. For now I'd recommend trying to be more selective for training examples when using the new classifier, or else resort to the legacy classifier if you prefer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-631451060
https://github.com/qupath/qupath/issues/493#issuecomment-631451060:113,Usability,clear,clear,113,"I haven't tried the new classifier with a large training set, and I'm afraid I really cannot help more without a clear error message (e.g. from the log). However, the new object classifier is not really intended to scale to 200,000 objects for interactive training... or, at least, doing so is likely to require more memory. Therefore this sounds like it may be a limitation rather than a bug. This may change in the future; in particular, a future release may document how to train a classifier via scripting in a way that requires less memory. The legacy classifier might cope with larger training sets but at a cost of being much more restricted in how it works, and having other issues (e.g. needing to be retrained when reloaded https://github.com/qupath/qupath/issues/343). It is deprecated, but not yet removed in case anyone still needs to use it: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-are-some-commands-marked-as-deprecated. For now I'd recommend trying to be more selective for training examples when using the new classifier, or else resort to the legacy classifier if you prefer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-631451060
https://github.com/qupath/qupath/issues/493#issuecomment-633892246:117,Performance,load,load,117,"Hi Pete, the 200,000 objects are ~ 200 Mbytes great. The original images are 20 Gbytes great. Why is it necessary to load the whole image for training? Could there not be a better way by temporary storage just of the training objects?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633892246
https://github.com/qupath/qupath/issues/493#issuecomment-633901008:714,Availability,avail,available,714,"It won't load the pixel data if it doesn't need it, only the objects. However, it does this less efficiently than the old classifiers - and so will require *some* more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). I don't know how much RAM you have, and how much of it is given to pixels (rather than objects), so I can't estimate when this limit is reached in your case. Ultimately the new design will enable more powerful and flexible classifiers in future versions (because more information is available). We will also look to improve the efficiency in the future, and track the memory use better so that we can give more informative warnings before a crash. But all of this will take some time to write, and will not appear in v0.2.0. If there is a clear memory leak (and QuPath crashes with a small number of objects, or an exact error log can help us find a problem) then we'll try to fix it. But at this point, I don't know if that's the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633901008
https://github.com/qupath/qupath/issues/493#issuecomment-633901008:1052,Availability,error,error,1052,"It won't load the pixel data if it doesn't need it, only the objects. However, it does this less efficiently than the old classifiers - and so will require *some* more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). I don't know how much RAM you have, and how much of it is given to pixels (rather than objects), so I can't estimate when this limit is reached in your case. Ultimately the new design will enable more powerful and flexible classifiers in future versions (because more information is available). We will also look to improve the efficiency in the future, and track the memory use better so that we can give more informative warnings before a crash. But all of this will take some time to write, and will not appear in v0.2.0. If there is a clear memory leak (and QuPath crashes with a small number of objects, or an exact error log can help us find a problem) then we'll try to fix it. But at this point, I don't know if that's the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633901008
https://github.com/qupath/qupath/issues/493#issuecomment-633901008:97,Energy Efficiency,efficient,efficiently,97,"It won't load the pixel data if it doesn't need it, only the objects. However, it does this less efficiently than the old classifiers - and so will require *some* more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). I don't know how much RAM you have, and how much of it is given to pixels (rather than objects), so I can't estimate when this limit is reached in your case. Ultimately the new design will enable more powerful and flexible classifiers in future versions (because more information is available). We will also look to improve the efficiency in the future, and track the memory use better so that we can give more informative warnings before a crash. But all of this will take some time to write, and will not appear in v0.2.0. If there is a clear memory leak (and QuPath crashes with a small number of objects, or an exact error log can help us find a problem) then we'll try to fix it. But at this point, I don't know if that's the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633901008
https://github.com/qupath/qupath/issues/493#issuecomment-633901008:632,Energy Efficiency,power,powerful,632,"It won't load the pixel data if it doesn't need it, only the objects. However, it does this less efficiently than the old classifiers - and so will require *some* more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). I don't know how much RAM you have, and how much of it is given to pixels (rather than objects), so I can't estimate when this limit is reached in your case. Ultimately the new design will enable more powerful and flexible classifiers in future versions (because more information is available). We will also look to improve the efficiency in the future, and track the memory use better so that we can give more informative warnings before a crash. But all of this will take some time to write, and will not appear in v0.2.0. If there is a clear memory leak (and QuPath crashes with a small number of objects, or an exact error log can help us find a problem) then we'll try to fix it. But at this point, I don't know if that's the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633901008
https://github.com/qupath/qupath/issues/493#issuecomment-633901008:645,Modifiability,flexible,flexible,645,"It won't load the pixel data if it doesn't need it, only the objects. However, it does this less efficiently than the old classifiers - and so will require *some* more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). I don't know how much RAM you have, and how much of it is given to pixels (rather than objects), so I can't estimate when this limit is reached in your case. Ultimately the new design will enable more powerful and flexible classifiers in future versions (because more information is available). We will also look to improve the efficiency in the future, and track the memory use better so that we can give more informative warnings before a crash. But all of this will take some time to write, and will not appear in v0.2.0. If there is a clear memory leak (and QuPath crashes with a small number of objects, or an exact error log can help us find a problem) then we'll try to fix it. But at this point, I don't know if that's the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633901008
https://github.com/qupath/qupath/issues/493#issuecomment-633901008:9,Performance,load,load,9,"It won't load the pixel data if it doesn't need it, only the objects. However, it does this less efficiently than the old classifiers - and so will require *some* more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). I don't know how much RAM you have, and how much of it is given to pixels (rather than objects), so I can't estimate when this limit is reached in your case. Ultimately the new design will enable more powerful and flexible classifiers in future versions (because more information is available). We will also look to improve the efficiency in the future, and track the memory use better so that we can give more informative warnings before a crash. But all of this will take some time to write, and will not appear in v0.2.0. If there is a clear memory leak (and QuPath crashes with a small number of objects, or an exact error log can help us find a problem) then we'll try to fix it. But at this point, I don't know if that's the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633901008
https://github.com/qupath/qupath/issues/493#issuecomment-633901008:1058,Testability,log,log,1058,"It won't load the pixel data if it doesn't need it, only the objects. However, it does this less efficiently than the old classifiers - and so will require *some* more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). I don't know how much RAM you have, and how much of it is given to pixels (rather than objects), so I can't estimate when this limit is reached in your case. Ultimately the new design will enable more powerful and flexible classifiers in future versions (because more information is available). We will also look to improve the efficiency in the future, and track the memory use better so that we can give more informative warnings before a crash. But all of this will take some time to write, and will not appear in v0.2.0. If there is a clear memory leak (and QuPath crashes with a small number of objects, or an exact error log can help us find a problem) then we'll try to fix it. But at this point, I don't know if that's the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633901008
https://github.com/qupath/qupath/issues/493#issuecomment-633901008:970,Usability,clear,clear,970,"It won't load the pixel data if it doesn't need it, only the objects. However, it does this less efficiently than the old classifiers - and so will require *some* more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). I don't know how much RAM you have, and how much of it is given to pixels (rather than objects), so I can't estimate when this limit is reached in your case. Ultimately the new design will enable more powerful and flexible classifiers in future versions (because more information is available). We will also look to improve the efficiency in the future, and track the memory use better so that we can give more informative warnings before a crash. But all of this will take some time to write, and will not appear in v0.2.0. If there is a clear memory leak (and QuPath crashes with a small number of objects, or an exact error log can help us find a problem) then we'll try to fix it. But at this point, I don't know if that's the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633901008
https://github.com/qupath/qupath/issues/493#issuecomment-635237844:35,Deployability,upgrade,upgrade,35,"Hi Pete! For my research, I had to upgrade my memory from 32 Gbyte to 64 Gbyte. It has worked with more memory ;) But what the hell is QuPath loading to the memory? The original data is 20 Gbyte great. QuPath allocated 48 Gbyte memory to calculate the classifier. Does OpenCV need that much memory? . Btw. QuPath seems to not release the memory. I checked ObjectClassifierCommand.java ; On line 438 you closed the imageserver for the current image, but not for the other entries?. ![grafik](https://user-images.githubusercontent.com/44176896/83126297-eabf3100-a0d8-11ea-8d55-aae4bb20bc5d.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635237844
https://github.com/qupath/qupath/issues/493#issuecomment-635237844:326,Deployability,release,release,326,"Hi Pete! For my research, I had to upgrade my memory from 32 Gbyte to 64 Gbyte. It has worked with more memory ;) But what the hell is QuPath loading to the memory? The original data is 20 Gbyte great. QuPath allocated 48 Gbyte memory to calculate the classifier. Does OpenCV need that much memory? . Btw. QuPath seems to not release the memory. I checked ObjectClassifierCommand.java ; On line 438 you closed the imageserver for the current image, but not for the other entries?. ![grafik](https://user-images.githubusercontent.com/44176896/83126297-eabf3100-a0d8-11ea-8d55-aae4bb20bc5d.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635237844
https://github.com/qupath/qupath/issues/493#issuecomment-635237844:209,Energy Efficiency,allocate,allocated,209,"Hi Pete! For my research, I had to upgrade my memory from 32 Gbyte to 64 Gbyte. It has worked with more memory ;) But what the hell is QuPath loading to the memory? The original data is 20 Gbyte great. QuPath allocated 48 Gbyte memory to calculate the classifier. Does OpenCV need that much memory? . Btw. QuPath seems to not release the memory. I checked ObjectClassifierCommand.java ; On line 438 you closed the imageserver for the current image, but not for the other entries?. ![grafik](https://user-images.githubusercontent.com/44176896/83126297-eabf3100-a0d8-11ea-8d55-aae4bb20bc5d.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635237844
https://github.com/qupath/qupath/issues/493#issuecomment-635237844:142,Performance,load,loading,142,"Hi Pete! For my research, I had to upgrade my memory from 32 Gbyte to 64 Gbyte. It has worked with more memory ;) But what the hell is QuPath loading to the memory? The original data is 20 Gbyte great. QuPath allocated 48 Gbyte memory to calculate the classifier. Does OpenCV need that much memory? . Btw. QuPath seems to not release the memory. I checked ObjectClassifierCommand.java ; On line 438 you closed the imageserver for the current image, but not for the other entries?. ![grafik](https://user-images.githubusercontent.com/44176896/83126297-eabf3100-a0d8-11ea-8d55-aae4bb20bc5d.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635237844
https://github.com/qupath/qupath/issues/493#issuecomment-635240041:447,Availability,down,down,447,"I'd need more information from you to be able to answer that... what exactly are the steps that you have applied, what features calculated, how many objects per image etc. Note also that the memory reported in Windows might not be the best guide. Use *View &rarr; Show memory monitor* within QuPath instead, and press *Reclaim memory* to find out what is *really* needed. And you can also clear the tile cache/reset undo/redo to really squeeze it down to the essentials of what QuPath currently needs at that moment. VisualVM is the technical way to find out what *exactly* is being loaded: https://visualvm.github.io",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240041
https://github.com/qupath/qupath/issues/493#issuecomment-635240041:276,Energy Efficiency,monitor,monitor,276,"I'd need more information from you to be able to answer that... what exactly are the steps that you have applied, what features calculated, how many objects per image etc. Note also that the memory reported in Windows might not be the best guide. Use *View &rarr; Show memory monitor* within QuPath instead, and press *Reclaim memory* to find out what is *really* needed. And you can also clear the tile cache/reset undo/redo to really squeeze it down to the essentials of what QuPath currently needs at that moment. VisualVM is the technical way to find out what *exactly* is being loaded: https://visualvm.github.io",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240041
https://github.com/qupath/qupath/issues/493#issuecomment-635240041:404,Performance,cache,cache,404,"I'd need more information from you to be able to answer that... what exactly are the steps that you have applied, what features calculated, how many objects per image etc. Note also that the memory reported in Windows might not be the best guide. Use *View &rarr; Show memory monitor* within QuPath instead, and press *Reclaim memory* to find out what is *really* needed. And you can also clear the tile cache/reset undo/redo to really squeeze it down to the essentials of what QuPath currently needs at that moment. VisualVM is the technical way to find out what *exactly* is being loaded: https://visualvm.github.io",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240041
https://github.com/qupath/qupath/issues/493#issuecomment-635240041:583,Performance,load,loaded,583,"I'd need more information from you to be able to answer that... what exactly are the steps that you have applied, what features calculated, how many objects per image etc. Note also that the memory reported in Windows might not be the best guide. Use *View &rarr; Show memory monitor* within QuPath instead, and press *Reclaim memory* to find out what is *really* needed. And you can also clear the tile cache/reset undo/redo to really squeeze it down to the essentials of what QuPath currently needs at that moment. VisualVM is the technical way to find out what *exactly* is being loaded: https://visualvm.github.io",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240041
https://github.com/qupath/qupath/issues/493#issuecomment-635240041:240,Usability,guid,guide,240,"I'd need more information from you to be able to answer that... what exactly are the steps that you have applied, what features calculated, how many objects per image etc. Note also that the memory reported in Windows might not be the best guide. Use *View &rarr; Show memory monitor* within QuPath instead, and press *Reclaim memory* to find out what is *really* needed. And you can also clear the tile cache/reset undo/redo to really squeeze it down to the essentials of what QuPath currently needs at that moment. VisualVM is the technical way to find out what *exactly* is being loaded: https://visualvm.github.io",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240041
https://github.com/qupath/qupath/issues/493#issuecomment-635240041:389,Usability,clear,clear,389,"I'd need more information from you to be able to answer that... what exactly are the steps that you have applied, what features calculated, how many objects per image etc. Note also that the memory reported in Windows might not be the best guide. Use *View &rarr; Show memory monitor* within QuPath instead, and press *Reclaim memory* to find out what is *really* needed. And you can also clear the tile cache/reset undo/redo to really squeeze it down to the essentials of what QuPath currently needs at that moment. VisualVM is the technical way to find out what *exactly* is being loaded: https://visualvm.github.io",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240041
https://github.com/qupath/qupath/issues/493#issuecomment-635240041:416,Usability,undo,undo,416,"I'd need more information from you to be able to answer that... what exactly are the steps that you have applied, what features calculated, how many objects per image etc. Note also that the memory reported in Windows might not be the best guide. Use *View &rarr; Show memory monitor* within QuPath instead, and press *Reclaim memory* to find out what is *really* needed. And you can also clear the tile cache/reset undo/redo to really squeeze it down to the essentials of what QuPath currently needs at that moment. VisualVM is the technical way to find out what *exactly* is being loaded: https://visualvm.github.io",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240041
https://github.com/qupath/qupath/issues/493#issuecomment-635240856:25,Deployability,release,release,25,"Btw. QuPath seems to not release the memory. I checked ObjectClassifierCommand.java; On line 438 you closed the imageserver for the current image, but not for the other entries?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240856
https://github.com/qupath/qupath/issues/493#issuecomment-641790413:65,Energy Efficiency,efficient,efficiently,65,"Addition upon further reflection... > However, it does this less efficiently than the old classifiers - and so will require _some_ more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). The difference in required memory is probably more than this suggests: v0.2.0 will store *all* objects for each training image, not only the ones that fall within annotations (and are therefore used for training). Therefore adding up the size of the various .qpdata files is a decent starting point to estimate the amount of memory required. It should certainly be possible to improve the efficiency of this in a future version. In the meantime, it would be possible to duplicate images & data that you will use for training, and remove extraneous objects manually.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-641790413
https://github.com/qupath/qupath/issues/493#issuecomment-1791274580:103,Integrability,message,message,103,"Hi! I am trying ""Load pixel classifier"" with a model in an ROI, but QuPath 4.4 crashes every time. The message is: java.lang.OutOfMemoryError: Java heap space. Would you know how I can solve it? Thanks for your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791274580
https://github.com/qupath/qupath/issues/493#issuecomment-1791274580:17,Performance,Load,Load,17,"Hi! I am trying ""Load pixel classifier"" with a model in an ROI, but QuPath 4.4 crashes every time. The message is: java.lang.OutOfMemoryError: Java heap space. Would you know how I can solve it? Thanks for your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791274580
https://github.com/qupath/qupath/issues/493#issuecomment-1791280813:105,Availability,error,error,105,"@suzeteguarda you could try posting your question on the forum at https://forum.image.sc/tag/qupath. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791280813
https://github.com/qupath/qupath/issues/493#issuecomment-1791280813:294,Performance,load,loading,294,"@suzeteguarda you could try posting your question on the forum at https://forum.image.sc/tag/qupath. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791280813
https://github.com/qupath/qupath/issues/493#issuecomment-1791280813:397,Safety,avoid,avoid,397,"@suzeteguarda you could try posting your question on the forum at https://forum.image.sc/tag/qupath. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791280813
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:708,Availability,Avail,AvailPageFile,708,"Thank you so much for answering. Is that information that you asked about my memory?. -------------- S Y S T E M ---------------. OS:; Windows 10 , 64 bit Build 19041 (10.0.19041.3570); OS uptime: 5 days 10:23 hours. CPU: total 6 (initial active 6) (6 cores per cpu, 1 threads per core) family 6 model 158 stepping 10 microcode 0xea, cx8, cmov, fxsr, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, rtm, adx, fma, vzeroupper, clflush, clflushopt; Processor Information for all 6 processors :; Max Mhz: 3000, Current Mhz: 3000, Mhz Limit: 3000. Memory: 4k page, system-wide physical 7966M (772M free); TotalPageFile size 23838M (AvailPageFile size 7045M); current process WorkingSet (physical memory assigned to process): 3284M, peak: 3876M; current process commit charge (""private bytes""): 6219M, peak: 6444M. vm_info: OpenJDK 64-Bit Server VM (17.0.8+7) for windows-amd64 JRE (17.0.8+7), built on Jul 18 2023 21:02:32 by ""admin"" with MS VC++ 16.7 (VS2019). END. From: Pete ***@***.***>; Sent: Thursday, November 2, 2023 2:08 PM; To: qupath/qupath ***@***.***>; Cc: Farias Da Guarda, Suzete Nascimento ***@***.***>; Mention ***@***.***>; Subject: Re: [qupath/qupath] Load training in object classifier -> QuPath crashes (#493). External Email - Use Caution. @suzeteguarda<https://secure-web.cisco.com/15zJZ1AC2HfUFv9L0mLItqMCfEQMcq1aVBJmggNtWQuQ1aMdkxQL4M8DQsziZIjbQclRsiUgnd4btBVr7WmNM9GAmb5IdGegWqzsNoLW7i0t8ZduDtcd418DQ9BIIDpRAJC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WF",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:2275,Availability,error,error,2275,"https://secure-web.cisco.com/15zJZ1AC2HfUFv9L0mLItqMCfEQMcq1aVBJmggNtWQuQ1aMdkxQL4M8DQsziZIjbQclRsiUgnd4btBVr7WmNM9GAmb5IdGegWqzsNoLW7i0t8ZduDtcd418DQ9BIIDpRAJC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WFZwGzOR3GcJ4WLvQ2nVTFF7JEFSGly69C9pq9zGxJ69U6IM5ck9ofp9vkUV14NNMWH0h1u9pMUi3qXwaLEHdnCfRaAU7pipTjdj7etnYxMl6fke2A03VF49uEY6P4XmHIM3ote076fSVZpQqVTzYq0orKjFBwoKIbptcmC4XxHSSCRt900YIULIVQAtzU62qtHv_TEqaLa9vgoz2qhsY9NbYDfMfFPtA/https%3A%2F%2Fforum.image.sc%2Ftag%2Fqupath>. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgM",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:3873,Availability,error,error,3873,"opic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA5G6YB3KO5IO3F2PMFLETCDYCPOOXAVCNFSM4NF3XJJKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCNZZGEZDQMBYGEZQ>.; You are receiving this because you were mentioned.Message ID: ***@***.******@***.***>>; The information in this e-mail is intended only for the person to whom it is addressed. If you believe this e-mail was sent to you in error and the e-mail contains patient information, please contact the Mass General Brigham Compliance HelpLine at https://www.massgeneralbrigham.org/complianceline <https://www.massgeneralbrigham.org/complianceline> .; Please note that this e-mail is not secure (encrypted). If you do not wish to continue communication over unencrypted e-mail, please notify the sender of this message immediately. Continuing to send or respond to e-mail after receiving this message means you understand and accept this risk and wish to continue to communicate over unencrypted e-mail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:844,Energy Efficiency,charge,charge,844,"Thank you so much for answering. Is that information that you asked about my memory?. -------------- S Y S T E M ---------------. OS:; Windows 10 , 64 bit Build 19041 (10.0.19041.3570); OS uptime: 5 days 10:23 hours. CPU: total 6 (initial active 6) (6 cores per cpu, 1 threads per core) family 6 model 158 stepping 10 microcode 0xea, cx8, cmov, fxsr, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, rtm, adx, fma, vzeroupper, clflush, clflushopt; Processor Information for all 6 processors :; Max Mhz: 3000, Current Mhz: 3000, Mhz Limit: 3000. Memory: 4k page, system-wide physical 7966M (772M free); TotalPageFile size 23838M (AvailPageFile size 7045M); current process WorkingSet (physical memory assigned to process): 3284M, peak: 3876M; current process commit charge (""private bytes""): 6219M, peak: 6444M. vm_info: OpenJDK 64-Bit Server VM (17.0.8+7) for windows-amd64 JRE (17.0.8+7), built on Jul 18 2023 21:02:32 by ""admin"" with MS VC++ 16.7 (VS2019). END. From: Pete ***@***.***>; Sent: Thursday, November 2, 2023 2:08 PM; To: qupath/qupath ***@***.***>; Cc: Farias Da Guarda, Suzete Nascimento ***@***.***>; Mention ***@***.***>; Subject: Re: [qupath/qupath] Load training in object classifier -> QuPath crashes (#493). External Email - Use Caution. @suzeteguarda<https://secure-web.cisco.com/15zJZ1AC2HfUFv9L0mLItqMCfEQMcq1aVBJmggNtWQuQ1aMdkxQL4M8DQsziZIjbQclRsiUgnd4btBVr7WmNM9GAmb5IdGegWqzsNoLW7i0t8ZduDtcd418DQ9BIIDpRAJC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WF",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:3701,Integrability,Message,Message,3701,"opic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA5G6YB3KO5IO3F2PMFLETCDYCPOOXAVCNFSM4NF3XJJKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCNZZGEZDQMBYGEZQ>.; You are receiving this because you were mentioned.Message ID: ***@***.******@***.***>>; The information in this e-mail is intended only for the person to whom it is addressed. If you believe this e-mail was sent to you in error and the e-mail contains patient information, please contact the Mass General Brigham Compliance HelpLine at https://www.massgeneralbrigham.org/complianceline <https://www.massgeneralbrigham.org/complianceline> .; Please note that this e-mail is not secure (encrypted). If you do not wish to continue communication over unencrypted e-mail, please notify the sender of this message immediately. Continuing to send or respond to e-mail after receiving this message means you understand and accept this risk and wish to continue to communicate over unencrypted e-mail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:4251,Integrability,message,message,4251,"opic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA5G6YB3KO5IO3F2PMFLETCDYCPOOXAVCNFSM4NF3XJJKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCNZZGEZDQMBYGEZQ>.; You are receiving this because you were mentioned.Message ID: ***@***.******@***.***>>; The information in this e-mail is intended only for the person to whom it is addressed. If you believe this e-mail was sent to you in error and the e-mail contains patient information, please contact the Mass General Brigham Compliance HelpLine at https://www.massgeneralbrigham.org/complianceline <https://www.massgeneralbrigham.org/complianceline> .; Please note that this e-mail is not secure (encrypted). If you do not wish to continue communication over unencrypted e-mail, please notify the sender of this message immediately. Continuing to send or respond to e-mail after receiving this message means you understand and accept this risk and wish to continue to communicate over unencrypted e-mail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:4333,Integrability,message,message,4333,"opic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA5G6YB3KO5IO3F2PMFLETCDYCPOOXAVCNFSM4NF3XJJKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCNZZGEZDQMBYGEZQ>.; You are receiving this because you were mentioned.Message ID: ***@***.******@***.***>>; The information in this e-mail is intended only for the person to whom it is addressed. If you believe this e-mail was sent to you in error and the e-mail contains patient information, please contact the Mass General Brigham Compliance HelpLine at https://www.massgeneralbrigham.org/complianceline <https://www.massgeneralbrigham.org/complianceline> .; Please note that this e-mail is not secure (encrypted). If you do not wish to continue communication over unencrypted e-mail, please notify the sender of this message immediately. Continuing to send or respond to e-mail after receiving this message means you understand and accept this risk and wish to continue to communicate over unencrypted e-mail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:1247,Performance,Load,Load,1247,"er cpu, 1 threads per core) family 6 model 158 stepping 10 microcode 0xea, cx8, cmov, fxsr, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, rtm, adx, fma, vzeroupper, clflush, clflushopt; Processor Information for all 6 processors :; Max Mhz: 3000, Current Mhz: 3000, Mhz Limit: 3000. Memory: 4k page, system-wide physical 7966M (772M free); TotalPageFile size 23838M (AvailPageFile size 7045M); current process WorkingSet (physical memory assigned to process): 3284M, peak: 3876M; current process commit charge (""private bytes""): 6219M, peak: 6444M. vm_info: OpenJDK 64-Bit Server VM (17.0.8+7) for windows-amd64 JRE (17.0.8+7), built on Jul 18 2023 21:02:32 by ""admin"" with MS VC++ 16.7 (VS2019). END. From: Pete ***@***.***>; Sent: Thursday, November 2, 2023 2:08 PM; To: qupath/qupath ***@***.***>; Cc: Farias Da Guarda, Suzete Nascimento ***@***.***>; Mention ***@***.***>; Subject: Re: [qupath/qupath] Load training in object classifier -> QuPath crashes (#493). External Email - Use Caution. @suzeteguarda<https://secure-web.cisco.com/15zJZ1AC2HfUFv9L0mLItqMCfEQMcq1aVBJmggNtWQuQ1aMdkxQL4M8DQsziZIjbQclRsiUgnd4btBVr7WmNM9GAmb5IdGegWqzsNoLW7i0t8ZduDtcd418DQ9BIIDpRAJC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WFZwGzOR3GcJ4WLvQ2nVTFF7JEFSGly69C9pq9zGxJ69U6IM5ck9ofp9vkUV14NNMWH0h1u9pMUi3qXwaLEHdnCfRaAU7pipTjdj7etnYxMl6fke2A03VF49uEY6P4XmHIM3ote076fSVZpQqVTzYq0orKjFBwoKIbptcmC4XxHSSCRt900YIULIVQAtzU62qtHv_TEqaLa9vgoz2qhsY9NbYDfMfFPtA/https%3A%2F%2Fforum.image.sc%2Ftag%",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:2464,Performance,load,loading,2464,"JC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WFZwGzOR3GcJ4WLvQ2nVTFF7JEFSGly69C9pq9zGxJ69U6IM5ck9ofp9vkUV14NNMWH0h1u9pMUi3qXwaLEHdnCfRaAU7pipTjdj7etnYxMl6fke2A03VF49uEY6P4XmHIM3ote076fSVZpQqVTzYq0orKjFBwoKIbptcmC4XxHSSCRt900YIULIVQAtzU62qtHv_TEqaLa9vgoz2qhsY9NbYDfMfFPtA/https%3A%2F%2Fforum.image.sc%2Ftag%2Fqupath>. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:2567,Safety,avoid,avoid,2567,"JC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WFZwGzOR3GcJ4WLvQ2nVTFF7JEFSGly69C9pq9zGxJ69U6IM5ck9ofp9vkUV14NNMWH0h1u9pMUi3qXwaLEHdnCfRaAU7pipTjdj7etnYxMl6fke2A03VF49uEY6P4XmHIM3ote076fSVZpQqVTzYq0orKjFBwoKIbptcmC4XxHSSCRt900YIULIVQAtzU62qtHv_TEqaLa9vgoz2qhsY9NbYDfMfFPtA/https%3A%2F%2Fforum.image.sc%2Ftag%2Fqupath>. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:4378,Safety,risk,risk,4378,"opic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA5G6YB3KO5IO3F2PMFLETCDYCPOOXAVCNFSM4NF3XJJKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCNZZGEZDQMBYGEZQ>.; You are receiving this because you were mentioned.Message ID: ***@***.******@***.***>>; The information in this e-mail is intended only for the person to whom it is addressed. If you believe this e-mail was sent to you in error and the e-mail contains patient information, please contact the Mass General Brigham Compliance HelpLine at https://www.massgeneralbrigham.org/complianceline <https://www.massgeneralbrigham.org/complianceline> .; Please note that this e-mail is not secure (encrypted). If you do not wish to continue communication over unencrypted e-mail, please notify the sender of this message immediately. Continuing to send or respond to e-mail after receiving this message means you understand and accept this risk and wish to continue to communicate over unencrypted e-mail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:1360,Security,secur,secure-web,1360,", 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, rtm, adx, fma, vzeroupper, clflush, clflushopt; Processor Information for all 6 processors :; Max Mhz: 3000, Current Mhz: 3000, Mhz Limit: 3000. Memory: 4k page, system-wide physical 7966M (772M free); TotalPageFile size 23838M (AvailPageFile size 7045M); current process WorkingSet (physical memory assigned to process): 3284M, peak: 3876M; current process commit charge (""private bytes""): 6219M, peak: 6444M. vm_info: OpenJDK 64-Bit Server VM (17.0.8+7) for windows-amd64 JRE (17.0.8+7), built on Jul 18 2023 21:02:32 by ""admin"" with MS VC++ 16.7 (VS2019). END. From: Pete ***@***.***>; Sent: Thursday, November 2, 2023 2:08 PM; To: qupath/qupath ***@***.***>; Cc: Farias Da Guarda, Suzete Nascimento ***@***.***>; Mention ***@***.***>; Subject: Re: [qupath/qupath] Load training in object classifier -> QuPath crashes (#493). External Email - Use Caution. @suzeteguarda<https://secure-web.cisco.com/15zJZ1AC2HfUFv9L0mLItqMCfEQMcq1aVBJmggNtWQuQ1aMdkxQL4M8DQsziZIjbQclRsiUgnd4btBVr7WmNM9GAmb5IdGegWqzsNoLW7i0t8ZduDtcd418DQ9BIIDpRAJC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WFZwGzOR3GcJ4WLvQ2nVTFF7JEFSGly69C9pq9zGxJ69U6IM5ck9ofp9vkUV14NNMWH0h1u9pMUi3qXwaLEHdnCfRaAU7pipTjdj7etnYxMl6fke2A03VF49uEY6P4XmHIM3ote076fSVZpQqVTzYq0orKjFBwoKIbptcmC4XxHSSCRt900YIULIVQAtzU62qtHv_TEqaLa9vgoz2qhsY9NbYDfMfFPtA/https%3A%2F%2Fforum.image.sc%2Ftag%2Fqupath>. The error is that there isn't enough memory, but without having the classifier and ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:1860,Security,secur,secure-web,1860,"rivate bytes""): 6219M, peak: 6444M. vm_info: OpenJDK 64-Bit Server VM (17.0.8+7) for windows-amd64 JRE (17.0.8+7), built on Jul 18 2023 21:02:32 by ""admin"" with MS VC++ 16.7 (VS2019). END. From: Pete ***@***.***>; Sent: Thursday, November 2, 2023 2:08 PM; To: qupath/qupath ***@***.***>; Cc: Farias Da Guarda, Suzete Nascimento ***@***.***>; Mention ***@***.***>; Subject: Re: [qupath/qupath] Load training in object classifier -> QuPath crashes (#493). External Email - Use Caution. @suzeteguarda<https://secure-web.cisco.com/15zJZ1AC2HfUFv9L0mLItqMCfEQMcq1aVBJmggNtWQuQ1aMdkxQL4M8DQsziZIjbQclRsiUgnd4btBVr7WmNM9GAmb5IdGegWqzsNoLW7i0t8ZduDtcd418DQ9BIIDpRAJC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WFZwGzOR3GcJ4WLvQ2nVTFF7JEFSGly69C9pq9zGxJ69U6IM5ck9ofp9vkUV14NNMWH0h1u9pMUi3qXwaLEHdnCfRaAU7pipTjdj7etnYxMl6fke2A03VF49uEY6P4XmHIM3ote076fSVZpQqVTzYq0orKjFBwoKIbptcmC4XxHSSCRt900YIULIVQAtzU62qtHv_TEqaLa9vgoz2qhsY9NbYDfMfFPtA/https%3A%2F%2Fforum.image.sc%2Ftag%2Fqupath>. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81H",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:2646,Security,secur,secure-web,2646,"0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WFZwGzOR3GcJ4WLvQ2nVTFF7JEFSGly69C9pq9zGxJ69U6IM5ck9ofp9vkUV14NNMWH0h1u9pMUi3qXwaLEHdnCfRaAU7pipTjdj7etnYxMl6fke2A03VF49uEY6P4XmHIM3ote076fSVZpQqVTzYq0orKjFBwoKIbptcmC4XxHSSCRt900YIULIVQAtzU62qtHv_TEqaLa9vgoz2qhsY9NbYDfMfFPtA/https%3A%2F%2Fforum.image.sc%2Ftag%2Fqupath>. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA5G6YB3KO5IO3F2PMFLETCDYCPOOXAVCNFSM4NF3XJJKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5W",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:3120,Security,secur,secure-web,3120,"EHdnCfRaAU7pipTjdj7etnYxMl6fke2A03VF49uEY6P4XmHIM3ote076fSVZpQqVTzYq0orKjFBwoKIbptcmC4XxHSSCRt900YIULIVQAtzU62qtHv_TEqaLa9vgoz2qhsY9NbYDfMfFPtA/https%3A%2F%2Fforum.image.sc%2Ftag%2Fqupath>. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA5G6YB3KO5IO3F2PMFLETCDYCPOOXAVCNFSM4NF3XJJKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCNZZGEZDQMBYGEZQ>.; You are receiving this because you were mentioned.Message ID: ***@***.******@***.***>>; The information in this e-mail is intended only for the person to whom it is addressed. If you believe this e-mail was sent to you in error and the e-mail contains patient information, please contact the Mass General Brigham Compliance HelpLine at https://www.massgeneralbrigham.org/complianceline <https://www.massgeneralbrigham.org/complianc",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:4128,Security,secur,secure,4128,"opic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA5G6YB3KO5IO3F2PMFLETCDYCPOOXAVCNFSM4NF3XJJKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCNZZGEZDQMBYGEZQ>.; You are receiving this because you were mentioned.Message ID: ***@***.******@***.***>>; The information in this e-mail is intended only for the person to whom it is addressed. If you believe this e-mail was sent to you in error and the e-mail contains patient information, please contact the Mass General Brigham Compliance HelpLine at https://www.massgeneralbrigham.org/complianceline <https://www.massgeneralbrigham.org/complianceline> .; Please note that this e-mail is not secure (encrypted). If you do not wish to continue communication over unencrypted e-mail, please notify the sender of this message immediately. Continuing to send or respond to e-mail after receiving this message means you understand and accept this risk and wish to continue to communicate over unencrypted e-mail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:4136,Security,encrypt,encrypted,4136,"opic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA5G6YB3KO5IO3F2PMFLETCDYCPOOXAVCNFSM4NF3XJJKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCNZZGEZDQMBYGEZQ>.; You are receiving this because you were mentioned.Message ID: ***@***.******@***.***>>; The information in this e-mail is intended only for the person to whom it is addressed. If you believe this e-mail was sent to you in error and the e-mail contains patient information, please contact the Mass General Brigham Compliance HelpLine at https://www.massgeneralbrigham.org/complianceline <https://www.massgeneralbrigham.org/complianceline> .; Please note that this e-mail is not secure (encrypted). If you do not wish to continue communication over unencrypted e-mail, please notify the sender of this message immediately. Continuing to send or respond to e-mail after receiving this message means you understand and accept this risk and wish to continue to communicate over unencrypted e-mail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738
https://github.com/qupath/qupath/issues/494#issuecomment-632188530:277,Integrability,depend,dependent,277,"The stage is not modal, but it has an owner (the main QuPath window). If it does not have an owner, then it will often fall behind the main window - which is extremely annoying. If it has `alwaysOnTop(true)` then it appears on top of other applications, which is worse. We are dependent upon JavaFX for this behavior.; Can you point to a way to achieve the effect that you want with JavaFX?. If not, I would like to close this issue because it is not a bug and it is not something that we can/will address.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/494#issuecomment-632188530
https://github.com/qupath/qupath/issues/495#issuecomment-641183465:1404,Availability,robust,robust,1404,"Closing this issue after discussion with @melvingelbard... it's not something we plan to do, and would be very apprehensive about including the change even if someone else implemented it. As I mentioned above, the consistency thing has some (partly historic) reasons. We only started adding spinners recently; the underlying rationale has been that sliders are used when the range is known in advance, spinners are used when it's not... New commands will endeavour to apply this rule more consistently, and old commands will either be either removed or updated. Regarding spinners and mouse wheel input, I think this really would need to be implemented in JavaFX directly. There are ostensibly easy ways to add support by attaching a scroll listener, in my experience to date this can open a whole can of worms... basically, scroll events can differ a lot depending upon the input device/platform (not to mention 'natural' scrolling in some cases, which can flip the direction). Therefore I think the risk is too high of creating something that inadvertently makes the user experience *worse* for many, and we would have no way to test all the relevant platforms to check this. I presume the JavaFX developers have reasons for not implementing this directly yet - perhaps related to the reason I give. But in any case, they would have access to potentially more platform-specific information to enable a robust implementation. For these reasons, I'm afraid I don't think we can/should act on this feature request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/495#issuecomment-641183465
https://github.com/qupath/qupath/issues/495#issuecomment-641183465:553,Deployability,update,updated,553,"Closing this issue after discussion with @melvingelbard... it's not something we plan to do, and would be very apprehensive about including the change even if someone else implemented it. As I mentioned above, the consistency thing has some (partly historic) reasons. We only started adding spinners recently; the underlying rationale has been that sliders are used when the range is known in advance, spinners are used when it's not... New commands will endeavour to apply this rule more consistently, and old commands will either be either removed or updated. Regarding spinners and mouse wheel input, I think this really would need to be implemented in JavaFX directly. There are ostensibly easy ways to add support by attaching a scroll listener, in my experience to date this can open a whole can of worms... basically, scroll events can differ a lot depending upon the input device/platform (not to mention 'natural' scrolling in some cases, which can flip the direction). Therefore I think the risk is too high of creating something that inadvertently makes the user experience *worse* for many, and we would have no way to test all the relevant platforms to check this. I presume the JavaFX developers have reasons for not implementing this directly yet - perhaps related to the reason I give. But in any case, they would have access to potentially more platform-specific information to enable a robust implementation. For these reasons, I'm afraid I don't think we can/should act on this feature request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/495#issuecomment-641183465
https://github.com/qupath/qupath/issues/495#issuecomment-641183465:856,Integrability,depend,depending,856,"Closing this issue after discussion with @melvingelbard... it's not something we plan to do, and would be very apprehensive about including the change even if someone else implemented it. As I mentioned above, the consistency thing has some (partly historic) reasons. We only started adding spinners recently; the underlying rationale has been that sliders are used when the range is known in advance, spinners are used when it's not... New commands will endeavour to apply this rule more consistently, and old commands will either be either removed or updated. Regarding spinners and mouse wheel input, I think this really would need to be implemented in JavaFX directly. There are ostensibly easy ways to add support by attaching a scroll listener, in my experience to date this can open a whole can of worms... basically, scroll events can differ a lot depending upon the input device/platform (not to mention 'natural' scrolling in some cases, which can flip the direction). Therefore I think the risk is too high of creating something that inadvertently makes the user experience *worse* for many, and we would have no way to test all the relevant platforms to check this. I presume the JavaFX developers have reasons for not implementing this directly yet - perhaps related to the reason I give. But in any case, they would have access to potentially more platform-specific information to enable a robust implementation. For these reasons, I'm afraid I don't think we can/should act on this feature request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/495#issuecomment-641183465
https://github.com/qupath/qupath/issues/495#issuecomment-641183465:1001,Safety,risk,risk,1001,"Closing this issue after discussion with @melvingelbard... it's not something we plan to do, and would be very apprehensive about including the change even if someone else implemented it. As I mentioned above, the consistency thing has some (partly historic) reasons. We only started adding spinners recently; the underlying rationale has been that sliders are used when the range is known in advance, spinners are used when it's not... New commands will endeavour to apply this rule more consistently, and old commands will either be either removed or updated. Regarding spinners and mouse wheel input, I think this really would need to be implemented in JavaFX directly. There are ostensibly easy ways to add support by attaching a scroll listener, in my experience to date this can open a whole can of worms... basically, scroll events can differ a lot depending upon the input device/platform (not to mention 'natural' scrolling in some cases, which can flip the direction). Therefore I think the risk is too high of creating something that inadvertently makes the user experience *worse* for many, and we would have no way to test all the relevant platforms to check this. I presume the JavaFX developers have reasons for not implementing this directly yet - perhaps related to the reason I give. But in any case, they would have access to potentially more platform-specific information to enable a robust implementation. For these reasons, I'm afraid I don't think we can/should act on this feature request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/495#issuecomment-641183465
https://github.com/qupath/qupath/issues/495#issuecomment-641183465:1335,Security,access,access,1335,"Closing this issue after discussion with @melvingelbard... it's not something we plan to do, and would be very apprehensive about including the change even if someone else implemented it. As I mentioned above, the consistency thing has some (partly historic) reasons. We only started adding spinners recently; the underlying rationale has been that sliders are used when the range is known in advance, spinners are used when it's not... New commands will endeavour to apply this rule more consistently, and old commands will either be either removed or updated. Regarding spinners and mouse wheel input, I think this really would need to be implemented in JavaFX directly. There are ostensibly easy ways to add support by attaching a scroll listener, in my experience to date this can open a whole can of worms... basically, scroll events can differ a lot depending upon the input device/platform (not to mention 'natural' scrolling in some cases, which can flip the direction). Therefore I think the risk is too high of creating something that inadvertently makes the user experience *worse* for many, and we would have no way to test all the relevant platforms to check this. I presume the JavaFX developers have reasons for not implementing this directly yet - perhaps related to the reason I give. But in any case, they would have access to potentially more platform-specific information to enable a robust implementation. For these reasons, I'm afraid I don't think we can/should act on this feature request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/495#issuecomment-641183465
https://github.com/qupath/qupath/issues/495#issuecomment-641183465:1131,Testability,test,test,1131,"Closing this issue after discussion with @melvingelbard... it's not something we plan to do, and would be very apprehensive about including the change even if someone else implemented it. As I mentioned above, the consistency thing has some (partly historic) reasons. We only started adding spinners recently; the underlying rationale has been that sliders are used when the range is known in advance, spinners are used when it's not... New commands will endeavour to apply this rule more consistently, and old commands will either be either removed or updated. Regarding spinners and mouse wheel input, I think this really would need to be implemented in JavaFX directly. There are ostensibly easy ways to add support by attaching a scroll listener, in my experience to date this can open a whole can of worms... basically, scroll events can differ a lot depending upon the input device/platform (not to mention 'natural' scrolling in some cases, which can flip the direction). Therefore I think the risk is too high of creating something that inadvertently makes the user experience *worse* for many, and we would have no way to test all the relevant platforms to check this. I presume the JavaFX developers have reasons for not implementing this directly yet - perhaps related to the reason I give. But in any case, they would have access to potentially more platform-specific information to enable a robust implementation. For these reasons, I'm afraid I don't think we can/should act on this feature request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/495#issuecomment-641183465
https://github.com/qupath/qupath/issues/495#issuecomment-641183465:1069,Usability,user experience,user experience,1069,"Closing this issue after discussion with @melvingelbard... it's not something we plan to do, and would be very apprehensive about including the change even if someone else implemented it. As I mentioned above, the consistency thing has some (partly historic) reasons. We only started adding spinners recently; the underlying rationale has been that sliders are used when the range is known in advance, spinners are used when it's not... New commands will endeavour to apply this rule more consistently, and old commands will either be either removed or updated. Regarding spinners and mouse wheel input, I think this really would need to be implemented in JavaFX directly. There are ostensibly easy ways to add support by attaching a scroll listener, in my experience to date this can open a whole can of worms... basically, scroll events can differ a lot depending upon the input device/platform (not to mention 'natural' scrolling in some cases, which can flip the direction). Therefore I think the risk is too high of creating something that inadvertently makes the user experience *worse* for many, and we would have no way to test all the relevant platforms to check this. I presume the JavaFX developers have reasons for not implementing this directly yet - perhaps related to the reason I give. But in any case, they would have access to potentially more platform-specific information to enable a robust implementation. For these reasons, I'm afraid I don't think we can/should act on this feature request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/495#issuecomment-641183465
https://github.com/qupath/qupath/pull/496#issuecomment-632777903:61,Integrability,depend,depends,61,"Well, it's increasingly clear how much my normal functioning depends upon a spellchecker.... Fixed them now, but unfortunately one instance of `pyramidize` remains - it will turn up on .qpproj files, so changing it without a lot of extra caution would cause compatibility troubles.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/496#issuecomment-632777903
https://github.com/qupath/qupath/pull/496#issuecomment-632777903:24,Usability,clear,clear,24,"Well, it's increasingly clear how much my normal functioning depends upon a spellchecker.... Fixed them now, but unfortunately one instance of `pyramidize` remains - it will turn up on .qpproj files, so changing it without a lot of extra caution would cause compatibility troubles.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/496#issuecomment-632777903
https://github.com/qupath/qupath/issues/497#issuecomment-632430807:149,Integrability,message,message,149,I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632430807
https://github.com/qupath/qupath/issues/497#issuecomment-632430807:62,Performance,load,load,62,I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632430807
https://github.com/qupath/qupath/issues/497#issuecomment-632431919:72,Deployability,update,updated,72,Have you tried removing the Weka extension? I don't think that has been updated since 0.1.2.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431919
https://github.com/qupath/qupath/issues/497#issuecomment-632431978:269,Availability,error,error,269,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978
https://github.com/qupath/qupath/issues/497#issuecomment-632431978:203,Deployability,UPDATE,UPDATE,203,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978
https://github.com/qupath/qupath/issues/497#issuecomment-632431978:344,Deployability,install,installed,344,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978
https://github.com/qupath/qupath/issues/497#issuecomment-632431978:151,Integrability,message,message,151,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978
https://github.com/qupath/qupath/issues/497#issuecomment-632431978:275,Integrability,message,message,275,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978
https://github.com/qupath/qupath/issues/497#issuecomment-632431978:64,Performance,load,load,64,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978
https://github.com/qupath/qupath/issues/497#issuecomment-632431978:310,Performance,load,load,310,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978
https://github.com/qupath/qupath/issues/497#issuecomment-632431978:250,Testability,log,log,250,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978
https://github.com/qupath/qupath/issues/497#issuecomment-632432142:74,Deployability,update,updated,74,"> Have you tried removing the Weka extension? I don't think that has been updated since 0.1.2. Yes I just realized a few minutes ago that it was the Weka extention that might have been causing the problem, which it was.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632432142
https://github.com/qupath/qupath/issues/497#issuecomment-632435699:216,Availability,down,downloaded,216,"> Where could you find the Weka extention? thanks. For me it was in C:\Users\ (Your Name)\QuPath\extensions. It was in the 7th line of code in the debug image from my original post above. Weka is an extension that I downloaded for a previous project so it must have been outdated (as suggested by @Svidro above). I would try removing all extensions to rule out any outdated / buggy ones causing the issue. If removing all the extensions does not work, could you post a screenshot of a log after opening QuPath through the debug application?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632435699
https://github.com/qupath/qupath/issues/497#issuecomment-632435699:485,Testability,log,log,485,"> Where could you find the Weka extention? thanks. For me it was in C:\Users\ (Your Name)\QuPath\extensions. It was in the 7th line of code in the debug image from my original post above. Weka is an extension that I downloaded for a previous project so it must have been outdated (as suggested by @Svidro above). I would try removing all extensions to rule out any outdated / buggy ones causing the issue. If removing all the extensions does not work, could you post a screenshot of a log after opening QuPath through the debug application?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632435699
https://github.com/qupath/qupath/issues/497#issuecomment-632495950:186,Availability,down,downloads,186,"Glad it's resolved - I've just made a small change that will hopefully make QuPath's inability to load the old Weka extension a bit more graceful in v0.2.0, and also added a note on the downloads page for the extension to warn that it is incompatible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632495950
https://github.com/qupath/qupath/issues/497#issuecomment-632495950:98,Performance,load,load,98,"Glad it's resolved - I've just made a small change that will hopefully make QuPath's inability to load the old Weka extension a bit more graceful in v0.2.0, and also added a note on the downloads page for the extension to warn that it is incompatible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632495950
https://github.com/qupath/qupath/issues/497#issuecomment-637489171:698,Availability,down,downloads,698,"Hi Pete,. Sorry I just saw your email in the junkbox. Thanks for informing that.; I have tried to look up the new writings for calling imageJ somewhere and modified a bit in my script and now it is working. P.S. I am a very beginner for writing the script. From: Pete <notifications@github.com>; Sent: 22 May 2020 07:46; To: qupath/qupath <qupath@noreply.github.com>; Cc: Wong, Dickson <dwong@ukaachen.de>; Comment <comment@noreply.github.com>; Subject: Re: [qupath/qupath] Failed to launch JVM (SOLVED) (#497). Glad it's resolved - I've just made a small change that will hopefully make QuPath's inability to load the old Weka extension a bit more graceful in v0.2.0, and also added a note on the downloads page for the extension to warn that it is incompatible. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F497%23issuecomment-632495950&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445064114&sdata=eepYC0iEwfTzvOrYiM0sSczIVqw2XCVBl1XLca4S0QE%3D&reserved=0>, or unsubscribe<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAL5RYCOZ67FFTMCPJL624QDRSYGQJANCNFSM4NHKGXFA&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445074103&sdata=VALeHGevcV768bCs06vCj7qhSGOSp827e%2Bw8ngY7%2BOU%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-637489171
https://github.com/qupath/qupath/issues/497#issuecomment-637489171:610,Performance,load,load,610,"Hi Pete,. Sorry I just saw your email in the junkbox. Thanks for informing that.; I have tried to look up the new writings for calling imageJ somewhere and modified a bit in my script and now it is working. P.S. I am a very beginner for writing the script. From: Pete <notifications@github.com>; Sent: 22 May 2020 07:46; To: qupath/qupath <qupath@noreply.github.com>; Cc: Wong, Dickson <dwong@ukaachen.de>; Comment <comment@noreply.github.com>; Subject: Re: [qupath/qupath] Failed to launch JVM (SOLVED) (#497). Glad it's resolved - I've just made a small change that will hopefully make QuPath's inability to load the old Weka extension a bit more graceful in v0.2.0, and also added a note on the downloads page for the extension to warn that it is incompatible. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F497%23issuecomment-632495950&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445064114&sdata=eepYC0iEwfTzvOrYiM0sSczIVqw2XCVBl1XLca4S0QE%3D&reserved=0>, or unsubscribe<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAL5RYCOZ67FFTMCPJL624QDRSYGQJANCNFSM4NHKGXFA&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445074103&sdata=VALeHGevcV768bCs06vCj7qhSGOSp827e%2Bw8ngY7%2BOU%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-637489171
https://github.com/qupath/qupath/issues/497#issuecomment-637489171:876,Safety,safe,safelinks,876,"Hi Pete,. Sorry I just saw your email in the junkbox. Thanks for informing that.; I have tried to look up the new writings for calling imageJ somewhere and modified a bit in my script and now it is working. P.S. I am a very beginner for writing the script. From: Pete <notifications@github.com>; Sent: 22 May 2020 07:46; To: qupath/qupath <qupath@noreply.github.com>; Cc: Wong, Dickson <dwong@ukaachen.de>; Comment <comment@noreply.github.com>; Subject: Re: [qupath/qupath] Failed to launch JVM (SOLVED) (#497). Glad it's resolved - I've just made a small change that will hopefully make QuPath's inability to load the old Weka extension a bit more graceful in v0.2.0, and also added a note on the downloads page for the extension to warn that it is incompatible. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F497%23issuecomment-632495950&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445064114&sdata=eepYC0iEwfTzvOrYiM0sSczIVqw2XCVBl1XLca4S0QE%3D&reserved=0>, or unsubscribe<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAL5RYCOZ67FFTMCPJL624QDRSYGQJANCNFSM4NHKGXFA&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445074103&sdata=VALeHGevcV768bCs06vCj7qhSGOSp827e%2Bw8ngY7%2BOU%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-637489171
https://github.com/qupath/qupath/issues/497#issuecomment-637489171:1207,Safety,safe,safelinks,1207,"Hi Pete,. Sorry I just saw your email in the junkbox. Thanks for informing that.; I have tried to look up the new writings for calling imageJ somewhere and modified a bit in my script and now it is working. P.S. I am a very beginner for writing the script. From: Pete <notifications@github.com>; Sent: 22 May 2020 07:46; To: qupath/qupath <qupath@noreply.github.com>; Cc: Wong, Dickson <dwong@ukaachen.de>; Comment <comment@noreply.github.com>; Subject: Re: [qupath/qupath] Failed to launch JVM (SOLVED) (#497). Glad it's resolved - I've just made a small change that will hopefully make QuPath's inability to load the old Weka extension a bit more graceful in v0.2.0, and also added a note on the downloads page for the extension to warn that it is incompatible. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F497%23issuecomment-632495950&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445064114&sdata=eepYC0iEwfTzvOrYiM0sSczIVqw2XCVBl1XLca4S0QE%3D&reserved=0>, or unsubscribe<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAL5RYCOZ67FFTMCPJL624QDRSYGQJANCNFSM4NHKGXFA&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445074103&sdata=VALeHGevcV768bCs06vCj7qhSGOSp827e%2Bw8ngY7%2BOU%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-637489171
https://github.com/qupath/qupath/issues/499#issuecomment-632624472:785,Deployability,release,release,785,"This isn't actually a bug... showing/hiding the names is an `overlay option`. These are not global, and none are persistent. They are like showing/hiding detections or annotations, which are also not persistent. There is probably an argument for making them persistent, but this gets tricky because multiple non-identical instances of [OverlayOptions](https://github.com/qupath/qupath/blob/42cedef3d9252f974f77d2af6d3d3445081406c9/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/OverlayOptions.java) can exist - in which case QuPath would need to distinguish between which options are persistent and which aren't. This would be doable, but would take a bit of thought. I don't really want to introduce several more persistent preferences at this stage, immediately before the stable release, when the current behavior is not actually buggy.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/499#issuecomment-632624472
https://github.com/qupath/qupath/issues/499#issuecomment-632624472:154,Safety,detect,detections,154,"This isn't actually a bug... showing/hiding the names is an `overlay option`. These are not global, and none are persistent. They are like showing/hiding detections or annotations, which are also not persistent. There is probably an argument for making them persistent, but this gets tricky because multiple non-identical instances of [OverlayOptions](https://github.com/qupath/qupath/blob/42cedef3d9252f974f77d2af6d3d3445081406c9/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/OverlayOptions.java) can exist - in which case QuPath would need to distinguish between which options are persistent and which aren't. This would be doable, but would take a bit of thought. I don't really want to introduce several more persistent preferences at this stage, immediately before the stable release, when the current behavior is not actually buggy.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/499#issuecomment-632624472
https://github.com/qupath/qupath/issues/499#issuecomment-632639493:303,Deployability,release,release,303,"Not currently... do you think off is a better default? My thinking is that:. * names often aren't used (might be different for you); * most people won't know names can be displayed at all if they are not revealed by default; * pressing `n` doesn't cost much. It might well become persistent in the next release, but for now it's not worth the risk of getting it wrong and introducing late bugs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/499#issuecomment-632639493
https://github.com/qupath/qupath/issues/499#issuecomment-632639493:343,Safety,risk,risk,343,"Not currently... do you think off is a better default? My thinking is that:. * names often aren't used (might be different for you); * most people won't know names can be displayed at all if they are not revealed by default; * pressing `n` doesn't cost much. It might well become persistent in the next release, but for now it's not worth the risk of getting it wrong and introducing late bugs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/499#issuecomment-632639493
https://github.com/qupath/qupath/issues/499#issuecomment-632644680:116,Integrability,depend,depending,116,"Well, only each time they open QuPath. The burden of pressing `n` seems less of the burden of running a script. Or, depending upon how the ROIs are created, stripping the names off in ImageJ first.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/499#issuecomment-632644680
https://github.com/qupath/qupath/issues/500#issuecomment-632618684:559,Deployability,install,installation,559,"thanks for the reply. ; I do not think that there is a naming issue... Or I am missing something and am slow to get it :) ; For us Extensions are not per user, however users can of course have their own personal directory, which is great. . In the case of extensions, it feels that it is like the 'ImageJ plugins directory'. Is that one per-user or is it configured for the whole of QuPath?. So there would be:; * User directory (scripts, logs, custom classifiers they want to reuse [just spitballing], ...); * ImageJ plugins directory (global for the QuPath installation); * QuPath Extensions directory (global as well). What is the logic to saying the Extensions directory should be configured individually for each user? Perhaps if I had a use-case I would understand it better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632618684
https://github.com/qupath/qupath/issues/500#issuecomment-632618684:305,Modifiability,plugin,plugins,305,"thanks for the reply. ; I do not think that there is a naming issue... Or I am missing something and am slow to get it :) ; For us Extensions are not per user, however users can of course have their own personal directory, which is great. . In the case of extensions, it feels that it is like the 'ImageJ plugins directory'. Is that one per-user or is it configured for the whole of QuPath?. So there would be:; * User directory (scripts, logs, custom classifiers they want to reuse [just spitballing], ...); * ImageJ plugins directory (global for the QuPath installation); * QuPath Extensions directory (global as well). What is the logic to saying the Extensions directory should be configured individually for each user? Perhaps if I had a use-case I would understand it better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632618684
https://github.com/qupath/qupath/issues/500#issuecomment-632618684:355,Modifiability,config,configured,355,"thanks for the reply. ; I do not think that there is a naming issue... Or I am missing something and am slow to get it :) ; For us Extensions are not per user, however users can of course have their own personal directory, which is great. . In the case of extensions, it feels that it is like the 'ImageJ plugins directory'. Is that one per-user or is it configured for the whole of QuPath?. So there would be:; * User directory (scripts, logs, custom classifiers they want to reuse [just spitballing], ...); * ImageJ plugins directory (global for the QuPath installation); * QuPath Extensions directory (global as well). What is the logic to saying the Extensions directory should be configured individually for each user? Perhaps if I had a use-case I would understand it better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632618684
https://github.com/qupath/qupath/issues/500#issuecomment-632618684:518,Modifiability,plugin,plugins,518,"thanks for the reply. ; I do not think that there is a naming issue... Or I am missing something and am slow to get it :) ; For us Extensions are not per user, however users can of course have their own personal directory, which is great. . In the case of extensions, it feels that it is like the 'ImageJ plugins directory'. Is that one per-user or is it configured for the whole of QuPath?. So there would be:; * User directory (scripts, logs, custom classifiers they want to reuse [just spitballing], ...); * ImageJ plugins directory (global for the QuPath installation); * QuPath Extensions directory (global as well). What is the logic to saying the Extensions directory should be configured individually for each user? Perhaps if I had a use-case I would understand it better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632618684
https://github.com/qupath/qupath/issues/500#issuecomment-632618684:685,Modifiability,config,configured,685,"thanks for the reply. ; I do not think that there is a naming issue... Or I am missing something and am slow to get it :) ; For us Extensions are not per user, however users can of course have their own personal directory, which is great. . In the case of extensions, it feels that it is like the 'ImageJ plugins directory'. Is that one per-user or is it configured for the whole of QuPath?. So there would be:; * User directory (scripts, logs, custom classifiers they want to reuse [just spitballing], ...); * ImageJ plugins directory (global for the QuPath installation); * QuPath Extensions directory (global as well). What is the logic to saying the Extensions directory should be configured individually for each user? Perhaps if I had a use-case I would understand it better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632618684
https://github.com/qupath/qupath/issues/500#issuecomment-632618684:439,Testability,log,logs,439,"thanks for the reply. ; I do not think that there is a naming issue... Or I am missing something and am slow to get it :) ; For us Extensions are not per user, however users can of course have their own personal directory, which is great. . In the case of extensions, it feels that it is like the 'ImageJ plugins directory'. Is that one per-user or is it configured for the whole of QuPath?. So there would be:; * User directory (scripts, logs, custom classifiers they want to reuse [just spitballing], ...); * ImageJ plugins directory (global for the QuPath installation); * QuPath Extensions directory (global as well). What is the logic to saying the Extensions directory should be configured individually for each user? Perhaps if I had a use-case I would understand it better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632618684
https://github.com/qupath/qupath/issues/500#issuecomment-632618684:634,Testability,log,logic,634,"thanks for the reply. ; I do not think that there is a naming issue... Or I am missing something and am slow to get it :) ; For us Extensions are not per user, however users can of course have their own personal directory, which is great. . In the case of extensions, it feels that it is like the 'ImageJ plugins directory'. Is that one per-user or is it configured for the whole of QuPath?. So there would be:; * User directory (scripts, logs, custom classifiers they want to reuse [just spitballing], ...); * ImageJ plugins directory (global for the QuPath installation); * QuPath Extensions directory (global as well). What is the logic to saying the Extensions directory should be configured individually for each user? Perhaps if I had a use-case I would understand it better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632618684
https://github.com/qupath/qupath/issues/500#issuecomment-632622328:634,Availability,down,down,634,"Perhaps I'm misremembering, but I think the extensions directory was *always* configured on a per-user basis? As in... it was stored in the user preferences, alongside all the other preferences. This has not changed. It is also true for all persistent preferences, since in the end they depend upon `Preferences.userRoot();` ([here](https://github.com/qupath/qupath/blob/master/qupath-gui-fx/src/main/java/qupath/lib/gui/prefs/PathPrefs.java#L312)). With that in mind, I expect that in your case the 'user directory' is basically equivalent to the old extensions directory (except that the extensions themselves are stored 'one level down'). Of course, you may need to tell individual users not to mess with it, because it is kept for facility use... but I presume this was always the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632622328
https://github.com/qupath/qupath/issues/500#issuecomment-632622328:287,Integrability,depend,depend,287,"Perhaps I'm misremembering, but I think the extensions directory was *always* configured on a per-user basis? As in... it was stored in the user preferences, alongside all the other preferences. This has not changed. It is also true for all persistent preferences, since in the end they depend upon `Preferences.userRoot();` ([here](https://github.com/qupath/qupath/blob/master/qupath-gui-fx/src/main/java/qupath/lib/gui/prefs/PathPrefs.java#L312)). With that in mind, I expect that in your case the 'user directory' is basically equivalent to the old extensions directory (except that the extensions themselves are stored 'one level down'). Of course, you may need to tell individual users not to mess with it, because it is kept for facility use... but I presume this was always the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632622328
https://github.com/qupath/qupath/issues/500#issuecomment-632622328:78,Modifiability,config,configured,78,"Perhaps I'm misremembering, but I think the extensions directory was *always* configured on a per-user basis? As in... it was stored in the user preferences, alongside all the other preferences. This has not changed. It is also true for all persistent preferences, since in the end they depend upon `Preferences.userRoot();` ([here](https://github.com/qupath/qupath/blob/master/qupath-gui-fx/src/main/java/qupath/lib/gui/prefs/PathPrefs.java#L312)). With that in mind, I expect that in your case the 'user directory' is basically equivalent to the old extensions directory (except that the extensions themselves are stored 'one level down'). Of course, you may need to tell individual users not to mess with it, because it is kept for facility use... but I presume this was always the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632622328
https://github.com/qupath/qupath/issues/500#issuecomment-632628884:61,Deployability,upgrade,upgrade,61,"I think you are right, but I saw the current naming being an upgrade, like. ""Each user has their own folder where they can have their own code and settings."". Which meant that other settings like ImageJ directory and Extensions directory could be system-wide. But I think I am being too wishful, because like you said: since the start, options that in my opinion should be system-wide are not... Like when a new user logs-in they have to set the QuPath Setup options even though someone else already set them (even though the amount of RAM should not change from user to user, nor the Locale). Of course I am not going to pretend it is a dealbreaker, but it puts overhead on us when debugging issues: Did the user set the right amount of RAM? Where did they set the folder for the extensions?If we do not chase after our users, they each could have their own extensions folder in the default location (C:\Users\) which might be an issue for us [We are looking configure our workstations so that they do not keep any user preferences upon logging out because AppData tends to overfill over time, choking the C:\ drive in Windows]. But we favor apps that have a 'configure once' behaviour for these things. We have already been struggling with Imaris for years on this very issue. . This simply adds to the tedium of maintaining something in a multi-user environment.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632628884
https://github.com/qupath/qupath/issues/500#issuecomment-632628884:960,Modifiability,config,configure,960,"I think you are right, but I saw the current naming being an upgrade, like. ""Each user has their own folder where they can have their own code and settings."". Which meant that other settings like ImageJ directory and Extensions directory could be system-wide. But I think I am being too wishful, because like you said: since the start, options that in my opinion should be system-wide are not... Like when a new user logs-in they have to set the QuPath Setup options even though someone else already set them (even though the amount of RAM should not change from user to user, nor the Locale). Of course I am not going to pretend it is a dealbreaker, but it puts overhead on us when debugging issues: Did the user set the right amount of RAM? Where did they set the folder for the extensions?If we do not chase after our users, they each could have their own extensions folder in the default location (C:\Users\) which might be an issue for us [We are looking configure our workstations so that they do not keep any user preferences upon logging out because AppData tends to overfill over time, choking the C:\ drive in Windows]. But we favor apps that have a 'configure once' behaviour for these things. We have already been struggling with Imaris for years on this very issue. . This simply adds to the tedium of maintaining something in a multi-user environment.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632628884
https://github.com/qupath/qupath/issues/500#issuecomment-632628884:1161,Modifiability,config,configure,1161,"I think you are right, but I saw the current naming being an upgrade, like. ""Each user has their own folder where they can have their own code and settings."". Which meant that other settings like ImageJ directory and Extensions directory could be system-wide. But I think I am being too wishful, because like you said: since the start, options that in my opinion should be system-wide are not... Like when a new user logs-in they have to set the QuPath Setup options even though someone else already set them (even though the amount of RAM should not change from user to user, nor the Locale). Of course I am not going to pretend it is a dealbreaker, but it puts overhead on us when debugging issues: Did the user set the right amount of RAM? Where did they set the folder for the extensions?If we do not chase after our users, they each could have their own extensions folder in the default location (C:\Users\) which might be an issue for us [We are looking configure our workstations so that they do not keep any user preferences upon logging out because AppData tends to overfill over time, choking the C:\ drive in Windows]. But we favor apps that have a 'configure once' behaviour for these things. We have already been struggling with Imaris for years on this very issue. . This simply adds to the tedium of maintaining something in a multi-user environment.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632628884
https://github.com/qupath/qupath/issues/500#issuecomment-632628884:417,Testability,log,logs-in,417,"I think you are right, but I saw the current naming being an upgrade, like. ""Each user has their own folder where they can have their own code and settings."". Which meant that other settings like ImageJ directory and Extensions directory could be system-wide. But I think I am being too wishful, because like you said: since the start, options that in my opinion should be system-wide are not... Like when a new user logs-in they have to set the QuPath Setup options even though someone else already set them (even though the amount of RAM should not change from user to user, nor the Locale). Of course I am not going to pretend it is a dealbreaker, but it puts overhead on us when debugging issues: Did the user set the right amount of RAM? Where did they set the folder for the extensions?If we do not chase after our users, they each could have their own extensions folder in the default location (C:\Users\) which might be an issue for us [We are looking configure our workstations so that they do not keep any user preferences upon logging out because AppData tends to overfill over time, choking the C:\ drive in Windows]. But we favor apps that have a 'configure once' behaviour for these things. We have already been struggling with Imaris for years on this very issue. . This simply adds to the tedium of maintaining something in a multi-user environment.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632628884
https://github.com/qupath/qupath/issues/500#issuecomment-632628884:1038,Testability,log,logging,1038,"I think you are right, but I saw the current naming being an upgrade, like. ""Each user has their own folder where they can have their own code and settings."". Which meant that other settings like ImageJ directory and Extensions directory could be system-wide. But I think I am being too wishful, because like you said: since the start, options that in my opinion should be system-wide are not... Like when a new user logs-in they have to set the QuPath Setup options even though someone else already set them (even though the amount of RAM should not change from user to user, nor the Locale). Of course I am not going to pretend it is a dealbreaker, but it puts overhead on us when debugging issues: Did the user set the right amount of RAM? Where did they set the folder for the extensions?If we do not chase after our users, they each could have their own extensions folder in the default location (C:\Users\) which might be an issue for us [We are looking configure our workstations so that they do not keep any user preferences upon logging out because AppData tends to overfill over time, choking the C:\ drive in Windows]. But we favor apps that have a 'configure once' behaviour for these things. We have already been struggling with Imaris for years on this very issue. . This simply adds to the tedium of maintaining something in a multi-user environment.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632628884
https://github.com/qupath/qupath/issues/500#issuecomment-632628884:1286,Usability,simpl,simply,1286,"I think you are right, but I saw the current naming being an upgrade, like. ""Each user has their own folder where they can have their own code and settings."". Which meant that other settings like ImageJ directory and Extensions directory could be system-wide. But I think I am being too wishful, because like you said: since the start, options that in my opinion should be system-wide are not... Like when a new user logs-in they have to set the QuPath Setup options even though someone else already set them (even though the amount of RAM should not change from user to user, nor the Locale). Of course I am not going to pretend it is a dealbreaker, but it puts overhead on us when debugging issues: Did the user set the right amount of RAM? Where did they set the folder for the extensions?If we do not chase after our users, they each could have their own extensions folder in the default location (C:\Users\) which might be an issue for us [We are looking configure our workstations so that they do not keep any user preferences upon logging out because AppData tends to overfill over time, choking the C:\ drive in Windows]. But we favor apps that have a 'configure once' behaviour for these things. We have already been struggling with Imaris for years on this very issue. . This simply adds to the tedium of maintaining something in a multi-user environment.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632628884
https://github.com/qupath/qupath/issues/500#issuecomment-632633425:27,Deployability,configurat,configuration,27,"You can set the RAM in the configuration: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-can-i-not-set-the-maximum-memory; You can also set other command line arguments there, including `-q` to start up in 'quiet' mode. Check out the command line help for more. Imagine the overhead we have dealing with issues raised by users from anywhere.... I will close this because, as before, there is no bug. We may discuss further improvements on the forum for future versions, but really for now my focus is on any remaining issues for v0.2.0. There is no time for further enhancements at this late stage.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632633425
https://github.com/qupath/qupath/issues/500#issuecomment-632633425:27,Modifiability,config,configuration,27,"You can set the RAM in the configuration: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-can-i-not-set-the-maximum-memory; You can also set other command line arguments there, including `-q` to start up in 'quiet' mode. Check out the command line help for more. Imagine the overhead we have dealing with issues raised by users from anywhere.... I will close this because, as before, there is no bug. We may discuss further improvements on the forum for future versions, but really for now my focus is on any remaining issues for v0.2.0. There is no time for further enhancements at this late stage.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632633425
https://github.com/qupath/qupath/issues/500#issuecomment-632633425:588,Modifiability,enhance,enhancements,588,"You can set the RAM in the configuration: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-can-i-not-set-the-maximum-memory; You can also set other command line arguments there, including `-q` to start up in 'quiet' mode. Check out the command line help for more. Imagine the overhead we have dealing with issues raised by users from anywhere.... I will close this because, as before, there is no bug. We may discuss further improvements on the forum for future versions, but really for now my focus is on any remaining issues for v0.2.0. There is no time for further enhancements at this late stage.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632633425
https://github.com/qupath/qupath/issues/502#issuecomment-633195333:394,Integrability,depend,depending,394,"This should now happen if you double-click. The reason is that the old behavior (automatically moving when the selected annotation changed) was sometimes really problematic. One example of this was when using multiple viewers are open. When switching between viewers, if an object was selected then this could cause it to jump suddenly - which might even create annotations in the wrong place (depending upon which tool was active at the time).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/502#issuecomment-633195333
https://github.com/qupath/qupath/issues/502#issuecomment-633196175:184,Safety,avoid,avoiding,184,"Does the double-clicking work for you?; Since this is intended behavior, I'd like to close the issue - but could revisit it if there's a better way to help reviewing annotations while avoiding the old problems with multiple viewers (possibly in v0.3.0, if it is a substantial change).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/502#issuecomment-633196175
https://github.com/qupath/qupath/issues/503#issuecomment-633205314:40,Availability,error,error,40,The last commit should avoid showing an error message unnecessarily.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/503#issuecomment-633205314
https://github.com/qupath/qupath/issues/503#issuecomment-633205314:46,Integrability,message,message,46,The last commit should avoid showing an error message unnecessarily.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/503#issuecomment-633205314
https://github.com/qupath/qupath/issues/503#issuecomment-633205314:23,Safety,avoid,avoid,23,The last commit should avoid showing an error message unnecessarily.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/503#issuecomment-633205314
https://github.com/qupath/qupath/issues/511#issuecomment-637634883:323,Safety,avoid,avoid,323,"Hi @codybum,; Your problem should be fixed by simply changing the order or your args like this:; `./QuPath-0.2.0 script --image myimage.svs --script myscript.groovy`. So this shouldn't be a bug - though it might be worth adding that the CLI is somewhat strict with the argument order to the docs. As a rule of thumb and to avoid future problems, I would always call the command first, followed by all the desired options/parameters (called with their identification). ; E.g. `QuPath-0.2.0 [command-name] [-option1=<option1>] [-option2=<option2>]`. I'll close this for now as it's not a bug if you don't mind. Feel free to open a new thread on the [forum](https://forum.image.sc/tag/qupath) if you have a question regarding the CLI and its use (or open a new issue here if you find a bug!).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/511#issuecomment-637634883
https://github.com/qupath/qupath/issues/511#issuecomment-637634883:46,Usability,simpl,simply,46,"Hi @codybum,; Your problem should be fixed by simply changing the order or your args like this:; `./QuPath-0.2.0 script --image myimage.svs --script myscript.groovy`. So this shouldn't be a bug - though it might be worth adding that the CLI is somewhat strict with the argument order to the docs. As a rule of thumb and to avoid future problems, I would always call the command first, followed by all the desired options/parameters (called with their identification). ; E.g. `QuPath-0.2.0 [command-name] [-option1=<option1>] [-option2=<option2>]`. I'll close this for now as it's not a bug if you don't mind. Feel free to open a new thread on the [forum](https://forum.image.sc/tag/qupath) if you have a question regarding the CLI and its use (or open a new issue here if you find a bug!).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/511#issuecomment-637634883
https://github.com/qupath/qupath/issues/512#issuecomment-639525487:66,Availability,error,errors,66,"We'd need more information to be able to help, including:. * what errors do you see under *View -> Show log*?; * how precisely did the abnormal shutdown occur?; * can you give precise steps to replicate the issue?; * do the other images in the project work?. QuPath tries to offer the user some protection by creating a backup data file while writing the new one, in case this does not succeed - see https://github.com/qupath/qupath/blob/85700bbb026e1e72425e266ee3105b2f39c4f4fd/qupath-core/src/main/java/qupath/lib/projects/DefaultProject.java#L730-L779. Therefore I think that this bug report is not correct in general (i.e. any abnormal termination will cause data to be lost) - rather, the specific steps are essential to understand the problem. Note that you can right-click on the image under the 'Project' tab and go to the directory that contains the problematic `.qpdata` file. If your see a file ended with `.bkp` you could try renaming it to replace the corrupt/incomplete `.qpdata` and see if that restores the last saved data for you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-639525487
https://github.com/qupath/qupath/issues/512#issuecomment-639525487:104,Testability,log,log,104,"We'd need more information to be able to help, including:. * what errors do you see under *View -> Show log*?; * how precisely did the abnormal shutdown occur?; * can you give precise steps to replicate the issue?; * do the other images in the project work?. QuPath tries to offer the user some protection by creating a backup data file while writing the new one, in case this does not succeed - see https://github.com/qupath/qupath/blob/85700bbb026e1e72425e266ee3105b2f39c4f4fd/qupath-core/src/main/java/qupath/lib/projects/DefaultProject.java#L730-L779. Therefore I think that this bug report is not correct in general (i.e. any abnormal termination will cause data to be lost) - rather, the specific steps are essential to understand the problem. Note that you can right-click on the image under the 'Project' tab and go to the directory that contains the problematic `.qpdata` file. If your see a file ended with `.bkp` you could try renaming it to replace the corrupt/incomplete `.qpdata` and see if that restores the last saved data for you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-639525487
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:251,Availability,avail,available,251,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:313,Availability,error,errors,313,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:968,Availability,avail,available,968,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:1010,Availability,ERROR,ERROR,1010,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:1041,Availability,ERROR,ERROR,1041," will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Composi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:1213,Availability,ERROR,ERROR,1213," and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.Event",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:5980,Availability,avail,available,5980,"85); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). 2. how precisely did the abnormal shutdown occur?. I had a VPN connection with my pc in the office and then somebody else logged in to the machine and I got logged out. The VPN connection is via a .rdp file where I can just use my home screen/pc as a window to my office pc (is this clear?). 3. can you give precise steps to replicate the issue? -> Yes I can for this one but it happened to me before and I can not replicate that anymore. . In this particular case, have VPN connection with a PC. ; Open the software; Open a project; Work on a picture in the project; Let somebody else login without login you out; Wait until this person is finished working; login yourself again; Try to continue working -> not possible, software will crash; Close software via the Task Manager; Open software and open same project; Particular picture you were working on is now no longer available. . 4. do the other images in the project work?; Yes the other images work. . Thanks! For now your quick fix has saved me a lot of time :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:957,Energy Efficiency,power,power,957,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:395,Performance,Load,Loaded,395,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:474,Performance,Load,Loaded,474,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:527,Performance,Load,Loaded,527,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:581,Performance,Load,Loaded,581,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:630,Performance,Load,Loaded,630,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:677,Performance,Load,Loaded,677,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:739,Performance,Load,Loaded,739,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:1048,Performance,Load,Load,1048," will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Composi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:1220,Performance,Load,Load,1220," and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.Event",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:4441,Security,secur,security,4441,tchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3597); at javafx.scene.Scene$MouseHandler.process(Scene.java:3899); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). 2. how precisely did the abnormal shutdown occur?. I had a VPN connection with my pc in the office and then somebody else logged in to the machine and I got logged out. The VPN connection is via a .rdp file where I can just use my home screen/pc as a window to my office pc (is this clear?). 3. can you give precise steps to replicate the ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:4450,Security,Access,AccessController,4450,cEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3597); at javafx.scene.Scene$MouseHandler.process(Scene.java:3899); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). 2. how precisely did the abnormal shutdown occur?. I had a VPN connection with my pc in the office and then somebody else logged in to the machine and I got logged out. The VPN connection is via a .rdp file where I can just use my home screen/pc as a window to my office pc (is this clear?). 3. can you give precise steps to replicate the issue? -> Yes,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:350,Testability,log,log,350,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:5229,Testability,log,logged,5229,"85); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). 2. how precisely did the abnormal shutdown occur?. I had a VPN connection with my pc in the office and then somebody else logged in to the machine and I got logged out. The VPN connection is via a .rdp file where I can just use my home screen/pc as a window to my office pc (is this clear?). 3. can you give precise steps to replicate the issue? -> Yes I can for this one but it happened to me before and I can not replicate that anymore. . In this particular case, have VPN connection with a PC. ; Open the software; Open a project; Work on a picture in the project; Let somebody else login without login you out; Wait until this person is finished working; login yourself again; Try to continue working -> not possible, software will crash; Close software via the Task Manager; Open software and open same project; Particular picture you were working on is now no longer available. . 4. do the other images in the project work?; Yes the other images work. . Thanks! For now your quick fix has saved me a lot of time :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:5264,Testability,log,logged,5264,"85); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). 2. how precisely did the abnormal shutdown occur?. I had a VPN connection with my pc in the office and then somebody else logged in to the machine and I got logged out. The VPN connection is via a .rdp file where I can just use my home screen/pc as a window to my office pc (is this clear?). 3. can you give precise steps to replicate the issue? -> Yes I can for this one but it happened to me before and I can not replicate that anymore. . In this particular case, have VPN connection with a PC. ; Open the software; Open a project; Work on a picture in the project; Let somebody else login without login you out; Wait until this person is finished working; login yourself again; Try to continue working -> not possible, software will crash; Close software via the Task Manager; Open software and open same project; Particular picture you were working on is now no longer available. . 4. do the other images in the project work?; Yes the other images work. . Thanks! For now your quick fix has saved me a lot of time :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:5693,Testability,log,login,5693,"85); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). 2. how precisely did the abnormal shutdown occur?. I had a VPN connection with my pc in the office and then somebody else logged in to the machine and I got logged out. The VPN connection is via a .rdp file where I can just use my home screen/pc as a window to my office pc (is this clear?). 3. can you give precise steps to replicate the issue? -> Yes I can for this one but it happened to me before and I can not replicate that anymore. . In this particular case, have VPN connection with a PC. ; Open the software; Open a project; Work on a picture in the project; Let somebody else login without login you out; Wait until this person is finished working; login yourself again; Try to continue working -> not possible, software will crash; Close software via the Task Manager; Open software and open same project; Particular picture you were working on is now no longer available. . 4. do the other images in the project work?; Yes the other images work. . Thanks! For now your quick fix has saved me a lot of time :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:5707,Testability,log,login,5707,"85); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). 2. how precisely did the abnormal shutdown occur?. I had a VPN connection with my pc in the office and then somebody else logged in to the machine and I got logged out. The VPN connection is via a .rdp file where I can just use my home screen/pc as a window to my office pc (is this clear?). 3. can you give precise steps to replicate the issue? -> Yes I can for this one but it happened to me before and I can not replicate that anymore. . In this particular case, have VPN connection with a PC. ; Open the software; Open a project; Work on a picture in the project; Let somebody else login without login you out; Wait until this person is finished working; login yourself again; Try to continue working -> not possible, software will crash; Close software via the Task Manager; Open software and open same project; Particular picture you were working on is now no longer available. . 4. do the other images in the project work?; Yes the other images work. . Thanks! For now your quick fix has saved me a lot of time :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:5766,Testability,log,login,5766,"85); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). 2. how precisely did the abnormal shutdown occur?. I had a VPN connection with my pc in the office and then somebody else logged in to the machine and I got logged out. The VPN connection is via a .rdp file where I can just use my home screen/pc as a window to my office pc (is this clear?). 3. can you give precise steps to replicate the issue? -> Yes I can for this one but it happened to me before and I can not replicate that anymore. . In this particular case, have VPN connection with a PC. ; Open the software; Open a project; Work on a picture in the project; Let somebody else login without login you out; Wait until this person is finished working; login yourself again; Try to continue working -> not possible, software will crash; Close software via the Task Manager; Open software and open same project; Particular picture you were working on is now no longer available. . 4. do the other images in the project work?; Yes the other images work. . Thanks! For now your quick fix has saved me a lot of time :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640534382:5390,Usability,clear,clear,5390,"85); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). 2. how precisely did the abnormal shutdown occur?. I had a VPN connection with my pc in the office and then somebody else logged in to the machine and I got logged out. The VPN connection is via a .rdp file where I can just use my home screen/pc as a window to my office pc (is this clear?). 3. can you give precise steps to replicate the issue? -> Yes I can for this one but it happened to me before and I can not replicate that anymore. . In this particular case, have VPN connection with a PC. ; Open the software; Open a project; Work on a picture in the project; Let somebody else login without login you out; Wait until this person is finished working; login yourself again; Try to continue working -> not possible, software will crash; Close software via the Task Manager; Open software and open same project; Particular picture you were working on is now no longer available. . 4. do the other images in the project work?; Yes the other images work. . Thanks! For now your quick fix has saved me a lot of time :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382
https://github.com/qupath/qupath/issues/512#issuecomment-640548839:291,Testability,test,test,291,Thanks for the extra details. How many data files did you lose this way?. I ask because it sounds like it should *only* happen when the timing is particularly unfortunate and the connection is lost when writing... but I'm not exactly sure. I don't have a similar VPN setup that I can use to test it. It sounds to me like the best fix QuPath can offer would be to automatically discover and use the .bkp file (rather than you needing to find it yourself) -- logging a warning to the console to state that it has done this. Does that sound right to you?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640548839
https://github.com/qupath/qupath/issues/512#issuecomment-640548839:457,Testability,log,logging,457,Thanks for the extra details. How many data files did you lose this way?. I ask because it sounds like it should *only* happen when the timing is particularly unfortunate and the connection is lost when writing... but I'm not exactly sure. I don't have a similar VPN setup that I can use to test it. It sounds to me like the best fix QuPath can offer would be to automatically discover and use the .bkp file (rather than you needing to find it yourself) -- logging a warning to the console to state that it has done this. Does that sound right to you?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640548839
https://github.com/qupath/qupath/issues/512#issuecomment-640575237:153,Availability,down,down,153,"For now it was 2 times and luckily only 2 images (unfortunate within the same project). I think, it always happens when you use the Task manager to shut down the software, maybe that is something to be tested? I remember last time I also had to close the software with the Task manager because after half an hour it still did not respond.. . It would be awesome if indeed QuPath can discover the .bkp file and ask if this needs to be saved as the new data file, maybe indicating the date and time of the last back up to ask if you want to go back to this file or start from scratch to say so. But in general, this sounds like a good possible solution! Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640575237
https://github.com/qupath/qupath/issues/512#issuecomment-640575237:202,Testability,test,tested,202,"For now it was 2 times and luckily only 2 images (unfortunate within the same project). I think, it always happens when you use the Task manager to shut down the software, maybe that is something to be tested? I remember last time I also had to close the software with the Task manager because after half an hour it still did not respond.. . It would be awesome if indeed QuPath can discover the .bkp file and ask if this needs to be saved as the new data file, maybe indicating the date and time of the last back up to ask if you want to go back to this file or start from scratch to say so. But in general, this sounds like a good possible solution! Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640575237
https://github.com/qupath/qupath/issues/512#issuecomment-641434675:497,Availability,avail,available,497,"I've made some changes in the recent commits that should help. This should automatically result in the .bkp file being used if the 'proper' data file cannot be found. I was unable to find any general problem with closing from the task manager, but it would make sense if the software hangs because of a problem writing the data file and it is force quit for that reason. In this case, restoring from the backup is probably the best QuPath can offer anyway. I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-641434675
https://github.com/qupath/qupath/issues/513#issuecomment-639520268:254,Availability,error,error,254,"My command should be consistent with the latest documentation. The script does in fact run but it prints ""null"" for the current image data which seems to mean that the image is never loaded. If I try to run a pixel classifier in the same script I get an error which seems consistent with the image not being loaded:. UnsupportedOperationException at line 9: Interface can't be instantiated! Interface name: qupath.lib.classifiers.pixel.PixelClassifier",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/513#issuecomment-639520268
https://github.com/qupath/qupath/issues/513#issuecomment-639520268:358,Integrability,Interface,Interface,358,"My command should be consistent with the latest documentation. The script does in fact run but it prints ""null"" for the current image data which seems to mean that the image is never loaded. If I try to run a pixel classifier in the same script I get an error which seems consistent with the image not being loaded:. UnsupportedOperationException at line 9: Interface can't be instantiated! Interface name: qupath.lib.classifiers.pixel.PixelClassifier",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/513#issuecomment-639520268
https://github.com/qupath/qupath/issues/513#issuecomment-639520268:391,Integrability,Interface,Interface,391,"My command should be consistent with the latest documentation. The script does in fact run but it prints ""null"" for the current image data which seems to mean that the image is never loaded. If I try to run a pixel classifier in the same script I get an error which seems consistent with the image not being loaded:. UnsupportedOperationException at line 9: Interface can't be instantiated! Interface name: qupath.lib.classifiers.pixel.PixelClassifier",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/513#issuecomment-639520268
https://github.com/qupath/qupath/issues/513#issuecomment-639520268:183,Performance,load,loaded,183,"My command should be consistent with the latest documentation. The script does in fact run but it prints ""null"" for the current image data which seems to mean that the image is never loaded. If I try to run a pixel classifier in the same script I get an error which seems consistent with the image not being loaded:. UnsupportedOperationException at line 9: Interface can't be instantiated! Interface name: qupath.lib.classifiers.pixel.PixelClassifier",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/513#issuecomment-639520268
https://github.com/qupath/qupath/issues/513#issuecomment-639520268:308,Performance,load,loaded,308,"My command should be consistent with the latest documentation. The script does in fact run but it prints ""null"" for the current image data which seems to mean that the image is never loaded. If I try to run a pixel classifier in the same script I get an error which seems consistent with the image not being loaded:. UnsupportedOperationException at line 9: Interface can't be instantiated! Interface name: qupath.lib.classifiers.pixel.PixelClassifier",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/513#issuecomment-639520268
https://github.com/qupath/qupath/issues/514#issuecomment-639560795:145,Performance,load,load,145,"I guess there are two ways to approach this:; * Ensure TypeAdapters are always registered by putting them somewhere else (but where?!); * Always load extensions before running scripts. The second is probably easier, but not terribly clean - since extensions *should* be optional, but TypeAdapters generally relate to something that is really core.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/514#issuecomment-639560795
https://github.com/qupath/qupath/issues/515#issuecomment-640612895:19,Testability,test,tested,19,Hi @petebankhead I tested your latest `master` branch on a project with about 40 VSI files and 90 H&E images in the original project (some of which were removed by the user) and the import worked perfectly. Thank you very much for the prompt reply and fix!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/515#issuecomment-640612895
https://github.com/qupath/qupath/issues/518#issuecomment-640758278:158,Deployability,release,release,158,"This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640758278
https://github.com/qupath/qupath/issues/518#issuecomment-640758278:18,Usability,simpl,simple,18,"This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640758278
https://github.com/qupath/qupath/issues/518#issuecomment-640759146:1410,Availability,error,error,1410,"Thank you Pete. Kathy. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:11 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640758278&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716768343&sdata=I6ByW3NeHWrDm7VTBAvpv2MpkhL6TLrhVIKQdriYgAA%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEYF5JGJNVJRBCHLL3DRVULSZANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716773334&sdata=3J8BiWMPaBCV6Q7lr8IOEGiTxaRqEaq2AUvxwH2crGY%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640759146
https://github.com/qupath/qupath/issues/518#issuecomment-640759146:499,Deployability,release,release,499,"Thank you Pete. Kathy. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:11 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640758278&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716768343&sdata=I6ByW3NeHWrDm7VTBAvpv2MpkhL6TLrhVIKQdriYgAA%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEYF5JGJNVJRBCHLL3DRVULSZANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716773334&sdata=3J8BiWMPaBCV6Q7lr8IOEGiTxaRqEaq2AUvxwH2crGY%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640759146
https://github.com/qupath/qupath/issues/518#issuecomment-640759146:675,Safety,safe,safelinks,675,"Thank you Pete. Kathy. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:11 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640758278&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716768343&sdata=I6ByW3NeHWrDm7VTBAvpv2MpkhL6TLrhVIKQdriYgAA%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEYF5JGJNVJRBCHLL3DRVULSZANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716773334&sdata=3J8BiWMPaBCV6Q7lr8IOEGiTxaRqEaq2AUvxwH2crGY%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640759146
https://github.com/qupath/qupath/issues/518#issuecomment-640759146:1020,Safety,safe,safelinks,1020,"Thank you Pete. Kathy. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:11 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640758278&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716768343&sdata=I6ByW3NeHWrDm7VTBAvpv2MpkhL6TLrhVIKQdriYgAA%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEYF5JGJNVJRBCHLL3DRVULSZANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716773334&sdata=3J8BiWMPaBCV6Q7lr8IOEGiTxaRqEaq2AUvxwH2crGY%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640759146
https://github.com/qupath/qupath/issues/518#issuecomment-640759146:1427,Security,authoriz,authorized,1427,"Thank you Pete. Kathy. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:11 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640758278&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716768343&sdata=I6ByW3NeHWrDm7VTBAvpv2MpkhL6TLrhVIKQdriYgAA%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEYF5JGJNVJRBCHLL3DRVULSZANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716773334&sdata=3J8BiWMPaBCV6Q7lr8IOEGiTxaRqEaq2AUvxwH2crGY%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640759146
https://github.com/qupath/qupath/issues/518#issuecomment-640759146:359,Usability,simpl,simple,359,"Thank you Pete. Kathy. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:11 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640758278&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716768343&sdata=I6ByW3NeHWrDm7VTBAvpv2MpkhL6TLrhVIKQdriYgAA%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEYF5JGJNVJRBCHLL3DRVULSZANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716773334&sdata=3J8BiWMPaBCV6Q7lr8IOEGiTxaRqEaq2AUvxwH2crGY%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640759146
https://github.com/qupath/qupath/issues/518#issuecomment-640780209:140,Deployability,release,release,140,"I haven't noticed any changes with this behavior recently on Win10; I just tested with the 3 kinds of image servers I normally use. . 0.2.0 release. Is this happening on a particular OS? I take it Pete is seeing it on his end. I am seeing the magnification get smaller as I zoom out, and larger as I zoom in.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640780209
https://github.com/qupath/qupath/issues/518#issuecomment-640780209:75,Testability,test,tested,75,"I haven't noticed any changes with this behavior recently on Win10; I just tested with the 3 kinds of image servers I normally use. . 0.2.0 release. Is this happening on a particular OS? I take it Pete is seeing it on his end. I am seeing the magnification get smaller as I zoom out, and larger as I zoom in.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640780209
https://github.com/qupath/qupath/issues/518#issuecomment-640781128:106,Testability,test,tested,106,"I understand the issue is with the specific commands under *View &rarr; Zoom... &rarr; Zoom in/out* (I've tested only on a Mac, but assume the unexpected behavior is common across platforms - it was also weird in m10, but not v0.1.2... I didn't check any others).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640781128
https://github.com/qupath/qupath/issues/518#issuecomment-640783525:1546,Availability,error,error,1546,"Yes, under the View → Zoom... → Zoom in/out is where I encountered the reverse behavior.; I am working on a Mac. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:56 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I understand the issue is with the specific commands under View → Zoom... → Zoom in/out (I've tested only on a Mac, but assume the unexpected behavior is common across platforms - it was also weird in m10, but not v0.1.2... I didn't check any others). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640781128&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=2kWkyYCdApiRUWM942pRiwOnNoXy8SWGjV0e%2FyE0DuE%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE5SPRUYX7RMNYZKOFTRVUQ5LANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=pU%2BYSYbllDKbPfdTG%2FD921yLOmUpYsg0rDDoywDA3bE%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640783525
https://github.com/qupath/qupath/issues/518#issuecomment-640783525:805,Safety,safe,safelinks,805,"Yes, under the View → Zoom... → Zoom in/out is where I encountered the reverse behavior.; I am working on a Mac. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:56 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I understand the issue is with the specific commands under View → Zoom... → Zoom in/out (I've tested only on a Mac, but assume the unexpected behavior is common across platforms - it was also weird in m10, but not v0.1.2... I didn't check any others). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640781128&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=2kWkyYCdApiRUWM942pRiwOnNoXy8SWGjV0e%2FyE0DuE%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE5SPRUYX7RMNYZKOFTRVUQ5LANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=pU%2BYSYbllDKbPfdTG%2FD921yLOmUpYsg0rDDoywDA3bE%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640783525
https://github.com/qupath/qupath/issues/518#issuecomment-640783525:1152,Safety,safe,safelinks,1152,"Yes, under the View → Zoom... → Zoom in/out is where I encountered the reverse behavior.; I am working on a Mac. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:56 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I understand the issue is with the specific commands under View → Zoom... → Zoom in/out (I've tested only on a Mac, but assume the unexpected behavior is common across platforms - it was also weird in m10, but not v0.1.2... I didn't check any others). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640781128&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=2kWkyYCdApiRUWM942pRiwOnNoXy8SWGjV0e%2FyE0DuE%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE5SPRUYX7RMNYZKOFTRVUQ5LANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=pU%2BYSYbllDKbPfdTG%2FD921yLOmUpYsg0rDDoywDA3bE%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640783525
https://github.com/qupath/qupath/issues/518#issuecomment-640783525:1563,Security,authoriz,authorized,1563,"Yes, under the View → Zoom... → Zoom in/out is where I encountered the reverse behavior.; I am working on a Mac. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:56 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I understand the issue is with the specific commands under View → Zoom... → Zoom in/out (I've tested only on a Mac, but assume the unexpected behavior is common across platforms - it was also weird in m10, but not v0.1.2... I didn't check any others). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640781128&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=2kWkyYCdApiRUWM942pRiwOnNoXy8SWGjV0e%2FyE0DuE%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE5SPRUYX7RMNYZKOFTRVUQ5LANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=pU%2BYSYbllDKbPfdTG%2FD921yLOmUpYsg0rDDoywDA3bE%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640783525
https://github.com/qupath/qupath/issues/518#issuecomment-640783525:525,Testability,test,tested,525,"Yes, under the View → Zoom... → Zoom in/out is where I encountered the reverse behavior.; I am working on a Mac. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:56 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I understand the issue is with the specific commands under View → Zoom... → Zoom in/out (I've tested only on a Mac, but assume the unexpected behavior is common across platforms - it was also weird in m10, but not v0.1.2... I didn't check any others). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640781128&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=2kWkyYCdApiRUWM942pRiwOnNoXy8SWGjV0e%2FyE0DuE%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE5SPRUYX7RMNYZKOFTRVUQ5LANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=pU%2BYSYbllDKbPfdTG%2FD921yLOmUpYsg0rDDoywDA3bE%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640783525
https://github.com/qupath/qupath/issues/518#issuecomment-640786702:424,Testability,Test,Tested,424,"Correct. I also noticed that in Windows there are + and - keys that appear to be associated with those commands in the View menu, but the + and - keys do not seem to do anything. Am I reading that wrong or is this expected?. Sorry, to specify:. The + and - keys no the num pad do nothing when I use them. The -_ key to the left of the backspace key on my keyboard (next to 0) zooms in. The += key does not seem to function. Tested with both numlock on and off, and using the SHIFT key. All Win10.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640786702
https://github.com/qupath/qupath/issues/518#issuecomment-640799956:1494,Availability,error,error,1494,"The minus key on my main keyboard and the minus key on my number pad both cause; zooming-in / increased magnification. Both of my + keys don’t do anything. From: MicroscopyRA <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 1:26 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). Right, that was the first part, sorry for lack of clarity. Num lock on or off has no impact. ""The + and - keys no the num pad do nothing when I use them."". —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640795671&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844340509&sdata=PdIW4tJzmYbxH24BlWci00hk0WXzvZf6SoWFDKxEnks%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEZE2DLPTDWWMJINGMLRVUUM3ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844350502&sdata=80Q8pB3Tqf9csexrlxWph406VYzvfheP775lDTJ9y6Q%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640799956
https://github.com/qupath/qupath/issues/518#issuecomment-640799956:759,Safety,safe,safelinks,759,"The minus key on my main keyboard and the minus key on my number pad both cause; zooming-in / increased magnification. Both of my + keys don’t do anything. From: MicroscopyRA <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 1:26 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). Right, that was the first part, sorry for lack of clarity. Num lock on or off has no impact. ""The + and - keys no the num pad do nothing when I use them."". —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640795671&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844340509&sdata=PdIW4tJzmYbxH24BlWci00hk0WXzvZf6SoWFDKxEnks%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEZE2DLPTDWWMJINGMLRVUUM3ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844350502&sdata=80Q8pB3Tqf9csexrlxWph406VYzvfheP775lDTJ9y6Q%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640799956
https://github.com/qupath/qupath/issues/518#issuecomment-640799956:1104,Safety,safe,safelinks,1104,"The minus key on my main keyboard and the minus key on my number pad both cause; zooming-in / increased magnification. Both of my + keys don’t do anything. From: MicroscopyRA <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 1:26 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). Right, that was the first part, sorry for lack of clarity. Num lock on or off has no impact. ""The + and - keys no the num pad do nothing when I use them."". —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640795671&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844340509&sdata=PdIW4tJzmYbxH24BlWci00hk0WXzvZf6SoWFDKxEnks%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEZE2DLPTDWWMJINGMLRVUUM3ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844350502&sdata=80Q8pB3Tqf9csexrlxWph406VYzvfheP775lDTJ9y6Q%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640799956
https://github.com/qupath/qupath/issues/518#issuecomment-640799956:1511,Security,authoriz,authorized,1511,"The minus key on my main keyboard and the minus key on my number pad both cause; zooming-in / increased magnification. Both of my + keys don’t do anything. From: MicroscopyRA <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 1:26 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). Right, that was the first part, sorry for lack of clarity. Num lock on or off has no impact. ""The + and - keys no the num pad do nothing when I use them."". —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640795671&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844340509&sdata=PdIW4tJzmYbxH24BlWci00hk0WXzvZf6SoWFDKxEnks%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEZE2DLPTDWWMJINGMLRVUUM3ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844350502&sdata=80Q8pB3Tqf9csexrlxWph406VYzvfheP775lDTJ9y6Q%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640799956
https://github.com/qupath/qupath/issues/518#issuecomment-641435861:40,Availability,avail,available,40,"I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-641435861
https://github.com/qupath/qupath/issues/518#issuecomment-641438041:461,Availability,avail,available,461,"Okay. Will look forward to the new version.; Thank you for your help, Pete. Best regards,; Kathy Yee. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Tuesday, June 9, 2020 at 11:50 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-641435861&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238802631&sdata=35kLxw2W6caULJz3%2BBpsA14p3ff4jQMudfZyvd2fDBk%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE2ZSFDWOSMQL5V6SOTRVZR43ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238812636&sdata=euPaoon04N%2F82Kf22ZIMOfEzWDQjc4LmxotHQSNCcaA%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-641438041
https://github.com/qupath/qupath/issues/518#issuecomment-641438041:1386,Availability,error,error,1386,"Okay. Will look forward to the new version.; Thank you for your help, Pete. Best regards,; Kathy Yee. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Tuesday, June 9, 2020 at 11:50 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-641435861&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238802631&sdata=35kLxw2W6caULJz3%2BBpsA14p3ff4jQMudfZyvd2fDBk%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE2ZSFDWOSMQL5V6SOTRVZR43ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238812636&sdata=euPaoon04N%2F82Kf22ZIMOfEzWDQjc4LmxotHQSNCcaA%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-641438041
https://github.com/qupath/qupath/issues/518#issuecomment-641438041:647,Safety,safe,safelinks,647,"Okay. Will look forward to the new version.; Thank you for your help, Pete. Best regards,; Kathy Yee. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Tuesday, June 9, 2020 at 11:50 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-641435861&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238802631&sdata=35kLxw2W6caULJz3%2BBpsA14p3ff4jQMudfZyvd2fDBk%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE2ZSFDWOSMQL5V6SOTRVZR43ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238812636&sdata=euPaoon04N%2F82Kf22ZIMOfEzWDQjc4LmxotHQSNCcaA%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-641438041
https://github.com/qupath/qupath/issues/518#issuecomment-641438041:994,Safety,safe,safelinks,994,"Okay. Will look forward to the new version.; Thank you for your help, Pete. Best regards,; Kathy Yee. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Tuesday, June 9, 2020 at 11:50 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-641435861&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238802631&sdata=35kLxw2W6caULJz3%2BBpsA14p3ff4jQMudfZyvd2fDBk%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE2ZSFDWOSMQL5V6SOTRVZR43ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238812636&sdata=euPaoon04N%2F82Kf22ZIMOfEzWDQjc4LmxotHQSNCcaA%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-641438041
https://github.com/qupath/qupath/issues/518#issuecomment-641438041:1403,Security,authoriz,authorized,1403,"Okay. Will look forward to the new version.; Thank you for your help, Pete. Best regards,; Kathy Yee. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Tuesday, June 9, 2020 at 11:50 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-641435861&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238802631&sdata=35kLxw2W6caULJz3%2BBpsA14p3ff4jQMudfZyvd2fDBk%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE2ZSFDWOSMQL5V6SOTRVZR43ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238812636&sdata=euPaoon04N%2F82Kf22ZIMOfEzWDQjc4LmxotHQSNCcaA%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-641438041
https://github.com/qupath/qupath/issues/519#issuecomment-641085698:94,Testability,test,test,94,"Thanks @saramcardle, I think my last commit resolves this - but so far I've only been able to test it on a Mac.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/519#issuecomment-641085698
https://github.com/qupath/qupath/issues/519#issuecomment-641187545:7,Testability,test,tested,7,I just tested your last commit on Windows and it seems to resolve the problem for me as well.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/519#issuecomment-641187545
https://github.com/qupath/qupath/issues/519#issuecomment-641435594:40,Availability,avail,available,40,"I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/519#issuecomment-641435594
https://github.com/qupath/qupath/issues/527#issuecomment-644812072:125,Usability,usab,usable,125,"Upon closer inspection, this may not be a v0.2.x change... `Geometry.isValid()` checks can be slow to the point of not being usable for complex geometries (e.g. constructed from a high-resolution pixel classification).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/527#issuecomment-644812072
https://github.com/qupath/qupath/issues/527#issuecomment-1732338888:166,Performance,perform,performance,166,Closing this because there are no known issues in QuPath related to judicious use of validity checks (and adding many more checks 'to be on the safe side' could harm performance considerably).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/527#issuecomment-1732338888
https://github.com/qupath/qupath/issues/527#issuecomment-1732338888:144,Safety,safe,safe,144,Closing this because there are no known issues in QuPath related to judicious use of validity checks (and adding many more checks 'to be on the safe side' could harm performance considerably).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/527#issuecomment-1732338888
https://github.com/qupath/qupath/issues/538#issuecomment-645932940:302,Integrability,depend,depending,302,"Hi Giovanna, please use the forum for questions - GitHub issues should only be for bug reports.; Here's the link: https://forum.image.sc/tag/qupath. See also https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_annotations.html; In general, there are lots of different ways to export images depending upon what information is needed precisely (and the image size) - the details are really important. I'll close this issue, feel free to create a topic on the forum if the docs don't answer your question.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/538#issuecomment-645932940
https://github.com/qupath/qupath/issues/546#issuecomment-650125578:263,Deployability,release,releases,263,"Sorry for commenting on this. But by checking the old versions it seems that this behavior changed from 0.2m9 to 0.2m10. I do not know if this was intentional? . I can confirm that 0.2m9 opens by double clicking in Ubuntu 20.04, while 0.2m10 (and any more recent releases do not).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/546#issuecomment-650125578
https://github.com/qupath/qupath/issues/546#issuecomment-650188152:647,Availability,down,downloads,647,"No problem @medskillz !. @Tkilvaer Yes, I recall the change was recent. It came up on the forum:; * https://forum.image.sc/t/making-shared-library-file-type-executable-on-linux/37778; * https://forum.image.sc/t/exe-missing-with-qupath-0-2-0-m11-and-0-2-0-m12-releases/38073. It wasn't intentional - but I don't know exactly what update caused it. I don't see how it could have been a change in the QuPath code, since the launcher is generated using jpackage. I don't know if something in Ubuntu or jpackage changed that caused this. Happy to include a workaround if anyone finds one, but since the software does still run (and the number of Linux downloads is much lower than other platforms) it isn't something we've been exploring much.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/546#issuecomment-650188152
https://github.com/qupath/qupath/issues/546#issuecomment-650188152:259,Deployability,release,releases,259,"No problem @medskillz !. @Tkilvaer Yes, I recall the change was recent. It came up on the forum:; * https://forum.image.sc/t/making-shared-library-file-type-executable-on-linux/37778; * https://forum.image.sc/t/exe-missing-with-qupath-0-2-0-m11-and-0-2-0-m12-releases/38073. It wasn't intentional - but I don't know exactly what update caused it. I don't see how it could have been a change in the QuPath code, since the launcher is generated using jpackage. I don't know if something in Ubuntu or jpackage changed that caused this. Happy to include a workaround if anyone finds one, but since the software does still run (and the number of Linux downloads is much lower than other platforms) it isn't something we've been exploring much.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/546#issuecomment-650188152
https://github.com/qupath/qupath/issues/546#issuecomment-650188152:329,Deployability,update,update,329,"No problem @medskillz !. @Tkilvaer Yes, I recall the change was recent. It came up on the forum:; * https://forum.image.sc/t/making-shared-library-file-type-executable-on-linux/37778; * https://forum.image.sc/t/exe-missing-with-qupath-0-2-0-m11-and-0-2-0-m12-releases/38073. It wasn't intentional - but I don't know exactly what update caused it. I don't see how it could have been a change in the QuPath code, since the launcher is generated using jpackage. I don't know if something in Ubuntu or jpackage changed that caused this. Happy to include a workaround if anyone finds one, but since the software does still run (and the number of Linux downloads is much lower than other platforms) it isn't something we've been exploring much.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/546#issuecomment-650188152
https://github.com/qupath/qupath/issues/547#issuecomment-650197416:344,Safety,detect,detections,344,"An example script (not tested on a real example!):. ```groovy; double dx = -getCurrentServer().boundsX; double dy = -getCurrentServer().boundsY. getTMACoreList().each {it.ROI = it.ROI.translate(dx, dy)}; getAnnotationObjects().each {it.ROI = it.ROI.translate(dx, dy)}; fireHierarchyUpdate(); ```. This moves only TMA cores and annotations (not detections... but transferring detections really isn't recommended, since many detection commands are substantially different in v0.2.0 compared to v0.1.2).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/547#issuecomment-650197416
https://github.com/qupath/qupath/issues/547#issuecomment-650197416:375,Safety,detect,detections,375,"An example script (not tested on a real example!):. ```groovy; double dx = -getCurrentServer().boundsX; double dy = -getCurrentServer().boundsY. getTMACoreList().each {it.ROI = it.ROI.translate(dx, dy)}; getAnnotationObjects().each {it.ROI = it.ROI.translate(dx, dy)}; fireHierarchyUpdate(); ```. This moves only TMA cores and annotations (not detections... but transferring detections really isn't recommended, since many detection commands are substantially different in v0.2.0 compared to v0.1.2).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/547#issuecomment-650197416
https://github.com/qupath/qupath/issues/547#issuecomment-650197416:423,Safety,detect,detection,423,"An example script (not tested on a real example!):. ```groovy; double dx = -getCurrentServer().boundsX; double dy = -getCurrentServer().boundsY. getTMACoreList().each {it.ROI = it.ROI.translate(dx, dy)}; getAnnotationObjects().each {it.ROI = it.ROI.translate(dx, dy)}; fireHierarchyUpdate(); ```. This moves only TMA cores and annotations (not detections... but transferring detections really isn't recommended, since many detection commands are substantially different in v0.2.0 compared to v0.1.2).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/547#issuecomment-650197416
https://github.com/qupath/qupath/issues/547#issuecomment-650197416:23,Testability,test,tested,23,"An example script (not tested on a real example!):. ```groovy; double dx = -getCurrentServer().boundsX; double dy = -getCurrentServer().boundsY. getTMACoreList().each {it.ROI = it.ROI.translate(dx, dy)}; getAnnotationObjects().each {it.ROI = it.ROI.translate(dx, dy)}; fireHierarchyUpdate(); ```. This moves only TMA cores and annotations (not detections... but transferring detections really isn't recommended, since many detection commands are substantially different in v0.2.0 compared to v0.1.2).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/547#issuecomment-650197416
https://github.com/qupath/qupath/issues/549#issuecomment-662331988:70,Deployability,release,release,70,"This should now be fixed, and will be included in the upcoming v0.2.2 release.; Please reopen the issue if you find any problem with it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/549#issuecomment-662331988
https://github.com/qupath/qupath/issues/552#issuecomment-656226269:24,Availability,error,errors,24,"Actually there are more errors, introduced (I think) in v0.2.0-m5 when attempting to avoid recursion. The running statistics are not being reset between clusters, potentially resulting in further problems throughout these measurements.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/552#issuecomment-656226269
https://github.com/qupath/qupath/issues/552#issuecomment-656226269:85,Safety,avoid,avoid,85,"Actually there are more errors, introduced (I think) in v0.2.0-m5 when attempting to avoid recursion. The running statistics are not being reset between clusters, potentially resulting in further problems throughout these measurements.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/552#issuecomment-656226269
https://github.com/qupath/qupath/pull/558#issuecomment-659502340:232,Safety,avoid,avoid,232,"Mmh yes and no.; Git must have added the renaming of my local `ViewTrackerAnalysisCommand.java` to the commit somehow, which will probably be part of a future commit.. I'll close this PR and re-open it without the file renaming (to avoid weird behaviour).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/558#issuecomment-659502340
https://github.com/qupath/qupath/issues/567#issuecomment-663515543:117,Performance,load,loading,117,"The problem has been addressed in the above pull request, targeted for v0.2.2. Note that to get similar results when loading classifiers in scripts from v0.2.0 and v0.2.1, include the following two lines before loading the classifier:. ```groovy; import org.bytedeco.opencv.global.opencv_core;; opencv_core.setRNGSeed(-1); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/567#issuecomment-663515543
https://github.com/qupath/qupath/issues/567#issuecomment-663515543:211,Performance,load,loading,211,"The problem has been addressed in the above pull request, targeted for v0.2.2. Note that to get similar results when loading classifiers in scripts from v0.2.0 and v0.2.1, include the following two lines before loading the classifier:. ```groovy; import org.bytedeco.opencv.global.opencv_core;; opencv_core.setRNGSeed(-1); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/567#issuecomment-663515543
https://github.com/qupath/qupath/issues/572#issuecomment-664006280:149,Availability,avail,available,149,"It already came up on the forum, I created an Issue for it, and @melvingelbard fixed it :); https://github.com/qupath/qupath/issues/557. Fix will be available in v0.2.2 (planned to be available in the next day or two, if nothing else comes up before then...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/572#issuecomment-664006280
https://github.com/qupath/qupath/issues/572#issuecomment-664006280:184,Availability,avail,available,184,"It already came up on the forum, I created an Issue for it, and @melvingelbard fixed it :); https://github.com/qupath/qupath/issues/557. Fix will be available in v0.2.2 (planned to be available in the next day or two, if nothing else comes up before then...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/572#issuecomment-664006280
https://github.com/qupath/qupath/issues/573#issuecomment-664512769:190,Integrability,rout,routine,190,"I can't claim to be fluent in Java but I had a look at the code in Bioformats and went at my TIFF files with a hex editor and I don't understand where that NUL comes from. Bioformats uses a routine to read the image name that starts at some specific offset and stops on NUL (so extracts a classic C-style zero delimited string but without the NUL). The image file has additional NULs after the terminating NUL but they should not matter if I understand the function correctly. Strange.; I also get no NUL when using bfconvert to convert from (SIS-)TIFF to OME-TIFF and open that file in QuPath. Strange.; And I agree, it's not really QuPath's responsibility. But since NUL is illegal in Windows' clipboard anyway, one could see it as a ""safeguard"" for proper clipboard function, independently from the originating data source. ;-). https://github.com/ome/bioformats/blob/d572fc0240c168cf9ca5260ddebdde55a16ff6fd/components/common/src/loci/common/RandomAccessInputStream.java#L255; https://github.com/ome/bioformats/blob/d572fc0240c168cf9ca5260ddebdde55a16ff6fd/components/common/src/loci/common/RandomAccessInputStream.java#L191; https://github.com/ome/bioformats/blob/c68f457223d9bd6be73490632774d23df7c58390/components/formats-gpl/src/loci/formats/in/SISReader.java#L174. ![hex_tiff](https://user-images.githubusercontent.com/4951046/88569158-51f65480-d03a-11ea-8688-405e246a89dc.PNG)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664512769
https://github.com/qupath/qupath/issues/573#issuecomment-664512769:737,Safety,safe,safeguard,737,"I can't claim to be fluent in Java but I had a look at the code in Bioformats and went at my TIFF files with a hex editor and I don't understand where that NUL comes from. Bioformats uses a routine to read the image name that starts at some specific offset and stops on NUL (so extracts a classic C-style zero delimited string but without the NUL). The image file has additional NULs after the terminating NUL but they should not matter if I understand the function correctly. Strange.; I also get no NUL when using bfconvert to convert from (SIS-)TIFF to OME-TIFF and open that file in QuPath. Strange.; And I agree, it's not really QuPath's responsibility. But since NUL is illegal in Windows' clipboard anyway, one could see it as a ""safeguard"" for proper clipboard function, independently from the originating data source. ;-). https://github.com/ome/bioformats/blob/d572fc0240c168cf9ca5260ddebdde55a16ff6fd/components/common/src/loci/common/RandomAccessInputStream.java#L255; https://github.com/ome/bioformats/blob/d572fc0240c168cf9ca5260ddebdde55a16ff6fd/components/common/src/loci/common/RandomAccessInputStream.java#L191; https://github.com/ome/bioformats/blob/c68f457223d9bd6be73490632774d23df7c58390/components/formats-gpl/src/loci/formats/in/SISReader.java#L174. ![hex_tiff](https://user-images.githubusercontent.com/4951046/88569158-51f65480-d03a-11ea-8688-405e246a89dc.PNG)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664512769
https://github.com/qupath/qupath/issues/573#issuecomment-664523997:146,Availability,down,down,146,"True, but there are multiple places where text could be generated in QuPath that is copied to the clipboard. I don't really fancy trying to track down all of them... Are you able to share a file that includes the problem? I currently have no way to replicate it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664523997
https://github.com/qupath/qupath/issues/573#issuecomment-664551831:84,Security,Password,Password,84,That is the file in question:; https://box.med.uni-heidelberg.de/s/qjr7vvn7P9akLMx; Password for access: QuPathrocks1!; It was created using Olympus' cell^F software and is a so-called SIS-TIFF (Olympus' own TIFF variant),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664551831
https://github.com/qupath/qupath/issues/573#issuecomment-664551831:97,Security,access,access,97,That is the file in question:; https://box.med.uni-heidelberg.de/s/qjr7vvn7P9akLMx; Password for access: QuPathrocks1!; It was created using Olympus' cell^F software and is a so-called SIS-TIFF (Olympus' own TIFF variant),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664551831
https://github.com/qupath/qupath/issues/573#issuecomment-664566676:36,Security,password,password,36,"Good way to win my support with the password ;). Ok, it took a while but I am reasonably sure it's a Bio-Formats issue. I also couldn't find a problem with the `RandomAccessInputStream`, but it turns out that this isn't the code that's being called; rather it calls instead ; https://github.com/ome/ome-common-java/blob/94fe420a95f7859839e09e84185bc31107ba0b72/src/main/java/loci/common/RandomAccessInputStream.java#L590. I didn't trace through the (rather more complicated) logic but I can confirm with a debugger that this consistently returns a NULL at the end of the image name with the `SISReader`... including for other SIS files that I found posted on image.sc. Taking QuPath (mostly) out of the equation, this script demonstrates that the null occurs:; ```groovy; import loci.formats.MetadataTools. def path = ""/path/to/image.tif"". def reader = new loci.formats.ImageReader(); reader.setMetadataStore(MetadataTools.createOMEXMLMetadata()); reader.setId(path). def name = reader.getMetadataStore().getImageName(0); println ""Name: ${name} (length = ${name?.length()})""; if (name && name[-1] == (char)0); println 'NULL found to terminate string'; ```. With that in mind, I think it may be worth reporting to the Bio-Formats team to see if they consider this to be wrong or not. On the QuPath side, it *could* check for NULL at the point when the image name is requested from Bio-Formats. I feel like this would remove any weirdness at its source. It might be possible to smuggle a NULL into the results table some other way, but I don't see an obvious path to achieving that... so I don't think the copy-to-clipboard thing should be changed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664566676
https://github.com/qupath/qupath/issues/573#issuecomment-664566676:475,Testability,log,logic,475,"Good way to win my support with the password ;). Ok, it took a while but I am reasonably sure it's a Bio-Formats issue. I also couldn't find a problem with the `RandomAccessInputStream`, but it turns out that this isn't the code that's being called; rather it calls instead ; https://github.com/ome/ome-common-java/blob/94fe420a95f7859839e09e84185bc31107ba0b72/src/main/java/loci/common/RandomAccessInputStream.java#L590. I didn't trace through the (rather more complicated) logic but I can confirm with a debugger that this consistently returns a NULL at the end of the image name with the `SISReader`... including for other SIS files that I found posted on image.sc. Taking QuPath (mostly) out of the equation, this script demonstrates that the null occurs:; ```groovy; import loci.formats.MetadataTools. def path = ""/path/to/image.tif"". def reader = new loci.formats.ImageReader(); reader.setMetadataStore(MetadataTools.createOMEXMLMetadata()); reader.setId(path). def name = reader.getMetadataStore().getImageName(0); println ""Name: ${name} (length = ${name?.length()})""; if (name && name[-1] == (char)0); println 'NULL found to terminate string'; ```. With that in mind, I think it may be worth reporting to the Bio-Formats team to see if they consider this to be wrong or not. On the QuPath side, it *could* check for NULL at the point when the image name is requested from Bio-Formats. I feel like this would remove any weirdness at its source. It might be possible to smuggle a NULL into the results table some other way, but I don't see an obvious path to achieving that... so I don't think the copy-to-clipboard thing should be changed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664566676
https://github.com/qupath/qupath/issues/573#issuecomment-664581368:384,Deployability,release,release,384,I've just made a pull request above that should strip off any null characters at the end of image names provided by Bio-Formats. This may not fix existing projects (since the image names have already been set) but hopefully is enough to prevent it occurring in new projects. If you've a chance to check it please let me know how it goes. I was in the process of setting up the v0.2.2 release when this issue emerged; if it looks basically ok then the proposed fix could be included in the release tomorrow.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664581368
https://github.com/qupath/qupath/issues/573#issuecomment-664581368:489,Deployability,release,release,489,I've just made a pull request above that should strip off any null characters at the end of image names provided by Bio-Formats. This may not fix existing projects (since the image names have already been set) but hopefully is enough to prevent it occurring in new projects. If you've a chance to check it please let me know how it goes. I was in the process of setting up the v0.2.2 release when this issue emerged; if it looks basically ok then the proposed fix could be included in the release tomorrow.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664581368
https://github.com/qupath/qupath/issues/573#issuecomment-664984542:320,Deployability,release,release,320,"Hi,; I just quickly built your branch on Linux and can see no NUL in the image name anymore. Unfortunately I am a bit busy and can't build on Windows right now - but my SIS-TIFF files need further fixes that will (hopefully) show up in the next Bioformats tag version anyway so this should probably not delay the QuPath release today. 👍 . (FYI: The pixel calibration is completely off for SIS-TIFFs but this should be fixed in Bioformats HEAD and will likely show up in the next release - https://github.com/ome/bioformats/pull/3535)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664984542
https://github.com/qupath/qupath/issues/573#issuecomment-664984542:479,Deployability,release,release,479,"Hi,; I just quickly built your branch on Linux and can see no NUL in the image name anymore. Unfortunately I am a bit busy and can't build on Windows right now - but my SIS-TIFF files need further fixes that will (hopefully) show up in the next Bioformats tag version anyway so this should probably not delay the QuPath release today. 👍 . (FYI: The pixel calibration is completely off for SIS-TIFFs but this should be fixed in Bioformats HEAD and will likely show up in the next release - https://github.com/ome/bioformats/pull/3535)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664984542
https://github.com/qupath/qupath/issues/573#issuecomment-665048258:100,Availability,avail,available,100,"Thanks, closing this now since it's 'fixed' as far as it's likely to be within QuPath, and it's now available in v0.2.2.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-665048258
https://github.com/qupath/qupath/issues/582#issuecomment-668847956:63,Availability,down,down,63,"I think I ran into the same issue, but somehow couldn't narrow down the steps to reproduce it (so didn't open an issue). I think I set the maximum memory to `-1` (default), restarted QuPath, then tried again and it ""fixed"" it?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/582#issuecomment-668847956
https://github.com/qupath/qupath/issues/582#issuecomment-668851629:36,Modifiability,config,config,36,"For me the issue is the line in the config file that reads something like ; ```; [JavaOptions]; -Xmx204800M; ```; or ; ```; [JavaOptions]; -XX:MaxRAMPercentage=50; ```; The max percentage 50 prevented me from setting the RAM within QuPath to over 50% of the system total. I could still set it to something lower, though that is rarely desirable. Adjusting the config file manually allowed me to change it as desired. I think manually setting the RAM to something lower than 50% might have changed it from MaxRAM (which did not let me adjust QuPath's RAM usage higher) to -Xmx which can be reset on the fly by QuPath. Not 100% sure as this is all anecdotal/from my memory. Which is... well, not great.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/582#issuecomment-668851629
https://github.com/qupath/qupath/issues/582#issuecomment-668851629:360,Modifiability,config,config,360,"For me the issue is the line in the config file that reads something like ; ```; [JavaOptions]; -Xmx204800M; ```; or ; ```; [JavaOptions]; -XX:MaxRAMPercentage=50; ```; The max percentage 50 prevented me from setting the RAM within QuPath to over 50% of the system total. I could still set it to something lower, though that is rarely desirable. Adjusting the config file manually allowed me to change it as desired. I think manually setting the RAM to something lower than 50% might have changed it from MaxRAM (which did not let me adjust QuPath's RAM usage higher) to -Xmx which can be reset on the fly by QuPath. Not 100% sure as this is all anecdotal/from my memory. Which is... well, not great.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/582#issuecomment-668851629
https://github.com/qupath/qupath/issues/582#issuecomment-669019754:153,Deployability,install,installation,153,"I've just made a pull request that I think resolves this. The underlying issue is that QuPath has stored the requested maximum memory value from another installation, but this isn't consistent with the cfg file of the current installation. If you request that the max memory is identical to the value stored in the preference, then it isn't updated. Setting it to anything else (higher or lower) should work. (There is possibly no need to store the memory in a persistent preference at all - this was more relevant in v0.1.2 when memory could be handled differently. The pull request doesn't go quite that far though.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/582#issuecomment-669019754
https://github.com/qupath/qupath/issues/582#issuecomment-669019754:226,Deployability,install,installation,226,"I've just made a pull request that I think resolves this. The underlying issue is that QuPath has stored the requested maximum memory value from another installation, but this isn't consistent with the cfg file of the current installation. If you request that the max memory is identical to the value stored in the preference, then it isn't updated. Setting it to anything else (higher or lower) should work. (There is possibly no need to store the memory in a persistent preference at all - this was more relevant in v0.1.2 when memory could be handled differently. The pull request doesn't go quite that far though.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/582#issuecomment-669019754
https://github.com/qupath/qupath/issues/582#issuecomment-669019754:341,Deployability,update,updated,341,"I've just made a pull request that I think resolves this. The underlying issue is that QuPath has stored the requested maximum memory value from another installation, but this isn't consistent with the cfg file of the current installation. If you request that the max memory is identical to the value stored in the preference, then it isn't updated. Setting it to anything else (higher or lower) should work. (There is possibly no need to store the memory in a persistent preference at all - this was more relevant in v0.1.2 when memory could be handled differently. The pull request doesn't go quite that far though.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/582#issuecomment-669019754
https://github.com/qupath/qupath/issues/591#issuecomment-673115164:696,Deployability,update,updated,696,"Is there a scenario when this causes a problem, or is it just unexpected?. I can make a change easy to use the pixel size of the image at the time the `LabeledImageServer` is created (I'll think more about it, but I haven't come up with a reason not to do this yet). However, this still won't be able to recognize any changes to the metadata of the underlying image... so if you were to change the pixel size after creating the labeled server this change would not filter through. That might then also be unexpected. An alternative (but consistent) change would be for the labeled server to *always* be uncalibrated. And as you may have seen, labelled servers can't currently have their metadata updated at all. Perhaps they should permit this. I tend towards the first proposal (use the pixel size at the time the `LabeledImageServer` is created, but before committing to any one solution I'd like to better understand when the pixel size matters for labelled images.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/591#issuecomment-673115164
https://github.com/qupath/qupath/issues/591#issuecomment-673132914:728,Availability,down,downsamples,728,"Yes, it does cause a problem for me, but I have a feeling your response is going to be ""stop abusing the alignment function""... I'm trying to align images of the same slide taken with 2 different imaging modalities and with different resolutions. One is a normal slide scanner image with typical metadata; one is from an imaging mass spectrometer that gives an odd format that I convert to a png. I'm writing a script to do annotation-based alignment between the two images and I'm largely just copying and slightly modifying the source code from the ImageAlignmentPane. (I'm still working on the math to deal with the scaling issues, but I think/hope I can solve that). This converts the annotations to LabeledImages, and then downsamples the labeled images and aligns them. But, at the step where it's trying to downsample the images, it calls `getAveragedPixelSizeMicrons()` and gets a NaN. From there it just guesses at a reasonable downsample value, guesses incorrectly, and then fails to align because the ""result did not converge"". . This is likely to be an issue any time people are aligning images with missing or incorrect metadata, even through the interactive alignment pane. Also, I just tested this, and if you export a labeled .tiff using `writeImage` calling a `LabeledImageServer`, it writes the metadata of that tiff incorrectly (when doing this on a normal calibrated image, the correct pixel size is written). . In my case, I have a slightly scary work around. I can just code directly in my script that pixelSize=50 and hope that I remember to change that if I ever want to use this script in another project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/591#issuecomment-673132914
https://github.com/qupath/qupath/issues/591#issuecomment-673132914:814,Availability,down,downsample,814,"Yes, it does cause a problem for me, but I have a feeling your response is going to be ""stop abusing the alignment function""... I'm trying to align images of the same slide taken with 2 different imaging modalities and with different resolutions. One is a normal slide scanner image with typical metadata; one is from an imaging mass spectrometer that gives an odd format that I convert to a png. I'm writing a script to do annotation-based alignment between the two images and I'm largely just copying and slightly modifying the source code from the ImageAlignmentPane. (I'm still working on the math to deal with the scaling issues, but I think/hope I can solve that). This converts the annotations to LabeledImages, and then downsamples the labeled images and aligns them. But, at the step where it's trying to downsample the images, it calls `getAveragedPixelSizeMicrons()` and gets a NaN. From there it just guesses at a reasonable downsample value, guesses incorrectly, and then fails to align because the ""result did not converge"". . This is likely to be an issue any time people are aligning images with missing or incorrect metadata, even through the interactive alignment pane. Also, I just tested this, and if you export a labeled .tiff using `writeImage` calling a `LabeledImageServer`, it writes the metadata of that tiff incorrectly (when doing this on a normal calibrated image, the correct pixel size is written). . In my case, I have a slightly scary work around. I can just code directly in my script that pixelSize=50 and hope that I remember to change that if I ever want to use this script in another project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/591#issuecomment-673132914
https://github.com/qupath/qupath/issues/591#issuecomment-673132914:937,Availability,down,downsample,937,"Yes, it does cause a problem for me, but I have a feeling your response is going to be ""stop abusing the alignment function""... I'm trying to align images of the same slide taken with 2 different imaging modalities and with different resolutions. One is a normal slide scanner image with typical metadata; one is from an imaging mass spectrometer that gives an odd format that I convert to a png. I'm writing a script to do annotation-based alignment between the two images and I'm largely just copying and slightly modifying the source code from the ImageAlignmentPane. (I'm still working on the math to deal with the scaling issues, but I think/hope I can solve that). This converts the annotations to LabeledImages, and then downsamples the labeled images and aligns them. But, at the step where it's trying to downsample the images, it calls `getAveragedPixelSizeMicrons()` and gets a NaN. From there it just guesses at a reasonable downsample value, guesses incorrectly, and then fails to align because the ""result did not converge"". . This is likely to be an issue any time people are aligning images with missing or incorrect metadata, even through the interactive alignment pane. Also, I just tested this, and if you export a labeled .tiff using `writeImage` calling a `LabeledImageServer`, it writes the metadata of that tiff incorrectly (when doing this on a normal calibrated image, the correct pixel size is written). . In my case, I have a slightly scary work around. I can just code directly in my script that pixelSize=50 and hope that I remember to change that if I ever want to use this script in another project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/591#issuecomment-673132914
https://github.com/qupath/qupath/issues/591#issuecomment-673132914:1201,Testability,test,tested,1201,"Yes, it does cause a problem for me, but I have a feeling your response is going to be ""stop abusing the alignment function""... I'm trying to align images of the same slide taken with 2 different imaging modalities and with different resolutions. One is a normal slide scanner image with typical metadata; one is from an imaging mass spectrometer that gives an odd format that I convert to a png. I'm writing a script to do annotation-based alignment between the two images and I'm largely just copying and slightly modifying the source code from the ImageAlignmentPane. (I'm still working on the math to deal with the scaling issues, but I think/hope I can solve that). This converts the annotations to LabeledImages, and then downsamples the labeled images and aligns them. But, at the step where it's trying to downsample the images, it calls `getAveragedPixelSizeMicrons()` and gets a NaN. From there it just guesses at a reasonable downsample value, guesses incorrectly, and then fails to align because the ""result did not converge"". . This is likely to be an issue any time people are aligning images with missing or incorrect metadata, even through the interactive alignment pane. Also, I just tested this, and if you export a labeled .tiff using `writeImage` calling a `LabeledImageServer`, it writes the metadata of that tiff incorrectly (when doing this on a normal calibrated image, the correct pixel size is written). . In my case, I have a slightly scary work around. I can just code directly in my script that pixelSize=50 and hope that I remember to change that if I ever want to use this script in another project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/591#issuecomment-673132914
https://github.com/qupath/qupath/issues/591#issuecomment-673270150:654,Usability,simpl,simply,654,"> Yes, it does cause a problem for me, but I have a feeling your response is going to be ""stop abusing the alignment function""... Aha! It does sound like parts of this specific problem could/should be addressed within InteractiveImageAlignment. To use the current metadata, the only change I think is needed is to use `getMetadata()` instead of `getOriginalMetadata()` [here](https://github.com/qupath/qupath/blob/a03756328188999c0b7f12c290cda0589c50bd4b/qupath-core/src/main/java/qupath/lib/images/servers/LabeledImageServer.java#L157). You could try changing that to see if it works. Alternatively, without needing to edit or rebuild anything, can you simply convert your PNG to a calibrated TIFF within ImageJ (setting the pixel size there) *before* it is read into QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/591#issuecomment-673270150
https://github.com/qupath/qupath/issues/591#issuecomment-673574139:10,Usability,simpl,simply,10,"> can you simply convert your PNG to a calibrated TIFF within ImageJ (setting the pixel size there) before it is read into QuPath?. Wow, yes, that is a much better solution than writing the pixel size into my script. Thank you! ; The original vs current metadata might still be a problem for anyone exporting labeled tiffs, but I don't foresee that coming up often.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/591#issuecomment-673574139
https://github.com/qupath/qupath/issues/601#issuecomment-689503017:281,Testability,log,logical,281,"I've submitted a pull request at https://github.com/qupath/qupath/pull/602 with a proposed solution - can you check and see if it works (or it breaks something else)?. There should be a v0.2.3 soon to fix bugs. This seems a little bit borderline, since the old behavior is kind of logical and consistent... but I tend towards agreeing that it's a bug, and so if the fix works then it should be included. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/601#issuecomment-689503017
https://github.com/qupath/qupath/issues/601#issuecomment-689625384:153,Deployability,release,release,153,"Thanks, I can't see any good reason for the old behavior either - I'll merge the change :). Equalizing views would be a bit too big a change for a 0.0.x release... perhaps one day, but the whole brightness/contrast/color code is pretty horrible, and so it probably is a case of rewriting it entirely rather than trying to push it much further. (It was thanks to @melvingelbard that the issue was found so quickly, I was hesitant to delve into the mess myself...). For reference, the logic of the update is:; * retain the settings from the previous image in the current viewer, if it's compatible with the one being opened; * if there wasn't a compatible image already open, find the first viewer that *does* have a compatible image and use the display settings from that",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/601#issuecomment-689625384
https://github.com/qupath/qupath/issues/601#issuecomment-689625384:496,Deployability,update,update,496,"Thanks, I can't see any good reason for the old behavior either - I'll merge the change :). Equalizing views would be a bit too big a change for a 0.0.x release... perhaps one day, but the whole brightness/contrast/color code is pretty horrible, and so it probably is a case of rewriting it entirely rather than trying to push it much further. (It was thanks to @melvingelbard that the issue was found so quickly, I was hesitant to delve into the mess myself...). For reference, the logic of the update is:; * retain the settings from the previous image in the current viewer, if it's compatible with the one being opened; * if there wasn't a compatible image already open, find the first viewer that *does* have a compatible image and use the display settings from that",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/601#issuecomment-689625384
https://github.com/qupath/qupath/issues/601#issuecomment-689625384:483,Testability,log,logic,483,"Thanks, I can't see any good reason for the old behavior either - I'll merge the change :). Equalizing views would be a bit too big a change for a 0.0.x release... perhaps one day, but the whole brightness/contrast/color code is pretty horrible, and so it probably is a case of rewriting it entirely rather than trying to push it much further. (It was thanks to @melvingelbard that the issue was found so quickly, I was hesitant to delve into the mess myself...). For reference, the logic of the update is:; * retain the settings from the previous image in the current viewer, if it's compatible with the one being opened; * if there wasn't a compatible image already open, find the first viewer that *does* have a compatible image and use the display settings from that",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/601#issuecomment-689625384
https://github.com/qupath/qupath/issues/601#issuecomment-1143935765:63,Modifiability,extend,extend,63,"Hi, . Following on from this thread, has anyone found a way to extend brightness/contrast settings set for markers on one image to all the other images in the same project? We have 20+ slides with 30+markers and any advice on automatically applying the display modifications to all the images would be greatly appreciated!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/601#issuecomment-1143935765
https://github.com/qupath/qupath/issues/607#issuecomment-693259996:70,Security,access,access,70,"It looks likely that the data file is corrupt; unfortunately, without access to this we would not be able to replicate the issue. You can find the file under *Open directory... &rarr; Project entry...*; it will be called data.qpdata. This issue may be related: https://github.com/qupath/qupath/issues/512; See also the reference to a .bkp file that may be created when saving. You may also simply move/delete the data.qpdata file. This will remove all image data for that image from the project, so you'd then have to generate the superpixels again.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/607#issuecomment-693259996
https://github.com/qupath/qupath/issues/607#issuecomment-693259996:390,Usability,simpl,simply,390,"It looks likely that the data file is corrupt; unfortunately, without access to this we would not be able to replicate the issue. You can find the file under *Open directory... &rarr; Project entry...*; it will be called data.qpdata. This issue may be related: https://github.com/qupath/qupath/issues/512; See also the reference to a .bkp file that may be created when saving. You may also simply move/delete the data.qpdata file. This will remove all image data for that image from the project, so you'd then have to generate the superpixels again.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/607#issuecomment-693259996
https://github.com/qupath/qupath/issues/611#issuecomment-701504695:49,Availability,down,downsample,49,"It all depends on different factors such as the `downsample` used and the size of your image (which might be more helpful if it is in terms of pixels, rather than microns) amongst other things. Also, the `Positive pixel count` is a deprecated command, and was replaced in most recent versions of QuPath, to which we strongly recommend updating. The pixel classifier might just do what you need!. I will close this issue with your permission as it is not a bug. Is that ok?; For questions and help, you can ask on the community forum, where you'll find answers and more guiding: https://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/611#issuecomment-701504695
https://github.com/qupath/qupath/issues/611#issuecomment-701504695:7,Integrability,depend,depends,7,"It all depends on different factors such as the `downsample` used and the size of your image (which might be more helpful if it is in terms of pixels, rather than microns) amongst other things. Also, the `Positive pixel count` is a deprecated command, and was replaced in most recent versions of QuPath, to which we strongly recommend updating. The pixel classifier might just do what you need!. I will close this issue with your permission as it is not a bug. Is that ok?; For questions and help, you can ask on the community forum, where you'll find answers and more guiding: https://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/611#issuecomment-701504695
https://github.com/qupath/qupath/issues/611#issuecomment-701504695:569,Usability,guid,guiding,569,"It all depends on different factors such as the `downsample` used and the size of your image (which might be more helpful if it is in terms of pixels, rather than microns) amongst other things. Also, the `Positive pixel count` is a deprecated command, and was replaced in most recent versions of QuPath, to which we strongly recommend updating. The pixel classifier might just do what you need!. I will close this issue with your permission as it is not a bug. Is that ok?; For questions and help, you can ask on the community forum, where you'll find answers and more guiding: https://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/611#issuecomment-701504695
https://github.com/qupath/qupath/issues/611#issuecomment-701505442:303,Modifiability,flexible,flexible,303,"@cjpinelli Yes, this is why it's in the 'Deprecated' menu in QuPath v0.2 -- the command doesn't scale well at all. It was originally written mostly for TMAs. See https://qupath.readthedocs.io/en/latest/docs/tutorials/measuring_areas.html for information on thresholding, which is similar but a lot more flexible. Apart from that... what @melvingelbard said, he was quicker than me :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/611#issuecomment-701505442
https://github.com/qupath/qupath/issues/613#issuecomment-708514110:99,Testability,log,log,99,Dragging the project file onto QuPath should work; we would need the contents of *View &rarr; Show log* to begin to deciper the `NullPointerException`.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708514110
https://github.com/qupath/qupath/issues/613#issuecomment-708514862:110,Deployability,install,installing,110,"We'd also need to know the version of QuPath you're using, and any other changes that could be relevant (e.g. installing a new version, moving files).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708514862
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:32,Availability,ERROR,ERROR,32,Currently running QuPath 0.2.3. ERROR: Project error: java.lang.NullPointerException; ERROR: Project error; at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1094); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:47,Availability,error,error,47,Currently running QuPath 0.2.3. ERROR: Project error: java.lang.NullPointerException; ERROR: Project error; at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1094); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:86,Availability,ERROR,ERROR,86,Currently running QuPath 0.2.3. ERROR: Project error: java.lang.NullPointerException; ERROR: Project error; at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1094); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:101,Availability,error,error,101,Currently running QuPath 0.2.3. ERROR: Project error: java.lang.NullPointerException; ERROR: Project error; at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1094); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:146,Performance,load,loadProject,146,Currently running QuPath 0.2.3. ERROR: Project error: java.lang.NullPointerException; ERROR: Project error; at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1094); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:223,Performance,load,loadFromFile,223,Currently running QuPath 0.2.3. ERROR: Project error: java.lang.NullPointerException; ERROR: Project error; at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1094); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:295,Performance,load,loadProject,295,Currently running QuPath 0.2.3. ERROR: Project error: java.lang.NullPointerException; ERROR: Project error; at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1094); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:2838,Performance,load,loadPathClasses,2838,er.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:104); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$11(GlassViewEventHandler.java:766); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:765); at com.sun.glass.ui.View.handleDragDrop(View.java:713); at com.sun.glass.ui.View.notifyDragDrop(View.java:1042); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); Caused by null at qupath.lib.projects.DefaultProject.loadPathClasses(DefaultProject.java:1130); at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1086); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.disp,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:2919,Performance,load,loadProject,2919,r.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:104); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$11(GlassViewEventHandler.java:766); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:765); at com.sun.glass.ui.View.handleDragDrop(View.java:713); at com.sun.glass.ui.View.notifyDragDrop(View.java:1042); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); Caused by null at qupath.lib.projects.DefaultProject.loadPathClasses(DefaultProject.java:1130); at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1086); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.Ba,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:2996,Performance,load,loadFromFile,2996,va.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:104); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$11(GlassViewEventHandler.java:766); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:765); at com.sun.glass.ui.View.handleDragDrop(View.java:713); at com.sun.glass.ui.View.notifyDragDrop(View.java:1042); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); Caused by null at qupath.lib.projects.DefaultProject.loadPathClasses(DefaultProject.java:1130); at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1086); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.ja,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:3068,Performance,load,loadProject,3068,.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:104); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$11(GlassViewEventHandler.java:766); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:765); at com.sun.glass.ui.View.handleDragDrop(View.java:713); at com.sun.glass.ui.View.notifyDragDrop(View.java:1042); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); Caused by null at qupath.lib.projects.DefaultProject.loadPathClasses(DefaultProject.java:1130); at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1086); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImp,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:2013,Security,secur,security,2013,java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:104); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$11(GlassViewEventHandler.java:766); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:765); at com.sun.glass.ui.View.handleDragDrop(View.java:713); at com.sun.glass.ui.View.notifyDragDrop(View.java:1042); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); Caused by null at qupath.lib.projects.DefaultProject.loadPathClasses(DefaultProject.java:1130); at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1086); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultPr,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:2022,Security,Access,AccessController,2022, com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:104); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$11(GlassViewEventHandler.java:766); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:765); at com.sun.glass.ui.View.handleDragDrop(View.java:713); at com.sun.glass.ui.View.notifyDragDrop(View.java:1042); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); Caused by null at qupath.lib.projects.DefaultProject.loadPathClasses(DefaultProject.java:1130); at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1086); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:17,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:4786,Security,secur,security,4786,patchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:104); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$11(GlassViewEventHandler.java:766); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:765); at com.sun.glass.ui.View.handleDragDrop(View.java:713); at com.sun.glass.ui.View.notifyDragDrop(View.java:1042); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708516373:4795,Security,Access,AccessController,4795,patchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:104); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$11(GlassViewEventHandler.java:766); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:765); at com.sun.glass.ui.View.handleDragDrop(View.java:713); at com.sun.glass.ui.View.notifyDragDrop(View.java:1042); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373
https://github.com/qupath/qupath/issues/613#issuecomment-708519701:58,Performance,load,load,58,It looks like the exception is coming from the attempt to load the classifications (the ones that appear under the 'Annotations' tab). These are stored in the project under *classifiers/classes.json*. Something has gone wrong with that file; you can try simply deleting it (if it exists) or replacing the corresponding file from another project.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708519701
https://github.com/qupath/qupath/issues/613#issuecomment-708519701:254,Usability,simpl,simply,254,It looks like the exception is coming from the attempt to load the classifications (the ones that appear under the 'Annotations' tab). These are stored in the project under *classifiers/classes.json*. Something has gone wrong with that file; you can try simply deleting it (if it exists) or replacing the corresponding file from another project.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708519701
https://github.com/qupath/qupath/issues/613#issuecomment-708523858:60,Performance,load,load,60,> It looks like the exception is coming from the attempt to load the classifications (the ones that appear under the 'Annotations' tab). These are stored in the project under _classifiers/classes.json_.; > ; > Something has gone wrong with that file; you can try simply deleting it (if it exists) or replacing the corresponding file from another project. Deleting the classes.jon file worked! Is there something that I did wrong to create the issue that I can avoid in the future?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708523858
https://github.com/qupath/qupath/issues/613#issuecomment-708523858:460,Safety,avoid,avoid,460,> It looks like the exception is coming from the attempt to load the classifications (the ones that appear under the 'Annotations' tab). These are stored in the project under _classifiers/classes.json_.; > ; > Something has gone wrong with that file; you can try simply deleting it (if it exists) or replacing the corresponding file from another project. Deleting the classes.jon file worked! Is there something that I did wrong to create the issue that I can avoid in the future?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708523858
https://github.com/qupath/qupath/issues/613#issuecomment-708523858:263,Usability,simpl,simply,263,> It looks like the exception is coming from the attempt to load the classifications (the ones that appear under the 'Annotations' tab). These are stored in the project under _classifiers/classes.json_.; > ; > Something has gone wrong with that file; you can try simply deleting it (if it exists) or replacing the corresponding file from another project. Deleting the classes.jon file worked! Is there something that I did wrong to create the issue that I can avoid in the future?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708523858
https://github.com/qupath/qupath/issues/613#issuecomment-708524652:212,Safety,avoid,avoid,212,"Good! I don't know - QuPath shouldn't really allow this to happen, so I'm not sure how it did... I'll close the issue now, but if you can find steps to reproduce it please let me know and we can try to fix it to avoid the trouble in the future.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708524652
https://github.com/qupath/qupath/issues/614#issuecomment-709294178:31,Performance,perform,performed,31,"Intriguing... the packaging is performed using `jpackage` - which is part of the JDK, but currently is an incubator module - and so that is really where paths are handled. My guess is that it relates to this: https://bugs.openjdk.java.net/browse/JDK-8219962. I don't see any way to resolve it within QuPath directly, it looks like the bug is deeper in Java. A little bit of googling has shown that other applications have the same issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/614#issuecomment-709294178
https://github.com/qupath/qupath/issues/614#issuecomment-709417032:108,Deployability,install,installation,108,"I've now added a reference to this in the documentation: https://qupath.readthedocs.io/en/latest/docs/intro/installation.html#linux. I'll close the issue since it seems that the bug is outside QuPath and therefore I don't think it's something we can resolve, beyond documenting the workaround.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/614#issuecomment-709417032
https://github.com/qupath/qupath/issues/615#issuecomment-716706199:85,Availability,error,error,85,"Here's another OpenJDK 15 issue; after building with OpenJDK 15, I get the following error message (on a Linux system):. ```; euler:~/qupath (master) $ build/dist/QuPath-0.2.3/bin/QuPath-0.2.3 ; Error opening ""/home/jdg/qupath/build/dist/QuPath-0.2.3/lib/app/QuPath-0.2.cfg"" file: No such file or directory; ```. This does not occur when the package is built with OpenJDK 14, so somewhere the path is getting messed up. . Best wishes,. Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-716706199
https://github.com/qupath/qupath/issues/615#issuecomment-716706199:195,Availability,Error,Error,195,"Here's another OpenJDK 15 issue; after building with OpenJDK 15, I get the following error message (on a Linux system):. ```; euler:~/qupath (master) $ build/dist/QuPath-0.2.3/bin/QuPath-0.2.3 ; Error opening ""/home/jdg/qupath/build/dist/QuPath-0.2.3/lib/app/QuPath-0.2.cfg"" file: No such file or directory; ```. This does not occur when the package is built with OpenJDK 14, so somewhere the path is getting messed up. . Best wishes,. Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-716706199
https://github.com/qupath/qupath/issues/615#issuecomment-716706199:91,Integrability,message,message,91,"Here's another OpenJDK 15 issue; after building with OpenJDK 15, I get the following error message (on a Linux system):. ```; euler:~/qupath (master) $ build/dist/QuPath-0.2.3/bin/QuPath-0.2.3 ; Error opening ""/home/jdg/qupath/build/dist/QuPath-0.2.3/lib/app/QuPath-0.2.cfg"" file: No such file or directory; ```. This does not occur when the package is built with OpenJDK 14, so somewhere the path is getting messed up. . Best wishes,. Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-716706199
https://github.com/qupath/qupath/issues/615#issuecomment-725509556:31,Availability,error,error,31,however I do get the following error when starting qupath:. `; [JavaFX Application Thread] [ERROR] q.l.i.s.o.OpenslideServerBuilder - Could not load OpenSlide native libraries; java.lang.UnsatisfiedLinkError: no openslide-jni in java.library.path: /usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib; at java.base/java.lang.ClassLoader.loadLibrary(Unknown Source); at java.base/java.lang.Runtime.loadLibrary0(Unknown Source); at java.base/java.lang.System.loadLibrary(Unknown Source); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:88); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.su,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556
https://github.com/qupath/qupath/issues/615#issuecomment-725509556:92,Availability,ERROR,ERROR,92,however I do get the following error when starting qupath:. `; [JavaFX Application Thread] [ERROR] q.l.i.s.o.OpenslideServerBuilder - Could not load OpenSlide native libraries; java.lang.UnsatisfiedLinkError: no openslide-jni in java.library.path: /usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib; at java.base/java.lang.ClassLoader.loadLibrary(Unknown Source); at java.base/java.lang.Runtime.loadLibrary0(Unknown Source); at java.base/java.lang.System.loadLibrary(Unknown Source); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:88); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.su,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556
https://github.com/qupath/qupath/issues/615#issuecomment-725509556:2706,Deployability,update,update,2706,"ance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source); 17:02:49.461 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; 17:02:49.798 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 17:02:49.798 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 17:02:52.272 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Current version 0.2.3, latest stable release 0.2.3 - nothing to update; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556
https://github.com/qupath/qupath/issues/615#issuecomment-725509556:2935,Deployability,release,release,2935,"ance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source); 17:02:49.461 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; 17:02:49.798 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 17:02:49.798 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 17:02:52.272 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Current version 0.2.3, latest stable release 0.2.3 - nothing to update; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556
https://github.com/qupath/qupath/issues/615#issuecomment-725509556:2962,Deployability,update,update,2962,"ance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source); 17:02:49.461 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; 17:02:49.798 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 17:02:49.798 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 17:02:52.272 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Current version 0.2.3, latest stable release 0.2.3 - nothing to update; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556
https://github.com/qupath/qupath/issues/615#issuecomment-725509556:144,Performance,load,load,144,however I do get the following error when starting qupath:. `; [JavaFX Application Thread] [ERROR] q.l.i.s.o.OpenslideServerBuilder - Could not load OpenSlide native libraries; java.lang.UnsatisfiedLinkError: no openslide-jni in java.library.path: /usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib; at java.base/java.lang.ClassLoader.loadLibrary(Unknown Source); at java.base/java.lang.Runtime.loadLibrary0(Unknown Source); at java.base/java.lang.System.loadLibrary(Unknown Source); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:88); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.su,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556
https://github.com/qupath/qupath/issues/615#issuecomment-725509556:339,Performance,load,loadLibrary,339,however I do get the following error when starting qupath:. `; [JavaFX Application Thread] [ERROR] q.l.i.s.o.OpenslideServerBuilder - Could not load OpenSlide native libraries; java.lang.UnsatisfiedLinkError: no openslide-jni in java.library.path: /usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib; at java.base/java.lang.ClassLoader.loadLibrary(Unknown Source); at java.base/java.lang.Runtime.loadLibrary0(Unknown Source); at java.base/java.lang.System.loadLibrary(Unknown Source); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:88); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.su,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556
https://github.com/qupath/qupath/issues/615#issuecomment-725509556:459,Performance,load,loadLibrary,459,however I do get the following error when starting qupath:. `; [JavaFX Application Thread] [ERROR] q.l.i.s.o.OpenslideServerBuilder - Could not load OpenSlide native libraries; java.lang.UnsatisfiedLinkError: no openslide-jni in java.library.path: /usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib; at java.base/java.lang.ClassLoader.loadLibrary(Unknown Source); at java.base/java.lang.Runtime.loadLibrary0(Unknown Source); at java.base/java.lang.System.loadLibrary(Unknown Source); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:88); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.su,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556
https://github.com/qupath/qupath/issues/615#issuecomment-725509556:2695,Performance,Perform,Performing,2695,"ance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source); 17:02:49.461 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; 17:02:49.798 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 17:02:49.798 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 17:02:52.272 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Current version 0.2.3, latest stable release 0.2.3 - nothing to update; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556
https://github.com/qupath/qupath/issues/615#issuecomment-725509556:1936,Security,secur,security,1936,"ConstructorAccessorImpl.newInstance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source); 17:02:49.461 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; 17:02:49.798 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 17:02:49.798 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 17:02:52.272 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Current version 0.2.3, latest stable releas",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556
https://github.com/qupath/qupath/issues/615#issuecomment-725509556:1945,Security,Access,AccessController,1945,"cessorImpl.newInstance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source); 17:02:49.461 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; 17:02:49.798 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 17:02:49.798 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 17:02:52.272 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Current version 0.2.3, latest stable release 0.2.3 - not",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556
https://github.com/qupath/qupath/issues/615#issuecomment-725527739:121,Availability,error,errors,121,@petebankhead thank you for your response! I see what you mean. I think for now Bio-Formats is enough for me. I had some errors building with adoptopenjdk-14-hotspot so I built it with 15 (plus this little workaround for the cfg file to get it to run),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725527739
https://github.com/qupath/qupath/issues/615#issuecomment-725534079:516,Deployability,install,install,516,"Ah ok, you might find shifting any native libraries (in the same way as the cfg file) can also do the job. The underlying problem is that the Java library path needs to be set to find `openslide-jni`. Usually this 'just works' because the necessary library is found within the 'current' directory at the time QuPath is launched (through whatever magic jpackage has applied to set the current directory). You can also specify the library path in the `.cfg` file... but that may be more complicated. You might need to install OpenSlide through a package manager too, thanks to a separate Linux-related problem regarding how sub-dependencies are found.... https://github.com/qupath/qupath/issues/629. Not sure how much sense that makes, and I haven't looked into what has changed in Linux - but the summary is that moving things around may well be the solution to get things going with Java 15.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725534079
https://github.com/qupath/qupath/issues/615#issuecomment-725534079:626,Integrability,depend,dependencies,626,"Ah ok, you might find shifting any native libraries (in the same way as the cfg file) can also do the job. The underlying problem is that the Java library path needs to be set to find `openslide-jni`. Usually this 'just works' because the necessary library is found within the 'current' directory at the time QuPath is launched (through whatever magic jpackage has applied to set the current directory). You can also specify the library path in the `.cfg` file... but that may be more complicated. You might need to install OpenSlide through a package manager too, thanks to a separate Linux-related problem regarding how sub-dependencies are found.... https://github.com/qupath/qupath/issues/629. Not sure how much sense that makes, and I haven't looked into what has changed in Linux - but the summary is that moving things around may well be the solution to get things going with Java 15.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725534079
https://github.com/qupath/qupath/issues/615#issuecomment-757141337:167,Availability,avail,available,167,"Quick update: there are no longer any plans to make QuPath OpenJDK 15-compatible. The next release is intended to be >= March 2021, by which time OpenJDK 16 should be available and there is a risk things will have changed again. However, jpackage is an intended feature for 16 so should be more stable... and worth updating for. In the meantime, QuPath v0.2.* is only intended to be built with OpenJDK 14. QuPath's code should be compatible with Java 11; OpenJDK 14 is required only for jpackage. From an IDE, it should run with other Java versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-757141337
https://github.com/qupath/qupath/issues/615#issuecomment-757141337:6,Deployability,update,update,6,"Quick update: there are no longer any plans to make QuPath OpenJDK 15-compatible. The next release is intended to be >= March 2021, by which time OpenJDK 16 should be available and there is a risk things will have changed again. However, jpackage is an intended feature for 16 so should be more stable... and worth updating for. In the meantime, QuPath v0.2.* is only intended to be built with OpenJDK 14. QuPath's code should be compatible with Java 11; OpenJDK 14 is required only for jpackage. From an IDE, it should run with other Java versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-757141337
https://github.com/qupath/qupath/issues/615#issuecomment-757141337:91,Deployability,release,release,91,"Quick update: there are no longer any plans to make QuPath OpenJDK 15-compatible. The next release is intended to be >= March 2021, by which time OpenJDK 16 should be available and there is a risk things will have changed again. However, jpackage is an intended feature for 16 so should be more stable... and worth updating for. In the meantime, QuPath v0.2.* is only intended to be built with OpenJDK 14. QuPath's code should be compatible with Java 11; OpenJDK 14 is required only for jpackage. From an IDE, it should run with other Java versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-757141337
https://github.com/qupath/qupath/issues/615#issuecomment-757141337:192,Safety,risk,risk,192,"Quick update: there are no longer any plans to make QuPath OpenJDK 15-compatible. The next release is intended to be >= March 2021, by which time OpenJDK 16 should be available and there is a risk things will have changed again. However, jpackage is an intended feature for 16 so should be more stable... and worth updating for. In the meantime, QuPath v0.2.* is only intended to be built with OpenJDK 14. QuPath's code should be compatible with Java 11; OpenJDK 14 is required only for jpackage. From an IDE, it should run with other Java versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-757141337
https://github.com/qupath/qupath/pull/619#issuecomment-713631209:8,Availability,error,error,8,made in error,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/619#issuecomment-713631209
https://github.com/qupath/qupath/issues/624#issuecomment-714494385:47,Safety,detect,detect,47,"Found the solution:; `runPlugin('qupath.imagej.detect.cells.WatershedCellMembraneDetection', '{""detectionImageBrightfield"": ""Hematoxylin"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 1000.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": true, ""cellExpansionMicrons"": 8.0, ""includeNuclei"": true, ""limitExpansionByNucleusSize"": false, ""smoothBoundaries"": true, ""makeMeasurements"": true}');`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/624#issuecomment-714494385
https://github.com/qupath/qupath/issues/624#issuecomment-714494385:96,Safety,detect,detectionImageBrightfield,96,"Found the solution:; `runPlugin('qupath.imagej.detect.cells.WatershedCellMembraneDetection', '{""detectionImageBrightfield"": ""Hematoxylin"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 1000.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": true, ""cellExpansionMicrons"": 8.0, ""includeNuclei"": true, ""limitExpansionByNucleusSize"": false, ""smoothBoundaries"": true, ""makeMeasurements"": true}');`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/624#issuecomment-714494385
https://github.com/qupath/qupath/issues/626#issuecomment-715103591:241,Usability,clear,clear,241,A script like the following can be used to replicate the problem:; ```groovy; guiscript=true. def pathClasses = []; for (int i = 0; i < 500; i++) {; pathClasses << getPathClass('Another class ' + i); }. getQuPath().getAvailablePathClasses().clear(); getQuPath().getAvailablePathClasses().addAll(pathClasses); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/626#issuecomment-715103591
https://github.com/qupath/qupath/issues/627#issuecomment-715471359:578,Deployability,install,install,578,"Thanks @jcupitt , hmmm it seems to be working for me in Catalina 10.15.7.; I see the same (full) image in Preview and in QuPath v0.2.3, using either OpenSlide or Bio-Formats. It sounds like QuPath must be doing something wrong with linking, but I don't know what. More generally, attempting to include OpenSlide within QuPath has proven troublesome before - I'm a lot happier with Java classpaths than trying to get it to properly handle native libraries (particularly with subdependencies). I have been considering whether to drop OpenSlide support or leave it up to people to install it separate via a package manager in general... but it is still very useful for some file formats. I'd be grateful for any tips or suggestions to resolve the tiling problem, or the inclusion of OpenSlide in general.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715471359
https://github.com/qupath/qupath/issues/627#issuecomment-715506343:185,Deployability,install,install,185,"Hi @petebankhead, thank you for looking at this. Does Preview work for you on this image? I was struck by the way Preview and QuPath fail in the same way for me. Do you have a homebrew install?. You're probably doing all this already, but my macos .app builds have all native libraries in `Contents/Resources/lib/`, then a wrapper script in `Contents/MacOS/` that sets `DYLD_LIBRARY_PATH` to point to the lib directory. I include my own libtiff. My macOS build scripts are here:. https://github.com/jcupitt/build-osx/. It's gtk-osx plus some tweaks. You probably have something much fancier!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715506343
https://github.com/qupath/qupath/issues/627#issuecomment-715506343:323,Integrability,wrap,wrapper,323,"Hi @petebankhead, thank you for looking at this. Does Preview work for you on this image? I was struck by the way Preview and QuPath fail in the same way for me. Do you have a homebrew install?. You're probably doing all this already, but my macos .app builds have all native libraries in `Contents/Resources/lib/`, then a wrapper script in `Contents/MacOS/` that sets `DYLD_LIBRARY_PATH` to point to the lib directory. I include my own libtiff. My macOS build scripts are here:. https://github.com/jcupitt/build-osx/. It's gtk-osx plus some tweaks. You probably have something much fancier!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715506343
https://github.com/qupath/qupath/issues/627#issuecomment-715571233:790,Availability,reliab,reliably,790,"Preview & QuPath both look ok to me:. ![Screenshot 2020-10-23 at 20 49 48](https://user-images.githubusercontent.com/4690904/97047805-6bdc0080-1571-11eb-8a78-f2ec9652945c.png). I do have a homebrew install as well:. ![Screenshot 2020-10-23 at 20 52 12](https://user-images.githubusercontent.com/4690904/97048049-ba899a80-1571-11eb-8751-6dc0394469e5.png). ----. Thanks very much for the link, I'll check your build scripts - I think it is already safe to say they are a lot more sophisticated than anything used for QuPath! I'm afraid I'm one of the people who has spent too long with Java and Python... Do you think there would be any sense in trying to include libvips with QuPath? We could put some work into that from our side - especially if it would help us incorporate OpenSlide more reliably into QuPath while also giving access to some of libvips' other functionality (like faster image pyramid-writing?) - but I'm not sure if there are reasons that's a bad idea.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715571233
https://github.com/qupath/qupath/issues/627#issuecomment-715571233:198,Deployability,install,install,198,"Preview & QuPath both look ok to me:. ![Screenshot 2020-10-23 at 20 49 48](https://user-images.githubusercontent.com/4690904/97047805-6bdc0080-1571-11eb-8a78-f2ec9652945c.png). I do have a homebrew install as well:. ![Screenshot 2020-10-23 at 20 52 12](https://user-images.githubusercontent.com/4690904/97048049-ba899a80-1571-11eb-8751-6dc0394469e5.png). ----. Thanks very much for the link, I'll check your build scripts - I think it is already safe to say they are a lot more sophisticated than anything used for QuPath! I'm afraid I'm one of the people who has spent too long with Java and Python... Do you think there would be any sense in trying to include libvips with QuPath? We could put some work into that from our side - especially if it would help us incorporate OpenSlide more reliably into QuPath while also giving access to some of libvips' other functionality (like faster image pyramid-writing?) - but I'm not sure if there are reasons that's a bad idea.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715571233
https://github.com/qupath/qupath/issues/627#issuecomment-715571233:446,Safety,safe,safe,446,"Preview & QuPath both look ok to me:. ![Screenshot 2020-10-23 at 20 49 48](https://user-images.githubusercontent.com/4690904/97047805-6bdc0080-1571-11eb-8a78-f2ec9652945c.png). I do have a homebrew install as well:. ![Screenshot 2020-10-23 at 20 52 12](https://user-images.githubusercontent.com/4690904/97048049-ba899a80-1571-11eb-8751-6dc0394469e5.png). ----. Thanks very much for the link, I'll check your build scripts - I think it is already safe to say they are a lot more sophisticated than anything used for QuPath! I'm afraid I'm one of the people who has spent too long with Java and Python... Do you think there would be any sense in trying to include libvips with QuPath? We could put some work into that from our side - especially if it would help us incorporate OpenSlide more reliably into QuPath while also giving access to some of libvips' other functionality (like faster image pyramid-writing?) - but I'm not sure if there are reasons that's a bad idea.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715571233
https://github.com/qupath/qupath/issues/627#issuecomment-715571233:829,Security,access,access,829,"Preview & QuPath both look ok to me:. ![Screenshot 2020-10-23 at 20 49 48](https://user-images.githubusercontent.com/4690904/97047805-6bdc0080-1571-11eb-8a78-f2ec9652945c.png). I do have a homebrew install as well:. ![Screenshot 2020-10-23 at 20 52 12](https://user-images.githubusercontent.com/4690904/97048049-ba899a80-1571-11eb-8751-6dc0394469e5.png). ----. Thanks very much for the link, I'll check your build scripts - I think it is already safe to say they are a lot more sophisticated than anything used for QuPath! I'm afraid I'm one of the people who has spent too long with Java and Python... Do you think there would be any sense in trying to include libvips with QuPath? We could put some work into that from our side - especially if it would help us incorporate OpenSlide more reliably into QuPath while also giving access to some of libvips' other functionality (like faster image pyramid-writing?) - but I'm not sure if there are reasons that's a bad idea.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715571233
https://github.com/qupath/qupath/issues/627#issuecomment-715898223:126,Deployability,patch,patches,126,"I think I found the problem -- it's the libtiff in homebrew. It's a vanilla build of libtiff 4.1 and it's missing a series of patches which Ubuntu have applied to fix problems with things like YCbCR and JPEG-in-TIFF. This means that TIFFs created on mac tend to be broken :(. Sorry for the noise, I'll close.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715898223
https://github.com/qupath/qupath/issues/627#issuecomment-715899157:597,Availability,reliab,reliable,597,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157
https://github.com/qupath/qupath/issues/627#issuecomment-715899157:87,Deployability,integrat,integrate,87,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157
https://github.com/qupath/qupath/issues/627#issuecomment-715899157:700,Deployability,integrat,integration,700,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157
https://github.com/qupath/qupath/issues/627#issuecomment-715899157:87,Integrability,integrat,integrate,87,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157
https://github.com/qupath/qupath/issues/627#issuecomment-715899157:700,Integrability,integrat,integration,700,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157
https://github.com/qupath/qupath/issues/627#issuecomment-715899157:272,Testability,test,test,272,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157
https://github.com/qupath/qupath/issues/627#issuecomment-715899157:291,Testability,benchmark,benchmarks,291,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157
https://github.com/qupath/qupath/issues/627#issuecomment-715899157:105,Usability,simpl,simplest,105,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157
https://github.com/qupath/qupath/issues/627#issuecomment-715899157:663,Usability,simpl,simplest,663,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157
https://github.com/qupath/qupath/issues/627#issuecomment-716171458:320,Modifiability,portab,portable,320,"Thanks @jcupitt I've created a new issue for the more general QuPath OpenSlide troubles at https://github.com/qupath/qupath/issues/629. I'm afraid we have no easy way to connect with Python. For native libraries there is JNI and JavaCPP, but my trouble is usually that I can't figure out how to build them in a properly portable way across macOS and Linux :(",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-716171458
https://github.com/qupath/qupath/issues/628#issuecomment-716163314:192,Deployability,install,installation,192,"Hi @imgifty, have you checked if it could be the same as https://github.com/qupath/qupath/issues/355?; This is referenced in the docs [here](https://qupath.readthedocs.io/en/latest/docs/intro/installation.html#linux). See also; * https://github.com/qupath/qupath/issues/627; * https://github.com/libvips/libvips/issues/1862#issuecomment-715237292; * https://forum.image.sc/t/change-image-provider-after-import/42502/3; * https://forum.image.sc/t/install-and-start-qupath-ubuntu-20-04/39580/11. In summary, the specific problem with some .mrxs images isn't something that can be resolved directly inside QuPath - rather, it depends upon OpenSlide and/or its dependencies. You might be able to fix things by installing/updating OpenSlide via a package manager. (There *is* a more general QuPath issue inasmuch as it needs a better way to support OpenSlide in the future... I'll create another issue to discuss that.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-716163314
https://github.com/qupath/qupath/issues/628#issuecomment-716163314:446,Deployability,install,install-and-start-qupath-ubuntu-,446,"Hi @imgifty, have you checked if it could be the same as https://github.com/qupath/qupath/issues/355?; This is referenced in the docs [here](https://qupath.readthedocs.io/en/latest/docs/intro/installation.html#linux). See also; * https://github.com/qupath/qupath/issues/627; * https://github.com/libvips/libvips/issues/1862#issuecomment-715237292; * https://forum.image.sc/t/change-image-provider-after-import/42502/3; * https://forum.image.sc/t/install-and-start-qupath-ubuntu-20-04/39580/11. In summary, the specific problem with some .mrxs images isn't something that can be resolved directly inside QuPath - rather, it depends upon OpenSlide and/or its dependencies. You might be able to fix things by installing/updating OpenSlide via a package manager. (There *is* a more general QuPath issue inasmuch as it needs a better way to support OpenSlide in the future... I'll create another issue to discuss that.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-716163314
https://github.com/qupath/qupath/issues/628#issuecomment-716163314:706,Deployability,install,installing,706,"Hi @imgifty, have you checked if it could be the same as https://github.com/qupath/qupath/issues/355?; This is referenced in the docs [here](https://qupath.readthedocs.io/en/latest/docs/intro/installation.html#linux). See also; * https://github.com/qupath/qupath/issues/627; * https://github.com/libvips/libvips/issues/1862#issuecomment-715237292; * https://forum.image.sc/t/change-image-provider-after-import/42502/3; * https://forum.image.sc/t/install-and-start-qupath-ubuntu-20-04/39580/11. In summary, the specific problem with some .mrxs images isn't something that can be resolved directly inside QuPath - rather, it depends upon OpenSlide and/or its dependencies. You might be able to fix things by installing/updating OpenSlide via a package manager. (There *is* a more general QuPath issue inasmuch as it needs a better way to support OpenSlide in the future... I'll create another issue to discuss that.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-716163314
https://github.com/qupath/qupath/issues/628#issuecomment-716163314:623,Integrability,depend,depends,623,"Hi @imgifty, have you checked if it could be the same as https://github.com/qupath/qupath/issues/355?; This is referenced in the docs [here](https://qupath.readthedocs.io/en/latest/docs/intro/installation.html#linux). See also; * https://github.com/qupath/qupath/issues/627; * https://github.com/libvips/libvips/issues/1862#issuecomment-715237292; * https://forum.image.sc/t/change-image-provider-after-import/42502/3; * https://forum.image.sc/t/install-and-start-qupath-ubuntu-20-04/39580/11. In summary, the specific problem with some .mrxs images isn't something that can be resolved directly inside QuPath - rather, it depends upon OpenSlide and/or its dependencies. You might be able to fix things by installing/updating OpenSlide via a package manager. (There *is* a more general QuPath issue inasmuch as it needs a better way to support OpenSlide in the future... I'll create another issue to discuss that.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-716163314
https://github.com/qupath/qupath/issues/628#issuecomment-716163314:657,Integrability,depend,dependencies,657,"Hi @imgifty, have you checked if it could be the same as https://github.com/qupath/qupath/issues/355?; This is referenced in the docs [here](https://qupath.readthedocs.io/en/latest/docs/intro/installation.html#linux). See also; * https://github.com/qupath/qupath/issues/627; * https://github.com/libvips/libvips/issues/1862#issuecomment-715237292; * https://forum.image.sc/t/change-image-provider-after-import/42502/3; * https://forum.image.sc/t/install-and-start-qupath-ubuntu-20-04/39580/11. In summary, the specific problem with some .mrxs images isn't something that can be resolved directly inside QuPath - rather, it depends upon OpenSlide and/or its dependencies. You might be able to fix things by installing/updating OpenSlide via a package manager. (There *is* a more general QuPath issue inasmuch as it needs a better way to support OpenSlide in the future... I'll create another issue to discuss that.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-716163314
https://github.com/qupath/qupath/issues/628#issuecomment-734304328:170,Usability,guid,guide,170,"> @imgifty can you help out by providing how you reinstalled pixman? The latest version I can find is 0.38.4-0ubuntu1 for focal. Hello phromo, I built it using following guide: http://www.linuxfromscratch.org/blfs/view/svn/general/pixman.html .; Sorry for the late reply.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-734304328
https://github.com/qupath/qupath/issues/628#issuecomment-734310793:81,Deployability,upgrade,upgrade,81,"Thanks! The packages I provided should be easier to work with, e.g. to uninstall/upgrade once the ubuntu repositories provides 0.40. Manually replacing libraries can cause a mess when you want to upgrade to the next ubuntu version.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-734310793
https://github.com/qupath/qupath/issues/628#issuecomment-734310793:196,Deployability,upgrade,upgrade,196,"Thanks! The packages I provided should be easier to work with, e.g. to uninstall/upgrade once the ubuntu repositories provides 0.40. Manually replacing libraries can cause a mess when you want to upgrade to the next ubuntu version.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-734310793
https://github.com/qupath/qupath/issues/628#issuecomment-762152617:278,Availability,echo,echo,278,"Quick update, I started suffering this problem too with Ubuntu 20.04 LTS. As a workaround, I create a `launch_qupath.bsh` script inside the QuPath directory with the following contents:. ```; #!/bin/bash. DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" >/dev/null 2>&1 && pwd )""; echo $DIR; export LD_PRELOAD=$DIR/lib/app/libpixman-1.so.0; $DIR/bin/QuPath-0.2.3; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-762152617
https://github.com/qupath/qupath/issues/628#issuecomment-762152617:6,Deployability,update,update,6,"Quick update, I started suffering this problem too with Ubuntu 20.04 LTS. As a workaround, I create a `launch_qupath.bsh` script inside the QuPath directory with the following contents:. ```; #!/bin/bash. DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" >/dev/null 2>&1 && pwd )""; echo $DIR; export LD_PRELOAD=$DIR/lib/app/libpixman-1.so.0; $DIR/bin/QuPath-0.2.3; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-762152617
https://github.com/qupath/qupath/issues/628#issuecomment-1231398434:66,Availability,outage,outage,66,"I'll have a look at restoring the link. There's currently a power outage due to grid work (affecting my server phromo.se), expected to have it working again in roughly 2 hours after writing this post. Update: the link is now working again. Although, dunno if this is the best workaround anymore :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434
https://github.com/qupath/qupath/issues/628#issuecomment-1231398434:201,Deployability,Update,Update,201,"I'll have a look at restoring the link. There's currently a power outage due to grid work (affecting my server phromo.se), expected to have it working again in roughly 2 hours after writing this post. Update: the link is now working again. Although, dunno if this is the best workaround anymore :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434
https://github.com/qupath/qupath/issues/628#issuecomment-1231398434:60,Energy Efficiency,power,power,60,"I'll have a look at restoring the link. There's currently a power outage due to grid work (affecting my server phromo.se), expected to have it working again in roughly 2 hours after writing this post. Update: the link is now working again. Although, dunno if this is the best workaround anymore :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434
https://github.com/qupath/qupath/issues/629#issuecomment-716174039:247,Availability,down,download,247,"Hello, I'm one of the libvips maintainers, I can add a couple more links. libvips uses jhbuild to make windows and macos binaries, including openslide support. jhbuild came out of the gnome project: you describe a set of packages in xml and it'll download, patch, compile and link the library stack automatically. If you run inside a docker container, it's simple way to do things like nightly builds. . The build scripts are here for win:. https://github.com/libvips/build-win64. And here for macos:. https://github.com/jcupitt/build-osx. There are a set of MXE (makefile-style) scripts here for win as well, some people find them simpler to work with. https://github.com/libvips/build-win64-mxe. libvips 8.10 has added OME-TIFF pyramid support. There are some notes here:. https://libvips.github.io/libvips/2020/06/18/What's-new-in-8.10.html#pyramids. It should be quite a bit quicker than bioformats, though you may need to do some work to get the xml right. If QuPath were to use libvips for openslide import, there would probably need to be some kind of Java->libvips link. There are various Java bindings, but I've not used them myself and I don't know how suitable they would be. libvips is supposed to be mostly self-binding through introspection, so a full Java binding might only be a few weeks work. There's a high-quality C# binding which could be used as a model. https://github.com/kleisauke/net-vips. It's about 3,000 lines of code.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-716174039
https://github.com/qupath/qupath/issues/629#issuecomment-716174039:257,Deployability,patch,patch,257,"Hello, I'm one of the libvips maintainers, I can add a couple more links. libvips uses jhbuild to make windows and macos binaries, including openslide support. jhbuild came out of the gnome project: you describe a set of packages in xml and it'll download, patch, compile and link the library stack automatically. If you run inside a docker container, it's simple way to do things like nightly builds. . The build scripts are here for win:. https://github.com/libvips/build-win64. And here for macos:. https://github.com/jcupitt/build-osx. There are a set of MXE (makefile-style) scripts here for win as well, some people find them simpler to work with. https://github.com/libvips/build-win64-mxe. libvips 8.10 has added OME-TIFF pyramid support. There are some notes here:. https://libvips.github.io/libvips/2020/06/18/What's-new-in-8.10.html#pyramids. It should be quite a bit quicker than bioformats, though you may need to do some work to get the xml right. If QuPath were to use libvips for openslide import, there would probably need to be some kind of Java->libvips link. There are various Java bindings, but I've not used them myself and I don't know how suitable they would be. libvips is supposed to be mostly self-binding through introspection, so a full Java binding might only be a few weeks work. There's a high-quality C# binding which could be used as a model. https://github.com/kleisauke/net-vips. It's about 3,000 lines of code.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-716174039
https://github.com/qupath/qupath/issues/629#issuecomment-716174039:357,Usability,simpl,simple,357,"Hello, I'm one of the libvips maintainers, I can add a couple more links. libvips uses jhbuild to make windows and macos binaries, including openslide support. jhbuild came out of the gnome project: you describe a set of packages in xml and it'll download, patch, compile and link the library stack automatically. If you run inside a docker container, it's simple way to do things like nightly builds. . The build scripts are here for win:. https://github.com/libvips/build-win64. And here for macos:. https://github.com/jcupitt/build-osx. There are a set of MXE (makefile-style) scripts here for win as well, some people find them simpler to work with. https://github.com/libvips/build-win64-mxe. libvips 8.10 has added OME-TIFF pyramid support. There are some notes here:. https://libvips.github.io/libvips/2020/06/18/What's-new-in-8.10.html#pyramids. It should be quite a bit quicker than bioformats, though you may need to do some work to get the xml right. If QuPath were to use libvips for openslide import, there would probably need to be some kind of Java->libvips link. There are various Java bindings, but I've not used them myself and I don't know how suitable they would be. libvips is supposed to be mostly self-binding through introspection, so a full Java binding might only be a few weeks work. There's a high-quality C# binding which could be used as a model. https://github.com/kleisauke/net-vips. It's about 3,000 lines of code.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-716174039
https://github.com/qupath/qupath/issues/629#issuecomment-716174039:632,Usability,simpl,simpler,632,"Hello, I'm one of the libvips maintainers, I can add a couple more links. libvips uses jhbuild to make windows and macos binaries, including openslide support. jhbuild came out of the gnome project: you describe a set of packages in xml and it'll download, patch, compile and link the library stack automatically. If you run inside a docker container, it's simple way to do things like nightly builds. . The build scripts are here for win:. https://github.com/libvips/build-win64. And here for macos:. https://github.com/jcupitt/build-osx. There are a set of MXE (makefile-style) scripts here for win as well, some people find them simpler to work with. https://github.com/libvips/build-win64-mxe. libvips 8.10 has added OME-TIFF pyramid support. There are some notes here:. https://libvips.github.io/libvips/2020/06/18/What's-new-in-8.10.html#pyramids. It should be quite a bit quicker than bioformats, though you may need to do some work to get the xml right. If QuPath were to use libvips for openslide import, there would probably need to be some kind of Java->libvips link. There are various Java bindings, but I've not used them myself and I don't know how suitable they would be. libvips is supposed to be mostly self-binding through introspection, so a full Java binding might only be a few weeks work. There's a high-quality C# binding which could be used as a model. https://github.com/kleisauke/net-vips. It's about 3,000 lines of code.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-716174039
https://github.com/qupath/qupath/issues/629#issuecomment-761851656:155,Availability,avail,available,155,"@kwiechen thanks for the suggestion, I haven't looked into this - what would it involve and what would it solve?; Currently, 'official' Windows builds are available for OpenSlide and seem to work fine. It is portability on Mac/Linux that poses the biggest problem (especially since pixman included in the last LTS Ubuntu release causes trouble).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761851656
https://github.com/qupath/qupath/issues/629#issuecomment-761851656:321,Deployability,release,release,321,"@kwiechen thanks for the suggestion, I haven't looked into this - what would it involve and what would it solve?; Currently, 'official' Windows builds are available for OpenSlide and seem to work fine. It is portability on Mac/Linux that poses the biggest problem (especially since pixman included in the last LTS Ubuntu release causes trouble).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761851656
https://github.com/qupath/qupath/issues/629#issuecomment-761851656:208,Modifiability,portab,portability,208,"@kwiechen thanks for the suggestion, I haven't looked into this - what would it involve and what would it solve?; Currently, 'official' Windows builds are available for OpenSlide and seem to work fine. It is portability on Mac/Linux that poses the biggest problem (especially since pixman included in the last LTS Ubuntu release causes trouble).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761851656
https://github.com/qupath/qupath/issues/629#issuecomment-761857622:474,Availability,avail,available,474,"using MSYS2 building openslide is simply calling ./configure && make &&; make install avoiding winbuild.sh/cross compilation. Did you rebuild pixman; or other openslide dependencies from source on Linux?. Am So., 17. Jan. 2021 um 18:52 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> thanks for the suggestion, I; > haven't looked into this - what would it involve and what would it solve?; > Currently, 'official' Windows builds are available for OpenSlide and seem; > to work fine. It is portability on Mac/Linux that poses the biggest problem; > (especially since pixman included in the last LTS Ubuntu release causes; > trouble).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-761851656>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYDJUF6JH7JKL7LHRDS2MPVPANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761857622
https://github.com/qupath/qupath/issues/629#issuecomment-761857622:78,Deployability,install,install,78,"using MSYS2 building openslide is simply calling ./configure && make &&; make install avoiding winbuild.sh/cross compilation. Did you rebuild pixman; or other openslide dependencies from source on Linux?. Am So., 17. Jan. 2021 um 18:52 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> thanks for the suggestion, I; > haven't looked into this - what would it involve and what would it solve?; > Currently, 'official' Windows builds are available for OpenSlide and seem; > to work fine. It is portability on Mac/Linux that poses the biggest problem; > (especially since pixman included in the last LTS Ubuntu release causes; > trouble).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-761851656>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYDJUF6JH7JKL7LHRDS2MPVPANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761857622
https://github.com/qupath/qupath/issues/629#issuecomment-761857622:646,Deployability,release,release,646,"using MSYS2 building openslide is simply calling ./configure && make &&; make install avoiding winbuild.sh/cross compilation. Did you rebuild pixman; or other openslide dependencies from source on Linux?. Am So., 17. Jan. 2021 um 18:52 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> thanks for the suggestion, I; > haven't looked into this - what would it involve and what would it solve?; > Currently, 'official' Windows builds are available for OpenSlide and seem; > to work fine. It is portability on Mac/Linux that poses the biggest problem; > (especially since pixman included in the last LTS Ubuntu release causes; > trouble).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-761851656>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYDJUF6JH7JKL7LHRDS2MPVPANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761857622
https://github.com/qupath/qupath/issues/629#issuecomment-761857622:169,Integrability,depend,dependencies,169,"using MSYS2 building openslide is simply calling ./configure && make &&; make install avoiding winbuild.sh/cross compilation. Did you rebuild pixman; or other openslide dependencies from source on Linux?. Am So., 17. Jan. 2021 um 18:52 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> thanks for the suggestion, I; > haven't looked into this - what would it involve and what would it solve?; > Currently, 'official' Windows builds are available for OpenSlide and seem; > to work fine. It is portability on Mac/Linux that poses the biggest problem; > (especially since pixman included in the last LTS Ubuntu release causes; > trouble).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-761851656>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYDJUF6JH7JKL7LHRDS2MPVPANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761857622
https://github.com/qupath/qupath/issues/629#issuecomment-761857622:51,Modifiability,config,configure,51,"using MSYS2 building openslide is simply calling ./configure && make &&; make install avoiding winbuild.sh/cross compilation. Did you rebuild pixman; or other openslide dependencies from source on Linux?. Am So., 17. Jan. 2021 um 18:52 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> thanks for the suggestion, I; > haven't looked into this - what would it involve and what would it solve?; > Currently, 'official' Windows builds are available for OpenSlide and seem; > to work fine. It is portability on Mac/Linux that poses the biggest problem; > (especially since pixman included in the last LTS Ubuntu release causes; > trouble).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-761851656>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYDJUF6JH7JKL7LHRDS2MPVPANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761857622
https://github.com/qupath/qupath/issues/629#issuecomment-761857622:530,Modifiability,portab,portability,530,"using MSYS2 building openslide is simply calling ./configure && make &&; make install avoiding winbuild.sh/cross compilation. Did you rebuild pixman; or other openslide dependencies from source on Linux?. Am So., 17. Jan. 2021 um 18:52 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> thanks for the suggestion, I; > haven't looked into this - what would it involve and what would it solve?; > Currently, 'official' Windows builds are available for OpenSlide and seem; > to work fine. It is portability on Mac/Linux that poses the biggest problem; > (especially since pixman included in the last LTS Ubuntu release causes; > trouble).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-761851656>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYDJUF6JH7JKL7LHRDS2MPVPANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761857622
https://github.com/qupath/qupath/issues/629#issuecomment-761857622:86,Safety,avoid,avoiding,86,"using MSYS2 building openslide is simply calling ./configure && make &&; make install avoiding winbuild.sh/cross compilation. Did you rebuild pixman; or other openslide dependencies from source on Linux?. Am So., 17. Jan. 2021 um 18:52 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> thanks for the suggestion, I; > haven't looked into this - what would it involve and what would it solve?; > Currently, 'official' Windows builds are available for OpenSlide and seem; > to work fine. It is portability on Mac/Linux that poses the biggest problem; > (especially since pixman included in the last LTS Ubuntu release causes; > trouble).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-761851656>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYDJUF6JH7JKL7LHRDS2MPVPANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761857622
https://github.com/qupath/qupath/issues/629#issuecomment-761857622:34,Usability,simpl,simply,34,"using MSYS2 building openslide is simply calling ./configure && make &&; make install avoiding winbuild.sh/cross compilation. Did you rebuild pixman; or other openslide dependencies from source on Linux?. Am So., 17. Jan. 2021 um 18:52 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> thanks for the suggestion, I; > haven't looked into this - what would it involve and what would it solve?; > Currently, 'official' Windows builds are available for OpenSlide and seem; > to work fine. It is portability on Mac/Linux that poses the biggest problem; > (especially since pixman included in the last LTS Ubuntu release causes; > trouble).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-761851656>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYDJUF6JH7JKL7LHRDS2MPVPANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761857622
https://github.com/qupath/qupath/issues/629#issuecomment-762108942:455,Integrability,depend,dependencies,455,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942
https://github.com/qupath/qupath/issues/629#issuecomment-762108942:681,Integrability,depend,dependencies,681,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942
https://github.com/qupath/qupath/issues/629#issuecomment-762108942:892,Integrability,depend,dependencies,892,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942
https://github.com/qupath/qupath/issues/629#issuecomment-762108942:1133,Integrability,depend,dependencies,1133,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942
https://github.com/qupath/qupath/issues/629#issuecomment-762108942:187,Modifiability,portab,portable,187,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942
https://github.com/qupath/qupath/issues/629#issuecomment-762108942:1029,Modifiability,portab,portable,1029,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942
https://github.com/qupath/qupath/issues/629#issuecomment-762108942:555,Performance,load,loaded,555,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942
https://github.com/qupath/qupath/issues/629#issuecomment-762108942:642,Performance,load,load,642,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942
https://github.com/qupath/qupath/issues/629#issuecomment-762108942:705,Performance,load,loaded,705,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942
https://github.com/qupath/qupath/issues/629#issuecomment-762108942:877,Performance,load,loading,877,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942
https://github.com/qupath/qupath/issues/629#issuecomment-762108942:338,Usability,Simpl,Simply,338,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942
https://github.com/qupath/qupath/issues/629#issuecomment-762412806:658,Integrability,depend,dependencies,658,"maybe the openslide-winbuild cross compiling script can be used ..... Am Mo., 18. Jan. 2021 um 10:19 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> As I understand it, MSYS2 is for; > building software on Windows. It might be handy in the future, but it won't; > solve the biggest problem that we need to somehow be able to create; > portable builds on all platforms. Currently, Windows is the least; > problematic because 'official' builds exist; Mac and Linux rely on package; > managers.; >; > Simply rebuilding from source on Mac/Linux isn't sufficient to solve the; > problem either, because of the numerous sub-dependencies that must be; > built, and also the platform-specific way in which these are subsequently; > loaded on different platforms. I can specify exactly which OpenSlide shared; > library to load, but then this results in the sub-dependencies also being; > loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide; > versions are often picked up. This is very hard (impossible?) to control; > from Java alone because the loading of sub-dependencies doesn't use the; > Java library path.; >; > I can get things to work on Windows/Linux/Mac fine, I just can't get; > things to work in a portable way. Somehow we need a streamlined process of; > building on *all* platforms that packages up all dependencies in a; > self-contained manner.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-762108942>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4EB24ORI5S5CJAQYLS2P4L3ANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762412806
https://github.com/qupath/qupath/issues/629#issuecomment-762412806:893,Integrability,depend,dependencies,893,"maybe the openslide-winbuild cross compiling script can be used ..... Am Mo., 18. Jan. 2021 um 10:19 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> As I understand it, MSYS2 is for; > building software on Windows. It might be handy in the future, but it won't; > solve the biggest problem that we need to somehow be able to create; > portable builds on all platforms. Currently, Windows is the least; > problematic because 'official' builds exist; Mac and Linux rely on package; > managers.; >; > Simply rebuilding from source on Mac/Linux isn't sufficient to solve the; > problem either, because of the numerous sub-dependencies that must be; > built, and also the platform-specific way in which these are subsequently; > loaded on different platforms. I can specify exactly which OpenSlide shared; > library to load, but then this results in the sub-dependencies also being; > loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide; > versions are often picked up. This is very hard (impossible?) to control; > from Java alone because the loading of sub-dependencies doesn't use the; > Java library path.; >; > I can get things to work on Windows/Linux/Mac fine, I just can't get; > things to work in a portable way. Somehow we need a streamlined process of; > building on *all* platforms that packages up all dependencies in a; > self-contained manner.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-762108942>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4EB24ORI5S5CJAQYLS2P4L3ANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762412806
https://github.com/qupath/qupath/issues/629#issuecomment-762412806:1113,Integrability,depend,dependencies,1113,"maybe the openslide-winbuild cross compiling script can be used ..... Am Mo., 18. Jan. 2021 um 10:19 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> As I understand it, MSYS2 is for; > building software on Windows. It might be handy in the future, but it won't; > solve the biggest problem that we need to somehow be able to create; > portable builds on all platforms. Currently, Windows is the least; > problematic because 'official' builds exist; Mac and Linux rely on package; > managers.; >; > Simply rebuilding from source on Mac/Linux isn't sufficient to solve the; > problem either, because of the numerous sub-dependencies that must be; > built, and also the platform-specific way in which these are subsequently; > loaded on different platforms. I can specify exactly which OpenSlide shared; > library to load, but then this results in the sub-dependencies also being; > loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide; > versions are often picked up. This is very hard (impossible?) to control; > from Java alone because the loading of sub-dependencies doesn't use the; > Java library path.; >; > I can get things to work on Windows/Linux/Mac fine, I just can't get; > things to work in a portable way. Somehow we need a streamlined process of; > building on *all* platforms that packages up all dependencies in a; > self-contained manner.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-762108942>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4EB24ORI5S5CJAQYLS2P4L3ANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762412806
https://github.com/qupath/qupath/issues/629#issuecomment-762412806:1369,Integrability,depend,dependencies,1369,"maybe the openslide-winbuild cross compiling script can be used ..... Am Mo., 18. Jan. 2021 um 10:19 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> As I understand it, MSYS2 is for; > building software on Windows. It might be handy in the future, but it won't; > solve the biggest problem that we need to somehow be able to create; > portable builds on all platforms. Currently, Windows is the least; > problematic because 'official' builds exist; Mac and Linux rely on package; > managers.; >; > Simply rebuilding from source on Mac/Linux isn't sufficient to solve the; > problem either, because of the numerous sub-dependencies that must be; > built, and also the platform-specific way in which these are subsequently; > loaded on different platforms. I can specify exactly which OpenSlide shared; > library to load, but then this results in the sub-dependencies also being; > loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide; > versions are often picked up. This is very hard (impossible?) to control; > from Java alone because the loading of sub-dependencies doesn't use the; > Java library path.; >; > I can get things to work on Windows/Linux/Mac fine, I just can't get; > things to work in a portable way. Somehow we need a streamlined process of; > building on *all* platforms that packages up all dependencies in a; > self-contained manner.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-762108942>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4EB24ORI5S5CJAQYLS2P4L3ANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762412806
https://github.com/qupath/qupath/issues/629#issuecomment-762412806:375,Modifiability,portab,portable,375,"maybe the openslide-winbuild cross compiling script can be used ..... Am Mo., 18. Jan. 2021 um 10:19 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> As I understand it, MSYS2 is for; > building software on Windows. It might be handy in the future, but it won't; > solve the biggest problem that we need to somehow be able to create; > portable builds on all platforms. Currently, Windows is the least; > problematic because 'official' builds exist; Mac and Linux rely on package; > managers.; >; > Simply rebuilding from source on Mac/Linux isn't sufficient to solve the; > problem either, because of the numerous sub-dependencies that must be; > built, and also the platform-specific way in which these are subsequently; > loaded on different platforms. I can specify exactly which OpenSlide shared; > library to load, but then this results in the sub-dependencies also being; > loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide; > versions are often picked up. This is very hard (impossible?) to control; > from Java alone because the loading of sub-dependencies doesn't use the; > Java library path.; >; > I can get things to work on Windows/Linux/Mac fine, I just can't get; > things to work in a portable way. Somehow we need a streamlined process of; > building on *all* platforms that packages up all dependencies in a; > self-contained manner.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-762108942>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4EB24ORI5S5CJAQYLS2P4L3ANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762412806
https://github.com/qupath/qupath/issues/629#issuecomment-762412806:1262,Modifiability,portab,portable,1262,"maybe the openslide-winbuild cross compiling script can be used ..... Am Mo., 18. Jan. 2021 um 10:19 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> As I understand it, MSYS2 is for; > building software on Windows. It might be handy in the future, but it won't; > solve the biggest problem that we need to somehow be able to create; > portable builds on all platforms. Currently, Windows is the least; > problematic because 'official' builds exist; Mac and Linux rely on package; > managers.; >; > Simply rebuilding from source on Mac/Linux isn't sufficient to solve the; > problem either, because of the numerous sub-dependencies that must be; > built, and also the platform-specific way in which these are subsequently; > loaded on different platforms. I can specify exactly which OpenSlide shared; > library to load, but then this results in the sub-dependencies also being; > loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide; > versions are often picked up. This is very hard (impossible?) to control; > from Java alone because the loading of sub-dependencies doesn't use the; > Java library path.; >; > I can get things to work on Windows/Linux/Mac fine, I just can't get; > things to work in a portable way. Somehow we need a streamlined process of; > building on *all* platforms that packages up all dependencies in a; > self-contained manner.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-762108942>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4EB24ORI5S5CJAQYLS2P4L3ANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762412806
https://github.com/qupath/qupath/issues/629#issuecomment-762412806:764,Performance,load,loaded,764,"maybe the openslide-winbuild cross compiling script can be used ..... Am Mo., 18. Jan. 2021 um 10:19 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> As I understand it, MSYS2 is for; > building software on Windows. It might be handy in the future, but it won't; > solve the biggest problem that we need to somehow be able to create; > portable builds on all platforms. Currently, Windows is the least; > problematic because 'official' builds exist; Mac and Linux rely on package; > managers.; >; > Simply rebuilding from source on Mac/Linux isn't sufficient to solve the; > problem either, because of the numerous sub-dependencies that must be; > built, and also the platform-specific way in which these are subsequently; > loaded on different platforms. I can specify exactly which OpenSlide shared; > library to load, but then this results in the sub-dependencies also being; > loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide; > versions are often picked up. This is very hard (impossible?) to control; > from Java alone because the loading of sub-dependencies doesn't use the; > Java library path.; >; > I can get things to work on Windows/Linux/Mac fine, I just can't get; > things to work in a portable way. Somehow we need a streamlined process of; > building on *all* platforms that packages up all dependencies in a; > self-contained manner.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-762108942>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4EB24ORI5S5CJAQYLS2P4L3ANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762412806
https://github.com/qupath/qupath/issues/629#issuecomment-762412806:854,Performance,load,load,854,"maybe the openslide-winbuild cross compiling script can be used ..... Am Mo., 18. Jan. 2021 um 10:19 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> As I understand it, MSYS2 is for; > building software on Windows. It might be handy in the future, but it won't; > solve the biggest problem that we need to somehow be able to create; > portable builds on all platforms. Currently, Windows is the least; > problematic because 'official' builds exist; Mac and Linux rely on package; > managers.; >; > Simply rebuilding from source on Mac/Linux isn't sufficient to solve the; > problem either, because of the numerous sub-dependencies that must be; > built, and also the platform-specific way in which these are subsequently; > loaded on different platforms. I can specify exactly which OpenSlide shared; > library to load, but then this results in the sub-dependencies also being; > loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide; > versions are often picked up. This is very hard (impossible?) to control; > from Java alone because the loading of sub-dependencies doesn't use the; > Java library path.; >; > I can get things to work on Windows/Linux/Mac fine, I just can't get; > things to work in a portable way. Somehow we need a streamlined process of; > building on *all* platforms that packages up all dependencies in a; > self-contained manner.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-762108942>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4EB24ORI5S5CJAQYLS2P4L3ANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762412806
https://github.com/qupath/qupath/issues/629#issuecomment-762412806:920,Performance,load,loaded,920,"maybe the openslide-winbuild cross compiling script can be used ..... Am Mo., 18. Jan. 2021 um 10:19 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> As I understand it, MSYS2 is for; > building software on Windows. It might be handy in the future, but it won't; > solve the biggest problem that we need to somehow be able to create; > portable builds on all platforms. Currently, Windows is the least; > problematic because 'official' builds exist; Mac and Linux rely on package; > managers.; >; > Simply rebuilding from source on Mac/Linux isn't sufficient to solve the; > problem either, because of the numerous sub-dependencies that must be; > built, and also the platform-specific way in which these are subsequently; > loaded on different platforms. I can specify exactly which OpenSlide shared; > library to load, but then this results in the sub-dependencies also being; > loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide; > versions are often picked up. This is very hard (impossible?) to control; > from Java alone because the loading of sub-dependencies doesn't use the; > Java library path.; >; > I can get things to work on Windows/Linux/Mac fine, I just can't get; > things to work in a portable way. Somehow we need a streamlined process of; > building on *all* platforms that packages up all dependencies in a; > self-contained manner.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-762108942>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4EB24ORI5S5CJAQYLS2P4L3ANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762412806
https://github.com/qupath/qupath/issues/629#issuecomment-762412806:1098,Performance,load,loading,1098,"maybe the openslide-winbuild cross compiling script can be used ..... Am Mo., 18. Jan. 2021 um 10:19 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> As I understand it, MSYS2 is for; > building software on Windows. It might be handy in the future, but it won't; > solve the biggest problem that we need to somehow be able to create; > portable builds on all platforms. Currently, Windows is the least; > problematic because 'official' builds exist; Mac and Linux rely on package; > managers.; >; > Simply rebuilding from source on Mac/Linux isn't sufficient to solve the; > problem either, because of the numerous sub-dependencies that must be; > built, and also the platform-specific way in which these are subsequently; > loaded on different platforms. I can specify exactly which OpenSlide shared; > library to load, but then this results in the sub-dependencies also being; > loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide; > versions are often picked up. This is very hard (impossible?) to control; > from Java alone because the loading of sub-dependencies doesn't use the; > Java library path.; >; > I can get things to work on Windows/Linux/Mac fine, I just can't get; > things to work in a portable way. Somehow we need a streamlined process of; > building on *all* platforms that packages up all dependencies in a; > self-contained manner.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-762108942>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4EB24ORI5S5CJAQYLS2P4L3ANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762412806
https://github.com/qupath/qupath/issues/629#issuecomment-762412806:538,Usability,Simpl,Simply,538,"maybe the openslide-winbuild cross compiling script can be used ..... Am Mo., 18. Jan. 2021 um 10:19 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> As I understand it, MSYS2 is for; > building software on Windows. It might be handy in the future, but it won't; > solve the biggest problem that we need to somehow be able to create; > portable builds on all platforms. Currently, Windows is the least; > problematic because 'official' builds exist; Mac and Linux rely on package; > managers.; >; > Simply rebuilding from source on Mac/Linux isn't sufficient to solve the; > problem either, because of the numerous sub-dependencies that must be; > built, and also the platform-specific way in which these are subsequently; > loaded on different platforms. I can specify exactly which OpenSlide shared; > library to load, but then this results in the sub-dependencies also being; > loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide; > versions are often picked up. This is very hard (impossible?) to control; > from Java alone because the loading of sub-dependencies doesn't use the; > Java library path.; >; > I can get things to work on Windows/Linux/Mac fine, I just can't get; > things to work in a portable way. Somehow we need a streamlined process of; > building on *all* platforms that packages up all dependencies in a; > self-contained manner.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-762108942>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4EB24ORI5S5CJAQYLS2P4L3ANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762412806
https://github.com/qupath/qupath/issues/629#issuecomment-816843986:65,Integrability,depend,dependencies,65,https://github.com/microsoft/vcpkg may help to build openslide's dependencies?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-816843986
https://github.com/qupath/qupath/issues/629#issuecomment-816852260:487,Deployability,release,release,487,"macOS is pretty easy: you just build to a prefix and wrap it up with a small script and a plist file. I make a nip2 binary this way, including openslide support. https://github.com/jcupitt/build-osx. It'll work, but users will need to tick various boxes to allow unsigned application to run, which is annoying. A proper dev account and code signing fixes that, though I've never bothered. Linux is very annoying: inkscape (for example) offer flatpak, snap and ppa:. https://inkscape.org/release/0.92.3/gnulinux/. Any one of those would be fine. I've made a snap for nip2 and it was pretty easy:. https://snapcraft.io/vips-nip2. You just make one of these:. https://github.com/libvips/nip2/blob/master/.snapcraft.yaml",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-816852260
https://github.com/qupath/qupath/issues/629#issuecomment-816852260:53,Integrability,wrap,wrap,53,"macOS is pretty easy: you just build to a prefix and wrap it up with a small script and a plist file. I make a nip2 binary this way, including openslide support. https://github.com/jcupitt/build-osx. It'll work, but users will need to tick various boxes to allow unsigned application to run, which is annoying. A proper dev account and code signing fixes that, though I've never bothered. Linux is very annoying: inkscape (for example) offer flatpak, snap and ppa:. https://inkscape.org/release/0.92.3/gnulinux/. Any one of those would be fine. I've made a snap for nip2 and it was pretty easy:. https://snapcraft.io/vips-nip2. You just make one of these:. https://github.com/libvips/nip2/blob/master/.snapcraft.yaml",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-816852260
https://github.com/qupath/qupath/issues/629#issuecomment-932797893:370,Deployability,install,install,370,"> ; > . > I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on _all_ platforms that packages up all dependencies in a self-contained manner. using https://spack.readthedocs.io/en/latest/package_list.html . openslide and all its dependencies can be built with . spack install openslide. tested with WSL/Ubuntu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-932797893
https://github.com/qupath/qupath/issues/629#issuecomment-932797893:203,Integrability,depend,dependencies,203,"> ; > . > I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on _all_ platforms that packages up all dependencies in a self-contained manner. using https://spack.readthedocs.io/en/latest/package_list.html . openslide and all its dependencies can be built with . spack install openslide. tested with WSL/Ubuntu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-932797893
https://github.com/qupath/qupath/issues/629#issuecomment-932797893:331,Integrability,depend,dependencies,331,"> ; > . > I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on _all_ platforms that packages up all dependencies in a self-contained manner. using https://spack.readthedocs.io/en/latest/package_list.html . openslide and all its dependencies can be built with . spack install openslide. tested with WSL/Ubuntu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-932797893
https://github.com/qupath/qupath/issues/629#issuecomment-932797893:99,Modifiability,portab,portable,99,"> ; > . > I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on _all_ platforms that packages up all dependencies in a self-contained manner. using https://spack.readthedocs.io/en/latest/package_list.html . openslide and all its dependencies can be built with . spack install openslide. tested with WSL/Ubuntu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-932797893
https://github.com/qupath/qupath/issues/629#issuecomment-932797893:389,Testability,test,tested,389,"> ; > . > I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on _all_ platforms that packages up all dependencies in a self-contained manner. using https://spack.readthedocs.io/en/latest/package_list.html . openslide and all its dependencies can be built with . spack install openslide. tested with WSL/Ubuntu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-932797893
https://github.com/qupath/qupath/issues/629#issuecomment-932810687:95,Deployability,install,installation,95,"The following library is under active development, but has been proven to be handy. No complex installation such as openslide. @jcupitt @petebankhead ; https://github.com/bayer-science-for-a-better-life/tiffslide",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-932810687
https://github.com/qupath/qupath/issues/629#issuecomment-1346032726:695,Availability,toler,tolerate,695,"Back after a long delay... @kwiechen I didn't know of Spack but it looks interesting. Only issue is that we don't actually need OpenSlide only, but rather [OpenSlide Java](https://github.com/openslide/openslide-java). I created a [Homebrew tap](https://github.com/petebankhead/homebrew-qupath) that handles this, and works - but would require users to install locally and then has some awkward path issues to deal with. I found Homebrew installation on Mac straightforward... on Ubuntu, not so much. I wonder if trying to get OpenSlide Java into some familiar package manager is the best way to go. If the installation is easy enough, I guess Linux users probably won't mind and Mac users might tolerate it (and Windows users can still have the 'official' binaries made available by the OpenSlide devs). Alternatively, when Java's [foreign function & memory API](https://openjdk.org/jeps/424) stabilizes then perhaps it'll be possible to skip the current Java JNI stuff, and just use the existing package manager support for OpenSlide without Java. @delta2golf tifffile is a Python library, so unfortunately won't help here since QuPath is written in Java. @jcupitt thanks very much for these suggestions. It sounds trickier than I'd hoped, but also promising - I'll try to find a free day when my optimism levels are high enough to give this a proper go.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726
https://github.com/qupath/qupath/issues/629#issuecomment-1346032726:770,Availability,avail,available,770,"Back after a long delay... @kwiechen I didn't know of Spack but it looks interesting. Only issue is that we don't actually need OpenSlide only, but rather [OpenSlide Java](https://github.com/openslide/openslide-java). I created a [Homebrew tap](https://github.com/petebankhead/homebrew-qupath) that handles this, and works - but would require users to install locally and then has some awkward path issues to deal with. I found Homebrew installation on Mac straightforward... on Ubuntu, not so much. I wonder if trying to get OpenSlide Java into some familiar package manager is the best way to go. If the installation is easy enough, I guess Linux users probably won't mind and Mac users might tolerate it (and Windows users can still have the 'official' binaries made available by the OpenSlide devs). Alternatively, when Java's [foreign function & memory API](https://openjdk.org/jeps/424) stabilizes then perhaps it'll be possible to skip the current Java JNI stuff, and just use the existing package manager support for OpenSlide without Java. @delta2golf tifffile is a Python library, so unfortunately won't help here since QuPath is written in Java. @jcupitt thanks very much for these suggestions. It sounds trickier than I'd hoped, but also promising - I'll try to find a free day when my optimism levels are high enough to give this a proper go.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726
https://github.com/qupath/qupath/issues/629#issuecomment-1346032726:352,Deployability,install,install,352,"Back after a long delay... @kwiechen I didn't know of Spack but it looks interesting. Only issue is that we don't actually need OpenSlide only, but rather [OpenSlide Java](https://github.com/openslide/openslide-java). I created a [Homebrew tap](https://github.com/petebankhead/homebrew-qupath) that handles this, and works - but would require users to install locally and then has some awkward path issues to deal with. I found Homebrew installation on Mac straightforward... on Ubuntu, not so much. I wonder if trying to get OpenSlide Java into some familiar package manager is the best way to go. If the installation is easy enough, I guess Linux users probably won't mind and Mac users might tolerate it (and Windows users can still have the 'official' binaries made available by the OpenSlide devs). Alternatively, when Java's [foreign function & memory API](https://openjdk.org/jeps/424) stabilizes then perhaps it'll be possible to skip the current Java JNI stuff, and just use the existing package manager support for OpenSlide without Java. @delta2golf tifffile is a Python library, so unfortunately won't help here since QuPath is written in Java. @jcupitt thanks very much for these suggestions. It sounds trickier than I'd hoped, but also promising - I'll try to find a free day when my optimism levels are high enough to give this a proper go.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726
https://github.com/qupath/qupath/issues/629#issuecomment-1346032726:437,Deployability,install,installation,437,"Back after a long delay... @kwiechen I didn't know of Spack but it looks interesting. Only issue is that we don't actually need OpenSlide only, but rather [OpenSlide Java](https://github.com/openslide/openslide-java). I created a [Homebrew tap](https://github.com/petebankhead/homebrew-qupath) that handles this, and works - but would require users to install locally and then has some awkward path issues to deal with. I found Homebrew installation on Mac straightforward... on Ubuntu, not so much. I wonder if trying to get OpenSlide Java into some familiar package manager is the best way to go. If the installation is easy enough, I guess Linux users probably won't mind and Mac users might tolerate it (and Windows users can still have the 'official' binaries made available by the OpenSlide devs). Alternatively, when Java's [foreign function & memory API](https://openjdk.org/jeps/424) stabilizes then perhaps it'll be possible to skip the current Java JNI stuff, and just use the existing package manager support for OpenSlide without Java. @delta2golf tifffile is a Python library, so unfortunately won't help here since QuPath is written in Java. @jcupitt thanks very much for these suggestions. It sounds trickier than I'd hoped, but also promising - I'll try to find a free day when my optimism levels are high enough to give this a proper go.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726
https://github.com/qupath/qupath/issues/629#issuecomment-1346032726:606,Deployability,install,installation,606,"Back after a long delay... @kwiechen I didn't know of Spack but it looks interesting. Only issue is that we don't actually need OpenSlide only, but rather [OpenSlide Java](https://github.com/openslide/openslide-java). I created a [Homebrew tap](https://github.com/petebankhead/homebrew-qupath) that handles this, and works - but would require users to install locally and then has some awkward path issues to deal with. I found Homebrew installation on Mac straightforward... on Ubuntu, not so much. I wonder if trying to get OpenSlide Java into some familiar package manager is the best way to go. If the installation is easy enough, I guess Linux users probably won't mind and Mac users might tolerate it (and Windows users can still have the 'official' binaries made available by the OpenSlide devs). Alternatively, when Java's [foreign function & memory API](https://openjdk.org/jeps/424) stabilizes then perhaps it'll be possible to skip the current Java JNI stuff, and just use the existing package manager support for OpenSlide without Java. @delta2golf tifffile is a Python library, so unfortunately won't help here since QuPath is written in Java. @jcupitt thanks very much for these suggestions. It sounds trickier than I'd hoped, but also promising - I'll try to find a free day when my optimism levels are high enough to give this a proper go.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726
https://github.com/qupath/qupath/issues/629#issuecomment-1358055896:266,Integrability,depend,dependencies,266,"In OpenSlide we're working on some build system changes which may help here. OpenSlide Java has already been converted to Meson and OpenSlide will follow soon. Afterward I'm hoping to convert winbuild to a Meson project that can build a unified DLL with most of the dependencies statically linked, since Meson has good support for that. That could be a good starting point for doing similar builds for Linux and macOS. We've generally avoided putting OpenSlide Java into package managers so far. It's not really maintained and the API probably shouldn't be considered ""stable"" in its current form. I wasn't aware of JEP 424; thanks for the pointer. I've filed https://github.com/openslide/openslide-java/issues/50 to track possibly switching to it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1358055896
https://github.com/qupath/qupath/issues/629#issuecomment-1358055896:435,Safety,avoid,avoided,435,"In OpenSlide we're working on some build system changes which may help here. OpenSlide Java has already been converted to Meson and OpenSlide will follow soon. Afterward I'm hoping to convert winbuild to a Meson project that can build a unified DLL with most of the dependencies statically linked, since Meson has good support for that. That could be a good starting point for doing similar builds for Linux and macOS. We've generally avoided putting OpenSlide Java into package managers so far. It's not really maintained and the API probably shouldn't be considered ""stable"" in its current form. I wasn't aware of JEP 424; thanks for the pointer. I've filed https://github.com/openslide/openslide-java/issues/50 to track possibly switching to it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1358055896
https://github.com/qupath/qupath/issues/629#issuecomment-1359579785:317,Availability,reliab,reliable,317,"Thanks @bgilbert - that sounds really promising. If I can help at all with maintaining OpenSlide Java just let me know. @cpwardell thanks, but this is a bit off-topic & would be better [discussed this on the forum](https://forum.image.sc/tag/qupath). There are other files and formats where OpenSlide reading is more reliable and/or more performant than using Bio-Formats. That's why QuPath attempts to use sensible defaults, while also [giving you the option to override them](https://qupath.readthedocs.io/en/0.4/docs/tutorials/projects.html#add-images).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1359579785
https://github.com/qupath/qupath/issues/629#issuecomment-1359579785:338,Performance,perform,performant,338,"Thanks @bgilbert - that sounds really promising. If I can help at all with maintaining OpenSlide Java just let me know. @cpwardell thanks, but this is a bit off-topic & would be better [discussed this on the forum](https://forum.image.sc/tag/qupath). There are other files and formats where OpenSlide reading is more reliable and/or more performant than using Bio-Formats. That's why QuPath attempts to use sensible defaults, while also [giving you the option to override them](https://qupath.readthedocs.io/en/0.4/docs/tutorials/projects.html#add-images).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1359579785
https://github.com/qupath/qupath/issues/629#issuecomment-1483719436:815,Availability,mainten,maintenance,815,"[openslide-winbuild](https://github.com/openslide/openslide-winbuild) now uses Meson to build a single unified DLL with all of its dependencies linked in. (Well, almost all: libssp and winpthreads are generated by the compiler toolchain and remain separate DLLs for now. One of them will go away eventually, and hopefully both.) There's still a `build.sh` wrapper script, but it's not strictly necessary anymore; it's mostly for building the source zip and binary zips for distribution. The substance of the build all happens in Meson, in the `meson` subdirectory. That code might be a good starting point for macOS and/or Linux builds. It'd surely need some adjustments, but I'd be willing to consider PRs to add support for those platforms. Feel free to take a look; feedback would be welcome!. @petebankhead Any maintenance help with OpenSlide Java would be welcome. I'd be happy to discuss further if you'd like.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1483719436
https://github.com/qupath/qupath/issues/629#issuecomment-1483719436:131,Integrability,depend,dependencies,131,"[openslide-winbuild](https://github.com/openslide/openslide-winbuild) now uses Meson to build a single unified DLL with all of its dependencies linked in. (Well, almost all: libssp and winpthreads are generated by the compiler toolchain and remain separate DLLs for now. One of them will go away eventually, and hopefully both.) There's still a `build.sh` wrapper script, but it's not strictly necessary anymore; it's mostly for building the source zip and binary zips for distribution. The substance of the build all happens in Meson, in the `meson` subdirectory. That code might be a good starting point for macOS and/or Linux builds. It'd surely need some adjustments, but I'd be willing to consider PRs to add support for those platforms. Feel free to take a look; feedback would be welcome!. @petebankhead Any maintenance help with OpenSlide Java would be welcome. I'd be happy to discuss further if you'd like.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1483719436
https://github.com/qupath/qupath/issues/629#issuecomment-1483719436:356,Integrability,wrap,wrapper,356,"[openslide-winbuild](https://github.com/openslide/openslide-winbuild) now uses Meson to build a single unified DLL with all of its dependencies linked in. (Well, almost all: libssp and winpthreads are generated by the compiler toolchain and remain separate DLLs for now. One of them will go away eventually, and hopefully both.) There's still a `build.sh` wrapper script, but it's not strictly necessary anymore; it's mostly for building the source zip and binary zips for distribution. The substance of the build all happens in Meson, in the `meson` subdirectory. That code might be a good starting point for macOS and/or Linux builds. It'd surely need some adjustments, but I'd be willing to consider PRs to add support for those platforms. Feel free to take a look; feedback would be welcome!. @petebankhead Any maintenance help with OpenSlide Java would be welcome. I'd be happy to discuss further if you'd like.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1483719436
https://github.com/qupath/qupath/issues/629#issuecomment-1483719436:769,Usability,feedback,feedback,769,"[openslide-winbuild](https://github.com/openslide/openslide-winbuild) now uses Meson to build a single unified DLL with all of its dependencies linked in. (Well, almost all: libssp and winpthreads are generated by the compiler toolchain and remain separate DLLs for now. One of them will go away eventually, and hopefully both.) There's still a `build.sh` wrapper script, but it's not strictly necessary anymore; it's mostly for building the source zip and binary zips for distribution. The substance of the build all happens in Meson, in the `meson` subdirectory. That code might be a good starting point for macOS and/or Linux builds. It'd surely need some adjustments, but I'd be willing to consider PRs to add support for those platforms. Feel free to take a look; feedback would be welcome!. @petebankhead Any maintenance help with OpenSlide Java would be welcome. I'd be happy to discuss further if you'd like.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1483719436
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1630,Availability,Down,Downloads,1630,"om/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/opt/homebrew/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1746,Availability,Down,Downloads,1746," happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/opt/homebrew/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.30.112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/Syste",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:3267,Availability,Down,Downloads,3267,"n 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.30.112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/local/opt/gettext/lib/libintl.8.dylib (compatibility version 12.0.0, current version 12.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/usr/local/opt/fontconfig/lib/libfontconfig.1.dylib (compatibility version 14.0.0, current version 14.0.0); 	/usr/local/opt/freetype/lib/libfreetype.6.dylib (compatibility version 27.0.0, current version 27.1.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/usr/local/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/usr/local/opt/pcre2/li",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:3381,Availability,Down,Downloads,3381,"ent version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.30.112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/local/opt/gettext/lib/libintl.8.dylib (compatibility version 12.0.0, current version 12.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/usr/local/opt/fontconfig/lib/libfontconfig.1.dylib (compatibility version 14.0.0, current version 14.0.0); 	/usr/local/opt/freetype/lib/libfreetype.6.dylib (compatibility version 27.0.0, current version 27.1.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/usr/local/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/usr/local/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:5768,Availability,error,error,5768," 1.0.0, current version 1.5.5); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the be",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:5898,Availability,ERROR,ERROR,5898,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:118,Deployability,release,release,118,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1356,Deployability,pipeline,pipelines,1356,"penSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/opt/homebrew/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:6233,Deployability,release,release,6233,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:6351,Deployability,release,releases,6351,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:6405,Deployability,install,installed,6405,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:6518,Deployability,install,installs,6518,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:286,Energy Efficiency,reduce,reduce,286,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:208,Integrability,interface,interface,208,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:256,Integrability,wrap,wrap,256,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1158,Integrability,wrap,wrap,1158,"i-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/opt/homebrew/opt/xz/lib/liblzma.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1541,Integrability,depend,dependencies,1541,"ynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/opt/homebrew/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, cu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:5592,Integrability,depend,dependencies,5592,".112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/usr/local/opt/zstd/lib/libzstd.1.dylib (compatibility version 1.0.0, current version 1.5.5); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:6154,Integrability,depend,dependency,6154,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:6187,Integrability,depend,depend,6187,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:6365,Integrability,depend,depend,6365,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:311,Performance,load,loading,311,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:954,Performance,load,load,954,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1014,Performance,load,loading,1014,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1077,Performance,load,load,1077,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:5689,Performance,load,load,5689,".112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/usr/local/opt/zstd/lib/libzstd.1.dylib (compatibility version 1.0.0, current version 1.5.5); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:6336,Performance,load,load,6336,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:403,Security,access,access,403,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1467,Testability,test,test,1467,"penSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/opt/homebrew/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:5619,Testability,stub,stubbornly,5619,".112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/usr/local/opt/zstd/lib/libzstd.1.dylib (compatibility version 1.0.0, current version 1.5.5); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:5990,Testability,assert,assertion,5990,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:6722,Usability,feedback,feedback,6722,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495
https://github.com/qupath/qupath/issues/629#issuecomment-1777323272:617,Availability,avail,available,617,"We did end up getting self-contained binaries for all platforms built and hosted on SciJava Maven for the 4.0.0 OpenSlide release. Hopefully with the release of the Apple M1 GitHub runners in the next few months, we can contribute these changes into the upstream build cycle. The current status of OpenSlide in QuPath is that each platform contains a self-contained OpenSlide binary, which we hook into with JNA. This means the JNI-based OpenSlide-Java is no longer needed for us, which simplifies the build quite a bit. Users can override this by pointing QuPath to their own version of OpenSlide. These changes are available in the current v0.5.0 rc(1/2) and will be in the full 0.5.0 release of QuPath also. Closing this as all of the necessary changes now are in different repos unrelated to QuPath core.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272
https://github.com/qupath/qupath/issues/629#issuecomment-1777323272:122,Deployability,release,release,122,"We did end up getting self-contained binaries for all platforms built and hosted on SciJava Maven for the 4.0.0 OpenSlide release. Hopefully with the release of the Apple M1 GitHub runners in the next few months, we can contribute these changes into the upstream build cycle. The current status of OpenSlide in QuPath is that each platform contains a self-contained OpenSlide binary, which we hook into with JNA. This means the JNI-based OpenSlide-Java is no longer needed for us, which simplifies the build quite a bit. Users can override this by pointing QuPath to their own version of OpenSlide. These changes are available in the current v0.5.0 rc(1/2) and will be in the full 0.5.0 release of QuPath also. Closing this as all of the necessary changes now are in different repos unrelated to QuPath core.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272
https://github.com/qupath/qupath/issues/629#issuecomment-1777323272:150,Deployability,release,release,150,"We did end up getting self-contained binaries for all platforms built and hosted on SciJava Maven for the 4.0.0 OpenSlide release. Hopefully with the release of the Apple M1 GitHub runners in the next few months, we can contribute these changes into the upstream build cycle. The current status of OpenSlide in QuPath is that each platform contains a self-contained OpenSlide binary, which we hook into with JNA. This means the JNI-based OpenSlide-Java is no longer needed for us, which simplifies the build quite a bit. Users can override this by pointing QuPath to their own version of OpenSlide. These changes are available in the current v0.5.0 rc(1/2) and will be in the full 0.5.0 release of QuPath also. Closing this as all of the necessary changes now are in different repos unrelated to QuPath core.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272
https://github.com/qupath/qupath/issues/629#issuecomment-1777323272:687,Deployability,release,release,687,"We did end up getting self-contained binaries for all platforms built and hosted on SciJava Maven for the 4.0.0 OpenSlide release. Hopefully with the release of the Apple M1 GitHub runners in the next few months, we can contribute these changes into the upstream build cycle. The current status of OpenSlide in QuPath is that each platform contains a self-contained OpenSlide binary, which we hook into with JNA. This means the JNI-based OpenSlide-Java is no longer needed for us, which simplifies the build quite a bit. Users can override this by pointing QuPath to their own version of OpenSlide. These changes are available in the current v0.5.0 rc(1/2) and will be in the full 0.5.0 release of QuPath also. Closing this as all of the necessary changes now are in different repos unrelated to QuPath core.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272
https://github.com/qupath/qupath/issues/629#issuecomment-1777323272:487,Usability,simpl,simplifies,487,"We did end up getting self-contained binaries for all platforms built and hosted on SciJava Maven for the 4.0.0 OpenSlide release. Hopefully with the release of the Apple M1 GitHub runners in the next few months, we can contribute these changes into the upstream build cycle. The current status of OpenSlide in QuPath is that each platform contains a self-contained OpenSlide binary, which we hook into with JNA. This means the JNI-based OpenSlide-Java is no longer needed for us, which simplifies the build quite a bit. Users can override this by pointing QuPath to their own version of OpenSlide. These changes are available in the current v0.5.0 rc(1/2) and will be in the full 0.5.0 release of QuPath also. Closing this as all of the necessary changes now are in different repos unrelated to QuPath core.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272
https://github.com/qupath/qupath/issues/631#issuecomment-717133742:78,Performance,load,load,78,"That seems to have been the case, it added my whole code repository having to load a bunch of folders in user scripts. ; Thanks a lot for the help, sorry I couldn't find any related issue!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/631#issuecomment-717133742
https://github.com/qupath/qupath/pull/633#issuecomment-719684705:315,Availability,error,error,315,"Change looks good and should fix the main problem, but if I understand it correctly it won't restore the default classifications - so the message might be a bit misleading. We *could* reset the preference, but retaining the last valid class list makes sense too. Perhaps just change the message to; ```java; logger.error(""Classification list too long ({} bytes) - cannot save it to the preferences."", bytes.length);; ```; Would that make sense?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/633#issuecomment-719684705
https://github.com/qupath/qupath/pull/633#issuecomment-719684705:138,Integrability,message,message,138,"Change looks good and should fix the main problem, but if I understand it correctly it won't restore the default classifications - so the message might be a bit misleading. We *could* reset the preference, but retaining the last valid class list makes sense too. Perhaps just change the message to; ```java; logger.error(""Classification list too long ({} bytes) - cannot save it to the preferences."", bytes.length);; ```; Would that make sense?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/633#issuecomment-719684705
https://github.com/qupath/qupath/pull/633#issuecomment-719684705:287,Integrability,message,message,287,"Change looks good and should fix the main problem, but if I understand it correctly it won't restore the default classifications - so the message might be a bit misleading. We *could* reset the preference, but retaining the last valid class list makes sense too. Perhaps just change the message to; ```java; logger.error(""Classification list too long ({} bytes) - cannot save it to the preferences."", bytes.length);; ```; Would that make sense?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/633#issuecomment-719684705
https://github.com/qupath/qupath/pull/633#issuecomment-719684705:308,Testability,log,logger,308,"Change looks good and should fix the main problem, but if I understand it correctly it won't restore the default classifications - so the message might be a bit misleading. We *could* reset the preference, but retaining the last valid class list makes sense too. Perhaps just change the message to; ```java; logger.error(""Classification list too long ({} bytes) - cannot save it to the preferences."", bytes.length);; ```; Would that make sense?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/633#issuecomment-719684705
https://github.com/qupath/qupath/pull/633#issuecomment-720356550:20,Integrability,message,message,20,"Yes good point, the message should probably be more accurate! I'll change this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/633#issuecomment-720356550
https://github.com/qupath/qupath/pull/636#issuecomment-724191551:69,Availability,error,error,69,"I'm not exactly sure why, but I get a weird character showing in the error message if I run; ```groovy; a = “something”; ```; I see; ```; At least one left quotation mark (“) was found @ line 1 column 5! You can try replacing it with a regular apostrophe ('). ERROR: MultipleCompilationErrorsException at line 1: startup failed:; Script14.groovy: 2: Unexpected input: '“' @ line 2, column 5.; a = “something”; ^. 1 error; ```; (On a Mac, it's shown as a square in the script editor). I'd suggest:; * matching the suggestion to the suggestion to the error, i.e. whether it is a single or double quotation mark; otherwise, correcting `“` to `'` would still likely be an error; * alternatively, give a generic error message `""You can try replacing all instances of fancy quotation marks (‘“’”) with a straight ones (',"")""`; * referring to a 'straight quotation mark' rather than apostrophe (which might be curly); * referring to `At least one invalid quotation mark` rather than `At least one left quotation mark`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/636#issuecomment-724191551
https://github.com/qupath/qupath/pull/636#issuecomment-724191551:261,Availability,ERROR,ERROR,261,"I'm not exactly sure why, but I get a weird character showing in the error message if I run; ```groovy; a = “something”; ```; I see; ```; At least one left quotation mark (“) was found @ line 1 column 5! You can try replacing it with a regular apostrophe ('). ERROR: MultipleCompilationErrorsException at line 1: startup failed:; Script14.groovy: 2: Unexpected input: '“' @ line 2, column 5.; a = “something”; ^. 1 error; ```; (On a Mac, it's shown as a square in the script editor). I'd suggest:; * matching the suggestion to the suggestion to the error, i.e. whether it is a single or double quotation mark; otherwise, correcting `“` to `'` would still likely be an error; * alternatively, give a generic error message `""You can try replacing all instances of fancy quotation marks (‘“’”) with a straight ones (',"")""`; * referring to a 'straight quotation mark' rather than apostrophe (which might be curly); * referring to `At least one invalid quotation mark` rather than `At least one left quotation mark`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/636#issuecomment-724191551
https://github.com/qupath/qupath/pull/636#issuecomment-724191551:416,Availability,error,error,416,"I'm not exactly sure why, but I get a weird character showing in the error message if I run; ```groovy; a = “something”; ```; I see; ```; At least one left quotation mark (“) was found @ line 1 column 5! You can try replacing it with a regular apostrophe ('). ERROR: MultipleCompilationErrorsException at line 1: startup failed:; Script14.groovy: 2: Unexpected input: '“' @ line 2, column 5.; a = “something”; ^. 1 error; ```; (On a Mac, it's shown as a square in the script editor). I'd suggest:; * matching the suggestion to the suggestion to the error, i.e. whether it is a single or double quotation mark; otherwise, correcting `“` to `'` would still likely be an error; * alternatively, give a generic error message `""You can try replacing all instances of fancy quotation marks (‘“’”) with a straight ones (',"")""`; * referring to a 'straight quotation mark' rather than apostrophe (which might be curly); * referring to `At least one invalid quotation mark` rather than `At least one left quotation mark`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/636#issuecomment-724191551
https://github.com/qupath/qupath/pull/636#issuecomment-724191551:550,Availability,error,error,550,"I'm not exactly sure why, but I get a weird character showing in the error message if I run; ```groovy; a = “something”; ```; I see; ```; At least one left quotation mark (“) was found @ line 1 column 5! You can try replacing it with a regular apostrophe ('). ERROR: MultipleCompilationErrorsException at line 1: startup failed:; Script14.groovy: 2: Unexpected input: '“' @ line 2, column 5.; a = “something”; ^. 1 error; ```; (On a Mac, it's shown as a square in the script editor). I'd suggest:; * matching the suggestion to the suggestion to the error, i.e. whether it is a single or double quotation mark; otherwise, correcting `“` to `'` would still likely be an error; * alternatively, give a generic error message `""You can try replacing all instances of fancy quotation marks (‘“’”) with a straight ones (',"")""`; * referring to a 'straight quotation mark' rather than apostrophe (which might be curly); * referring to `At least one invalid quotation mark` rather than `At least one left quotation mark`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/636#issuecomment-724191551
https://github.com/qupath/qupath/pull/636#issuecomment-724191551:669,Availability,error,error,669,"I'm not exactly sure why, but I get a weird character showing in the error message if I run; ```groovy; a = “something”; ```; I see; ```; At least one left quotation mark (“) was found @ line 1 column 5! You can try replacing it with a regular apostrophe ('). ERROR: MultipleCompilationErrorsException at line 1: startup failed:; Script14.groovy: 2: Unexpected input: '“' @ line 2, column 5.; a = “something”; ^. 1 error; ```; (On a Mac, it's shown as a square in the script editor). I'd suggest:; * matching the suggestion to the suggestion to the error, i.e. whether it is a single or double quotation mark; otherwise, correcting `“` to `'` would still likely be an error; * alternatively, give a generic error message `""You can try replacing all instances of fancy quotation marks (‘“’”) with a straight ones (',"")""`; * referring to a 'straight quotation mark' rather than apostrophe (which might be curly); * referring to `At least one invalid quotation mark` rather than `At least one left quotation mark`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/636#issuecomment-724191551
https://github.com/qupath/qupath/pull/636#issuecomment-724191551:708,Availability,error,error,708,"I'm not exactly sure why, but I get a weird character showing in the error message if I run; ```groovy; a = “something”; ```; I see; ```; At least one left quotation mark (“) was found @ line 1 column 5! You can try replacing it with a regular apostrophe ('). ERROR: MultipleCompilationErrorsException at line 1: startup failed:; Script14.groovy: 2: Unexpected input: '“' @ line 2, column 5.; a = “something”; ^. 1 error; ```; (On a Mac, it's shown as a square in the script editor). I'd suggest:; * matching the suggestion to the suggestion to the error, i.e. whether it is a single or double quotation mark; otherwise, correcting `“` to `'` would still likely be an error; * alternatively, give a generic error message `""You can try replacing all instances of fancy quotation marks (‘“’”) with a straight ones (',"")""`; * referring to a 'straight quotation mark' rather than apostrophe (which might be curly); * referring to `At least one invalid quotation mark` rather than `At least one left quotation mark`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/636#issuecomment-724191551
https://github.com/qupath/qupath/pull/636#issuecomment-724191551:75,Integrability,message,message,75,"I'm not exactly sure why, but I get a weird character showing in the error message if I run; ```groovy; a = “something”; ```; I see; ```; At least one left quotation mark (“) was found @ line 1 column 5! You can try replacing it with a regular apostrophe ('). ERROR: MultipleCompilationErrorsException at line 1: startup failed:; Script14.groovy: 2: Unexpected input: '“' @ line 2, column 5.; a = “something”; ^. 1 error; ```; (On a Mac, it's shown as a square in the script editor). I'd suggest:; * matching the suggestion to the suggestion to the error, i.e. whether it is a single or double quotation mark; otherwise, correcting `“` to `'` would still likely be an error; * alternatively, give a generic error message `""You can try replacing all instances of fancy quotation marks (‘“’”) with a straight ones (',"")""`; * referring to a 'straight quotation mark' rather than apostrophe (which might be curly); * referring to `At least one invalid quotation mark` rather than `At least one left quotation mark`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/636#issuecomment-724191551
https://github.com/qupath/qupath/pull/636#issuecomment-724191551:714,Integrability,message,message,714,"I'm not exactly sure why, but I get a weird character showing in the error message if I run; ```groovy; a = “something”; ```; I see; ```; At least one left quotation mark (“) was found @ line 1 column 5! You can try replacing it with a regular apostrophe ('). ERROR: MultipleCompilationErrorsException at line 1: startup failed:; Script14.groovy: 2: Unexpected input: '“' @ line 2, column 5.; a = “something”; ^. 1 error; ```; (On a Mac, it's shown as a square in the script editor). I'd suggest:; * matching the suggestion to the suggestion to the error, i.e. whether it is a single or double quotation mark; otherwise, correcting `“` to `'` would still likely be an error; * alternatively, give a generic error message `""You can try replacing all instances of fancy quotation marks (‘“’”) with a straight ones (',"")""`; * referring to a 'straight quotation mark' rather than apostrophe (which might be curly); * referring to `At least one invalid quotation mark` rather than `At least one left quotation mark`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/636#issuecomment-724191551
https://github.com/qupath/qupath/pull/639#issuecomment-726872071:417,Availability,avail,available,417,"Hi @EgorBushmelev, I'll have a look at this but it might take a little time. The module itself looks tiny, but I'm not sure if including it brings in any extra services. In general I'm reluctant to include jdk modules in the distribution without a clear understanding of what they will be used for (especially if QuPath doesn't require them itself) - can you give any more details of this?. Is your extension already available under an open source license / will it be? If you can link me to the code then I'd probably understand the need better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/639#issuecomment-726872071
https://github.com/qupath/qupath/pull/639#issuecomment-726872071:248,Usability,clear,clear,248,"Hi @EgorBushmelev, I'll have a look at this but it might take a little time. The module itself looks tiny, but I'm not sure if including it brings in any extra services. In general I'm reluctant to include jdk modules in the distribution without a clear understanding of what they will be used for (especially if QuPath doesn't require them itself) - can you give any more details of this?. Is your extension already available under an open source license / will it be? If you can link me to the code then I'd probably understand the need better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/639#issuecomment-726872071
https://github.com/qupath/qupath/pull/639#issuecomment-811283033:90,Deployability,release,release,90,I'll close this because `jdk.jsobject` is now included in the `build.gradle` for the next release - thanks!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/639#issuecomment-811283033
https://github.com/qupath/qupath/pull/640#issuecomment-727047100:52,Deployability,release,releases,52,"There is no issue with QuPath-0.2.3 from the GitHub releases. When I build from dev-0.3.0 branch using jdk-15.0.0.36-hotspot, it does not correctly set the memory from the help menu. The config file for 0.2.3 looks like this:; Before setting memory; ```; [JavaOptions]; -XX:MaxRAMPercentage=50; ```; After setting memory to 50gb, and it works fine.; ```; [JavaOptions]; -Xmx51200M; ```. With the dev-0.3.0 and jdk-15.0.0.36-hotspot; Before setting memory:; ```; [JavaOptions]; java-options=-XX:MaxRAMPercentage=50; ```; After setting memory to 45gb; ```; [JavaOptions]; -Xmx46080M; ```; ""java-options="" is missing after setting the memory and QuPath fails to set the correct memory (and defaults to 16gb on my system)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/640#issuecomment-727047100
https://github.com/qupath/qupath/pull/640#issuecomment-727047100:187,Modifiability,config,config,187,"There is no issue with QuPath-0.2.3 from the GitHub releases. When I build from dev-0.3.0 branch using jdk-15.0.0.36-hotspot, it does not correctly set the memory from the help menu. The config file for 0.2.3 looks like this:; Before setting memory; ```; [JavaOptions]; -XX:MaxRAMPercentage=50; ```; After setting memory to 50gb, and it works fine.; ```; [JavaOptions]; -Xmx51200M; ```. With the dev-0.3.0 and jdk-15.0.0.36-hotspot; Before setting memory:; ```; [JavaOptions]; java-options=-XX:MaxRAMPercentage=50; ```; After setting memory to 45gb; ```; [JavaOptions]; -Xmx46080M; ```; ""java-options="" is missing after setting the memory and QuPath fails to set the correct memory (and defaults to 16gb on my system)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/640#issuecomment-727047100
https://github.com/qupath/qupath/pull/640#issuecomment-727052962:756,Deployability,release,release,756,"Ah ok, thanks for investigating - seems to be another of the `jpackage` changes. Fortunately, the packaging tool is [targeted for Java 16](http://openjdk.java.net/projects/jdk/16/) so should hopefully be stable then. I'm hesitant about merging this since it really requires a thorough investigation of everything that has changed with Java 15, tested across all platforms, and making a call about whether compatibility with Java 14 needs to be maintained (probably not - but in that case, more changes should be incorporated in the build.gradle to warn the user at build time). https://github.com/qupath/qupath/issues/615 is the issue intended to track this, but we aren't planning to explore this until our dev branch is a bit more stable and closer to a release. In the meantime, I updated the docs recently to [list Java 14 as required](https://qupath.readthedocs.io/en/latest/docs/reference/building.html#install-a-java-development-kit-jdk), for consistency across branches.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/640#issuecomment-727052962
https://github.com/qupath/qupath/pull/640#issuecomment-727052962:784,Deployability,update,updated,784,"Ah ok, thanks for investigating - seems to be another of the `jpackage` changes. Fortunately, the packaging tool is [targeted for Java 16](http://openjdk.java.net/projects/jdk/16/) so should hopefully be stable then. I'm hesitant about merging this since it really requires a thorough investigation of everything that has changed with Java 15, tested across all platforms, and making a call about whether compatibility with Java 14 needs to be maintained (probably not - but in that case, more changes should be incorporated in the build.gradle to warn the user at build time). https://github.com/qupath/qupath/issues/615 is the issue intended to track this, but we aren't planning to explore this until our dev branch is a bit more stable and closer to a release. In the meantime, I updated the docs recently to [list Java 14 as required](https://qupath.readthedocs.io/en/latest/docs/reference/building.html#install-a-java-development-kit-jdk), for consistency across branches.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/640#issuecomment-727052962
https://github.com/qupath/qupath/pull/640#issuecomment-727052962:909,Deployability,install,install-a-java-development-kit-jdk,909,"Ah ok, thanks for investigating - seems to be another of the `jpackage` changes. Fortunately, the packaging tool is [targeted for Java 16](http://openjdk.java.net/projects/jdk/16/) so should hopefully be stable then. I'm hesitant about merging this since it really requires a thorough investigation of everything that has changed with Java 15, tested across all platforms, and making a call about whether compatibility with Java 14 needs to be maintained (probably not - but in that case, more changes should be incorporated in the build.gradle to warn the user at build time). https://github.com/qupath/qupath/issues/615 is the issue intended to track this, but we aren't planning to explore this until our dev branch is a bit more stable and closer to a release. In the meantime, I updated the docs recently to [list Java 14 as required](https://qupath.readthedocs.io/en/latest/docs/reference/building.html#install-a-java-development-kit-jdk), for consistency across branches.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/640#issuecomment-727052962
https://github.com/qupath/qupath/pull/640#issuecomment-727052962:344,Testability,test,tested,344,"Ah ok, thanks for investigating - seems to be another of the `jpackage` changes. Fortunately, the packaging tool is [targeted for Java 16](http://openjdk.java.net/projects/jdk/16/) so should hopefully be stable then. I'm hesitant about merging this since it really requires a thorough investigation of everything that has changed with Java 15, tested across all platforms, and making a call about whether compatibility with Java 14 needs to be maintained (probably not - but in that case, more changes should be incorporated in the build.gradle to warn the user at build time). https://github.com/qupath/qupath/issues/615 is the issue intended to track this, but we aren't planning to explore this until our dev branch is a bit more stable and closer to a release. In the meantime, I updated the docs recently to [list Java 14 as required](https://qupath.readthedocs.io/en/latest/docs/reference/building.html#install-a-java-development-kit-jdk), for consistency across branches.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/640#issuecomment-727052962
https://github.com/qupath/qupath/pull/642#issuecomment-791435458:679,Availability,redundant,redundant,679,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458
https://github.com/qupath/qupath/pull/642#issuecomment-791435458:1309,Availability,error,error,1309,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458
https://github.com/qupath/qupath/pull/642#issuecomment-791435458:565,Integrability,message,message,565,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458
https://github.com/qupath/qupath/pull/642#issuecomment-791435458:770,Integrability,Depend,Depending,770,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458
https://github.com/qupath/qupath/pull/642#issuecomment-791435458:34,Performance,load,load,34,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458
https://github.com/qupath/qupath/pull/642#issuecomment-791435458:1400,Performance,Load,Load,1400,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458
https://github.com/qupath/qupath/pull/642#issuecomment-791435458:1455,Performance,load,load,1455,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458
https://github.com/qupath/qupath/pull/642#issuecomment-791435458:1700,Performance,load,loading,1700,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458
https://github.com/qupath/qupath/pull/642#issuecomment-791435458:679,Safety,redund,redundant,679,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458
https://github.com/qupath/qupath/issues/643#issuecomment-731358458:87,Availability,error,error,87,"Hi @oharismendy,. I've tried on some of my svs images but it seems to work fine.; What error message does QuPath show whenever you try to open the slide label?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731358458
https://github.com/qupath/qupath/issues/643#issuecomment-731358458:93,Integrability,message,message,93,"Hi @oharismendy,. I've tried on some of my svs images but it seems to work fine.; What error message does QuPath show whenever you try to open the slide label?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731358458
https://github.com/qupath/qupath/issues/643#issuecomment-731375500:12,Availability,error,error,12,"There is no error message. Just ""No Slide label available"" in the slide label viewer. I know there is a slide label in the file as I can see it in version 0.1.2. I am doing this within a project indeed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731375500
https://github.com/qupath/qupath/issues/643#issuecomment-731375500:48,Availability,avail,available,48,"There is no error message. Just ""No Slide label available"" in the slide label viewer. I know there is a slide label in the file as I can see it in version 0.1.2. I am doing this within a project indeed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731375500
https://github.com/qupath/qupath/issues/643#issuecomment-731375500:18,Integrability,message,message,18,"There is no error message. Just ""No Slide label available"" in the slide label viewer. I know there is a slide label in the file as I can see it in version 0.1.2. I am doing this within a project indeed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731375500
https://github.com/qupath/qupath/issues/643#issuecomment-731459267:186,Availability,down,down,186,"> But does the Macro image show anything? Or is it there?. Thanks. I can indeed see it under the Image tab under ""Series 1 (label)"" (I did not know about this). But access from the pull down menu and label pop-up viewer is not working, which remains an issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731459267
https://github.com/qupath/qupath/issues/643#issuecomment-731459267:165,Security,access,access,165,"> But does the Macro image show anything? Or is it there?. Thanks. I can indeed see it under the Image tab under ""Series 1 (label)"" (I did not know about this). But access from the pull down menu and label pop-up viewer is not working, which remains an issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731459267
https://github.com/qupath/qupath/issues/643#issuecomment-732091427:144,Deployability,install,installed,144,"@oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs). You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images. Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to *know* in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes. Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution. If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732091427
https://github.com/qupath/qupath/issues/643#issuecomment-732091427:1198,Testability,log,logic,1198,"@oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs). You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images. Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to *know* in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes. Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution. If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732091427
https://github.com/qupath/qupath/issues/643#issuecomment-732318132:1410,Availability,avail,available,1410,"> @oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs).; > ; > You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images; > ; > Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to _know_ in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes.; > ; > Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution.; > ; > If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be. Thanks. It makes perfect sense. I think dropping the pop-up and clarifying this label image is available under master is likely a safer way to go. Unless my issue is very rare.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732318132
https://github.com/qupath/qupath/issues/643#issuecomment-732318132:146,Deployability,install,installed,146,"> @oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs).; > ; > You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images; > ; > Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to _know_ in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes.; > ; > Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution.; > ; > If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be. Thanks. It makes perfect sense. I think dropping the pop-up and clarifying this label image is available under master is likely a safer way to go. Unless my issue is very rare.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732318132
https://github.com/qupath/qupath/issues/643#issuecomment-732318132:1445,Safety,safe,safer,1445,"> @oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs).; > ; > You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images; > ; > Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to _know_ in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes.; > ; > Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution.; > ; > If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be. Thanks. It makes perfect sense. I think dropping the pop-up and clarifying this label image is available under master is likely a safer way to go. Unless my issue is very rare.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732318132
https://github.com/qupath/qupath/issues/643#issuecomment-732318132:1227,Testability,log,logic,1227,"> @oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs).; > ; > You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images; > ; > Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to _know_ in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes.; > ; > Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution.; > ; > If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be. Thanks. It makes perfect sense. I think dropping the pop-up and clarifying this label image is available under master is likely a safer way to go. Unless my issue is very rare.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732318132
https://github.com/qupath/qupath/issues/643#issuecomment-816053185:26,Testability,log,logic,26,"Closing this, because the logic to try to identify a slide label has been improved. The changes will be in v0.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-816053185
https://github.com/qupath/qupath/issues/646#issuecomment-734917139:94,Usability,clear,clearTMAGrid,94,"Thanks, I can reproduce the behavior - the entire object hierarchy is removed.; Furthermore, `clearTMAGrid()` no longer works from a script.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/646#issuecomment-734917139
https://github.com/qupath/qupath/issues/646#issuecomment-734918607:138,Deployability,release,release,138,"This script may be useful as a workaround, but I haven't checked if it has any unwelcome side-effects. The bug will need fixed in a later release.; ```groovy; def hierarchy = getCurrentHierarchy(); hierarchy.clearTMAGrid(); hierarchy.tmaGrid = null; fireHierarchyUpdate(); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/646#issuecomment-734918607
https://github.com/qupath/qupath/issues/646#issuecomment-734918607:208,Usability,clear,clearTMAGrid,208,"This script may be useful as a workaround, but I haven't checked if it has any unwelcome side-effects. The bug will need fixed in a later release.; ```groovy; def hierarchy = getCurrentHierarchy(); hierarchy.clearTMAGrid(); hierarchy.tmaGrid = null; fireHierarchyUpdate(); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/646#issuecomment-734918607
https://github.com/qupath/qupath/issues/646#issuecomment-816053915:149,Availability,avail,available,149,"The changes in https://github.com/petebankhead/qupath/commit/deea6c7d71baee558701f9ae1e5c85434c00384c have hopefully resolved the issue, and will be available in v0.3.; Please do reopen this if you find that it hasn't been fixed after all.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/646#issuecomment-816053915
https://github.com/qupath/qupath/pull/647#issuecomment-741703766:28,Deployability,update,update,28,"Thanks @zindy! Just a quick update to say I've been discussing how best to support scripting arguments with @melvingelbard, since he has done most of the command line work. I think a combination of the method you use (creating a global `args` variable) and using picocli for parsing would work well. Meanwhile, we have a few other related-ish scripting issues to deal with, including; * supporting the ability to run scripts from other scripts.; * revising the Groovy integration to use an approach other than JSR223: https://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html. The benefit of JSR223 is it potentially enables QuPath to support multiple scripting languages (e.g. Jython), but this comes at the expense of supporting every one of them a bit less than it otherwise could. I'm tempted to commit to Groovy-only and make the support better, rather than attempting to support Jython & more - I'd be very interested to know your thoughts on that. Anyhow, this is the reason why this pull request will take a bit more thought - I think it would be good to add args support at the same time as we make the other changes, hopefully in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741703766
https://github.com/qupath/qupath/pull/647#issuecomment-741703766:468,Deployability,integrat,integration,468,"Thanks @zindy! Just a quick update to say I've been discussing how best to support scripting arguments with @melvingelbard, since he has done most of the command line work. I think a combination of the method you use (creating a global `args` variable) and using picocli for parsing would work well. Meanwhile, we have a few other related-ish scripting issues to deal with, including; * supporting the ability to run scripts from other scripts.; * revising the Groovy integration to use an approach other than JSR223: https://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html. The benefit of JSR223 is it potentially enables QuPath to support multiple scripting languages (e.g. Jython), but this comes at the expense of supporting every one of them a bit less than it otherwise could. I'm tempted to commit to Groovy-only and make the support better, rather than attempting to support Jython & more - I'd be very interested to know your thoughts on that. Anyhow, this is the reason why this pull request will take a bit more thought - I think it would be good to add args support at the same time as we make the other changes, hopefully in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741703766
https://github.com/qupath/qupath/pull/647#issuecomment-741703766:579,Deployability,integrat,integrating,579,"Thanks @zindy! Just a quick update to say I've been discussing how best to support scripting arguments with @melvingelbard, since he has done most of the command line work. I think a combination of the method you use (creating a global `args` variable) and using picocli for parsing would work well. Meanwhile, we have a few other related-ish scripting issues to deal with, including; * supporting the ability to run scripts from other scripts.; * revising the Groovy integration to use an approach other than JSR223: https://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html. The benefit of JSR223 is it potentially enables QuPath to support multiple scripting languages (e.g. Jython), but this comes at the expense of supporting every one of them a bit less than it otherwise could. I'm tempted to commit to Groovy-only and make the support better, rather than attempting to support Jython & more - I'd be very interested to know your thoughts on that. Anyhow, this is the reason why this pull request will take a bit more thought - I think it would be good to add args support at the same time as we make the other changes, hopefully in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741703766
https://github.com/qupath/qupath/pull/647#issuecomment-741703766:1169,Deployability,release,release,1169,"Thanks @zindy! Just a quick update to say I've been discussing how best to support scripting arguments with @melvingelbard, since he has done most of the command line work. I think a combination of the method you use (creating a global `args` variable) and using picocli for parsing would work well. Meanwhile, we have a few other related-ish scripting issues to deal with, including; * supporting the ability to run scripts from other scripts.; * revising the Groovy integration to use an approach other than JSR223: https://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html. The benefit of JSR223 is it potentially enables QuPath to support multiple scripting languages (e.g. Jython), but this comes at the expense of supporting every one of them a bit less than it otherwise could. I'm tempted to commit to Groovy-only and make the support better, rather than attempting to support Jython & more - I'd be very interested to know your thoughts on that. Anyhow, this is the reason why this pull request will take a bit more thought - I think it would be good to add args support at the same time as we make the other changes, hopefully in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741703766
https://github.com/qupath/qupath/pull/647#issuecomment-741703766:468,Integrability,integrat,integration,468,"Thanks @zindy! Just a quick update to say I've been discussing how best to support scripting arguments with @melvingelbard, since he has done most of the command line work. I think a combination of the method you use (creating a global `args` variable) and using picocli for parsing would work well. Meanwhile, we have a few other related-ish scripting issues to deal with, including; * supporting the ability to run scripts from other scripts.; * revising the Groovy integration to use an approach other than JSR223: https://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html. The benefit of JSR223 is it potentially enables QuPath to support multiple scripting languages (e.g. Jython), but this comes at the expense of supporting every one of them a bit less than it otherwise could. I'm tempted to commit to Groovy-only and make the support better, rather than attempting to support Jython & more - I'd be very interested to know your thoughts on that. Anyhow, this is the reason why this pull request will take a bit more thought - I think it would be good to add args support at the same time as we make the other changes, hopefully in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741703766
https://github.com/qupath/qupath/pull/647#issuecomment-741703766:579,Integrability,integrat,integrating,579,"Thanks @zindy! Just a quick update to say I've been discussing how best to support scripting arguments with @melvingelbard, since he has done most of the command line work. I think a combination of the method you use (creating a global `args` variable) and using picocli for parsing would work well. Meanwhile, we have a few other related-ish scripting issues to deal with, including; * supporting the ability to run scripts from other scripts.; * revising the Groovy integration to use an approach other than JSR223: https://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html. The benefit of JSR223 is it potentially enables QuPath to support multiple scripting languages (e.g. Jython), but this comes at the expense of supporting every one of them a bit less than it otherwise could. I'm tempted to commit to Groovy-only and make the support better, rather than attempting to support Jython & more - I'd be very interested to know your thoughts on that. Anyhow, this is the reason why this pull request will take a bit more thought - I think it would be good to add args support at the same time as we make the other changes, hopefully in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741703766
https://github.com/qupath/qupath/pull/647#issuecomment-741703766:243,Modifiability,variab,variable,243,"Thanks @zindy! Just a quick update to say I've been discussing how best to support scripting arguments with @melvingelbard, since he has done most of the command line work. I think a combination of the method you use (creating a global `args` variable) and using picocli for parsing would work well. Meanwhile, we have a few other related-ish scripting issues to deal with, including; * supporting the ability to run scripts from other scripts.; * revising the Groovy integration to use an approach other than JSR223: https://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html. The benefit of JSR223 is it potentially enables QuPath to support multiple scripting languages (e.g. Jython), but this comes at the expense of supporting every one of them a bit less than it otherwise could. I'm tempted to commit to Groovy-only and make the support better, rather than attempting to support Jython & more - I'd be very interested to know your thoughts on that. Anyhow, this is the reason why this pull request will take a bit more thought - I think it would be good to add args support at the same time as we make the other changes, hopefully in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741703766
https://github.com/qupath/qupath/pull/647#issuecomment-741703766:573,Usability,guid,guide-integrating,573,"Thanks @zindy! Just a quick update to say I've been discussing how best to support scripting arguments with @melvingelbard, since he has done most of the command line work. I think a combination of the method you use (creating a global `args` variable) and using picocli for parsing would work well. Meanwhile, we have a few other related-ish scripting issues to deal with, including; * supporting the ability to run scripts from other scripts.; * revising the Groovy integration to use an approach other than JSR223: https://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html. The benefit of JSR223 is it potentially enables QuPath to support multiple scripting languages (e.g. Jython), but this comes at the expense of supporting every one of them a bit less than it otherwise could. I'm tempted to commit to Groovy-only and make the support better, rather than attempting to support Jython & more - I'd be very interested to know your thoughts on that. Anyhow, this is the reason why this pull request will take a bit more thought - I think it would be good to add args support at the same time as we make the other changes, hopefully in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741703766
https://github.com/qupath/qupath/pull/647#issuecomment-741799108:32,Usability,feedback,feedback,32,"@petebankhead -- Thanks for the feedback!. > [...] and using picocli for parsing would work well. When I searched how to use picocli to split my argument string into chunks, I could not find an answer. In the meantime, [this exchange](https://github.com/remkop/picocli/issues/1277) came-up in the picocli issues, and here's a potential solution:. > There is a list-like facility for unmatched parameters: see Unmatched Input.; > ; > The easiest way to use this is with the @Unmatched annotation:. ```; class MyApp {; @Unmatched; List<String> unmatched;; }; ```. I'll have to investigate this, but hopefully this means I can remove the `translateCommandline()` code I pasted into qupath.java and just use the libraries already imported into qupath.java. On the Groovy side though, I'm still trying to figure out how to parse the `this.args` string list. One way I tried is to use [args4j](https://github.com/kohsuke/args4j) as per [this gist](https://gist.github.com/seanf/6362260), but it means using an external jar library, which I'm not too keen on. I've been wondering if there is a way to do this with picocli since that can be imported into QuPath's Groovy and found [this page](https://picocli.info/picocli-2.0-groovy-scripts-on-steroids.html) which looks useful, but I haven't explored this much further. > I'm tempted to commit to Groovy-only and make the support better, rather than attempting to support Jython & more - I'd be very interested to know your thoughts on that. Me personally, I've always been happy with one / the most used scripting language in a piece of software. I love Python, but my requirements for small scripts never made me want to say, try to use Python to script ImageJ. Having one default scripting language also means there's only one way to do something, and makes it easy to copy-paste code from another script without having to worry about which scripting language the script was written in (I shamefully admit, I do that a lot with your Groovy scripts!). I'll",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741799108
https://github.com/qupath/qupath/pull/647#issuecomment-741805565:268,Modifiability,variab,variable,268,"Hi all, . I have pushed a solution to this on my fork this morning (link [here)](https://github.com/melvingelbard/qupath-forked/tree/scriptArgs). It uses Picocli to parse the unmatched args (as @zindy mentioned I believe), which are then accessible through the `args` variable in the current running script. `args` is a simple `String[]`, so no fancy further parsing is performed on it. Not sure whether that was the original plan..; What do you think of this implementation?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741805565
https://github.com/qupath/qupath/pull/647#issuecomment-741805565:370,Performance,perform,performed,370,"Hi all, . I have pushed a solution to this on my fork this morning (link [here)](https://github.com/melvingelbard/qupath-forked/tree/scriptArgs). It uses Picocli to parse the unmatched args (as @zindy mentioned I believe), which are then accessible through the `args` variable in the current running script. `args` is a simple `String[]`, so no fancy further parsing is performed on it. Not sure whether that was the original plan..; What do you think of this implementation?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741805565
https://github.com/qupath/qupath/pull/647#issuecomment-741805565:238,Security,access,accessible,238,"Hi all, . I have pushed a solution to this on my fork this morning (link [here)](https://github.com/melvingelbard/qupath-forked/tree/scriptArgs). It uses Picocli to parse the unmatched args (as @zindy mentioned I believe), which are then accessible through the `args` variable in the current running script. `args` is a simple `String[]`, so no fancy further parsing is performed on it. Not sure whether that was the original plan..; What do you think of this implementation?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741805565
https://github.com/qupath/qupath/pull/647#issuecomment-741805565:320,Usability,simpl,simple,320,"Hi all, . I have pushed a solution to this on my fork this morning (link [here)](https://github.com/melvingelbard/qupath-forked/tree/scriptArgs). It uses Picocli to parse the unmatched args (as @zindy mentioned I believe), which are then accessible through the `args` variable in the current running script. `args` is a simple `String[]`, so no fancy further parsing is performed on it. Not sure whether that was the original plan..; What do you think of this implementation?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741805565
https://github.com/qupath/qupath/pull/647#issuecomment-744399347:116,Availability,error,error,116,"Hi @melvingelbard,. I see what you did and it makes the additions short and sweet. What you're losing though is the error checking and the ability to separate the arguments for the script from those for QuPath. That might make tracking some syntax errors (e.g. `--poject` vs `--project`) rather interesting without error checking. Limiting conflicts between QuPath options and script options could just be something to watch out for, I don't have an immediate feel for how much of an issue that would be (e.g. use `--newproject` rather than `--project` if the goal is to create a new project rather than opening the script on a specific QuPath project). So, pros and cons: My method ensures isolated arguments between QuPath and the script, but at the expense of having to add the `translateCommandline()` function, and a heavier syntax with quotes around the script commands and escaped quotes for paths with spaces. Yours is a lot simpler, but I think the biggest drawback is losing the error checking and possible collisions between options for QuPath and options for the script. That's just top of my head, I'm happy to have any kind of command-line control over the script, so I'll let you decide how you want to take this forward.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-744399347
https://github.com/qupath/qupath/pull/647#issuecomment-744399347:248,Availability,error,errors,248,"Hi @melvingelbard,. I see what you did and it makes the additions short and sweet. What you're losing though is the error checking and the ability to separate the arguments for the script from those for QuPath. That might make tracking some syntax errors (e.g. `--poject` vs `--project`) rather interesting without error checking. Limiting conflicts between QuPath options and script options could just be something to watch out for, I don't have an immediate feel for how much of an issue that would be (e.g. use `--newproject` rather than `--project` if the goal is to create a new project rather than opening the script on a specific QuPath project). So, pros and cons: My method ensures isolated arguments between QuPath and the script, but at the expense of having to add the `translateCommandline()` function, and a heavier syntax with quotes around the script commands and escaped quotes for paths with spaces. Yours is a lot simpler, but I think the biggest drawback is losing the error checking and possible collisions between options for QuPath and options for the script. That's just top of my head, I'm happy to have any kind of command-line control over the script, so I'll let you decide how you want to take this forward.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-744399347
https://github.com/qupath/qupath/pull/647#issuecomment-744399347:315,Availability,error,error,315,"Hi @melvingelbard,. I see what you did and it makes the additions short and sweet. What you're losing though is the error checking and the ability to separate the arguments for the script from those for QuPath. That might make tracking some syntax errors (e.g. `--poject` vs `--project`) rather interesting without error checking. Limiting conflicts between QuPath options and script options could just be something to watch out for, I don't have an immediate feel for how much of an issue that would be (e.g. use `--newproject` rather than `--project` if the goal is to create a new project rather than opening the script on a specific QuPath project). So, pros and cons: My method ensures isolated arguments between QuPath and the script, but at the expense of having to add the `translateCommandline()` function, and a heavier syntax with quotes around the script commands and escaped quotes for paths with spaces. Yours is a lot simpler, but I think the biggest drawback is losing the error checking and possible collisions between options for QuPath and options for the script. That's just top of my head, I'm happy to have any kind of command-line control over the script, so I'll let you decide how you want to take this forward.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-744399347
https://github.com/qupath/qupath/pull/647#issuecomment-744399347:989,Availability,error,error,989,"Hi @melvingelbard,. I see what you did and it makes the additions short and sweet. What you're losing though is the error checking and the ability to separate the arguments for the script from those for QuPath. That might make tracking some syntax errors (e.g. `--poject` vs `--project`) rather interesting without error checking. Limiting conflicts between QuPath options and script options could just be something to watch out for, I don't have an immediate feel for how much of an issue that would be (e.g. use `--newproject` rather than `--project` if the goal is to create a new project rather than opening the script on a specific QuPath project). So, pros and cons: My method ensures isolated arguments between QuPath and the script, but at the expense of having to add the `translateCommandline()` function, and a heavier syntax with quotes around the script commands and escaped quotes for paths with spaces. Yours is a lot simpler, but I think the biggest drawback is losing the error checking and possible collisions between options for QuPath and options for the script. That's just top of my head, I'm happy to have any kind of command-line control over the script, so I'll let you decide how you want to take this forward.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-744399347
https://github.com/qupath/qupath/pull/647#issuecomment-744399347:933,Usability,simpl,simpler,933,"Hi @melvingelbard,. I see what you did and it makes the additions short and sweet. What you're losing though is the error checking and the ability to separate the arguments for the script from those for QuPath. That might make tracking some syntax errors (e.g. `--poject` vs `--project`) rather interesting without error checking. Limiting conflicts between QuPath options and script options could just be something to watch out for, I don't have an immediate feel for how much of an issue that would be (e.g. use `--newproject` rather than `--project` if the goal is to create a new project rather than opening the script on a specific QuPath project). So, pros and cons: My method ensures isolated arguments between QuPath and the script, but at the expense of having to add the `translateCommandline()` function, and a heavier syntax with quotes around the script commands and escaped quotes for paths with spaces. Yours is a lot simpler, but I think the biggest drawback is losing the error checking and possible collisions between options for QuPath and options for the script. That's just top of my head, I'm happy to have any kind of command-line control over the script, so I'll let you decide how you want to take this forward.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-744399347
https://github.com/qupath/qupath/pull/647#issuecomment-794360793:289,Safety,risk,risk,289,"I've been thinking about this, and made an attempt to get the best of both worlds: https://github.com/qupath/qupath/pull/676. I remain reluctant to do too much parsing, since as long as the string is passed to Groovy it's quite possible to parse it within the script itself. But I see the risk in allowing misspelled arguments. I hope this approach is a suitable compromise, but I don't do a huge amount of command line stuff so not sure if I've broken some convention along the way. Curious as to what you think...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-794360793
https://github.com/qupath/qupath/pull/647#issuecomment-797278645:191,Deployability,release,release,191,@zindy Do you mind if I close this and merge https://github.com/qupath/qupath/pull/676 in preparation for v0.3?; That would give time for anyone trying the dev branch to test it a bit before release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-797278645
https://github.com/qupath/qupath/pull/647#issuecomment-797278645:170,Testability,test,test,170,@zindy Do you mind if I close this and merge https://github.com/qupath/qupath/pull/676 in preparation for v0.3?; That would give time for anyone trying the dev branch to test it a bit before release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-797278645
https://github.com/qupath/qupath/issues/648#issuecomment-739896593:120,Availability,down,downsample,120,"Good catch, thanks. Looks like this was a late and not-thought-through late addition - it should be ok to calculate the downsample and pass it directly, as [in the examples in the docs](https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_images.html#tile-exporter). Will fix this for the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/648#issuecomment-739896593
https://github.com/qupath/qupath/issues/648#issuecomment-739896593:305,Deployability,release,release,305,"Good catch, thanks. Looks like this was a late and not-thought-through late addition - it should be ok to calculate the downsample and pass it directly, as [in the examples in the docs](https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_images.html#tile-exporter). Will fix this for the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/648#issuecomment-739896593
https://github.com/qupath/qupath/issues/649#issuecomment-740503008:174,Deployability,release,release,174,"I think you're right, fortunately I don't see any obvious code path that could call it with anything other than 0 for those values but I'll look a bit deeper before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/649#issuecomment-740503008
https://github.com/qupath/qupath/issues/649#issuecomment-740657159:562,Modifiability,variab,variable,562,"Another thing I've just spotted in this method, which is equally cosmetic: it uses both `request.getWidth()` to set `fullWidth` and `request.getMaxX()` later. If the request has `request.getMinX() == 0`, as it appears it must do, then `request.getWidth()` and `request.getMaxX()` should return the same value. I personally think that `request.getMaxX()` makes more semantic sense here; the way `fullWidth` is used is really to mean `fullMaxX` (by which I mean the maximum x coordinate in original image pixel coordinates; there's probably a better name for this variable). (The same obviously goes for `maxY` and `fullHeight`.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/649#issuecomment-740657159
https://github.com/qupath/qupath/issues/649#issuecomment-740703930:363,Availability,down,downsample,363,"You might like to look at my fork https://github.com/juliangilbey/qupath/tree/main+tileexporterregion where I've addressed all of the above points when writing a new class `TileExporterRegion` (`TileExporterRegion.java`) that is based on TileExporter but allows a sub-region to be specified. You can therefore say:. ```groovy; new TileExporterRegion(imageData); .downsample(downsample) // Define export resolution; // .requestedPixelSize(requestedPixelSize) // Alternative for defining export resolution; .regionLimits(x, y, width, height) // Define region to be tiled; .imageExtension('.tif') // Define file extension for original pixels; // (often .tif, .jpg, '.png' or '.ome.tif'); .tileSize(512) // Define size of each tile, in pixels; .annotatedTilesOnly(false) // If true, only export tiles if there is a; // (classified) annotation present; .overlap(64) // Define overlap, in pixel units at the; // export resolution; .includePartialTiles(false) // don't include tiles that overlap the boundary; .writeTiles(pathOutput) // Write tiles to the specified directory; ```; It can be used as a drop-in replacement for the current `TileExporter.java` file (obviously replacing every `TileExporterRegion` with `TileExporter`), as the default behaviour is to tile the entire image. Note that the `regionLimits` method only specifies the x and y limits; it does not limit t or z. That could be performed with separate methods, say `tLimits` and `zLimits`, if desired.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/649#issuecomment-740703930
https://github.com/qupath/qupath/issues/649#issuecomment-740703930:374,Availability,down,downsample,374,"You might like to look at my fork https://github.com/juliangilbey/qupath/tree/main+tileexporterregion where I've addressed all of the above points when writing a new class `TileExporterRegion` (`TileExporterRegion.java`) that is based on TileExporter but allows a sub-region to be specified. You can therefore say:. ```groovy; new TileExporterRegion(imageData); .downsample(downsample) // Define export resolution; // .requestedPixelSize(requestedPixelSize) // Alternative for defining export resolution; .regionLimits(x, y, width, height) // Define region to be tiled; .imageExtension('.tif') // Define file extension for original pixels; // (often .tif, .jpg, '.png' or '.ome.tif'); .tileSize(512) // Define size of each tile, in pixels; .annotatedTilesOnly(false) // If true, only export tiles if there is a; // (classified) annotation present; .overlap(64) // Define overlap, in pixel units at the; // export resolution; .includePartialTiles(false) // don't include tiles that overlap the boundary; .writeTiles(pathOutput) // Write tiles to the specified directory; ```; It can be used as a drop-in replacement for the current `TileExporter.java` file (obviously replacing every `TileExporterRegion` with `TileExporter`), as the default behaviour is to tile the entire image. Note that the `regionLimits` method only specifies the x and y limits; it does not limit t or z. That could be performed with separate methods, say `tLimits` and `zLimits`, if desired.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/649#issuecomment-740703930
https://github.com/qupath/qupath/issues/649#issuecomment-740703930:1391,Performance,perform,performed,1391,"You might like to look at my fork https://github.com/juliangilbey/qupath/tree/main+tileexporterregion where I've addressed all of the above points when writing a new class `TileExporterRegion` (`TileExporterRegion.java`) that is based on TileExporter but allows a sub-region to be specified. You can therefore say:. ```groovy; new TileExporterRegion(imageData); .downsample(downsample) // Define export resolution; // .requestedPixelSize(requestedPixelSize) // Alternative for defining export resolution; .regionLimits(x, y, width, height) // Define region to be tiled; .imageExtension('.tif') // Define file extension for original pixels; // (often .tif, .jpg, '.png' or '.ome.tif'); .tileSize(512) // Define size of each tile, in pixels; .annotatedTilesOnly(false) // If true, only export tiles if there is a; // (classified) annotation present; .overlap(64) // Define overlap, in pixel units at the; // export resolution; .includePartialTiles(false) // don't include tiles that overlap the boundary; .writeTiles(pathOutput) // Write tiles to the specified directory; ```; It can be used as a drop-in replacement for the current `TileExporter.java` file (obviously replacing every `TileExporterRegion` with `TileExporter`), as the default behaviour is to tile the entire image. Note that the `regionLimits` method only specifies the x and y limits; it does not limit t or z. That could be performed with separate methods, say `tLimits` and `zLimits`, if desired.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/649#issuecomment-740703930
https://github.com/qupath/qupath/pull/651#issuecomment-740555654:325,Testability,log,logging,325,"Thanks Julian, we'll add this changes but don't want to accept the pull request as-is because it brings in some other commits that shouldn't be there, caused by some recent git-related confusion and we try to sanitise our branches for v0.3. It will take us some time to resolve the problems on our side, in the meantime just logging all related things in a GitHub Issue is great.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/651#issuecomment-740555654
https://github.com/qupath/qupath/pull/651#issuecomment-740692600:16,Deployability,patch,patches,16,"I've rebased my patches on main, now that I understand that main is the correct branch to use, so I'll make a separate pull request and close this one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/651#issuecomment-740692600
https://github.com/qupath/qupath/pull/652#issuecomment-740743550:126,Deployability,update,updated,126,"There shouldn't be any need to pass `z` and `t` as separate parameters to `splitRegionRequests` - rather `fullRequest` can be updated to include these, which would be good to reduce the number of necessary `int` parameters. Sorry, I don't really have the bandwidth to look at this in detail or handle pull requests in the near future, so this is likely to linger for a while.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-740743550
https://github.com/qupath/qupath/pull/652#issuecomment-740743550:175,Energy Efficiency,reduce,reduce,175,"There shouldn't be any need to pass `z` and `t` as separate parameters to `splitRegionRequests` - rather `fullRequest` can be updated to include these, which would be good to reduce the number of necessary `int` parameters. Sorry, I don't really have the bandwidth to look at this in detail or handle pull requests in the near future, so this is likely to linger for a while.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-740743550
https://github.com/qupath/qupath/pull/652#issuecomment-740816876:118,Deployability,update,updateT,118,On the thought of not passing the parameters: you could indeed do this by saying:; ```java; fullRequest = fullRequest.updateT(t); fullRequest = fullRequest.updateZ(z); ```; in the loop in `getTiledRegionRequests` and then reinstating these two lines in `splitRegionRequests`:; ```java; t = request.getT(); z = request.getZ(); ```; So it's a balance between four extra lines of code on the one hand and two extra parameters on the other.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-740816876
https://github.com/qupath/qupath/pull/652#issuecomment-740816876:156,Deployability,update,updateZ,156,On the thought of not passing the parameters: you could indeed do this by saying:; ```java; fullRequest = fullRequest.updateT(t); fullRequest = fullRequest.updateZ(z); ```; in the loop in `getTiledRegionRequests` and then reinstating these two lines in `splitRegionRequests`:; ```java; t = request.getT(); z = request.getZ(); ```; So it's a balance between four extra lines of code on the one hand and two extra parameters on the other.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-740816876
https://github.com/qupath/qupath/pull/652#issuecomment-795593240:14,Deployability,update,updated,14,Hi Pete! I've updated my pull request by basing it on `dev-0.3` and changing the parameter passing as requested.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-795593240
https://github.com/qupath/qupath/pull/652#issuecomment-795596084:65,Deployability,patch,patch,65,"Unfortunately, though, I don't know how to tell GitHub that this patch should be against dev-0.3 rather than against main. So I'll close this PR and submit a new one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-795596084
https://github.com/qupath/qupath/issues/654#issuecomment-743001513:736,Availability,error,error,736,"A little more on this: it is partly a Java issue - see [this StackExchange](https://softwareengineering.stackexchange.com/questions/20573/why-does-java-exit-with-success-after-an-uncaught-exception) post: Java exits with EXIT_SUCCESS on an uncaught exception. I have found the source of this uncaught exception: in `src/main/java/qupath/QuPath.java`, there are three different places where `runScript` is called, only one of which is protected by a `try`/`catch` construct, so if an exception is thrown in one of the other two cases (as happened to me), the exception is not caught but instead causes Java to crash. In particular, I can't then check for the logger message which is produced by this code in the first case:. ```; logger.error(""Error running script for image: "" + entry.getImageName(), e);; ```. So the solution would simply be to `try`/`catch` the other two cases as well. Best wishes, Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/654#issuecomment-743001513
https://github.com/qupath/qupath/issues/654#issuecomment-743001513:743,Availability,Error,Error,743,"A little more on this: it is partly a Java issue - see [this StackExchange](https://softwareengineering.stackexchange.com/questions/20573/why-does-java-exit-with-success-after-an-uncaught-exception) post: Java exits with EXIT_SUCCESS on an uncaught exception. I have found the source of this uncaught exception: in `src/main/java/qupath/QuPath.java`, there are three different places where `runScript` is called, only one of which is protected by a `try`/`catch` construct, so if an exception is thrown in one of the other two cases (as happened to me), the exception is not caught but instead causes Java to crash. In particular, I can't then check for the logger message which is produced by this code in the first case:. ```; logger.error(""Error running script for image: "" + entry.getImageName(), e);; ```. So the solution would simply be to `try`/`catch` the other two cases as well. Best wishes, Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/654#issuecomment-743001513
https://github.com/qupath/qupath/issues/654#issuecomment-743001513:665,Integrability,message,message,665,"A little more on this: it is partly a Java issue - see [this StackExchange](https://softwareengineering.stackexchange.com/questions/20573/why-does-java-exit-with-success-after-an-uncaught-exception) post: Java exits with EXIT_SUCCESS on an uncaught exception. I have found the source of this uncaught exception: in `src/main/java/qupath/QuPath.java`, there are three different places where `runScript` is called, only one of which is protected by a `try`/`catch` construct, so if an exception is thrown in one of the other two cases (as happened to me), the exception is not caught but instead causes Java to crash. In particular, I can't then check for the logger message which is produced by this code in the first case:. ```; logger.error(""Error running script for image: "" + entry.getImageName(), e);; ```. So the solution would simply be to `try`/`catch` the other two cases as well. Best wishes, Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/654#issuecomment-743001513
https://github.com/qupath/qupath/issues/654#issuecomment-743001513:658,Testability,log,logger,658,"A little more on this: it is partly a Java issue - see [this StackExchange](https://softwareengineering.stackexchange.com/questions/20573/why-does-java-exit-with-success-after-an-uncaught-exception) post: Java exits with EXIT_SUCCESS on an uncaught exception. I have found the source of this uncaught exception: in `src/main/java/qupath/QuPath.java`, there are three different places where `runScript` is called, only one of which is protected by a `try`/`catch` construct, so if an exception is thrown in one of the other two cases (as happened to me), the exception is not caught but instead causes Java to crash. In particular, I can't then check for the logger message which is produced by this code in the first case:. ```; logger.error(""Error running script for image: "" + entry.getImageName(), e);; ```. So the solution would simply be to `try`/`catch` the other two cases as well. Best wishes, Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/654#issuecomment-743001513
https://github.com/qupath/qupath/issues/654#issuecomment-743001513:729,Testability,log,logger,729,"A little more on this: it is partly a Java issue - see [this StackExchange](https://softwareengineering.stackexchange.com/questions/20573/why-does-java-exit-with-success-after-an-uncaught-exception) post: Java exits with EXIT_SUCCESS on an uncaught exception. I have found the source of this uncaught exception: in `src/main/java/qupath/QuPath.java`, there are three different places where `runScript` is called, only one of which is protected by a `try`/`catch` construct, so if an exception is thrown in one of the other two cases (as happened to me), the exception is not caught but instead causes Java to crash. In particular, I can't then check for the logger message which is produced by this code in the first case:. ```; logger.error(""Error running script for image: "" + entry.getImageName(), e);; ```. So the solution would simply be to `try`/`catch` the other two cases as well. Best wishes, Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/654#issuecomment-743001513
https://github.com/qupath/qupath/issues/654#issuecomment-743001513:833,Usability,simpl,simply,833,"A little more on this: it is partly a Java issue - see [this StackExchange](https://softwareengineering.stackexchange.com/questions/20573/why-does-java-exit-with-success-after-an-uncaught-exception) post: Java exits with EXIT_SUCCESS on an uncaught exception. I have found the source of this uncaught exception: in `src/main/java/qupath/QuPath.java`, there are three different places where `runScript` is called, only one of which is protected by a `try`/`catch` construct, so if an exception is thrown in one of the other two cases (as happened to me), the exception is not caught but instead causes Java to crash. In particular, I can't then check for the logger message which is produced by this code in the first case:. ```; logger.error(""Error running script for image: "" + entry.getImageName(), e);; ```. So the solution would simply be to `try`/`catch` the other two cases as well. Best wishes, Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/654#issuecomment-743001513
https://github.com/qupath/qupath/issues/654#issuecomment-793050473:202,Usability,feedback,feedback,202,"Hi @juliangilbey, I've tried to tackle this in https://github.com/qupath/qupath/pull/676. I'm not sure if I've taken the cleanest approach - if you've time to have a look I'd be very interested in your feedback.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/654#issuecomment-793050473
https://github.com/qupath/qupath/issues/654#issuecomment-795641077:191,Usability,simpl,simpler,191,"Thanks @petebankhead!; My Java's not quite good enough to comment on all of it in detail, but it looks great, thank you! I like the interesting solution to parsing arguments; it's definitely simpler to implement than the space-delimited alternative proposed, and I like the idea of having two ways to invoke it.; I've left one comment and was going to ask if you've seen it, but as you've already replied to it, I guess you have!; Best wishes, Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/654#issuecomment-795641077
https://github.com/qupath/qupath/issues/655#issuecomment-743789788:45,Availability,Mask,Mask,45,"Under *Edit &rarr; Preferences...* check if *Mask image names in projects* is selected. This is a feature that helps with analysis based on manual evaluation, where seeing the file name could bias the interpretation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/655#issuecomment-743789788
https://github.com/qupath/qupath/pull/656#issuecomment-788122499:195,Usability,guid,guides,195,"I found a few example of badges here:; https://github.com/Naereen/badges. I didn't realize Zenodo offers more than just a badge, here are the instructions to setup Zenodo for archival. ; https://guides.github.com/activities/citable-code/. I fixed the Zenodo reference.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/656#issuecomment-788122499
https://github.com/qupath/qupath/pull/656#issuecomment-791557989:107,Deployability,update,update,107,"Cheers, hope you don't mind! Thanks for flagging these, added the badges with some other changes needed to update the ReadMe in a single commit.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/656#issuecomment-791557989
https://github.com/qupath/qupath/issues/657#issuecomment-753634843:472,Availability,mainten,maintenance,472,"Hi Kai,. Thanks for the link, I only skimmed the first part of the paper. The method looks very interesting, I'll give some more thought about if/how it could be added to QuPath. In the meantime, you can already integrate whatever algorithms you like via scripting (in Groovy) or creating a Java extension. Changing/adding core algorithms raises a lot more complications in terms of user expectations and reproducibility (QuPath has thousands of users...), not to mention maintenance, and increasingly we need to think carefully about algorithms that handle images with different numbers of channels. Note that you can also use [pixel classification](https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html), which provides more sophisticated options than simply thresholding. I'd suggest reimplementing your changes as either a script or extension. Also, since this isn't a bug in QuPath, I will close the issue - the best place to discuss such things is the forum at http://forum.image.sc/tag/qupath. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753634843
https://github.com/qupath/qupath/issues/657#issuecomment-753634843:212,Deployability,integrat,integrate,212,"Hi Kai,. Thanks for the link, I only skimmed the first part of the paper. The method looks very interesting, I'll give some more thought about if/how it could be added to QuPath. In the meantime, you can already integrate whatever algorithms you like via scripting (in Groovy) or creating a Java extension. Changing/adding core algorithms raises a lot more complications in terms of user expectations and reproducibility (QuPath has thousands of users...), not to mention maintenance, and increasingly we need to think carefully about algorithms that handle images with different numbers of channels. Note that you can also use [pixel classification](https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html), which provides more sophisticated options than simply thresholding. I'd suggest reimplementing your changes as either a script or extension. Also, since this isn't a bug in QuPath, I will close the issue - the best place to discuss such things is the forum at http://forum.image.sc/tag/qupath. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753634843
https://github.com/qupath/qupath/issues/657#issuecomment-753634843:212,Integrability,integrat,integrate,212,"Hi Kai,. Thanks for the link, I only skimmed the first part of the paper. The method looks very interesting, I'll give some more thought about if/how it could be added to QuPath. In the meantime, you can already integrate whatever algorithms you like via scripting (in Groovy) or creating a Java extension. Changing/adding core algorithms raises a lot more complications in terms of user expectations and reproducibility (QuPath has thousands of users...), not to mention maintenance, and increasingly we need to think carefully about algorithms that handle images with different numbers of channels. Note that you can also use [pixel classification](https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html), which provides more sophisticated options than simply thresholding. I'd suggest reimplementing your changes as either a script or extension. Also, since this isn't a bug in QuPath, I will close the issue - the best place to discuss such things is the forum at http://forum.image.sc/tag/qupath. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753634843
https://github.com/qupath/qupath/issues/657#issuecomment-753634843:781,Usability,simpl,simply,781,"Hi Kai,. Thanks for the link, I only skimmed the first part of the paper. The method looks very interesting, I'll give some more thought about if/how it could be added to QuPath. In the meantime, you can already integrate whatever algorithms you like via scripting (in Groovy) or creating a Java extension. Changing/adding core algorithms raises a lot more complications in terms of user expectations and reproducibility (QuPath has thousands of users...), not to mention maintenance, and increasingly we need to think carefully about algorithms that handle images with different numbers of channels. Note that you can also use [pixel classification](https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html), which provides more sophisticated options than simply thresholding. I'd suggest reimplementing your changes as either a script or extension. Also, since this isn't a bug in QuPath, I will close the issue - the best place to discuss such things is the forum at http://forum.image.sc/tag/qupath. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753634843
https://github.com/qupath/qupath/issues/657#issuecomment-753650048:291,Availability,mask,mask,291,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048
https://github.com/qupath/qupath/issues/657#issuecomment-753650048:1000,Availability,mainten,maintenance,1000,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048
https://github.com/qupath/qupath/issues/657#issuecomment-753650048:728,Deployability,integrat,integrate,728,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048
https://github.com/qupath/qupath/issues/657#issuecomment-753650048:728,Integrability,integrat,integrate,728,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048
https://github.com/qupath/qupath/issues/657#issuecomment-753650048:51,Safety,Detect,Detection,51,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048
https://github.com/qupath/qupath/issues/657#issuecomment-753650048:37,Usability,Simpl,Simple,37,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048
https://github.com/qupath/qupath/issues/657#issuecomment-753650048:196,Usability,simpl,simply,196,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048
https://github.com/qupath/qupath/issues/657#issuecomment-753650048:1323,Usability,simpl,simply,1323,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048
https://github.com/qupath/qupath/issues/657#issuecomment-757517752:117,Availability,down,downsampled,117,"Hello,. I am trying to run the Tissue detection using structure information as a; groovy script ending with a binary downsampled mask. I am struggling; converting the mask information back to a QuPath annotation. Can you please; give me a hint?. Best regards,. Kai. Am So., 3. Jan. 2021 um 19:53 Uhr schrieb Pete <notifications@github.com>:. > https://forum.image.sc/search?q=%22qupath%22%20%22intellij%22; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753660905>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYKHKRM5ZB6XVXXQL3SYC4LVANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-757517752
https://github.com/qupath/qupath/issues/657#issuecomment-757517752:129,Availability,mask,mask,129,"Hello,. I am trying to run the Tissue detection using structure information as a; groovy script ending with a binary downsampled mask. I am struggling; converting the mask information back to a QuPath annotation. Can you please; give me a hint?. Best regards,. Kai. Am So., 3. Jan. 2021 um 19:53 Uhr schrieb Pete <notifications@github.com>:. > https://forum.image.sc/search?q=%22qupath%22%20%22intellij%22; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753660905>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYKHKRM5ZB6XVXXQL3SYC4LVANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-757517752
https://github.com/qupath/qupath/issues/657#issuecomment-757517752:167,Availability,mask,mask,167,"Hello,. I am trying to run the Tissue detection using structure information as a; groovy script ending with a binary downsampled mask. I am struggling; converting the mask information back to a QuPath annotation. Can you please; give me a hint?. Best regards,. Kai. Am So., 3. Jan. 2021 um 19:53 Uhr schrieb Pete <notifications@github.com>:. > https://forum.image.sc/search?q=%22qupath%22%20%22intellij%22; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753660905>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYKHKRM5ZB6XVXXQL3SYC4LVANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-757517752
https://github.com/qupath/qupath/issues/657#issuecomment-757517752:38,Safety,detect,detection,38,"Hello,. I am trying to run the Tissue detection using structure information as a; groovy script ending with a binary downsampled mask. I am struggling; converting the mask information back to a QuPath annotation. Can you please; give me a hint?. Best regards,. Kai. Am So., 3. Jan. 2021 um 19:53 Uhr schrieb Pete <notifications@github.com>:. > https://forum.image.sc/search?q=%22qupath%22%20%22intellij%22; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753660905>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYKHKRM5ZB6XVXXQL3SYC4LVANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-757517752
https://github.com/qupath/qupath/issues/658#issuecomment-754589459:284,Safety,avoid,avoiding,284,"This looks expected to me, and not a bug. The image will be opened using the server defined within the project. The script simply re-opens the same image using Bio-Formats. If you are generating a project, you can specify the *Image provider* to be Bio-Formats at that point, thereby avoiding the need to use the script at all.; https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/658#issuecomment-754589459
https://github.com/qupath/qupath/issues/658#issuecomment-754589459:123,Usability,simpl,simply,123,"This looks expected to me, and not a bug. The image will be opened using the server defined within the project. The script simply re-opens the same image using Bio-Formats. If you are generating a project, you can specify the *Image provider* to be Bio-Formats at that point, thereby avoiding the need to use the script at all.; https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/658#issuecomment-754589459
https://github.com/qupath/qupath/pull/665#issuecomment-776801532:179,Deployability,release,release,179,"Thanks! Adding OpenVINO support to QuPath sounds great. It may take some time to review this properly, as I'm currently in the middle of various interrelated changes for the next release that may impact this - including a switch to the new 'official' TensorFlow Java distribution, moving StarDist into the main project, and defining suitable interfaces to support models of different kinds (including for classification as well as for segmentation). To get StarDist in the main project, I intend to use OpenCV's DNN module - see [a preview here](https://github.com/petebankhead/qupath/blob/create-objects/qupath-extension-tensorflow/src/main/java/qupath/tensorflow/stardist/StarDist2D.java#L446), which should work if the `.pb` file is converted to something OpenCV-friendly. OpenCV has the advantage of already being a dependency, but ultimately we want to be able to support alternatives through extensions to broaden the range of supported models - and perhaps offer better performance. So TensorFlow will remain as an option for specialists. If OpenVINO will help too, it would be very good to include it. In the meantime, I'd like to ask a few questions:; * Should the [OpenVINO backend in OpenCV 4.5.1](https://github.com/opencv/opencv/wiki/ChangeLog#version451) offer an equivalent level of support and performance, or are there advantages in using this instead / as well?; * Can/could this work across Windows, Linux & macOS - or is it Linux-only?; * Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. Thanks again!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-776801532
https://github.com/qupath/qupath/pull/665#issuecomment-776801532:342,Integrability,interface,interfaces,342,"Thanks! Adding OpenVINO support to QuPath sounds great. It may take some time to review this properly, as I'm currently in the middle of various interrelated changes for the next release that may impact this - including a switch to the new 'official' TensorFlow Java distribution, moving StarDist into the main project, and defining suitable interfaces to support models of different kinds (including for classification as well as for segmentation). To get StarDist in the main project, I intend to use OpenCV's DNN module - see [a preview here](https://github.com/petebankhead/qupath/blob/create-objects/qupath-extension-tensorflow/src/main/java/qupath/tensorflow/stardist/StarDist2D.java#L446), which should work if the `.pb` file is converted to something OpenCV-friendly. OpenCV has the advantage of already being a dependency, but ultimately we want to be able to support alternatives through extensions to broaden the range of supported models - and perhaps offer better performance. So TensorFlow will remain as an option for specialists. If OpenVINO will help too, it would be very good to include it. In the meantime, I'd like to ask a few questions:; * Should the [OpenVINO backend in OpenCV 4.5.1](https://github.com/opencv/opencv/wiki/ChangeLog#version451) offer an equivalent level of support and performance, or are there advantages in using this instead / as well?; * Can/could this work across Windows, Linux & macOS - or is it Linux-only?; * Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. Thanks again!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-776801532
https://github.com/qupath/qupath/pull/665#issuecomment-776801532:820,Integrability,depend,dependency,820,"Thanks! Adding OpenVINO support to QuPath sounds great. It may take some time to review this properly, as I'm currently in the middle of various interrelated changes for the next release that may impact this - including a switch to the new 'official' TensorFlow Java distribution, moving StarDist into the main project, and defining suitable interfaces to support models of different kinds (including for classification as well as for segmentation). To get StarDist in the main project, I intend to use OpenCV's DNN module - see [a preview here](https://github.com/petebankhead/qupath/blob/create-objects/qupath-extension-tensorflow/src/main/java/qupath/tensorflow/stardist/StarDist2D.java#L446), which should work if the `.pb` file is converted to something OpenCV-friendly. OpenCV has the advantage of already being a dependency, but ultimately we want to be able to support alternatives through extensions to broaden the range of supported models - and perhaps offer better performance. So TensorFlow will remain as an option for specialists. If OpenVINO will help too, it would be very good to include it. In the meantime, I'd like to ask a few questions:; * Should the [OpenVINO backend in OpenCV 4.5.1](https://github.com/opencv/opencv/wiki/ChangeLog#version451) offer an equivalent level of support and performance, or are there advantages in using this instead / as well?; * Can/could this work across Windows, Linux & macOS - or is it Linux-only?; * Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. Thanks again!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-776801532
https://github.com/qupath/qupath/pull/665#issuecomment-776801532:1486,Integrability,depend,dependencies,1486,"Thanks! Adding OpenVINO support to QuPath sounds great. It may take some time to review this properly, as I'm currently in the middle of various interrelated changes for the next release that may impact this - including a switch to the new 'official' TensorFlow Java distribution, moving StarDist into the main project, and defining suitable interfaces to support models of different kinds (including for classification as well as for segmentation). To get StarDist in the main project, I intend to use OpenCV's DNN module - see [a preview here](https://github.com/petebankhead/qupath/blob/create-objects/qupath-extension-tensorflow/src/main/java/qupath/tensorflow/stardist/StarDist2D.java#L446), which should work if the `.pb` file is converted to something OpenCV-friendly. OpenCV has the advantage of already being a dependency, but ultimately we want to be able to support alternatives through extensions to broaden the range of supported models - and perhaps offer better performance. So TensorFlow will remain as an option for specialists. If OpenVINO will help too, it would be very good to include it. In the meantime, I'd like to ask a few questions:; * Should the [OpenVINO backend in OpenCV 4.5.1](https://github.com/opencv/opencv/wiki/ChangeLog#version451) offer an equivalent level of support and performance, or are there advantages in using this instead / as well?; * Can/could this work across Windows, Linux & macOS - or is it Linux-only?; * Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. Thanks again!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-776801532
https://github.com/qupath/qupath/pull/665#issuecomment-776801532:977,Performance,perform,performance,977,"Thanks! Adding OpenVINO support to QuPath sounds great. It may take some time to review this properly, as I'm currently in the middle of various interrelated changes for the next release that may impact this - including a switch to the new 'official' TensorFlow Java distribution, moving StarDist into the main project, and defining suitable interfaces to support models of different kinds (including for classification as well as for segmentation). To get StarDist in the main project, I intend to use OpenCV's DNN module - see [a preview here](https://github.com/petebankhead/qupath/blob/create-objects/qupath-extension-tensorflow/src/main/java/qupath/tensorflow/stardist/StarDist2D.java#L446), which should work if the `.pb` file is converted to something OpenCV-friendly. OpenCV has the advantage of already being a dependency, but ultimately we want to be able to support alternatives through extensions to broaden the range of supported models - and perhaps offer better performance. So TensorFlow will remain as an option for specialists. If OpenVINO will help too, it would be very good to include it. In the meantime, I'd like to ask a few questions:; * Should the [OpenVINO backend in OpenCV 4.5.1](https://github.com/opencv/opencv/wiki/ChangeLog#version451) offer an equivalent level of support and performance, or are there advantages in using this instead / as well?; * Can/could this work across Windows, Linux & macOS - or is it Linux-only?; * Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. Thanks again!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-776801532
https://github.com/qupath/qupath/pull/665#issuecomment-776801532:1310,Performance,perform,performance,1310,"Thanks! Adding OpenVINO support to QuPath sounds great. It may take some time to review this properly, as I'm currently in the middle of various interrelated changes for the next release that may impact this - including a switch to the new 'official' TensorFlow Java distribution, moving StarDist into the main project, and defining suitable interfaces to support models of different kinds (including for classification as well as for segmentation). To get StarDist in the main project, I intend to use OpenCV's DNN module - see [a preview here](https://github.com/petebankhead/qupath/blob/create-objects/qupath-extension-tensorflow/src/main/java/qupath/tensorflow/stardist/StarDist2D.java#L446), which should work if the `.pb` file is converted to something OpenCV-friendly. OpenCV has the advantage of already being a dependency, but ultimately we want to be able to support alternatives through extensions to broaden the range of supported models - and perhaps offer better performance. So TensorFlow will remain as an option for specialists. If OpenVINO will help too, it would be very good to include it. In the meantime, I'd like to ask a few questions:; * Should the [OpenVINO backend in OpenCV 4.5.1](https://github.com/opencv/opencv/wiki/ChangeLog#version451) offer an equivalent level of support and performance, or are there advantages in using this instead / as well?; * Can/could this work across Windows, Linux & macOS - or is it Linux-only?; * Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. Thanks again!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-776801532
https://github.com/qupath/qupath/pull/665#issuecomment-777016613:861,Integrability,depend,dependencies,861,"@petebankhead, many thanks for fast feedback! I've marked this PR as draft and going to work further.; As you mentioned, there is also an option to use OpenCV API but OpenVINO API will give better performance (at least once I could fix asynchronous efficiency issue). Briefly answering your questions,. > Should the OpenVINO backend in OpenCV 4.5.1 offer an equivalent level of support and performance, or are there advantages in using this instead / as well?. Yes, it can help to avoid IR conversion, in example. OpenVINO natively can load only IR or ONNX at this moment. However it'll require a separate package with OpenCV linked against OpenVINO. > Can/could this work across Windows, Linux & macOS - or is it Linux-only?. Yes, no problem at all. I just published a test package for Linux only but going to expand it in future. > Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. OpenVINO is Apache 2.0: https://github.com/openvinotoolkit/openvino/blob/master/LICENSE",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-777016613
https://github.com/qupath/qupath/pull/665#issuecomment-777016613:197,Performance,perform,performance,197,"@petebankhead, many thanks for fast feedback! I've marked this PR as draft and going to work further.; As you mentioned, there is also an option to use OpenCV API but OpenVINO API will give better performance (at least once I could fix asynchronous efficiency issue). Briefly answering your questions,. > Should the OpenVINO backend in OpenCV 4.5.1 offer an equivalent level of support and performance, or are there advantages in using this instead / as well?. Yes, it can help to avoid IR conversion, in example. OpenVINO natively can load only IR or ONNX at this moment. However it'll require a separate package with OpenCV linked against OpenVINO. > Can/could this work across Windows, Linux & macOS - or is it Linux-only?. Yes, no problem at all. I just published a test package for Linux only but going to expand it in future. > Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. OpenVINO is Apache 2.0: https://github.com/openvinotoolkit/openvino/blob/master/LICENSE",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-777016613
https://github.com/qupath/qupath/pull/665#issuecomment-777016613:390,Performance,perform,performance,390,"@petebankhead, many thanks for fast feedback! I've marked this PR as draft and going to work further.; As you mentioned, there is also an option to use OpenCV API but OpenVINO API will give better performance (at least once I could fix asynchronous efficiency issue). Briefly answering your questions,. > Should the OpenVINO backend in OpenCV 4.5.1 offer an equivalent level of support and performance, or are there advantages in using this instead / as well?. Yes, it can help to avoid IR conversion, in example. OpenVINO natively can load only IR or ONNX at this moment. However it'll require a separate package with OpenCV linked against OpenVINO. > Can/could this work across Windows, Linux & macOS - or is it Linux-only?. Yes, no problem at all. I just published a test package for Linux only but going to expand it in future. > Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. OpenVINO is Apache 2.0: https://github.com/openvinotoolkit/openvino/blob/master/LICENSE",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-777016613
https://github.com/qupath/qupath/pull/665#issuecomment-777016613:536,Performance,load,load,536,"@petebankhead, many thanks for fast feedback! I've marked this PR as draft and going to work further.; As you mentioned, there is also an option to use OpenCV API but OpenVINO API will give better performance (at least once I could fix asynchronous efficiency issue). Briefly answering your questions,. > Should the OpenVINO backend in OpenCV 4.5.1 offer an equivalent level of support and performance, or are there advantages in using this instead / as well?. Yes, it can help to avoid IR conversion, in example. OpenVINO natively can load only IR or ONNX at this moment. However it'll require a separate package with OpenCV linked against OpenVINO. > Can/could this work across Windows, Linux & macOS - or is it Linux-only?. Yes, no problem at all. I just published a test package for Linux only but going to expand it in future. > Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. OpenVINO is Apache 2.0: https://github.com/openvinotoolkit/openvino/blob/master/LICENSE",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-777016613
https://github.com/qupath/qupath/pull/665#issuecomment-777016613:481,Safety,avoid,avoid,481,"@petebankhead, many thanks for fast feedback! I've marked this PR as draft and going to work further.; As you mentioned, there is also an option to use OpenCV API but OpenVINO API will give better performance (at least once I could fix asynchronous efficiency issue). Briefly answering your questions,. > Should the OpenVINO backend in OpenCV 4.5.1 offer an equivalent level of support and performance, or are there advantages in using this instead / as well?. Yes, it can help to avoid IR conversion, in example. OpenVINO natively can load only IR or ONNX at this moment. However it'll require a separate package with OpenCV linked against OpenVINO. > Can/could this work across Windows, Linux & macOS - or is it Linux-only?. Yes, no problem at all. I just published a test package for Linux only but going to expand it in future. > Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. OpenVINO is Apache 2.0: https://github.com/openvinotoolkit/openvino/blob/master/LICENSE",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-777016613
https://github.com/qupath/qupath/pull/665#issuecomment-777016613:770,Testability,test,test,770,"@petebankhead, many thanks for fast feedback! I've marked this PR as draft and going to work further.; As you mentioned, there is also an option to use OpenCV API but OpenVINO API will give better performance (at least once I could fix asynchronous efficiency issue). Briefly answering your questions,. > Should the OpenVINO backend in OpenCV 4.5.1 offer an equivalent level of support and performance, or are there advantages in using this instead / as well?. Yes, it can help to avoid IR conversion, in example. OpenVINO natively can load only IR or ONNX at this moment. However it'll require a separate package with OpenCV linked against OpenVINO. > Can/could this work across Windows, Linux & macOS - or is it Linux-only?. Yes, no problem at all. I just published a test package for Linux only but going to expand it in future. > Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. OpenVINO is Apache 2.0: https://github.com/openvinotoolkit/openvino/blob/master/LICENSE",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-777016613
https://github.com/qupath/qupath/pull/665#issuecomment-777016613:36,Usability,feedback,feedback,36,"@petebankhead, many thanks for fast feedback! I've marked this PR as draft and going to work further.; As you mentioned, there is also an option to use OpenCV API but OpenVINO API will give better performance (at least once I could fix asynchronous efficiency issue). Briefly answering your questions,. > Should the OpenVINO backend in OpenCV 4.5.1 offer an equivalent level of support and performance, or are there advantages in using this instead / as well?. Yes, it can help to avoid IR conversion, in example. OpenVINO natively can load only IR or ONNX at this moment. However it'll require a separate package with OpenCV linked against OpenVINO. > Can/could this work across Windows, Linux & macOS - or is it Linux-only?. Yes, no problem at all. I just published a test package for Linux only but going to expand it in future. > Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. OpenVINO is Apache 2.0: https://github.com/openvinotoolkit/openvino/blob/master/LICENSE",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-777016613
https://github.com/qupath/qupath/pull/665#issuecomment-780796919:42,Performance,perform,performance,42,"@petebankhead, May I ask to review? Fixed performance issue and added Windows package as well.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-780796919
https://github.com/qupath/qupath/pull/665#issuecomment-811252714:137,Deployability,release,release,137,"Sorry for the delay, it's a crazy grant-writing time for the next month, and any coding time has been spent trying to get v0.3 ready for release soon - so I'm afraid I haven't had a chance for a proper look. Our main changes are happening on the [`dev-0.3`](https://github.com/qupath/qupath/tree/dev-0.3) branch, where we have updated to use JDK 16 and use the newer TensorFlow Java jars. I think this demonstrates that we really need a way to switch between TensorFlow/OpenCV/OpenVINO/something else without changing any of the StarDist code. That should allow the OpenVINO extension to be added separately just by dragging the jars onto QuPath. I'm not sure how best to do this. If we can come up with a quick-but-maintainable solution we may be able to include it in v0.3, but otherwise I should have a bit more time to think about it in a month.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-811252714
https://github.com/qupath/qupath/pull/665#issuecomment-811252714:327,Deployability,update,updated,327,"Sorry for the delay, it's a crazy grant-writing time for the next month, and any coding time has been spent trying to get v0.3 ready for release soon - so I'm afraid I haven't had a chance for a proper look. Our main changes are happening on the [`dev-0.3`](https://github.com/qupath/qupath/tree/dev-0.3) branch, where we have updated to use JDK 16 and use the newer TensorFlow Java jars. I think this demonstrates that we really need a way to switch between TensorFlow/OpenCV/OpenVINO/something else without changing any of the StarDist code. That should allow the OpenVINO extension to be added separately just by dragging the jars onto QuPath. I'm not sure how best to do this. If we can come up with a quick-but-maintainable solution we may be able to include it in v0.3, but otherwise I should have a bit more time to think about it in a month.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-811252714
https://github.com/qupath/qupath/pull/665#issuecomment-811252714:716,Modifiability,maintainab,maintainable,716,"Sorry for the delay, it's a crazy grant-writing time for the next month, and any coding time has been spent trying to get v0.3 ready for release soon - so I'm afraid I haven't had a chance for a proper look. Our main changes are happening on the [`dev-0.3`](https://github.com/qupath/qupath/tree/dev-0.3) branch, where we have updated to use JDK 16 and use the newer TensorFlow Java jars. I think this demonstrates that we really need a way to switch between TensorFlow/OpenCV/OpenVINO/something else without changing any of the StarDist code. That should allow the OpenVINO extension to be added separately just by dragging the jars onto QuPath. I'm not sure how best to do this. If we can come up with a quick-but-maintainable solution we may be able to include it in v0.3, but otherwise I should have a bit more time to think about it in a month.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-811252714
https://github.com/qupath/qupath/pull/665#issuecomment-811259251:96,Testability,log,logic,96,"@petebankhead, Many thanks! I got the point. Will try to separate extensions to common StarDist logic and engine specific.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-811259251
https://github.com/qupath/qupath/pull/665#issuecomment-912009706:58,Deployability,release,released,58,"Sorry this has taken so long, but v0.3.0 has finally been released (within the past few minutes....). It finally has better support for extensions, and so the [QuPath TensorFlow extension](https://github.com/qupath/qupath-extension-tensorflow) can now be in its own repository. We now have a pretty general way to support deep learning via [`DnnModel`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/DnnModel.java). I'm sure the design will need to be improved in the future, but the general idea is to try to require as little as possible to implement a new deep learning extension: basically, implement `DnnModel` and (ideally) also register it with `GsonTools`.; [Here](https://github.com/qupath/qupath-extension-tensorflow/blob/main/src/main/java/qupath/ext/tensorflow/TensorFlowExtension.java#L46) is where that happens for TensorFlow. [StarDist](https://github.com/qupath/qupath-extension-stardist) is now also in its own extension; the builder can take a `DnnModel` as an input as an alternative to a path, so it's relatively easy to add an alternative way or using the model. There's no longer any need to build QuPath from source because [OpenCV can be used instead](https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html). The main reason for all this is that it will make it much easier to use deep learning models within QuPath in different ways, e.g. for object classification, or for semantic segmentation as a drop-in replacement for a pixel classifier. In fact, as long as DnnModel is JSON-serializable (ideally just requires a URI) then this already works, but the process needs to be cleaned up and documented. In the meantime, there are a few videos showing U-Net as live pixel classifier [here](https://twitter.com/petebankhead/status/1406856875732258821?s=20). @dkurt I completely understand if you've lost interest in this after all this time, but if you ever want to update your",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-912009706
https://github.com/qupath/qupath/pull/665#issuecomment-912009706:1990,Deployability,update,update,1990,". We now have a pretty general way to support deep learning via [`DnnModel`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/DnnModel.java). I'm sure the design will need to be improved in the future, but the general idea is to try to require as little as possible to implement a new deep learning extension: basically, implement `DnnModel` and (ideally) also register it with `GsonTools`.; [Here](https://github.com/qupath/qupath-extension-tensorflow/blob/main/src/main/java/qupath/ext/tensorflow/TensorFlowExtension.java#L46) is where that happens for TensorFlow. [StarDist](https://github.com/qupath/qupath-extension-stardist) is now also in its own extension; the builder can take a `DnnModel` as an input as an alternative to a path, so it's relatively easy to add an alternative way or using the model. There's no longer any need to build QuPath from source because [OpenCV can be used instead](https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html). The main reason for all this is that it will make it much easier to use deep learning models within QuPath in different ways, e.g. for object classification, or for semantic segmentation as a drop-in replacement for a pixel classifier. In fact, as long as DnnModel is JSON-serializable (ideally just requires a URI) then this already works, but the process needs to be cleaned up and documented. In the meantime, there are a few videos showing U-Net as live pixel classifier [here](https://twitter.com/petebankhead/status/1406856875732258821?s=20). @dkurt I completely understand if you've lost interest in this after all this time, but if you ever want to update your code to work as an extension in its own repo (I'll link to it) I'd love to give it a try - and I know there are [users who are very interested in benchmarking and trying to maximize StarDist performance](https://forum.image.sc/t/thoughts-on-0-3-2-rc2-with-stardist/56481) :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-912009706
https://github.com/qupath/qupath/pull/665#issuecomment-912009706:2193,Performance,perform,performance,2193,". We now have a pretty general way to support deep learning via [`DnnModel`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/DnnModel.java). I'm sure the design will need to be improved in the future, but the general idea is to try to require as little as possible to implement a new deep learning extension: basically, implement `DnnModel` and (ideally) also register it with `GsonTools`.; [Here](https://github.com/qupath/qupath-extension-tensorflow/blob/main/src/main/java/qupath/ext/tensorflow/TensorFlowExtension.java#L46) is where that happens for TensorFlow. [StarDist](https://github.com/qupath/qupath-extension-stardist) is now also in its own extension; the builder can take a `DnnModel` as an input as an alternative to a path, so it's relatively easy to add an alternative way or using the model. There's no longer any need to build QuPath from source because [OpenCV can be used instead](https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html). The main reason for all this is that it will make it much easier to use deep learning models within QuPath in different ways, e.g. for object classification, or for semantic segmentation as a drop-in replacement for a pixel classifier. In fact, as long as DnnModel is JSON-serializable (ideally just requires a URI) then this already works, but the process needs to be cleaned up and documented. In the meantime, there are a few videos showing U-Net as live pixel classifier [here](https://twitter.com/petebankhead/status/1406856875732258821?s=20). @dkurt I completely understand if you've lost interest in this after all this time, but if you ever want to update your code to work as an extension in its own repo (I'll link to it) I'd love to give it a try - and I know there are [users who are very interested in benchmarking and trying to maximize StarDist performance](https://forum.image.sc/t/thoughts-on-0-3-2-rc2-with-stardist/56481) :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-912009706
https://github.com/qupath/qupath/pull/665#issuecomment-912009706:2148,Testability,benchmark,benchmarking,2148,". We now have a pretty general way to support deep learning via [`DnnModel`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/DnnModel.java). I'm sure the design will need to be improved in the future, but the general idea is to try to require as little as possible to implement a new deep learning extension: basically, implement `DnnModel` and (ideally) also register it with `GsonTools`.; [Here](https://github.com/qupath/qupath-extension-tensorflow/blob/main/src/main/java/qupath/ext/tensorflow/TensorFlowExtension.java#L46) is where that happens for TensorFlow. [StarDist](https://github.com/qupath/qupath-extension-stardist) is now also in its own extension; the builder can take a `DnnModel` as an input as an alternative to a path, so it's relatively easy to add an alternative way or using the model. There's no longer any need to build QuPath from source because [OpenCV can be used instead](https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html). The main reason for all this is that it will make it much easier to use deep learning models within QuPath in different ways, e.g. for object classification, or for semantic segmentation as a drop-in replacement for a pixel classifier. In fact, as long as DnnModel is JSON-serializable (ideally just requires a URI) then this already works, but the process needs to be cleaned up and documented. In the meantime, there are a few videos showing U-Net as live pixel classifier [here](https://twitter.com/petebankhead/status/1406856875732258821?s=20). @dkurt I completely understand if you've lost interest in this after all this time, but if you ever want to update your code to work as an extension in its own repo (I'll link to it) I'd love to give it a try - and I know there are [users who are very interested in benchmarking and trying to maximize StarDist performance](https://forum.image.sc/t/thoughts-on-0-3-2-rc2-with-stardist/56481) :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-912009706
https://github.com/qupath/qupath/pull/665#issuecomment-912009706:327,Usability,learn,learning,327,"Sorry this has taken so long, but v0.3.0 has finally been released (within the past few minutes....). It finally has better support for extensions, and so the [QuPath TensorFlow extension](https://github.com/qupath/qupath-extension-tensorflow) can now be in its own repository. We now have a pretty general way to support deep learning via [`DnnModel`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/DnnModel.java). I'm sure the design will need to be improved in the future, but the general idea is to try to require as little as possible to implement a new deep learning extension: basically, implement `DnnModel` and (ideally) also register it with `GsonTools`.; [Here](https://github.com/qupath/qupath-extension-tensorflow/blob/main/src/main/java/qupath/ext/tensorflow/TensorFlowExtension.java#L46) is where that happens for TensorFlow. [StarDist](https://github.com/qupath/qupath-extension-stardist) is now also in its own extension; the builder can take a `DnnModel` as an input as an alternative to a path, so it's relatively easy to add an alternative way or using the model. There's no longer any need to build QuPath from source because [OpenCV can be used instead](https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html). The main reason for all this is that it will make it much easier to use deep learning models within QuPath in different ways, e.g. for object classification, or for semantic segmentation as a drop-in replacement for a pixel classifier. In fact, as long as DnnModel is JSON-serializable (ideally just requires a URI) then this already works, but the process needs to be cleaned up and documented. In the meantime, there are a few videos showing U-Net as live pixel classifier [here](https://twitter.com/petebankhead/status/1406856875732258821?s=20). @dkurt I completely understand if you've lost interest in this after all this time, but if you ever want to update your",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-912009706
https://github.com/qupath/qupath/pull/665#issuecomment-912009706:651,Usability,learn,learning,651,"Sorry this has taken so long, but v0.3.0 has finally been released (within the past few minutes....). It finally has better support for extensions, and so the [QuPath TensorFlow extension](https://github.com/qupath/qupath-extension-tensorflow) can now be in its own repository. We now have a pretty general way to support deep learning via [`DnnModel`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/DnnModel.java). I'm sure the design will need to be improved in the future, but the general idea is to try to require as little as possible to implement a new deep learning extension: basically, implement `DnnModel` and (ideally) also register it with `GsonTools`.; [Here](https://github.com/qupath/qupath-extension-tensorflow/blob/main/src/main/java/qupath/ext/tensorflow/TensorFlowExtension.java#L46) is where that happens for TensorFlow. [StarDist](https://github.com/qupath/qupath-extension-stardist) is now also in its own extension; the builder can take a `DnnModel` as an input as an alternative to a path, so it's relatively easy to add an alternative way or using the model. There's no longer any need to build QuPath from source because [OpenCV can be used instead](https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html). The main reason for all this is that it will make it much easier to use deep learning models within QuPath in different ways, e.g. for object classification, or for semantic segmentation as a drop-in replacement for a pixel classifier. In fact, as long as DnnModel is JSON-serializable (ideally just requires a URI) then this already works, but the process needs to be cleaned up and documented. In the meantime, there are a few videos showing U-Net as live pixel classifier [here](https://twitter.com/petebankhead/status/1406856875732258821?s=20). @dkurt I completely understand if you've lost interest in this after all this time, but if you ever want to update your",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-912009706
https://github.com/qupath/qupath/pull/665#issuecomment-912009706:1410,Usability,learn,learning,1410,". We now have a pretty general way to support deep learning via [`DnnModel`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/DnnModel.java). I'm sure the design will need to be improved in the future, but the general idea is to try to require as little as possible to implement a new deep learning extension: basically, implement `DnnModel` and (ideally) also register it with `GsonTools`.; [Here](https://github.com/qupath/qupath-extension-tensorflow/blob/main/src/main/java/qupath/ext/tensorflow/TensorFlowExtension.java#L46) is where that happens for TensorFlow. [StarDist](https://github.com/qupath/qupath-extension-stardist) is now also in its own extension; the builder can take a `DnnModel` as an input as an alternative to a path, so it's relatively easy to add an alternative way or using the model. There's no longer any need to build QuPath from source because [OpenCV can be used instead](https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html). The main reason for all this is that it will make it much easier to use deep learning models within QuPath in different ways, e.g. for object classification, or for semantic segmentation as a drop-in replacement for a pixel classifier. In fact, as long as DnnModel is JSON-serializable (ideally just requires a URI) then this already works, but the process needs to be cleaned up and documented. In the meantime, there are a few videos showing U-Net as live pixel classifier [here](https://twitter.com/petebankhead/status/1406856875732258821?s=20). @dkurt I completely understand if you've lost interest in this after all this time, but if you ever want to update your code to work as an extension in its own repo (I'll link to it) I'd love to give it a try - and I know there are [users who are very interested in benchmarking and trying to maximize StarDist performance](https://forum.image.sc/t/thoughts-on-0-3-2-rc2-with-stardist/56481) :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-912009706
https://github.com/qupath/qupath/pull/665#issuecomment-913405484:125,Deployability,update,update,125,"@petebankhead, many thanks for such great progress and letting me know! I'll definitely take a look on current structure and update the proposal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-913405484
https://github.com/qupath/qupath/pull/665#issuecomment-919283605:375,Availability,error,error,375,"@petebankhead, do you know an approach to run QuPath as a script for 0.3.0 version? In example, StarDist model worked in this way:; ```; ./QuPath/bin/QuPath script run_stardist.groovy -i OS-3.ndpi; ```; where `run_stardist.groovy` is a script from https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html. Now with StarDist as a separate JAR extensions, I have an error ""unable to resolve class qupath.ext.stardist.StarDist2D"". ---; **Update**: The following workaround looks fine for me. ```groovy; // import qupath.ext.stardist.StarDist2D; this.class.classLoader.addURL(new File(""qupath-extension-stardist-0.3.0.jar"").toURL());; def StarDist2D = Class.forName(""qupath.ext.stardist.StarDist2D"").newInstance();; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-919283605
https://github.com/qupath/qupath/pull/665#issuecomment-919283605:446,Deployability,Update,Update,446,"@petebankhead, do you know an approach to run QuPath as a script for 0.3.0 version? In example, StarDist model worked in this way:; ```; ./QuPath/bin/QuPath script run_stardist.groovy -i OS-3.ndpi; ```; where `run_stardist.groovy` is a script from https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html. Now with StarDist as a separate JAR extensions, I have an error ""unable to resolve class qupath.ext.stardist.StarDist2D"". ---; **Update**: The following workaround looks fine for me. ```groovy; // import qupath.ext.stardist.StarDist2D; this.class.classLoader.addURL(new File(""qupath-extension-stardist-0.3.0.jar"").toURL());; def StarDist2D = Class.forName(""qupath.ext.stardist.StarDist2D"").newInstance();; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-919283605
https://github.com/qupath/qupath/pull/665#issuecomment-921622336:155,Testability,test,tests,155,"Hi, @petebankhead! I've created a repository with OpenVINO extension. (PR https://github.com/dkurt/qupath-extension-openvino/pull/1). Going to finish with tests and will merge to main branch soon. Also, it requires bounded PR to StarDist ext: https://github.com/qupath/qupath-extension-stardist/pull/12. Many thanks for great support and clear software API :) I really enjoy your project",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-921622336
https://github.com/qupath/qupath/pull/665#issuecomment-921622336:338,Usability,clear,clear,338,"Hi, @petebankhead! I've created a repository with OpenVINO extension. (PR https://github.com/dkurt/qupath-extension-openvino/pull/1). Going to finish with tests and will merge to main branch soon. Also, it requires bounded PR to StarDist ext: https://github.com/qupath/qupath-extension-stardist/pull/12. Many thanks for great support and clear software API :) I really enjoy your project",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-921622336
https://github.com/qupath/qupath/pull/666#issuecomment-787868344:652,Safety,avoid,avoid,652,"Thanks for doing this! I've looked through the proposed changes, thoughts are below:. * For `getAllObjects()`, I suggest replacing; ```java; return objList.parallelStream().filter(e -> e.getClass() != PathRootObject.class).toArray(PathObject[]::new);; ```; with; ```java; return objList.parallelStream().filter(e -> e != hierarchy.getRootObject()).toArray(PathObject[]::new);; ```; because *conceivably* the root object might one day be subclassed or someone may have smuggled a `PathRootObject` wrongly into the hierarchy. (One could also use `e.isRootObject()`, which would handle the case of multiple root objects differently - the main thing is to avoid relying on class equality). * `selectAllObjects()` appears in both `QP` and `Commands` - can these be harmonized to avoid repetition?. * Specify in the javadoc for `selectAllObjects` that the root object is excluded. * We should avoid `OperationNotSupportedException` (doesn't seem intended for this use). * I'm not sure `PathObjectTransform` needs a new class; it could be added to `QP`. At least, it is currently confusing that `transformObject(s)` exists both in `PathObjectTransform` and in `PathObjectTools` (even though I understand the rationale in keeping `PathObjectTools` distinct, since the new method works on a hierarchy). Relatedly:; * `transformObjects` should take a `PathObjectHierarchy` if it doesn't require an `ImageData`; * I think 2 variations should exist that accept an `AffineTransform` or an `AffineTransformation` - since a list of `Number` is harder for a user (even if helpful for scripting). Although then I wonder... would a builder become a better way to handle it?. * An important use case is when we may want to transform *all* the objects in a hierarchy *and maintain the hierarchical relationships*. I think this requires a separate code path that recursively transforms all child objects, assigning them to the appropriately-transformed new parent object.; * A similar use case would be wanting to transfor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-787868344
https://github.com/qupath/qupath/pull/666#issuecomment-787868344:774,Safety,avoid,avoid,774,"Thanks for doing this! I've looked through the proposed changes, thoughts are below:. * For `getAllObjects()`, I suggest replacing; ```java; return objList.parallelStream().filter(e -> e.getClass() != PathRootObject.class).toArray(PathObject[]::new);; ```; with; ```java; return objList.parallelStream().filter(e -> e != hierarchy.getRootObject()).toArray(PathObject[]::new);; ```; because *conceivably* the root object might one day be subclassed or someone may have smuggled a `PathRootObject` wrongly into the hierarchy. (One could also use `e.isRootObject()`, which would handle the case of multiple root objects differently - the main thing is to avoid relying on class equality). * `selectAllObjects()` appears in both `QP` and `Commands` - can these be harmonized to avoid repetition?. * Specify in the javadoc for `selectAllObjects` that the root object is excluded. * We should avoid `OperationNotSupportedException` (doesn't seem intended for this use). * I'm not sure `PathObjectTransform` needs a new class; it could be added to `QP`. At least, it is currently confusing that `transformObject(s)` exists both in `PathObjectTransform` and in `PathObjectTools` (even though I understand the rationale in keeping `PathObjectTools` distinct, since the new method works on a hierarchy). Relatedly:; * `transformObjects` should take a `PathObjectHierarchy` if it doesn't require an `ImageData`; * I think 2 variations should exist that accept an `AffineTransform` or an `AffineTransformation` - since a list of `Number` is harder for a user (even if helpful for scripting). Although then I wonder... would a builder become a better way to handle it?. * An important use case is when we may want to transform *all* the objects in a hierarchy *and maintain the hierarchical relationships*. I think this requires a separate code path that recursively transforms all child objects, assigning them to the appropriately-transformed new parent object.; * A similar use case would be wanting to transfor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-787868344
https://github.com/qupath/qupath/pull/666#issuecomment-787868344:887,Safety,avoid,avoid,887,"Thanks for doing this! I've looked through the proposed changes, thoughts are below:. * For `getAllObjects()`, I suggest replacing; ```java; return objList.parallelStream().filter(e -> e.getClass() != PathRootObject.class).toArray(PathObject[]::new);; ```; with; ```java; return objList.parallelStream().filter(e -> e != hierarchy.getRootObject()).toArray(PathObject[]::new);; ```; because *conceivably* the root object might one day be subclassed or someone may have smuggled a `PathRootObject` wrongly into the hierarchy. (One could also use `e.isRootObject()`, which would handle the case of multiple root objects differently - the main thing is to avoid relying on class equality). * `selectAllObjects()` appears in both `QP` and `Commands` - can these be harmonized to avoid repetition?. * Specify in the javadoc for `selectAllObjects` that the root object is excluded. * We should avoid `OperationNotSupportedException` (doesn't seem intended for this use). * I'm not sure `PathObjectTransform` needs a new class; it could be added to `QP`. At least, it is currently confusing that `transformObject(s)` exists both in `PathObjectTransform` and in `PathObjectTools` (even though I understand the rationale in keeping `PathObjectTools` distinct, since the new method works on a hierarchy). Relatedly:; * `transformObjects` should take a `PathObjectHierarchy` if it doesn't require an `ImageData`; * I think 2 variations should exist that accept an `AffineTransform` or an `AffineTransformation` - since a list of `Number` is harder for a user (even if helpful for scripting). Although then I wonder... would a builder become a better way to handle it?. * An important use case is when we may want to transform *all* the objects in a hierarchy *and maintain the hierarchical relationships*. I think this requires a separate code path that recursively transforms all child objects, assigning them to the appropriately-transformed new parent object.; * A similar use case would be wanting to transfor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-787868344
https://github.com/qupath/qupath/pull/666#issuecomment-787868344:4019,Safety,avoid,avoid,4019,"rialization quite easy if it's required in a script anyway... except if things are circular. Which brings me to... * `exportObjectsAsSerialized` looks like it doesn't actually use the transformed list; it also potentially allows circular references via parents/children, which could be confusing and/or buggy. I don't think we need this method if we are discouraging serialization (although I could be wrong... especially if we find a way to use it internally for convenience). * *If* `importObjectsFromSerialized` is in the public API, I think it should handle things other than lists, e.g. individual objects, arrays of objects, collections. But I'd prefer to expose it in the public API only if its benefits are clear enough. * It looks like `.qpdata` is being used for serialized object lists. We really shouldn't add a new file type with the same extension. Rather, we *can* read objects from an existing `.qpdata` file using [`PathIO.readHierarchy(File)`](https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/qupath-core/src/main/java/qupath/lib/io/PathIO.java#L410) - this should work even if the server is unavailable itself. The ability to import from old `.qpdata` files is important, but I'd like to avoid encouraging anyone to write `.qpdata` files other than those handled internally within projects (to make it easier for us to replace the format in the future). * A common use case will be transferring objects between images in the same project. Ideally this would be possible without exporting/importing, but rather simply choosing the project entry for import. Internally, this can use [`ProjectImageEntry.readHierarchy()`](https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/qupath-core/src/main/java/qupath/lib/projects/ProjectImageEntry.java#L210).; * Adding this to the UI is tricky, since navigating long lists of project entries is awkward.... could it be supported by dragging an entry from the project list onto a viewer?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-787868344
https://github.com/qupath/qupath/pull/666#issuecomment-787868344:3444,Security,expose,expose,3444," object of a hierarchy to transform the entire hierarchy easily and intuitively.; ; * I don't think we should give a serialize export option in the menus. We should move away from Java serialization as much as possible, and discourage anyone from use it; we should still support it for import though. Groovy make serialization quite easy if it's required in a script anyway... except if things are circular. Which brings me to... * `exportObjectsAsSerialized` looks like it doesn't actually use the transformed list; it also potentially allows circular references via parents/children, which could be confusing and/or buggy. I don't think we need this method if we are discouraging serialization (although I could be wrong... especially if we find a way to use it internally for convenience). * *If* `importObjectsFromSerialized` is in the public API, I think it should handle things other than lists, e.g. individual objects, arrays of objects, collections. But I'd prefer to expose it in the public API only if its benefits are clear enough. * It looks like `.qpdata` is being used for serialized object lists. We really shouldn't add a new file type with the same extension. Rather, we *can* read objects from an existing `.qpdata` file using [`PathIO.readHierarchy(File)`](https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/qupath-core/src/main/java/qupath/lib/io/PathIO.java#L410) - this should work even if the server is unavailable itself. The ability to import from old `.qpdata` files is important, but I'd like to avoid encouraging anyone to write `.qpdata` files other than those handled internally within projects (to make it easier for us to replace the format in the future). * A common use case will be transferring objects between images in the same project. Ideally this would be possible without exporting/importing, but rather simply choosing the project entry for import. Internally, this can use [`ProjectImageEntry.readHierarchy()`](https://github.com",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-787868344
https://github.com/qupath/qupath/pull/666#issuecomment-787868344:2535,Usability,intuit,intuitively,2535,"ransformation` - since a list of `Number` is harder for a user (even if helpful for scripting). Although then I wonder... would a builder become a better way to handle it?. * An important use case is when we may want to transform *all* the objects in a hierarchy *and maintain the hierarchical relationships*. I think this requires a separate code path that recursively transforms all child objects, assigning them to the appropriately-transformed new parent object.; * A similar use case would be wanting to transform all objects recursively, but *without* them already being part of any hierarchy. For example, during import of objects before they are added to a hierarchy that already contains objects (which don't need to be transformed).; * I think perhaps `PathObjectTools.transformObject` should either take a 'doRecursive' parameter or have a separate method for recursively applying the transform - also checking for a null ROI. This would mean it can be applied to the root object of a hierarchy to transform the entire hierarchy easily and intuitively.; ; * I don't think we should give a serialize export option in the menus. We should move away from Java serialization as much as possible, and discourage anyone from use it; we should still support it for import though. Groovy make serialization quite easy if it's required in a script anyway... except if things are circular. Which brings me to... * `exportObjectsAsSerialized` looks like it doesn't actually use the transformed list; it also potentially allows circular references via parents/children, which could be confusing and/or buggy. I don't think we need this method if we are discouraging serialization (although I could be wrong... especially if we find a way to use it internally for convenience). * *If* `importObjectsFromSerialized` is in the public API, I think it should handle things other than lists, e.g. individual objects, arrays of objects, collections. But I'd prefer to expose it in the public API only if its ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-787868344
https://github.com/qupath/qupath/pull/666#issuecomment-787868344:3497,Usability,clear,clear,3497," object of a hierarchy to transform the entire hierarchy easily and intuitively.; ; * I don't think we should give a serialize export option in the menus. We should move away from Java serialization as much as possible, and discourage anyone from use it; we should still support it for import though. Groovy make serialization quite easy if it's required in a script anyway... except if things are circular. Which brings me to... * `exportObjectsAsSerialized` looks like it doesn't actually use the transformed list; it also potentially allows circular references via parents/children, which could be confusing and/or buggy. I don't think we need this method if we are discouraging serialization (although I could be wrong... especially if we find a way to use it internally for convenience). * *If* `importObjectsFromSerialized` is in the public API, I think it should handle things other than lists, e.g. individual objects, arrays of objects, collections. But I'd prefer to expose it in the public API only if its benefits are clear enough. * It looks like `.qpdata` is being used for serialized object lists. We really shouldn't add a new file type with the same extension. Rather, we *can* read objects from an existing `.qpdata` file using [`PathIO.readHierarchy(File)`](https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/qupath-core/src/main/java/qupath/lib/io/PathIO.java#L410) - this should work even if the server is unavailable itself. The ability to import from old `.qpdata` files is important, but I'd like to avoid encouraging anyone to write `.qpdata` files other than those handled internally within projects (to make it easier for us to replace the format in the future). * A common use case will be transferring objects between images in the same project. Ideally this would be possible without exporting/importing, but rather simply choosing the project entry for import. Internally, this can use [`ProjectImageEntry.readHierarchy()`](https://github.com",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-787868344
https://github.com/qupath/qupath/pull/666#issuecomment-787868344:4341,Usability,simpl,simply,4341,"rialization quite easy if it's required in a script anyway... except if things are circular. Which brings me to... * `exportObjectsAsSerialized` looks like it doesn't actually use the transformed list; it also potentially allows circular references via parents/children, which could be confusing and/or buggy. I don't think we need this method if we are discouraging serialization (although I could be wrong... especially if we find a way to use it internally for convenience). * *If* `importObjectsFromSerialized` is in the public API, I think it should handle things other than lists, e.g. individual objects, arrays of objects, collections. But I'd prefer to expose it in the public API only if its benefits are clear enough. * It looks like `.qpdata` is being used for serialized object lists. We really shouldn't add a new file type with the same extension. Rather, we *can* read objects from an existing `.qpdata` file using [`PathIO.readHierarchy(File)`](https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/qupath-core/src/main/java/qupath/lib/io/PathIO.java#L410) - this should work even if the server is unavailable itself. The ability to import from old `.qpdata` files is important, but I'd like to avoid encouraging anyone to write `.qpdata` files other than those handled internally within projects (to make it easier for us to replace the format in the future). * A common use case will be transferring objects between images in the same project. Ideally this would be possible without exporting/importing, but rather simply choosing the project entry for import. Internally, this can use [`ProjectImageEntry.readHierarchy()`](https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/qupath-core/src/main/java/qupath/lib/projects/ProjectImageEntry.java#L210).; * Adding this to the UI is tricky, since navigating long lists of project entries is awkward.... could it be supported by dragging an entry from the project list onto a viewer?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-787868344
https://github.com/qupath/qupath/pull/666#issuecomment-790729141:134,Deployability,integrat,integration,134,Thanks for the feedback!; I'll close this PR and reopen a simpler one [here](https://github.com/qupath/qupath/pull/670) to facilitate integration.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-790729141
https://github.com/qupath/qupath/pull/666#issuecomment-790729141:134,Integrability,integrat,integration,134,Thanks for the feedback!; I'll close this PR and reopen a simpler one [here](https://github.com/qupath/qupath/pull/670) to facilitate integration.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-790729141
https://github.com/qupath/qupath/pull/666#issuecomment-790729141:15,Usability,feedback,feedback,15,Thanks for the feedback!; I'll close this PR and reopen a simpler one [here](https://github.com/qupath/qupath/pull/670) to facilitate integration.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-790729141
https://github.com/qupath/qupath/pull/666#issuecomment-790729141:58,Usability,simpl,simpler,58,Thanks for the feedback!; I'll close this PR and reopen a simpler one [here](https://github.com/qupath/qupath/pull/670) to facilitate integration.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-790729141
https://github.com/qupath/qupath/pull/668#issuecomment-787820926:284,Testability,test,testing,284,"Looks good to me. Not 100% sure if prohibiting text input completely is too aggressive (also with its scientific notation implications), but think we should try it and see how it impacts behavior (I never wanted to use scientific notation until I knew I couldn't...). Small thing: in testing this, I've found an old bug related to the brightness/contrast display. Basically, if I double-click on min/max and enter a new value *that is out of range*, this is not immediately shown in the label - but *does* appear if I then click once on the label after the input dialog has been closed. Since it fits with the decimal places change, could you look into this please? If it's not a straightforward fix then let me know and I'll merge this as it is.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/668#issuecomment-787820926
https://github.com/qupath/qupath/pull/668#issuecomment-791375357:303,Modifiability,variab,variable,303,"I like it! Seems to work well. Tiny thing: it looks like `Pattern pattern = Pattern.compile(""[a-zA-Z&&[^Ee]]+"");` is called on every validation of the text field. Since `Pattern` instances are immutable (according to the javadocs), I think this should be initialized outside as a `private final static` variable to avoid the unnecessary overhead.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/668#issuecomment-791375357
https://github.com/qupath/qupath/pull/668#issuecomment-791375357:315,Safety,avoid,avoid,315,"I like it! Seems to work well. Tiny thing: it looks like `Pattern pattern = Pattern.compile(""[a-zA-Z&&[^Ee]]+"");` is called on every validation of the text field. Since `Pattern` instances are immutable (according to the javadocs), I think this should be initialized outside as a `private final static` variable to avoid the unnecessary overhead.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/668#issuecomment-791375357
https://github.com/qupath/qupath/pull/668#issuecomment-791375357:133,Security,validat,validation,133,"I like it! Seems to work well. Tiny thing: it looks like `Pattern pattern = Pattern.compile(""[a-zA-Z&&[^Ee]]+"");` is called on every validation of the text field. Since `Pattern` instances are immutable (according to the javadocs), I think this should be initialized outside as a `private final static` variable to avoid the unnecessary overhead.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/668#issuecomment-791375357
https://github.com/qupath/qupath/pull/668#issuecomment-791565911:148,Testability,test,testing,148,"Looks good, linking to the issues this addresses:; * https://github.com/qupath/qupath/issues/667; * https://github.com/qupath/qupath/issues/669. In testing this, I notice one pre-existing bug: I can input a negative magnification value and tbh I don't know how the viewer decides what to use. But that was already the case in v0.2.3 and can be handled in another pull request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/668#issuecomment-791565911
https://github.com/qupath/qupath/issues/669#issuecomment-785239425:588,Deployability,release,releases,588,"If you double-click on the number, you can get lots of digits... is that sufficient?. If not, it looks like something we should be able to change by switching the [formatting here](https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/BrightnessContrastCommand.java#L202) (to use a `NumberFormatter`, so that decimal places aren't added when not needed) @melvingelbard . (PS. I'd really rather use [the forum](http://image.sc/tag/qupath) for discussions/ requests, and GitHub only for bugs/dev use for specific releases)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/669#issuecomment-785239425
https://github.com/qupath/qupath/issues/669#issuecomment-786174872:233,Security,access,access,233,"@petebankhead and @melvingelbard , sorry for the late response. I will use image.sc for feature requests if that is more suitable. (I thought it might be easy for you to track features and interlink them with commit ids here). I can access the numbers by double clicking, thanks for pointing that out. That should help a little. It would be nice to see at least 2 decimal places near the slider for the 32 float images (with low intensity values). I am not sure if it will hurt to have 2 decimal places when the values are greater than 10, or will it somehow affect the usability of the slider. Your suggestion might be better, to have 2 decimal places when the value is < 10, and 1 decimal place otherwise. Thanks for looking into this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/669#issuecomment-786174872
https://github.com/qupath/qupath/issues/669#issuecomment-786174872:570,Usability,usab,usability,570,"@petebankhead and @melvingelbard , sorry for the late response. I will use image.sc for feature requests if that is more suitable. (I thought it might be easy for you to track features and interlink them with commit ids here). I can access the numbers by double clicking, thanks for pointing that out. That should help a little. It would be nice to see at least 2 decimal places near the slider for the 32 float images (with low intensity values). I am not sure if it will hurt to have 2 decimal places when the values are greater than 10, or will it somehow affect the usability of the slider. Your suggestion might be better, to have 2 decimal places when the value is < 10, and 1 decimal place otherwise. Thanks for looking into this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/669#issuecomment-786174872
https://github.com/qupath/qupath/issues/669#issuecomment-791936700:15,Deployability,update,update,15,"Thanks for the update. Looks great 👍, I will continue testing dev-0.3 branch. I am closing this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/669#issuecomment-791936700
https://github.com/qupath/qupath/issues/669#issuecomment-791936700:54,Testability,test,testing,54,"Thanks for the update. Looks great 👍, I will continue testing dev-0.3 branch. I am closing this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/669#issuecomment-791936700
https://github.com/qupath/qupath/issues/683#issuecomment-798658904:447,Testability,test,test,447,"> when i change a text in menu to persian it's showing like this. In what way are you changing the setting? QuPath doesn't support languages other than English. If you find it is displaying wrongly, under *Help &rarr; Show setup options*, what is the 'Region' option set to?. Location settings are buried deep within Java and your operating system, and can be combined in multiple ways (for text, numbers, dates etc.). It isn't possible for us to test how behavior changes for many different combinations, therefore it is recommended to set it to 'English (US)' for consistency. If the *Help &rarr; Show setup options* setting doesn't fix things, could you please tell me what you see if you run the following script?; ```groovy; println Locale.getDefault(); println Locale.getDefault(Locale.Category.DISPLAY); println Locale.getDefault(Locale.Category.FORMAT); ```. If you find that any of these are not English, you could try running this script to set the locale more forcibly:; ```groovy; import qupath.lib.gui.prefs.PathPrefs; PathPrefs.defaultLocaleFormatProperty().set(Locale.US); PathPrefs.defaultLocaleDisplayProperty().set(Locale.US); ```; You may need to restart QuPath to see the effect of any changes. If you don't like the results of changing any preferences, you can use *Edit &rarr; Reset preferences* to restore all preferences to their defaults.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/683#issuecomment-798658904
https://github.com/qupath/qupath/pull/685#issuecomment-803035454:4,Deployability,update,updates,4,"The updates required for Java 16 were more substantial than I'd hoped... this is my first attempt. It relates to:; * https://github.com/qupath/qupath/issues/615; * https://github.com/qupath/qupath/pull/639; * https://github.com/qupath/qupath/pull/640. I'm not entirely satisfied with the outcome, particularly in dropping the version number and whether this will cause Windows installation pains for any update, but I don't have more time to grapple with it at the moment. And continuing to rely on Java 14 for the next release seems worse. Feedback / suggestions welcome :). @EgorBushmelev @yli-hallila @anotherBunchOfAtoms @ertugrulcetin @juliangilbey @ajay1685 @melvingelbard",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-803035454
https://github.com/qupath/qupath/pull/685#issuecomment-803035454:377,Deployability,install,installation,377,"The updates required for Java 16 were more substantial than I'd hoped... this is my first attempt. It relates to:; * https://github.com/qupath/qupath/issues/615; * https://github.com/qupath/qupath/pull/639; * https://github.com/qupath/qupath/pull/640. I'm not entirely satisfied with the outcome, particularly in dropping the version number and whether this will cause Windows installation pains for any update, but I don't have more time to grapple with it at the moment. And continuing to rely on Java 14 for the next release seems worse. Feedback / suggestions welcome :). @EgorBushmelev @yli-hallila @anotherBunchOfAtoms @ertugrulcetin @juliangilbey @ajay1685 @melvingelbard",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-803035454
https://github.com/qupath/qupath/pull/685#issuecomment-803035454:404,Deployability,update,update,404,"The updates required for Java 16 were more substantial than I'd hoped... this is my first attempt. It relates to:; * https://github.com/qupath/qupath/issues/615; * https://github.com/qupath/qupath/pull/639; * https://github.com/qupath/qupath/pull/640. I'm not entirely satisfied with the outcome, particularly in dropping the version number and whether this will cause Windows installation pains for any update, but I don't have more time to grapple with it at the moment. And continuing to rely on Java 14 for the next release seems worse. Feedback / suggestions welcome :). @EgorBushmelev @yli-hallila @anotherBunchOfAtoms @ertugrulcetin @juliangilbey @ajay1685 @melvingelbard",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-803035454
https://github.com/qupath/qupath/pull/685#issuecomment-803035454:520,Deployability,release,release,520,"The updates required for Java 16 were more substantial than I'd hoped... this is my first attempt. It relates to:; * https://github.com/qupath/qupath/issues/615; * https://github.com/qupath/qupath/pull/639; * https://github.com/qupath/qupath/pull/640. I'm not entirely satisfied with the outcome, particularly in dropping the version number and whether this will cause Windows installation pains for any update, but I don't have more time to grapple with it at the moment. And continuing to rely on Java 14 for the next release seems worse. Feedback / suggestions welcome :). @EgorBushmelev @yli-hallila @anotherBunchOfAtoms @ertugrulcetin @juliangilbey @ajay1685 @melvingelbard",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-803035454
https://github.com/qupath/qupath/pull/685#issuecomment-803035454:541,Usability,Feedback,Feedback,541,"The updates required for Java 16 were more substantial than I'd hoped... this is my first attempt. It relates to:; * https://github.com/qupath/qupath/issues/615; * https://github.com/qupath/qupath/pull/639; * https://github.com/qupath/qupath/pull/640. I'm not entirely satisfied with the outcome, particularly in dropping the version number and whether this will cause Windows installation pains for any update, but I don't have more time to grapple with it at the moment. And continuing to rely on Java 14 for the next release seems worse. Feedback / suggestions welcome :). @EgorBushmelev @yli-hallila @anotherBunchOfAtoms @ertugrulcetin @juliangilbey @ajay1685 @melvingelbard",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-803035454
https://github.com/qupath/qupath/pull/685#issuecomment-805287118:12,Testability,test,tested,12,"I build and tested commit [6b09b5a](https://github.com/qupath/qupath/pull/685/commits/6b09b5aafc63ef2456bb9ba3be4779a1eceadcef) with tensorflow-gpu option, it seems to work well with RTX 2080ti, CUDA 11.0 and cuDNN 8.0.4 on Windows 10. QuPath with previous version of tensorflow java (1.15) was very unpredictable when using GPU.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805287118
https://github.com/qupath/qupath/pull/685#issuecomment-805568183:328,Deployability,install,installer,328,"Excellent, thanks @ajay1685! I hadn't been able to test tensorflow on Windows yet, that's great news. Some of the more recent commits have hopefully resolved lingering issues with OpenSlide/Bio-Formats, and restored the version number to the application name on Windows. I *think* this is a good thing for people using the .msi installer, since it means they can easily have multiple versions installed. But I don't use Windows enough to know for sure if that's a desirable feature for most people.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805568183
https://github.com/qupath/qupath/pull/685#issuecomment-805568183:393,Deployability,install,installed,393,"Excellent, thanks @ajay1685! I hadn't been able to test tensorflow on Windows yet, that's great news. Some of the more recent commits have hopefully resolved lingering issues with OpenSlide/Bio-Formats, and restored the version number to the application name on Windows. I *think* this is a good thing for people using the .msi installer, since it means they can easily have multiple versions installed. But I don't use Windows enough to know for sure if that's a desirable feature for most people.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805568183
https://github.com/qupath/qupath/pull/685#issuecomment-805568183:51,Testability,test,test,51,"Excellent, thanks @ajay1685! I hadn't been able to test tensorflow on Windows yet, that's great news. Some of the more recent commits have hopefully resolved lingering issues with OpenSlide/Bio-Formats, and restored the version number to the application name on Windows. I *think* this is a good thing for people using the .msi installer, since it means they can easily have multiple versions installed. But I don't use Windows enough to know for sure if that's a desirable feature for most people.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805568183
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:90,Deployability,install,install,90,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:122,Deployability,release,release,122,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:267,Deployability,install,installer,267,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:296,Deployability,install,install,296,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:561,Deployability,install,install,561,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:594,Deployability,install,installer,594,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:615,Deployability,upgrade,upgrades,615,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:637,Deployability,install,installation,637,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:681,Deployability,install,install,681,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:827,Deployability,install,installed,827,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:973,Deployability,release,release,973,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/pull/685#issuecomment-805880198:852,Usability,clear,clear,852,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198
https://github.com/qupath/qupath/issues/686#issuecomment-804221932:324,Energy Efficiency,green,green,324,"I can replicate the problem with the measurements. Basically, RGB images are a special case. QuPath + StarDist should measure them properly if they are brightfield (after color deconvolution), but if a fluorescence image is RGB then it just uses the packed RGB value as a single channel - rather than splitting out the red, green and blue components. This is a bug that we can fix. I don't see a problem with the cell expansion, but note that; * you're constraining the cell expansion with the ` .cellConstrainScale(1.5)` option; * the pixel size of your image is 0.5, but based upon the scalebar it should be closer to 0.161 µm. In the short term, you can open your images in ImageJ/Fiji and run *Image &rarr; Color &rarr; Make Composite*. While you're there, you can call *Analyze &rarr; Set Scale...* with a line drawn over the scalebar and input the true length to fix the pixel size. I've attached an example of the image after conversion; this should work in QuPath properly.; [CTRL-01-composite.tif.zip](https://github.com/qupath/qupath/files/6183862/CTRL-01-composite.tif.zip). Finally, my guess is that your RGB image isn't the raw data - since it has a scalebar burned in to it. So the pixel values might be changed and analysis might not make sense anyway. I've written a bit about this topic in my image analysis handbook, e.g. [here](https://petebankhead.gitbooks.io/imagej-intro/content/chapters/files/files.html) (and some other chapters about RGB conversion).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/686#issuecomment-804221932
https://github.com/qupath/qupath/issues/686#issuecomment-804230107:185,Safety,Detect,Detection,185,"Thanks for the quick response. Converting to composite works. Is it an option to let QuPath do this automatically when the image type is set to Fluorescence? And for the standard ""Cell Detection"" the RGB Data was not a problem.; I overlooked the .cellConstrainScale(1.5) option.; You are right about the data not being the RAW data. This RAW data was lost by the researcher.; Thanks for the great program. We like QuPath a lot!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/686#issuecomment-804230107
https://github.com/qupath/qupath/issues/686#issuecomment-804259530:571,Deployability,release,release,571,"> Converting to composite works. Is it an option to let QuPath do this automatically when the image type is set to Fluorescence? . I'm afraid not, QuPath doesn't really allow you to modify the image in any way, so changes like this are difficult. Batch conversion in ImageJ is the easiest 'fix' I can think of. The code used to make measurements with StarDist is a lot more generic than the code for the built-in cell detection... but I overlooked the RGB problem since I didn't have any images quite like that. Good to know about it now so we can fix it before the next release. > Thanks for the great program. We like QuPath a lot!. I'm glad! If you haven't already, it would be great if you could fill in the [user survey](https://edinburgh.onlinesurveys.ac.uk/qupath-user-survey-2021) - and please share it with anyone else you know uses the software!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/686#issuecomment-804259530
https://github.com/qupath/qupath/issues/686#issuecomment-804259530:418,Safety,detect,detection,418,"> Converting to composite works. Is it an option to let QuPath do this automatically when the image type is set to Fluorescence? . I'm afraid not, QuPath doesn't really allow you to modify the image in any way, so changes like this are difficult. Batch conversion in ImageJ is the easiest 'fix' I can think of. The code used to make measurements with StarDist is a lot more generic than the code for the built-in cell detection... but I overlooked the RGB problem since I didn't have any images quite like that. Good to know about it now so we can fix it before the next release. > Thanks for the great program. We like QuPath a lot!. I'm glad! If you haven't already, it would be great if you could fill in the [user survey](https://edinburgh.onlinesurveys.ac.uk/qupath-user-survey-2021) - and please share it with anyone else you know uses the software!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/686#issuecomment-804259530
https://github.com/qupath/qupath/pull/687#issuecomment-811675775:36,Testability,test,tests,36,"Looks great! Excellent to have more tests & the changes documented here. I'd like to merge this, there are just a few things:; * Please make sure the GPL copyright header is added to any new files (e.g. `TestSimpleImages.java`); * Could you add a test for `PathClassifierTools.setIntensityClassifications`? That fix looks a really important one - it would be good to have a few examples that test the behavior to guard against future regressions (including at least one that would fail with the old method).; * There is a merge conflict reported with `GeneralTools`; * I'm not sure about the change to `GeneralTools.generateDistinctName`. If the base is empty, it is returned unchanged - but it still *should* provide a distinct name (for example, this is used when adding images to a project and multiple empty names would be very confusing). The generated name could be `(1)` for example; it shouldn't include a leading space.; I haven't tested the following code, but it might do the job:; ```java; public static String generateDistinctName(String base, Collection<String> existingNames) {; 		if (!existingNames.contains(base)); 			return base;; 		; 		// Check if we already end with a number, and if so strip that; 		if (Pattern.matches("".* (\\([\\d]+\\))$"", base)) {; 			base = base.substring(0, base.lastIndexOf("" (""));; 		}; 		; 		// Check for the highest number we currently have; 		int lastInd = 0;; 		var pattern = base.isEmpty() ? Pattern.compile(""\\(([\\d]+)\\)"") : Pattern.compile(base + "" \\(([\\d]+)\\)"");; 		for (var existing : existingNames) {; 			var matcher = pattern.matcher(existing);; 			if (matcher.find()); 				lastInd = Math.max(lastInd, Integer.parseInt(matcher.group(1)));; 		}; if (!base.isEmpty()); base = base + "" "";; 		return base + ""("" + (lastInd + 1) + "")"";; 	}; ```; I think this method also deserves its own test, since it's behavior is quite well-defined - but in practice quite fiddly to implement.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/687#issuecomment-811675775
https://github.com/qupath/qupath/pull/687#issuecomment-811675775:204,Testability,Test,TestSimpleImages,204,"Looks great! Excellent to have more tests & the changes documented here. I'd like to merge this, there are just a few things:; * Please make sure the GPL copyright header is added to any new files (e.g. `TestSimpleImages.java`); * Could you add a test for `PathClassifierTools.setIntensityClassifications`? That fix looks a really important one - it would be good to have a few examples that test the behavior to guard against future regressions (including at least one that would fail with the old method).; * There is a merge conflict reported with `GeneralTools`; * I'm not sure about the change to `GeneralTools.generateDistinctName`. If the base is empty, it is returned unchanged - but it still *should* provide a distinct name (for example, this is used when adding images to a project and multiple empty names would be very confusing). The generated name could be `(1)` for example; it shouldn't include a leading space.; I haven't tested the following code, but it might do the job:; ```java; public static String generateDistinctName(String base, Collection<String> existingNames) {; 		if (!existingNames.contains(base)); 			return base;; 		; 		// Check if we already end with a number, and if so strip that; 		if (Pattern.matches("".* (\\([\\d]+\\))$"", base)) {; 			base = base.substring(0, base.lastIndexOf("" (""));; 		}; 		; 		// Check for the highest number we currently have; 		int lastInd = 0;; 		var pattern = base.isEmpty() ? Pattern.compile(""\\(([\\d]+)\\)"") : Pattern.compile(base + "" \\(([\\d]+)\\)"");; 		for (var existing : existingNames) {; 			var matcher = pattern.matcher(existing);; 			if (matcher.find()); 				lastInd = Math.max(lastInd, Integer.parseInt(matcher.group(1)));; 		}; if (!base.isEmpty()); base = base + "" "";; 		return base + ""("" + (lastInd + 1) + "")"";; 	}; ```; I think this method also deserves its own test, since it's behavior is quite well-defined - but in practice quite fiddly to implement.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/687#issuecomment-811675775
https://github.com/qupath/qupath/pull/687#issuecomment-811675775:247,Testability,test,test,247,"Looks great! Excellent to have more tests & the changes documented here. I'd like to merge this, there are just a few things:; * Please make sure the GPL copyright header is added to any new files (e.g. `TestSimpleImages.java`); * Could you add a test for `PathClassifierTools.setIntensityClassifications`? That fix looks a really important one - it would be good to have a few examples that test the behavior to guard against future regressions (including at least one that would fail with the old method).; * There is a merge conflict reported with `GeneralTools`; * I'm not sure about the change to `GeneralTools.generateDistinctName`. If the base is empty, it is returned unchanged - but it still *should* provide a distinct name (for example, this is used when adding images to a project and multiple empty names would be very confusing). The generated name could be `(1)` for example; it shouldn't include a leading space.; I haven't tested the following code, but it might do the job:; ```java; public static String generateDistinctName(String base, Collection<String> existingNames) {; 		if (!existingNames.contains(base)); 			return base;; 		; 		// Check if we already end with a number, and if so strip that; 		if (Pattern.matches("".* (\\([\\d]+\\))$"", base)) {; 			base = base.substring(0, base.lastIndexOf("" (""));; 		}; 		; 		// Check for the highest number we currently have; 		int lastInd = 0;; 		var pattern = base.isEmpty() ? Pattern.compile(""\\(([\\d]+)\\)"") : Pattern.compile(base + "" \\(([\\d]+)\\)"");; 		for (var existing : existingNames) {; 			var matcher = pattern.matcher(existing);; 			if (matcher.find()); 				lastInd = Math.max(lastInd, Integer.parseInt(matcher.group(1)));; 		}; if (!base.isEmpty()); base = base + "" "";; 		return base + ""("" + (lastInd + 1) + "")"";; 	}; ```; I think this method also deserves its own test, since it's behavior is quite well-defined - but in practice quite fiddly to implement.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/687#issuecomment-811675775
https://github.com/qupath/qupath/pull/687#issuecomment-811675775:392,Testability,test,test,392,"Looks great! Excellent to have more tests & the changes documented here. I'd like to merge this, there are just a few things:; * Please make sure the GPL copyright header is added to any new files (e.g. `TestSimpleImages.java`); * Could you add a test for `PathClassifierTools.setIntensityClassifications`? That fix looks a really important one - it would be good to have a few examples that test the behavior to guard against future regressions (including at least one that would fail with the old method).; * There is a merge conflict reported with `GeneralTools`; * I'm not sure about the change to `GeneralTools.generateDistinctName`. If the base is empty, it is returned unchanged - but it still *should* provide a distinct name (for example, this is used when adding images to a project and multiple empty names would be very confusing). The generated name could be `(1)` for example; it shouldn't include a leading space.; I haven't tested the following code, but it might do the job:; ```java; public static String generateDistinctName(String base, Collection<String> existingNames) {; 		if (!existingNames.contains(base)); 			return base;; 		; 		// Check if we already end with a number, and if so strip that; 		if (Pattern.matches("".* (\\([\\d]+\\))$"", base)) {; 			base = base.substring(0, base.lastIndexOf("" (""));; 		}; 		; 		// Check for the highest number we currently have; 		int lastInd = 0;; 		var pattern = base.isEmpty() ? Pattern.compile(""\\(([\\d]+)\\)"") : Pattern.compile(base + "" \\(([\\d]+)\\)"");; 		for (var existing : existingNames) {; 			var matcher = pattern.matcher(existing);; 			if (matcher.find()); 				lastInd = Math.max(lastInd, Integer.parseInt(matcher.group(1)));; 		}; if (!base.isEmpty()); base = base + "" "";; 		return base + ""("" + (lastInd + 1) + "")"";; 	}; ```; I think this method also deserves its own test, since it's behavior is quite well-defined - but in practice quite fiddly to implement.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/687#issuecomment-811675775
https://github.com/qupath/qupath/pull/687#issuecomment-811675775:940,Testability,test,tested,940,"Looks great! Excellent to have more tests & the changes documented here. I'd like to merge this, there are just a few things:; * Please make sure the GPL copyright header is added to any new files (e.g. `TestSimpleImages.java`); * Could you add a test for `PathClassifierTools.setIntensityClassifications`? That fix looks a really important one - it would be good to have a few examples that test the behavior to guard against future regressions (including at least one that would fail with the old method).; * There is a merge conflict reported with `GeneralTools`; * I'm not sure about the change to `GeneralTools.generateDistinctName`. If the base is empty, it is returned unchanged - but it still *should* provide a distinct name (for example, this is used when adding images to a project and multiple empty names would be very confusing). The generated name could be `(1)` for example; it shouldn't include a leading space.; I haven't tested the following code, but it might do the job:; ```java; public static String generateDistinctName(String base, Collection<String> existingNames) {; 		if (!existingNames.contains(base)); 			return base;; 		; 		// Check if we already end with a number, and if so strip that; 		if (Pattern.matches("".* (\\([\\d]+\\))$"", base)) {; 			base = base.substring(0, base.lastIndexOf("" (""));; 		}; 		; 		// Check for the highest number we currently have; 		int lastInd = 0;; 		var pattern = base.isEmpty() ? Pattern.compile(""\\(([\\d]+)\\)"") : Pattern.compile(base + "" \\(([\\d]+)\\)"");; 		for (var existing : existingNames) {; 			var matcher = pattern.matcher(existing);; 			if (matcher.find()); 				lastInd = Math.max(lastInd, Integer.parseInt(matcher.group(1)));; 		}; if (!base.isEmpty()); base = base + "" "";; 		return base + ""("" + (lastInd + 1) + "")"";; 	}; ```; I think this method also deserves its own test, since it's behavior is quite well-defined - but in practice quite fiddly to implement.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/687#issuecomment-811675775
https://github.com/qupath/qupath/pull/687#issuecomment-811675775:1843,Testability,test,test,1843,"Looks great! Excellent to have more tests & the changes documented here. I'd like to merge this, there are just a few things:; * Please make sure the GPL copyright header is added to any new files (e.g. `TestSimpleImages.java`); * Could you add a test for `PathClassifierTools.setIntensityClassifications`? That fix looks a really important one - it would be good to have a few examples that test the behavior to guard against future regressions (including at least one that would fail with the old method).; * There is a merge conflict reported with `GeneralTools`; * I'm not sure about the change to `GeneralTools.generateDistinctName`. If the base is empty, it is returned unchanged - but it still *should* provide a distinct name (for example, this is used when adding images to a project and multiple empty names would be very confusing). The generated name could be `(1)` for example; it shouldn't include a leading space.; I haven't tested the following code, but it might do the job:; ```java; public static String generateDistinctName(String base, Collection<String> existingNames) {; 		if (!existingNames.contains(base)); 			return base;; 		; 		// Check if we already end with a number, and if so strip that; 		if (Pattern.matches("".* (\\([\\d]+\\))$"", base)) {; 			base = base.substring(0, base.lastIndexOf("" (""));; 		}; 		; 		// Check for the highest number we currently have; 		int lastInd = 0;; 		var pattern = base.isEmpty() ? Pattern.compile(""\\(([\\d]+)\\)"") : Pattern.compile(base + "" \\(([\\d]+)\\)"");; 		for (var existing : existingNames) {; 			var matcher = pattern.matcher(existing);; 			if (matcher.find()); 				lastInd = Math.max(lastInd, Integer.parseInt(matcher.group(1)));; 		}; if (!base.isEmpty()); base = base + "" "";; 		return base + ""("" + (lastInd + 1) + "")"";; 	}; ```; I think this method also deserves its own test, since it's behavior is quite well-defined - but in practice quite fiddly to implement.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/687#issuecomment-811675775
https://github.com/qupath/qupath/pull/687#issuecomment-811996638:15,Usability,feedback,feedback,15,"Thanks for the feedback! ; I've made the modifications to address all your bullet points and edited the PR description.; If there's anything more I can do, please do tell me!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/687#issuecomment-811996638
https://github.com/qupath/qupath/pull/688#issuecomment-811660490:617,Energy Efficiency,efficient,efficient,617,"Thanks, nice idea to provide a way to get the rendering settings!. Happy to merge the rendering change; could you resubmit the pull request targeting it at the [`dev-0.3`](https://github.com/qupath/qupath/tree/dev-0.3) branch please?. There is a small issue with the JPEG export: it can quietly fail and produce an image with all zeros if the user specifies to use >3 interleaved channels. I realise this takes some effort on the user's part, but I think we need to protect them from this by logging a warning and switching to a valid export option, since in some cases requesting interleaved output may be much more efficient (because of the way in which QuPath requests channels all at once during writing, and planes must be written sequentially). Here is a script to replicate it:. ```groovy; // Can use an 8-bit version of ImageJ's 'Neuron' sample image to test this (5 channels). import qupath.lib.images.writers.ome.*. def path = buildFilePath(PROJECT_BASE_DIR, ""my_export.ome.tif""); new OMEPyramidWriter.Builder(getCurrentServer()); .channelsInterleaved() // Fails, gives image of zeros - channelsPlanar() would work; .compression(OMEPyramidWriter.CompressionType.JPEG); .build(); .writePyramid(path); ```. PS. How should `::dip` be interpreted in the comments?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/688#issuecomment-811660490
https://github.com/qupath/qupath/pull/688#issuecomment-811660490:492,Testability,log,logging,492,"Thanks, nice idea to provide a way to get the rendering settings!. Happy to merge the rendering change; could you resubmit the pull request targeting it at the [`dev-0.3`](https://github.com/qupath/qupath/tree/dev-0.3) branch please?. There is a small issue with the JPEG export: it can quietly fail and produce an image with all zeros if the user specifies to use >3 interleaved channels. I realise this takes some effort on the user's part, but I think we need to protect them from this by logging a warning and switching to a valid export option, since in some cases requesting interleaved output may be much more efficient (because of the way in which QuPath requests channels all at once during writing, and planes must be written sequentially). Here is a script to replicate it:. ```groovy; // Can use an 8-bit version of ImageJ's 'Neuron' sample image to test this (5 channels). import qupath.lib.images.writers.ome.*. def path = buildFilePath(PROJECT_BASE_DIR, ""my_export.ome.tif""); new OMEPyramidWriter.Builder(getCurrentServer()); .channelsInterleaved() // Fails, gives image of zeros - channelsPlanar() would work; .compression(OMEPyramidWriter.CompressionType.JPEG); .build(); .writePyramid(path); ```. PS. How should `::dip` be interpreted in the comments?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/688#issuecomment-811660490
https://github.com/qupath/qupath/pull/688#issuecomment-811660490:862,Testability,test,test,862,"Thanks, nice idea to provide a way to get the rendering settings!. Happy to merge the rendering change; could you resubmit the pull request targeting it at the [`dev-0.3`](https://github.com/qupath/qupath/tree/dev-0.3) branch please?. There is a small issue with the JPEG export: it can quietly fail and produce an image with all zeros if the user specifies to use >3 interleaved channels. I realise this takes some effort on the user's part, but I think we need to protect them from this by logging a warning and switching to a valid export option, since in some cases requesting interleaved output may be much more efficient (because of the way in which QuPath requests channels all at once during writing, and planes must be written sequentially). Here is a script to replicate it:. ```groovy; // Can use an 8-bit version of ImageJ's 'Neuron' sample image to test this (5 channels). import qupath.lib.images.writers.ome.*. def path = buildFilePath(PROJECT_BASE_DIR, ""my_export.ome.tif""); new OMEPyramidWriter.Builder(getCurrentServer()); .channelsInterleaved() // Fails, gives image of zeros - channelsPlanar() would work; .compression(OMEPyramidWriter.CompressionType.JPEG); .build(); .writePyramid(path); ```. PS. How should `::dip` be interpreted in the comments?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/688#issuecomment-811660490
https://github.com/qupath/qupath/pull/688#issuecomment-811887705:66,Safety,sanity check,sanity check,66,JPEG export; I can confirm the 'small issue'.; It is fixed with a sanity check in build().; @petebankhead Do you think this is suitable?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/688#issuecomment-811887705
https://github.com/qupath/qupath/issues/693#issuecomment-812052355:289,Safety,avoid,avoid,289,"It sounds like the QuPath window only is being shared, but not the entire screen - and you need to share the entire screen for it to work. I use a Mac myself, and I find I always need to share the entire screen if I want to demo something in QuPath and have all the windows appear. I also avoid using full screen mode with QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/693#issuecomment-812052355
https://github.com/qupath/qupath/pull/699#issuecomment-815541015:38,Deployability,Integrat,Integrating,38,"This would be perfect for our needs!. Integrating it with menu items and other areas of QuPath is perhaps something to think about (is a built-in read-only mode something people want? -- perhaps you want to view a project without making any modifications?). Currently I can disable any (most?) buttons / menu items by using `QuPathGUI.lookupActionByText(...);`, so I personally don't need a more complex implementation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/699#issuecomment-815541015
https://github.com/qupath/qupath/pull/699#issuecomment-815541015:38,Integrability,Integrat,Integrating,38,"This would be perfect for our needs!. Integrating it with menu items and other areas of QuPath is perhaps something to think about (is a built-in read-only mode something people want? -- perhaps you want to view a project without making any modifications?). Currently I can disable any (most?) buttons / menu items by using `QuPathGUI.lookupActionByText(...);`, so I personally don't need a more complex implementation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/699#issuecomment-815541015
https://github.com/qupath/qupath/pull/699#issuecomment-815558343:168,Deployability,update,update,168,"Thanks, that sounds good! In that case I prefer the minimal implementation for now - it *might* require a compatibility-breaking change in the future (and therefore an update on your side), but I strongly suspect we will be the only people using it for a while.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/699#issuecomment-815558343
https://github.com/qupath/qupath/issues/701#issuecomment-816127793:45,Availability,avail,available,45,The fix for this has been merged and will be available in v0.3.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/701#issuecomment-816127793
https://github.com/qupath/qupath/issues/702#issuecomment-815907587:493,Performance,load,loading-pyramid-tiffs-properly,493,"Hi, we'd need example images to be able to investigate - however note that QuPath uses other libraries to read images, therefore the inability to open an image isn't something we can fix ourselves. See https://qupath.readthedocs.io/en/latest/docs/intro/formats.html for details; basically, if a file can't be open then usually it's a question of whether Bio-Formats or OpenSlide can handle it. I will close this issue since I see you have also raised it at https://forum.image.sc/t/qupath-not-loading-pyramid-tiffs-properly/51221; image.sc is better, since the Bio-Formats developers are active there and this *probably* isn't a QuPath bug.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/702#issuecomment-815907587
https://github.com/qupath/qupath/issues/704#issuecomment-816052660:69,Testability,test,test,69,"I'm not sure, because I don't have the same images and classifier to test exactly, but you might need a ; ```; selectAnnotations();; ```; before the last `runPlugin`. This won't appear in the automatically generated script if you selected annotations manually. The best place for questions like this is https://forum.image.sc/tag/qupath; GitHub issues is really intended only for bug reports that follow the template (which should appear when you try to create a new issue). More people are likely to see any questions on the forum and give feedback; if it turns out that it really is a bug then it can always be added here later and linked to the forum discussion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/704#issuecomment-816052660
https://github.com/qupath/qupath/issues/704#issuecomment-816052660:541,Usability,feedback,feedback,541,"I'm not sure, because I don't have the same images and classifier to test exactly, but you might need a ; ```; selectAnnotations();; ```; before the last `runPlugin`. This won't appear in the automatically generated script if you selected annotations manually. The best place for questions like this is https://forum.image.sc/tag/qupath; GitHub issues is really intended only for bug reports that follow the template (which should appear when you try to create a new issue). More people are likely to see any questions on the forum and give feedback; if it turns out that it really is a bug then it can always be added here later and linked to the forum discussion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/704#issuecomment-816052660
https://github.com/qupath/qupath/issues/704#issuecomment-816696147:317,Safety,detect,detections,317,"Hi Pete,. Thanks for your reply and sorry for posting in the wrong place! I was indeed wondering if it was a bug. Next time I'll post in the QuPath forum and only move to here if advised to do so!. You were right adding a . `selectAnnotations();`. did make this work. Unsure why though, as I thought superpixels were detections not annotations? I had tried with . `selectDetections();`. but was obviously unsuccessful. Thanks for your help and sorry again for posting in the wrong place!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/704#issuecomment-816696147
https://github.com/qupath/qupath/issues/704#issuecomment-816710295:156,Safety,detect,detections,156,"No problem, glad it's fixed! I'll close the issue. Yes, sometimes it's not entirely clear even to me whether some commands require selecting annotations or detections. I don't recall exactly what I was thinking when I wrote it, but the idea may have been that it operates on the detections *within* specific annotations... i.e. not indiscriminately merging detections regardless of the annotations they are inside. This makes some sense if you have multiple pieces of tissue as different annotations and don't want a single disconnected region to be generated that spans across them. The best way to find out what should be selected is to run the command without anything selected at all. The popup dialog should then only give you valid options (here, *Annotations* or *Entire image*).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/704#issuecomment-816710295
https://github.com/qupath/qupath/issues/704#issuecomment-816710295:279,Safety,detect,detections,279,"No problem, glad it's fixed! I'll close the issue. Yes, sometimes it's not entirely clear even to me whether some commands require selecting annotations or detections. I don't recall exactly what I was thinking when I wrote it, but the idea may have been that it operates on the detections *within* specific annotations... i.e. not indiscriminately merging detections regardless of the annotations they are inside. This makes some sense if you have multiple pieces of tissue as different annotations and don't want a single disconnected region to be generated that spans across them. The best way to find out what should be selected is to run the command without anything selected at all. The popup dialog should then only give you valid options (here, *Annotations* or *Entire image*).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/704#issuecomment-816710295
https://github.com/qupath/qupath/issues/704#issuecomment-816710295:357,Safety,detect,detections,357,"No problem, glad it's fixed! I'll close the issue. Yes, sometimes it's not entirely clear even to me whether some commands require selecting annotations or detections. I don't recall exactly what I was thinking when I wrote it, but the idea may have been that it operates on the detections *within* specific annotations... i.e. not indiscriminately merging detections regardless of the annotations they are inside. This makes some sense if you have multiple pieces of tissue as different annotations and don't want a single disconnected region to be generated that spans across them. The best way to find out what should be selected is to run the command without anything selected at all. The popup dialog should then only give you valid options (here, *Annotations* or *Entire image*).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/704#issuecomment-816710295
https://github.com/qupath/qupath/issues/704#issuecomment-816710295:84,Usability,clear,clear,84,"No problem, glad it's fixed! I'll close the issue. Yes, sometimes it's not entirely clear even to me whether some commands require selecting annotations or detections. I don't recall exactly what I was thinking when I wrote it, but the idea may have been that it operates on the detections *within* specific annotations... i.e. not indiscriminately merging detections regardless of the annotations they are inside. This makes some sense if you have multiple pieces of tissue as different annotations and don't want a single disconnected region to be generated that spans across them. The best way to find out what should be selected is to run the command without anything selected at all. The popup dialog should then only give you valid options (here, *Annotations* or *Entire image*).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/704#issuecomment-816710295
https://github.com/qupath/qupath/pull/714#issuecomment-912011086:54,Deployability,release,released,54,"Thanks, I'll close this now because v0.3.0 is finally released - and the [QuPath Align extension](https://github.com/qupath/qupath-extension-align) has now been separated out to its own repository. This should make it much easier to create forks and/or develop it at a faster pace, without needing to fit it in with QuPath's (currently rather slow) release cycle.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/714#issuecomment-912011086
https://github.com/qupath/qupath/pull/714#issuecomment-912011086:349,Deployability,release,release,349,"Thanks, I'll close this now because v0.3.0 is finally released - and the [QuPath Align extension](https://github.com/qupath/qupath-extension-align) has now been separated out to its own repository. This should make it much easier to create forks and/or develop it at a faster pace, without needing to fit it in with QuPath's (currently rather slow) release cycle.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/714#issuecomment-912011086
https://github.com/qupath/qupath/issues/717#issuecomment-828490219:124,Deployability,update,updated,124,"I don't recall any memoization-related changes in v0.3.0-SNAPSHOT, except for the fact it will be using a different JDK and updated version of Bio-Formats itself. Unless I'm missing a key part, the git blame suggests the memoization code was last changed 2 years ago. v0.2 made a change from v0.1.2 to no longer store the .bfmemo files in the same directory as the image, because this was causing problems for some users and confusion with new files being generated unexpectedly. Since v0.2, you can specify a memoization directory in the preferences, and also a memoization time in ms. If the time is <= 0, then no memoization files should be created. Otherwise, a file will be [generated either in the specified directory or in a temp directory](https://github.com/qupath/qupath/blob/dev-0.3/qupath-extension-bioformats/src/main/java/qupath/lib/images/servers/bioformats/BioFormatsImageServer.java#L1314). Could it be that you have a directory set in the preferences? If you don't, I would expect the memoization files to be temporary and automatically removed. In any case, the warning you see has been [logged by Bio-Formats](https://github.com/ome/bioformats/blob/25645389e076a7bd0011e04c4dd8982c0f0614ed/components/formats-bsd/src/loci/formats/Memoizer.java#L923). I don't know why it is unable to delete the file, but my guess is that it relates in some way to https://github.com/ome/bioformats/issues/3659 and the fact QuPath is now using Java 16. This is likely to cause various memoization problems involving kyro. I can think of two potential workarounds:; * Add `--illegal-access=warn` to the Java options for QuPath (based on [this](https://openjdk.java.net/jeps/396)); * Turn off memoization entirely, at least by default. I'm not sure which is preferable; neither feels great. I think you should be able to try the first option by editing the `.cfg` file - if you try, please let me know if it works",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/717#issuecomment-828490219
https://github.com/qupath/qupath/issues/717#issuecomment-828490219:1585,Security,access,access,1585,"I don't recall any memoization-related changes in v0.3.0-SNAPSHOT, except for the fact it will be using a different JDK and updated version of Bio-Formats itself. Unless I'm missing a key part, the git blame suggests the memoization code was last changed 2 years ago. v0.2 made a change from v0.1.2 to no longer store the .bfmemo files in the same directory as the image, because this was causing problems for some users and confusion with new files being generated unexpectedly. Since v0.2, you can specify a memoization directory in the preferences, and also a memoization time in ms. If the time is <= 0, then no memoization files should be created. Otherwise, a file will be [generated either in the specified directory or in a temp directory](https://github.com/qupath/qupath/blob/dev-0.3/qupath-extension-bioformats/src/main/java/qupath/lib/images/servers/bioformats/BioFormatsImageServer.java#L1314). Could it be that you have a directory set in the preferences? If you don't, I would expect the memoization files to be temporary and automatically removed. In any case, the warning you see has been [logged by Bio-Formats](https://github.com/ome/bioformats/blob/25645389e076a7bd0011e04c4dd8982c0f0614ed/components/formats-bsd/src/loci/formats/Memoizer.java#L923). I don't know why it is unable to delete the file, but my guess is that it relates in some way to https://github.com/ome/bioformats/issues/3659 and the fact QuPath is now using Java 16. This is likely to cause various memoization problems involving kyro. I can think of two potential workarounds:; * Add `--illegal-access=warn` to the Java options for QuPath (based on [this](https://openjdk.java.net/jeps/396)); * Turn off memoization entirely, at least by default. I'm not sure which is preferable; neither feels great. I think you should be able to try the first option by editing the `.cfg` file - if you try, please let me know if it works",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/717#issuecomment-828490219
https://github.com/qupath/qupath/issues/717#issuecomment-828490219:1107,Testability,log,logged,1107,"I don't recall any memoization-related changes in v0.3.0-SNAPSHOT, except for the fact it will be using a different JDK and updated version of Bio-Formats itself. Unless I'm missing a key part, the git blame suggests the memoization code was last changed 2 years ago. v0.2 made a change from v0.1.2 to no longer store the .bfmemo files in the same directory as the image, because this was causing problems for some users and confusion with new files being generated unexpectedly. Since v0.2, you can specify a memoization directory in the preferences, and also a memoization time in ms. If the time is <= 0, then no memoization files should be created. Otherwise, a file will be [generated either in the specified directory or in a temp directory](https://github.com/qupath/qupath/blob/dev-0.3/qupath-extension-bioformats/src/main/java/qupath/lib/images/servers/bioformats/BioFormatsImageServer.java#L1314). Could it be that you have a directory set in the preferences? If you don't, I would expect the memoization files to be temporary and automatically removed. In any case, the warning you see has been [logged by Bio-Formats](https://github.com/ome/bioformats/blob/25645389e076a7bd0011e04c4dd8982c0f0614ed/components/formats-bsd/src/loci/formats/Memoizer.java#L923). I don't know why it is unable to delete the file, but my guess is that it relates in some way to https://github.com/ome/bioformats/issues/3659 and the fact QuPath is now using Java 16. This is likely to cause various memoization problems involving kyro. I can think of two potential workarounds:; * Add `--illegal-access=warn` to the Java options for QuPath (based on [this](https://openjdk.java.net/jeps/396)); * Turn off memoization entirely, at least by default. I'm not sure which is preferable; neither feels great. I think you should be able to try the first option by editing the `.cfg` file - if you try, please let me know if it works",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/717#issuecomment-828490219
https://github.com/qupath/qupath/issues/717#issuecomment-829898314:33,Deployability,install,installation,33,"In the `QuPath.cfg` file of your installation, under `[JavaOptions]`, the exact line to add is; ```; java-options=--illegal-access=warn; ```; I've just tried this and it has resolved another problem that I expect to be related (the inability to add metadata to project entries in the current v0.3.0-SNAPSHOT).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/717#issuecomment-829898314
https://github.com/qupath/qupath/issues/717#issuecomment-829898314:124,Security,access,access,124,"In the `QuPath.cfg` file of your installation, under `[JavaOptions]`, the exact line to add is; ```; java-options=--illegal-access=warn; ```; I've just tried this and it has resolved another problem that I expect to be related (the inability to add metadata to project entries in the current v0.3.0-SNAPSHOT).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/717#issuecomment-829898314
https://github.com/qupath/qupath/pull/719#issuecomment-830006631:573,Testability,test,tests,573,"Hi @melvingelbard if I remember the Histogram code well enough, the bin width is fixed during creation and can't be changed. Therefore I don't think there should be two public methods to get an index, since the index won't be meaningful if the consumer specifies a bin width that doesn't match the actual histogram data. If there's a need to retain both methods non-publicly, can QuPath automatically choose the 'correct' one based upon knowing whether or not the bins have a fixed width?. Keeping methods at least package private would mean they could both be called from tests, if there's a need to ensure that they behave properly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/719#issuecomment-830006631
https://github.com/qupath/qupath/pull/719#issuecomment-830022022:195,Energy Efficiency,efficient,efficient,195,"Hi @petebankhead , you're absolutely right. I don't think there's any chance of having histograms with different bin widths with the current implementation. I'll change the visibility of the non-efficient method to package-private.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/719#issuecomment-830022022
https://github.com/qupath/qupath/pull/720#issuecomment-831461238:305,Deployability,release,released,305,"Looks good but unfortunately doesn't work on a Mac :( Or, rather, it seems to copy fine - but then immediately overwrite the clipboard contents with a screenshot of the current viewer (from the *Edit &rarr; Copy to clipboard... &rarr; Current viewer* shortcut). Switching to an event filter or to use key released didn't resolve it. I can think of three workarounds:. 1. Add a context menu, so that Mac users have an alternative option; 2. Disable copying to clipboard if the viewer isn't directly in focus; 3. Turn off the copying a current viewer screenshot to the clipboard shortcut altogether, so that it can't conflict with Ctrl/Cmd + C (I guess copying a screenshot isn't *that* common a task?). What do you think? I can't use Ctrl/Cmd + C in a measurement table of any kind, I guess because of the eagerness of QuPath to make screenshots.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/720#issuecomment-831461238
https://github.com/qupath/qupath/pull/725#issuecomment-834709601:345,Testability,log,logic,345,"As part of this, the recommended way to get an `ImageServer<BufferedImage>` is now via; ```; ImageServer.buildImage(URI, args); ```; This will apply any known transforms required by the specified args. The older `ImageServerProvider.buildServer()` method remains for backwards compatibility, and in any case where someone wants to skip the args logic.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/725#issuecomment-834709601
https://github.com/qupath/qupath/pull/725#issuecomment-836523049:595,Deployability,update,updates,595,"One more substantial change: JSON is now stored in the `.qpdata` file, rather than a server path. Storing the server path was sufficient in v0.1.2, since this was all that was used to determine which image should be loaded. However, increasingly `ImageServer` implementations require more information / arguments or even wrap other servers, which means necessitated a switch to use JSON. However, in v0.2 this JSON was only stored in the project, not the `.qpdata` file. The result was that such images could *only* be opened from the project; the `.qpdata` alone wasn't sufficient. This change updates `.qpdata` to store JSON in the place where previously only a path was used. This should allow more complex images to be re-opened successfully, even if separated from their project. However, since it's a data file change this requires careful testing...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/725#issuecomment-836523049
https://github.com/qupath/qupath/pull/725#issuecomment-836523049:321,Integrability,wrap,wrap,321,"One more substantial change: JSON is now stored in the `.qpdata` file, rather than a server path. Storing the server path was sufficient in v0.1.2, since this was all that was used to determine which image should be loaded. However, increasingly `ImageServer` implementations require more information / arguments or even wrap other servers, which means necessitated a switch to use JSON. However, in v0.2 this JSON was only stored in the project, not the `.qpdata` file. The result was that such images could *only* be opened from the project; the `.qpdata` alone wasn't sufficient. This change updates `.qpdata` to store JSON in the place where previously only a path was used. This should allow more complex images to be re-opened successfully, even if separated from their project. However, since it's a data file change this requires careful testing...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/725#issuecomment-836523049
https://github.com/qupath/qupath/pull/725#issuecomment-836523049:216,Performance,load,loaded,216,"One more substantial change: JSON is now stored in the `.qpdata` file, rather than a server path. Storing the server path was sufficient in v0.1.2, since this was all that was used to determine which image should be loaded. However, increasingly `ImageServer` implementations require more information / arguments or even wrap other servers, which means necessitated a switch to use JSON. However, in v0.2 this JSON was only stored in the project, not the `.qpdata` file. The result was that such images could *only* be opened from the project; the `.qpdata` alone wasn't sufficient. This change updates `.qpdata` to store JSON in the place where previously only a path was used. This should allow more complex images to be re-opened successfully, even if separated from their project. However, since it's a data file change this requires careful testing...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/725#issuecomment-836523049
https://github.com/qupath/qupath/pull/725#issuecomment-836523049:846,Testability,test,testing,846,"One more substantial change: JSON is now stored in the `.qpdata` file, rather than a server path. Storing the server path was sufficient in v0.1.2, since this was all that was used to determine which image should be loaded. However, increasingly `ImageServer` implementations require more information / arguments or even wrap other servers, which means necessitated a switch to use JSON. However, in v0.2 this JSON was only stored in the project, not the `.qpdata` file. The result was that such images could *only* be opened from the project; the `.qpdata` alone wasn't sufficient. This change updates `.qpdata` to store JSON in the place where previously only a path was used. This should allow more complex images to be re-opened successfully, even if separated from their project. However, since it's a data file change this requires careful testing...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/725#issuecomment-836523049
https://github.com/qupath/qupath/issues/745#issuecomment-856021988:414,Testability,log,log,414,"Please follow the [issue template to create a Bug Report](https://github.com/qupath/qupath/issues/new/choose) or post a question on [the forum at image.sc](http://image.sc/tag/qupath). `java.long.NullpointException` is not enough to know what the problem might be - we'd need more information about which version(s) of the software you are using, what previously did/didn't work, and the full information from the log.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/745#issuecomment-856021988
https://github.com/qupath/qupath/issues/752#issuecomment-866148194:12,Availability,error,errors,12,Can confirm errors on Win10 0.3.0 SNAPSHOT as well. Cell classes do not change upon reload.; ```; ERROR: QuPath exception: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.l,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194
https://github.com/qupath/qupath/issues/752#issuecomment-866148194:98,Availability,ERROR,ERROR,98,Can confirm errors on Win10 0.3.0 SNAPSHOT as well. Cell classes do not change upon reload.; ```; ERROR: QuPath exception: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.l,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194
https://github.com/qupath/qupath/issues/752#issuecomment-866148194:176,Availability,error,error,176,Can confirm errors on Win10 0.3.0 SNAPSHOT as well. Cell classes do not change upon reload.; ```; ERROR: QuPath exception: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.l,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194
https://github.com/qupath/qupath/issues/752#issuecomment-866148194:365,Availability,error,error,365,Can confirm errors on Win10 0.3.0 SNAPSHOT as well. Cell classes do not change upon reload.; ```; ERROR: QuPath exception: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.l,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194
https://github.com/qupath/qupath/issues/752#issuecomment-866148194:1155,Energy Efficiency,Adapt,Adapter,1155,\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.lambda$run$6(ObjectClassifierLoadCommand.java:202); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194
https://github.com/qupath/qupath/issues/752#issuecomment-866148194:1155,Integrability,Adapter,Adapter,1155,\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.lambda$run$6(ObjectClassifierLoadCommand.java:202); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194
https://github.com/qupath/qupath/issues/752#issuecomment-866148194:1155,Modifiability,Adapt,Adapter,1155,\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.lambda$run$6(ObjectClassifierLoadCommand.java:202); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194
https://github.com/qupath/qupath/issues/752#issuecomment-866148194:5151,Security,secur,security,5151,Manager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3856); at javafx.scene.Scene.processMouseEvent(Scene.java:1851); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2584); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194
https://github.com/qupath/qupath/issues/752#issuecomment-866148194:5160,Security,Access,AccessController,5160,Manager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3856); at javafx.scene.Scene.processMouseEvent(Scene.java:1851); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2584); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194
https://github.com/qupath/qupath/issues/752#issuecomment-866148194:189,Testability,Assert,Assertion,189,Can confirm errors on Win10 0.3.0 SNAPSHOT as well. Cell classes do not change upon reload.; ```; ERROR: QuPath exception: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.l,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194
https://github.com/qupath/qupath/issues/752#issuecomment-866148194:378,Testability,Assert,Assertion,378,Can confirm errors on Win10 0.3.0 SNAPSHOT as well. Cell classes do not change upon reload.; ```; ERROR: QuPath exception: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.l,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194
https://github.com/qupath/qupath/issues/758#issuecomment-869211413:888,Integrability,depend,depends,888,"> You should find that it prints null for getSelectedObject() selected object, even though clearly annotations are selected. . Correct. > I propose:; > ; > * If a primary selected object is specified, use that. Otherwise; > ; > * If the current primary selected object remains selected (i.e. it's still in the collection passed to the method), just keep it selected. Otherwise; > ; > * Select the first object in the collection passed to the select method to use as the primary; > ; > ; This makes sense, but are there use cases where it would not be appropriate?. > Another idea was to keep the object with the largest ROI, or at the lowest hierarchy level... but those all sounded more involved. Or at least to me, this does _not_ make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869211413
https://github.com/qupath/qupath/issues/758#issuecomment-869211413:91,Usability,clear,clearly,91,"> You should find that it prints null for getSelectedObject() selected object, even though clearly annotations are selected. . Correct. > I propose:; > ; > * If a primary selected object is specified, use that. Otherwise; > ; > * If the current primary selected object remains selected (i.e. it's still in the collection passed to the method), just keep it selected. Otherwise; > ; > * Select the first object in the collection passed to the select method to use as the primary; > ; > ; This makes sense, but are there use cases where it would not be appropriate?. > Another idea was to keep the object with the largest ROI, or at the lowest hierarchy level... but those all sounded more involved. Or at least to me, this does _not_ make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869211413
https://github.com/qupath/qupath/issues/758#issuecomment-869212957:120,Availability,error,error,120,"I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. ""No primary object is selected and you have attempted to select a single object when multiple objects are selected. Please add more logic to your statement to determine which object you want, if you only want one object."". That could probably be phrased better, but maybe it gets the idea across?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869212957
https://github.com/qupath/qupath/issues/758#issuecomment-869212957:286,Testability,log,logic,286,"I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. ""No primary object is selected and you have attempted to select a single object when multiple objects are selected. Please add more logic to your statement to determine which object you want, if you only want one object."". That could probably be phrased better, but maybe it gets the idea across?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869212957
https://github.com/qupath/qupath/issues/758#issuecomment-869217737:249,Availability,avail,available,249,"Thank you both for answering!. > This makes sense, but are there use cases where it would not be appropriate?. I can't think of any myself... however, if you run a command like; ```; selectAnnotations(); ```; then if there is more than 1 annotation available, the one that will become the 'primary' selected annotation is (from the user's perspectively) essentially random. Randomness doesn't feel good in this scenario, but neither does seemingly not having a selected object when you can plainly see that you definitely have selected object**s** (as is currently the case). > Or at least to me, this does not make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context. Good! Inasmuch as I don't like the idea much either. Its only benefit really is that it makes the choice non-random. I think sometimes it would 'feel' like the right choice, e.g. imagine if you have one large tissue annotation and two little annotations inside. I think making the large one the primary selection would feel somehow intuitive. But if, on the other hand, you have three annotations of similar size and importance I agree it doesn't make much sense. And it's probably better not to introduce too much predictable-but-dubious behavior, lest *someone* make it a key part of their workflow... So yeah, I think the size-based idea can be discarded. > I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. Hmmm, that sounds like it could work for code internal to QuPath, as long as it always checks both for `getSelectedObject()` and `getSelectedObjects()`. Although if calling either method in a script, the ambiguity and potential for confusion remains. Although then the question resurfaces, is it better to just leave things as they are?. In any case, the proposed change is implemented at https:/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869217737
https://github.com/qupath/qupath/issues/758#issuecomment-869217737:1571,Availability,error,error,1571,"is makes sense, but are there use cases where it would not be appropriate?. I can't think of any myself... however, if you run a command like; ```; selectAnnotations(); ```; then if there is more than 1 annotation available, the one that will become the 'primary' selected annotation is (from the user's perspectively) essentially random. Randomness doesn't feel good in this scenario, but neither does seemingly not having a selected object when you can plainly see that you definitely have selected object**s** (as is currently the case). > Or at least to me, this does not make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context. Good! Inasmuch as I don't like the idea much either. Its only benefit really is that it makes the choice non-random. I think sometimes it would 'feel' like the right choice, e.g. imagine if you have one large tissue annotation and two little annotations inside. I think making the large one the primary selection would feel somehow intuitive. But if, on the other hand, you have three annotations of similar size and importance I agree it doesn't make much sense. And it's probably better not to introduce too much predictable-but-dubious behavior, lest *someone* make it a key part of their workflow... So yeah, I think the size-based idea can be discarded. > I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. Hmmm, that sounds like it could work for code internal to QuPath, as long as it always checks both for `getSelectedObject()` and `getSelectedObjects()`. Although if calling either method in a script, the ambiguity and potential for confusion remains. Although then the question resurfaces, is it better to just leave things as they are?. In any case, the proposed change is implemented at https://github.com/qupath/qupath/pull/759",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869217737
https://github.com/qupath/qupath/issues/758#issuecomment-869217737:766,Integrability,depend,depends,766,"Thank you both for answering!. > This makes sense, but are there use cases where it would not be appropriate?. I can't think of any myself... however, if you run a command like; ```; selectAnnotations(); ```; then if there is more than 1 annotation available, the one that will become the 'primary' selected annotation is (from the user's perspectively) essentially random. Randomness doesn't feel good in this scenario, but neither does seemingly not having a selected object when you can plainly see that you definitely have selected object**s** (as is currently the case). > Or at least to me, this does not make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context. Good! Inasmuch as I don't like the idea much either. Its only benefit really is that it makes the choice non-random. I think sometimes it would 'feel' like the right choice, e.g. imagine if you have one large tissue annotation and two little annotations inside. I think making the large one the primary selection would feel somehow intuitive. But if, on the other hand, you have three annotations of similar size and importance I agree it doesn't make much sense. And it's probably better not to introduce too much predictable-but-dubious behavior, lest *someone* make it a key part of their workflow... So yeah, I think the size-based idea can be discarded. > I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. Hmmm, that sounds like it could work for code internal to QuPath, as long as it always checks both for `getSelectedObject()` and `getSelectedObjects()`. Although if calling either method in a script, the ambiguity and potential for confusion remains. Although then the question resurfaces, is it better to just leave things as they are?. In any case, the proposed change is implemented at https:/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869217737
https://github.com/qupath/qupath/issues/758#issuecomment-869217737:1305,Safety,predict,predictable-but-dubious,1305,"is makes sense, but are there use cases where it would not be appropriate?. I can't think of any myself... however, if you run a command like; ```; selectAnnotations(); ```; then if there is more than 1 annotation available, the one that will become the 'primary' selected annotation is (from the user's perspectively) essentially random. Randomness doesn't feel good in this scenario, but neither does seemingly not having a selected object when you can plainly see that you definitely have selected object**s** (as is currently the case). > Or at least to me, this does not make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context. Good! Inasmuch as I don't like the idea much either. Its only benefit really is that it makes the choice non-random. I think sometimes it would 'feel' like the right choice, e.g. imagine if you have one large tissue annotation and two little annotations inside. I think making the large one the primary selection would feel somehow intuitive. But if, on the other hand, you have three annotations of similar size and importance I agree it doesn't make much sense. And it's probably better not to introduce too much predictable-but-dubious behavior, lest *someone* make it a key part of their workflow... So yeah, I think the size-based idea can be discarded. > I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. Hmmm, that sounds like it could work for code internal to QuPath, as long as it always checks both for `getSelectedObject()` and `getSelectedObjects()`. Although if calling either method in a script, the ambiguity and potential for confusion remains. Although then the question resurfaces, is it better to just leave things as they are?. In any case, the proposed change is implemented at https://github.com/qupath/qupath/pull/759",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869217737
https://github.com/qupath/qupath/issues/758#issuecomment-869217737:1122,Usability,intuit,intuitive,1122,"is makes sense, but are there use cases where it would not be appropriate?. I can't think of any myself... however, if you run a command like; ```; selectAnnotations(); ```; then if there is more than 1 annotation available, the one that will become the 'primary' selected annotation is (from the user's perspectively) essentially random. Randomness doesn't feel good in this scenario, but neither does seemingly not having a selected object when you can plainly see that you definitely have selected object**s** (as is currently the case). > Or at least to me, this does not make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context. Good! Inasmuch as I don't like the idea much either. Its only benefit really is that it makes the choice non-random. I think sometimes it would 'feel' like the right choice, e.g. imagine if you have one large tissue annotation and two little annotations inside. I think making the large one the primary selection would feel somehow intuitive. But if, on the other hand, you have three annotations of similar size and importance I agree it doesn't make much sense. And it's probably better not to introduce too much predictable-but-dubious behavior, lest *someone* make it a key part of their workflow... So yeah, I think the size-based idea can be discarded. > I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. Hmmm, that sounds like it could work for code internal to QuPath, as long as it always checks both for `getSelectedObject()` and `getSelectedObjects()`. Although if calling either method in a script, the ambiguity and potential for confusion remains. Although then the question resurfaces, is it better to just leave things as they are?. In any case, the proposed change is implemented at https://github.com/qupath/qupath/pull/759",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869217737
https://github.com/qupath/qupath/issues/758#issuecomment-869219402:309,Energy Efficiency,reduce,reduce,309,"Thinking a bit more, a compromise option could be:; * keep the primary selected object if it's still selected in the new group, and; * set the primary selected object if there is only one object in the selection group, but not if there is more than one. Might be safer than selecting an object at random, and reduce the instances where the primary selected object is null slightly. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219402
https://github.com/qupath/qupath/issues/758#issuecomment-869219402:263,Safety,safe,safer,263,"Thinking a bit more, a compromise option could be:; * keep the primary selected object if it's still selected in the new group, and; * set the primary selected object if there is only one object in the selection group, but not if there is more than one. Might be safer than selecting an object at random, and reduce the instances where the primary selected object is null slightly. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219402
https://github.com/qupath/qupath/issues/758#issuecomment-869219746:275,Availability,error,error,275,"> Although if calling either method in a script, the ambiguity and potential for confusion remains.; I had mostly been thinking about scripting. If there is no primary selected object, and getSelectedObject() is used, the script would simply break and provide an informative error message. The user is trying to do something (get a particular object) while providing insufficient information (which object? multiple are selected). I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. > keep the primary selected object if it's still selected in the new group, and; > set the primary selected object if there is only one object in the selection group, but not if there is more than one. I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219746
https://github.com/qupath/qupath/issues/758#issuecomment-869219746:1133,Availability,error,error,1133,"> Although if calling either method in a script, the ambiguity and potential for confusion remains.; I had mostly been thinking about scripting. If there is no primary selected object, and getSelectedObject() is used, the script would simply break and provide an informative error message. The user is trying to do something (get a particular object) while providing insufficient information (which object? multiple are selected). I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. > keep the primary selected object if it's still selected in the new group, and; > set the primary selected object if there is only one object in the selection group, but not if there is more than one. I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219746
https://github.com/qupath/qupath/issues/758#issuecomment-869219746:281,Integrability,message,message,281,"> Although if calling either method in a script, the ambiguity and potential for confusion remains.; I had mostly been thinking about scripting. If there is no primary selected object, and getSelectedObject() is used, the script would simply break and provide an informative error message. The user is trying to do something (get a particular object) while providing insufficient information (which object? multiple are selected). I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. > keep the primary selected object if it's still selected in the new group, and; > set the primary selected object if there is only one object in the selection group, but not if there is more than one. I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219746
https://github.com/qupath/qupath/issues/758#issuecomment-869219746:1139,Integrability,message,message,1139,"> Although if calling either method in a script, the ambiguity and potential for confusion remains.; I had mostly been thinking about scripting. If there is no primary selected object, and getSelectedObject() is used, the script would simply break and provide an informative error message. The user is trying to do something (get a particular object) while providing insufficient information (which object? multiple are selected). I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. > keep the primary selected object if it's still selected in the new group, and; > set the primary selected object if there is only one object in the selection group, but not if there is more than one. I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219746
https://github.com/qupath/qupath/issues/758#issuecomment-869219746:571,Testability,log,logic,571,"> Although if calling either method in a script, the ambiguity and potential for confusion remains.; I had mostly been thinking about scripting. If there is no primary selected object, and getSelectedObject() is used, the script would simply break and provide an informative error message. The user is trying to do something (get a particular object) while providing insufficient information (which object? multiple are selected). I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. > keep the primary selected object if it's still selected in the new group, and; > set the primary selected object if there is only one object in the selection group, but not if there is more than one. I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219746
https://github.com/qupath/qupath/issues/758#issuecomment-869219746:235,Usability,simpl,simply,235,"> Although if calling either method in a script, the ambiguity and potential for confusion remains.; I had mostly been thinking about scripting. If there is no primary selected object, and getSelectedObject() is used, the script would simply break and provide an informative error message. The user is trying to do something (get a particular object) while providing insufficient information (which object? multiple are selected). I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. > keep the primary selected object if it's still selected in the new group, and; > set the primary selected object if there is only one object in the selection group, but not if there is more than one. I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219746
https://github.com/qupath/qupath/issues/758#issuecomment-869227006:1077,Availability,avail,available,1077,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006
https://github.com/qupath/qupath/issues/758#issuecomment-869227006:1354,Availability,error,error,1354,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006
https://github.com/qupath/qupath/issues/758#issuecomment-869227006:1576,Availability,error,errors,1576,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006
https://github.com/qupath/qupath/issues/758#issuecomment-869227006:1360,Integrability,message,message,1360,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006
https://github.com/qupath/qupath/issues/758#issuecomment-869227006:211,Safety,risk,risks,211,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006
https://github.com/qupath/qupath/issues/758#issuecomment-869227006:301,Safety,predict,predictable,301,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006
https://github.com/qupath/qupath/issues/758#issuecomment-869227006:1626,Safety,avoid,avoid,1626,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006
https://github.com/qupath/qupath/issues/758#issuecomment-869227006:142,Testability,log,logic,142,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006
https://github.com/qupath/qupath/issues/758#issuecomment-869227006:765,Usability,clear,clear,765,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006
https://github.com/qupath/qupath/issues/758#issuecomment-871358441:194,Testability,log,logging,194,"Closing this in favor of https://github.com/qupath/qupath/pull/768; Discussion convinced me that the change might cause more confusion than it resolves, so for now leaving it up to a very minor logging change (and a bigger logging change that makes setting the log level easier). Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-871358441
https://github.com/qupath/qupath/issues/758#issuecomment-871358441:223,Testability,log,logging,223,"Closing this in favor of https://github.com/qupath/qupath/pull/768; Discussion convinced me that the change might cause more confusion than it resolves, so for now leaving it up to a very minor logging change (and a bigger logging change that makes setting the log level easier). Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-871358441
https://github.com/qupath/qupath/issues/758#issuecomment-871358441:261,Testability,log,log,261,"Closing this in favor of https://github.com/qupath/qupath/pull/768; Discussion convinced me that the change might cause more confusion than it resolves, so for now leaving it up to a very minor logging change (and a bigger logging change that makes setting the log level easier). Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-871358441
https://github.com/qupath/qupath/pull/759#issuecomment-871359044:194,Testability,log,logging,194,"Closing this in favor of https://github.com/qupath/qupath/pull/768; Discussion convinced me that the change might cause more confusion than it resolves, so for now leaving it up to a very minor logging change (and a bigger logging change that makes setting the log level easier).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/759#issuecomment-871359044
https://github.com/qupath/qupath/pull/759#issuecomment-871359044:223,Testability,log,logging,223,"Closing this in favor of https://github.com/qupath/qupath/pull/768; Discussion convinced me that the change might cause more confusion than it resolves, so for now leaving it up to a very minor logging change (and a bigger logging change that makes setting the log level easier).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/759#issuecomment-871359044
https://github.com/qupath/qupath/pull/759#issuecomment-871359044:261,Testability,log,log,261,"Closing this in favor of https://github.com/qupath/qupath/pull/768; Discussion convinced me that the change might cause more confusion than it resolves, so for now leaving it up to a very minor logging change (and a bigger logging change that makes setting the log level easier).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/759#issuecomment-871359044
https://github.com/qupath/qupath/issues/776#issuecomment-872470946:15,Testability,log,log,15,Nothing in the log I guess. ; Applies to all Density Types and Interpolation?; Can objects still be created even if the Overlay doesn't show anything?. Any users that suffered from the problem that also have GitHub accounts and could respond if they find/test something?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872470946
https://github.com/qupath/qupath/issues/776#issuecomment-872470946:255,Testability,test,test,255,Nothing in the log I guess. ; Applies to all Density Types and Interpolation?; Can objects still be created even if the Overlay doesn't show anything?. Any users that suffered from the problem that also have GitHub accounts and could respond if they find/test something?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872470946
https://github.com/qupath/qupath/issues/776#issuecomment-872890572:912,Availability,error,error,912,"Ok, I've managed to reproduce this issue on one computer (out of 3 tested). The image used was `OS-1.ndpi`. * OS: MacOs (Mojave); * CPU: 2.3 GHz Intel Core i9; * 32 Gb RAM; * Radeon Pro 560X 4 Gb. Same problem as mentioned above. No overlay is shown, except when `density radius < 10`, where the overlay very slightly appears (see screenshot below). Overlay opacity slider is obviously on max. ; <img width=""885"" alt=""Screenshot 2021-07-02 at 10 58 59"" src=""https://user-images.githubusercontent.com/47279429/124259772-cb3dd780-db26-11eb-861c-e8bcffb7a0e3.png"">; ________; ### If the value is < 10; I can click on `Find hotspot` and see this temporary visualisation (see screenshot below). <img width=""885"" alt=""Screenshot 2021-07-02 at 11 04 18"" src=""https://user-images.githubusercontent.com/47279429/124259867-f0324a80-db26-11eb-88b3-7f3e352a22e7.png"">. But then, when clicking `Apply`, it gives me this long error message (open_cv):; ```; ERROR: QuPath exception: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; at qupath.opencv.tools.OpenCVTools.findRegionalMaxima(OpenCVTools.java:2276); at qupath.lib.analysis.heatmaps.DensityMaps.findHotspots(DensityMaps.java:613); at qupath.process.gui.commands.density.DensityMapUI$HotspotFinder.fire(DensityMapUI.java:621); at qupath.process.gui.commands.density.DensityMapUI.lambda$createDensityMapAction$2(DensityMapUI.java:324); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Compos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572
https://github.com/qupath/qupath/issues/776#issuecomment-872890572:943,Availability,ERROR,ERROR,943,"Ok, I've managed to reproduce this issue on one computer (out of 3 tested). The image used was `OS-1.ndpi`. * OS: MacOs (Mojave); * CPU: 2.3 GHz Intel Core i9; * 32 Gb RAM; * Radeon Pro 560X 4 Gb. Same problem as mentioned above. No overlay is shown, except when `density radius < 10`, where the overlay very slightly appears (see screenshot below). Overlay opacity slider is obviously on max. ; <img width=""885"" alt=""Screenshot 2021-07-02 at 10 58 59"" src=""https://user-images.githubusercontent.com/47279429/124259772-cb3dd780-db26-11eb-861c-e8bcffb7a0e3.png"">; ________; ### If the value is < 10; I can click on `Find hotspot` and see this temporary visualisation (see screenshot below). <img width=""885"" alt=""Screenshot 2021-07-02 at 11 04 18"" src=""https://user-images.githubusercontent.com/47279429/124259867-f0324a80-db26-11eb-88b3-7f3e352a22e7.png"">. But then, when clicking `Apply`, it gives me this long error message (open_cv):; ```; ERROR: QuPath exception: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; at qupath.opencv.tools.OpenCVTools.findRegionalMaxima(OpenCVTools.java:2276); at qupath.lib.analysis.heatmaps.DensityMaps.findHotspots(DensityMaps.java:613); at qupath.process.gui.commands.density.DensityMapUI$HotspotFinder.fire(DensityMapUI.java:621); at qupath.process.gui.commands.density.DensityMapUI.lambda$createDensityMapAction$2(DensityMapUI.java:324); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Compos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572
https://github.com/qupath/qupath/issues/776#issuecomment-872890572:5562,Availability,error,error,5562,"atchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3856); at javafx.scene.Scene.processMouseEvent(Scene.java:1851); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2584); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.mac.MacView.notifyMouse(MacView.java:127); ```; The `Threshold` command works fine and seems to divide the annotation according to the slightly visible overlay, and so does the `Export map` command (so all good).; _________; ### If the value is >= 10; Clicking on `Find hotspot`, `Threshold` and `Export map` directly gives me the long open_cv error message copied above. It might be important to note that when the density radius value is switched back and forth between > and < 10, the density map overlay stops updating sometimes (not sure how to exactly reproduce this though).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572
https://github.com/qupath/qupath/issues/776#issuecomment-872890572:918,Integrability,message,message,918,"Ok, I've managed to reproduce this issue on one computer (out of 3 tested). The image used was `OS-1.ndpi`. * OS: MacOs (Mojave); * CPU: 2.3 GHz Intel Core i9; * 32 Gb RAM; * Radeon Pro 560X 4 Gb. Same problem as mentioned above. No overlay is shown, except when `density radius < 10`, where the overlay very slightly appears (see screenshot below). Overlay opacity slider is obviously on max. ; <img width=""885"" alt=""Screenshot 2021-07-02 at 10 58 59"" src=""https://user-images.githubusercontent.com/47279429/124259772-cb3dd780-db26-11eb-861c-e8bcffb7a0e3.png"">; ________; ### If the value is < 10; I can click on `Find hotspot` and see this temporary visualisation (see screenshot below). <img width=""885"" alt=""Screenshot 2021-07-02 at 11 04 18"" src=""https://user-images.githubusercontent.com/47279429/124259867-f0324a80-db26-11eb-88b3-7f3e352a22e7.png"">. But then, when clicking `Apply`, it gives me this long error message (open_cv):; ```; ERROR: QuPath exception: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; at qupath.opencv.tools.OpenCVTools.findRegionalMaxima(OpenCVTools.java:2276); at qupath.lib.analysis.heatmaps.DensityMaps.findHotspots(DensityMaps.java:613); at qupath.process.gui.commands.density.DensityMapUI$HotspotFinder.fire(DensityMapUI.java:621); at qupath.process.gui.commands.density.DensityMapUI.lambda$createDensityMapAction$2(DensityMapUI.java:324); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Compos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572
https://github.com/qupath/qupath/issues/776#issuecomment-872890572:5568,Integrability,message,message,5568,"atchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3856); at javafx.scene.Scene.processMouseEvent(Scene.java:1851); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2584); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.mac.MacView.notifyMouse(MacView.java:127); ```; The `Threshold` command works fine and seems to divide the annotation according to the slightly visible overlay, and so does the `Export map` command (so all good).; _________; ### If the value is >= 10; Clicking on `Find hotspot`, `Threshold` and `Export map` directly gives me the long open_cv error message copied above. It might be important to note that when the density radius value is switched back and forth between > and < 10, the density map overlay stops updating sometimes (not sure how to exactly reproduce this though).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572
https://github.com/qupath/qupath/issues/776#issuecomment-872890572:4729,Security,secur,security,4729,"nImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3856); at javafx.scene.Scene.processMouseEvent(Scene.java:1851); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2584); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.mac.MacView.notifyMouse(MacView.java:127); ```; The `Threshold` command works fine and seems to divide the annotation according to the slightly visible overlay, and so does the `Export map` command (so all good).; _________; ### If the value is >= 10; Clicking on `Find hotspot`, `Threshold` and `Export map` directly gives me the long open_cv error message copied above. It might be important to note that when the density radius value is switched back and forth between > and < 10, the density map overlay stops up",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572
https://github.com/qupath/qupath/issues/776#issuecomment-872890572:4738,Security,Access,AccessController,4738,"4); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3856); at javafx.scene.Scene.processMouseEvent(Scene.java:1851); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2584); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.mac.MacView.notifyMouse(MacView.java:127); ```; The `Threshold` command works fine and seems to divide the annotation according to the slightly visible overlay, and so does the `Export map` command (so all good).; _________; ### If the value is >= 10; Clicking on `Find hotspot`, `Threshold` and `Export map` directly gives me the long open_cv error message copied above. It might be important to note that when the density radius value is switched back and forth between > and < 10, the density map overlay stops updating someti",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572
https://github.com/qupath/qupath/issues/776#issuecomment-872890572:67,Testability,test,tested,67,"Ok, I've managed to reproduce this issue on one computer (out of 3 tested). The image used was `OS-1.ndpi`. * OS: MacOs (Mojave); * CPU: 2.3 GHz Intel Core i9; * 32 Gb RAM; * Radeon Pro 560X 4 Gb. Same problem as mentioned above. No overlay is shown, except when `density radius < 10`, where the overlay very slightly appears (see screenshot below). Overlay opacity slider is obviously on max. ; <img width=""885"" alt=""Screenshot 2021-07-02 at 10 58 59"" src=""https://user-images.githubusercontent.com/47279429/124259772-cb3dd780-db26-11eb-861c-e8bcffb7a0e3.png"">; ________; ### If the value is < 10; I can click on `Find hotspot` and see this temporary visualisation (see screenshot below). <img width=""885"" alt=""Screenshot 2021-07-02 at 11 04 18"" src=""https://user-images.githubusercontent.com/47279429/124259867-f0324a80-db26-11eb-88b3-7f3e352a22e7.png"">. But then, when clicking `Apply`, it gives me this long error message (open_cv):; ```; ERROR: QuPath exception: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; at qupath.opencv.tools.OpenCVTools.findRegionalMaxima(OpenCVTools.java:2276); at qupath.lib.analysis.heatmaps.DensityMaps.findHotspots(DensityMaps.java:613); at qupath.process.gui.commands.density.DensityMapUI$HotspotFinder.fire(DensityMapUI.java:621); at qupath.process.gui.commands.density.DensityMapUI.lambda$createDensityMapAction$2(DensityMapUI.java:324); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Compos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572
https://github.com/qupath/qupath/issues/776#issuecomment-873087104:561,Availability,error,errors,561,"Ah, thanks @melvingelbard - so it *is* OpenCV-related. That's really good to know, seems to confirm my suspicions although I have no clue why. It also seems to be specifically the `org.bytedeco.opencv.global.opencv_imgproc` class - assuming object classifiers are working, then `opencv_core` and `opencv_ml` must be ok. If you still have access to the computer, you could check if pixel classifiers work - since they use `opencv_imgproc` as well. If they do, perhaps the problem is more restricted. If launched from a command line, there might be more detailed errors emitted at some point. On Windows, that can be done simply by using the console exe launcher. On a Mac, it means running something like this from a terminal `/Applications/QuPath.app/Contents/MacOS/QuPath` (exact path might need changed).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-873087104
https://github.com/qupath/qupath/issues/776#issuecomment-873087104:338,Security,access,access,338,"Ah, thanks @melvingelbard - so it *is* OpenCV-related. That's really good to know, seems to confirm my suspicions although I have no clue why. It also seems to be specifically the `org.bytedeco.opencv.global.opencv_imgproc` class - assuming object classifiers are working, then `opencv_core` and `opencv_ml` must be ok. If you still have access to the computer, you could check if pixel classifiers work - since they use `opencv_imgproc` as well. If they do, perhaps the problem is more restricted. If launched from a command line, there might be more detailed errors emitted at some point. On Windows, that can be done simply by using the console exe launcher. On a Mac, it means running something like this from a terminal `/Applications/QuPath.app/Contents/MacOS/QuPath` (exact path might need changed).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-873087104
https://github.com/qupath/qupath/issues/776#issuecomment-873087104:620,Usability,simpl,simply,620,"Ah, thanks @melvingelbard - so it *is* OpenCV-related. That's really good to know, seems to confirm my suspicions although I have no clue why. It also seems to be specifically the `org.bytedeco.opencv.global.opencv_imgproc` class - assuming object classifiers are working, then `opencv_core` and `opencv_ml` must be ok. If you still have access to the computer, you could check if pixel classifiers work - since they use `opencv_imgproc` as well. If they do, perhaps the problem is more restricted. If launched from a command line, there might be more detailed errors emitted at some point. On Windows, that can be done simply by using the console exe launcher. On a Mac, it means running something like this from a terminal `/Applications/QuPath.app/Contents/MacOS/QuPath` (exact path might need changed).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-873087104
https://github.com/qupath/qupath/issues/776#issuecomment-874035644:92,Availability,error,error,92,"Yes, the output from my previous post was already taken from the command line, no more info/error was available.; Unfortunately, today I can't seem to be able to reproduce this issue on MacOS, it just miraculously works as expected (??), and so do the pixel classifiers. Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/ja",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644
https://github.com/qupath/qupath/issues/776#issuecomment-874035644:102,Availability,avail,available,102,"Yes, the output from my previous post was already taken from the command line, no more info/error was available.; Unfortunately, today I can't seem to be able to reproduce this issue on MacOS, it just miraculously works as expected (??), and so do the pixel classifiers. Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/ja",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644
https://github.com/qupath/qupath/issues/776#issuecomment-874035644:699,Availability,ERROR,ERROR,699,"Yes, the output from my previous post was already taken from the command line, no more info/error was available.; Unfortunately, today I can't seem to be able to reproduce this issue on MacOS, it just miraculously works as expected (??), and so do the pixel classifiers. Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/ja",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644
https://github.com/qupath/qupath/issues/776#issuecomment-874035644:327,Deployability,install,install,327,"Yes, the output from my previous post was already taken from the command line, no more info/error was available.; Unfortunately, today I can't seem to be able to reproduce this issue on MacOS, it just miraculously works as expected (??), and so do the pixel classifiers. Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/ja",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644
https://github.com/qupath/qupath/issues/776#issuecomment-874035644:1006,Deployability,update,updateDisplayRanges,1006,"previous post was already taken from the command line, no more info/error was available.; Unfortunately, today I can't seem to be able to reproduce this issue on MacOS, it just miraculously works as expected (??), and so do the pixel classifiers. Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/java.util.concurrent.Futur",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644
https://github.com/qupath/qupath/issues/776#issuecomment-874035644:1706,Deployability,update,updateDensityServer,1706," Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/java.util.concurrent.FutureTask.run(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); 	at java.base/java.lang.Thread.run(Unknown Source); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644
https://github.com/qupath/qupath/issues/776#issuecomment-874035644:1852,Deployability,update,updateDensityServer,1852," Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/java.util.concurrent.FutureTask.run(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); 	at java.base/java.lang.Thread.run(Unknown Source); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644
https://github.com/qupath/qupath/issues/776#issuecomment-874035644:1926,Performance,concurren,concurrent,1926," Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/java.util.concurrent.FutureTask.run(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); 	at java.base/java.lang.Thread.run(Unknown Source); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644
https://github.com/qupath/qupath/issues/776#issuecomment-874035644:2009,Performance,concurren,concurrent,2009," Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/java.util.concurrent.FutureTask.run(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); 	at java.base/java.lang.Thread.run(Unknown Source); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644
https://github.com/qupath/qupath/issues/776#issuecomment-874035644:2076,Performance,concurren,concurrent,2076," Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/java.util.concurrent.FutureTask.run(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); 	at java.base/java.lang.Thread.run(Unknown Source); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644
https://github.com/qupath/qupath/issues/776#issuecomment-874035644:2157,Performance,concurren,concurrent,2157," Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/java.util.concurrent.FutureTask.run(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); 	at java.base/java.lang.Thread.run(Unknown Source); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644
https://github.com/qupath/qupath/issues/776#issuecomment-874056600:22,Availability,error,error,22,"Hmmm, for the min/max error do you see similar behavior to the previous problem *after* the exception has been thrown once? It sounds like a bug that can be fixed on the QuPath side with better thread handling. If QuPath recovers and can handle later radius adjustments then I think it's unconnected. The OpenCV thing is very weird indeed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874056600
https://github.com/qupath/qupath/issues/776#issuecomment-874056600:221,Availability,recover,recovers,221,"Hmmm, for the min/max error do you see similar behavior to the previous problem *after* the exception has been thrown once? It sounds like a bug that can be fixed on the QuPath side with better thread handling. If QuPath recovers and can handle later radius adjustments then I think it's unconnected. The OpenCV thing is very weird indeed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874056600
https://github.com/qupath/qupath/issues/776#issuecomment-874056600:221,Safety,recover,recovers,221,"Hmmm, for the min/max error do you see similar behavior to the previous problem *after* the exception has been thrown once? It sounds like a bug that can be fixed on the QuPath side with better thread handling. If QuPath recovers and can handle later radius adjustments then I think it's unconnected. The OpenCV thing is very weird indeed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874056600
https://github.com/qupath/qupath/issues/776#issuecomment-874159943:208,Security,access,access,208,"No, it does look like a separate threading issue in my opinion. I just thought of mentioning it in case someone else experienced the same. I can only see this threading bug happen with the MacBook Pro I have access to, which is the same computer having the original OpenCV issue..",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874159943
https://github.com/qupath/qupath/issues/777#issuecomment-876724096:71,Deployability,release,releases,71,"Oh dear... could you try [v0.3.0-rc1](https://github.com/qupath/qupath/releases) to see if it has been fixed? There have been some fixes in that part of the code that may help, but I'm not sure. If that doesn't resolve things, could you please post the script that's failing? There are several on the linked page and so I'm not sure which exactly is going wrong and where.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-876724096
https://github.com/qupath/qupath/issues/777#issuecomment-878087749:127,Availability,error,error,127,"I'll close this issue because, as far as I can tell, it has already been fixed in v0.3.0-rc1 and in the main branch. I see the error; ```; IllegalArgumentException at line 17: Downsample must be > 0, but this one is 0.0; ```; if I run the following script; ```groovy; import qupath.lib.images.servers.LabeledImageServer. def imageData = getCurrentImageData(). // Define output path (relative to project); def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = buildFilePath(PROJECT_BASE_DIR, 'export', name); mkdirs(pathOutput). // Define output resolution; double requestedPixelSize = 0. // Convert to downsample; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). // Create an ImageServer where the pixels are derived from annotations; def labelServer = new LabeledImageServer.Builder(imageData); .backgroundLabel(0, ColorTools.WHITE) // Specify background label (usually 0 or 255); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .addLabel('Tumor', 1) // Choose output labels (the order matters!); .addLabel('Stroma', 2); .addLabel('Other', 3); .lineThickness(2) // Optionally export annotation boundaries with another label; .setBoundaryLabel('Boundary*', 4) // Define annotation boundary label; .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(). // Export each region; int i = 0; for (annotation in getAnnotationObjects()) {; def region = RegionRequest.createInstance(; labelServer.getPath(), downsample, annotation.getROI()); i++; def outputPath = buildFilePath(pathOutput, 'Region ' + i + '.ome.tif'); writeImageRegion(labelServer, region, outputPath); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-878087749
https://github.com/qupath/qupath/issues/777#issuecomment-878087749:176,Availability,Down,Downsample,176,"I'll close this issue because, as far as I can tell, it has already been fixed in v0.3.0-rc1 and in the main branch. I see the error; ```; IllegalArgumentException at line 17: Downsample must be > 0, but this one is 0.0; ```; if I run the following script; ```groovy; import qupath.lib.images.servers.LabeledImageServer. def imageData = getCurrentImageData(). // Define output path (relative to project); def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = buildFilePath(PROJECT_BASE_DIR, 'export', name); mkdirs(pathOutput). // Define output resolution; double requestedPixelSize = 0. // Convert to downsample; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). // Create an ImageServer where the pixels are derived from annotations; def labelServer = new LabeledImageServer.Builder(imageData); .backgroundLabel(0, ColorTools.WHITE) // Specify background label (usually 0 or 255); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .addLabel('Tumor', 1) // Choose output labels (the order matters!); .addLabel('Stroma', 2); .addLabel('Other', 3); .lineThickness(2) // Optionally export annotation boundaries with another label; .setBoundaryLabel('Boundary*', 4) // Define annotation boundary label; .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(). // Export each region; int i = 0; for (annotation in getAnnotationObjects()) {; def region = RegionRequest.createInstance(; labelServer.getPath(), downsample, annotation.getROI()); i++; def outputPath = buildFilePath(pathOutput, 'Region ' + i + '.ome.tif'); writeImageRegion(labelServer, region, outputPath); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-878087749
https://github.com/qupath/qupath/issues/777#issuecomment-878087749:661,Availability,down,downsample,661,"I'll close this issue because, as far as I can tell, it has already been fixed in v0.3.0-rc1 and in the main branch. I see the error; ```; IllegalArgumentException at line 17: Downsample must be > 0, but this one is 0.0; ```; if I run the following script; ```groovy; import qupath.lib.images.servers.LabeledImageServer. def imageData = getCurrentImageData(). // Define output path (relative to project); def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = buildFilePath(PROJECT_BASE_DIR, 'export', name); mkdirs(pathOutput). // Define output resolution; double requestedPixelSize = 0. // Convert to downsample; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). // Create an ImageServer where the pixels are derived from annotations; def labelServer = new LabeledImageServer.Builder(imageData); .backgroundLabel(0, ColorTools.WHITE) // Specify background label (usually 0 or 255); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .addLabel('Tumor', 1) // Choose output labels (the order matters!); .addLabel('Stroma', 2); .addLabel('Other', 3); .lineThickness(2) // Optionally export annotation boundaries with another label; .setBoundaryLabel('Boundary*', 4) // Define annotation boundary label; .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(). // Export each region; int i = 0; for (annotation in getAnnotationObjects()) {; def region = RegionRequest.createInstance(; labelServer.getPath(), downsample, annotation.getROI()); i++; def outputPath = buildFilePath(pathOutput, 'Region ' + i + '.ome.tif'); writeImageRegion(labelServer, region, outputPath); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-878087749
https://github.com/qupath/qupath/issues/777#issuecomment-878087749:680,Availability,down,downsample,680,"I'll close this issue because, as far as I can tell, it has already been fixed in v0.3.0-rc1 and in the main branch. I see the error; ```; IllegalArgumentException at line 17: Downsample must be > 0, but this one is 0.0; ```; if I run the following script; ```groovy; import qupath.lib.images.servers.LabeledImageServer. def imageData = getCurrentImageData(). // Define output path (relative to project); def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = buildFilePath(PROJECT_BASE_DIR, 'export', name); mkdirs(pathOutput). // Define output resolution; double requestedPixelSize = 0. // Convert to downsample; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). // Create an ImageServer where the pixels are derived from annotations; def labelServer = new LabeledImageServer.Builder(imageData); .backgroundLabel(0, ColorTools.WHITE) // Specify background label (usually 0 or 255); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .addLabel('Tumor', 1) // Choose output labels (the order matters!); .addLabel('Stroma', 2); .addLabel('Other', 3); .lineThickness(2) // Optionally export annotation boundaries with another label; .setBoundaryLabel('Boundary*', 4) // Define annotation boundary label; .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(). // Export each region; int i = 0; for (annotation in getAnnotationObjects()) {; def region = RegionRequest.createInstance(; labelServer.getPath(), downsample, annotation.getROI()); i++; def outputPath = buildFilePath(pathOutput, 'Region ' + i + '.ome.tif'); writeImageRegion(labelServer, region, outputPath); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-878087749
https://github.com/qupath/qupath/issues/777#issuecomment-878087749:1002,Availability,down,downsample,1002,"I'll close this issue because, as far as I can tell, it has already been fixed in v0.3.0-rc1 and in the main branch. I see the error; ```; IllegalArgumentException at line 17: Downsample must be > 0, but this one is 0.0; ```; if I run the following script; ```groovy; import qupath.lib.images.servers.LabeledImageServer. def imageData = getCurrentImageData(). // Define output path (relative to project); def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = buildFilePath(PROJECT_BASE_DIR, 'export', name); mkdirs(pathOutput). // Define output resolution; double requestedPixelSize = 0. // Convert to downsample; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). // Create an ImageServer where the pixels are derived from annotations; def labelServer = new LabeledImageServer.Builder(imageData); .backgroundLabel(0, ColorTools.WHITE) // Specify background label (usually 0 or 255); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .addLabel('Tumor', 1) // Choose output labels (the order matters!); .addLabel('Stroma', 2); .addLabel('Other', 3); .lineThickness(2) // Optionally export annotation boundaries with another label; .setBoundaryLabel('Boundary*', 4) // Define annotation boundary label; .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(). // Export each region; int i = 0; for (annotation in getAnnotationObjects()) {; def region = RegionRequest.createInstance(; labelServer.getPath(), downsample, annotation.getROI()); i++; def outputPath = buildFilePath(pathOutput, 'Region ' + i + '.ome.tif'); writeImageRegion(labelServer, region, outputPath); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-878087749
https://github.com/qupath/qupath/issues/777#issuecomment-878087749:1013,Availability,down,downsample,1013,"I'll close this issue because, as far as I can tell, it has already been fixed in v0.3.0-rc1 and in the main branch. I see the error; ```; IllegalArgumentException at line 17: Downsample must be > 0, but this one is 0.0; ```; if I run the following script; ```groovy; import qupath.lib.images.servers.LabeledImageServer. def imageData = getCurrentImageData(). // Define output path (relative to project); def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = buildFilePath(PROJECT_BASE_DIR, 'export', name); mkdirs(pathOutput). // Define output resolution; double requestedPixelSize = 0. // Convert to downsample; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). // Create an ImageServer where the pixels are derived from annotations; def labelServer = new LabeledImageServer.Builder(imageData); .backgroundLabel(0, ColorTools.WHITE) // Specify background label (usually 0 or 255); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .addLabel('Tumor', 1) // Choose output labels (the order matters!); .addLabel('Stroma', 2); .addLabel('Other', 3); .lineThickness(2) // Optionally export annotation boundaries with another label; .setBoundaryLabel('Boundary*', 4) // Define annotation boundary label; .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(). // Export each region; int i = 0; for (annotation in getAnnotationObjects()) {; def region = RegionRequest.createInstance(; labelServer.getPath(), downsample, annotation.getROI()); i++; def outputPath = buildFilePath(pathOutput, 'Region ' + i + '.ome.tif'); writeImageRegion(labelServer, region, outputPath); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-878087749
https://github.com/qupath/qupath/issues/777#issuecomment-878087749:1682,Availability,down,downsample,1682,"I'll close this issue because, as far as I can tell, it has already been fixed in v0.3.0-rc1 and in the main branch. I see the error; ```; IllegalArgumentException at line 17: Downsample must be > 0, but this one is 0.0; ```; if I run the following script; ```groovy; import qupath.lib.images.servers.LabeledImageServer. def imageData = getCurrentImageData(). // Define output path (relative to project); def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = buildFilePath(PROJECT_BASE_DIR, 'export', name); mkdirs(pathOutput). // Define output resolution; double requestedPixelSize = 0. // Convert to downsample; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). // Create an ImageServer where the pixels are derived from annotations; def labelServer = new LabeledImageServer.Builder(imageData); .backgroundLabel(0, ColorTools.WHITE) // Specify background label (usually 0 or 255); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .addLabel('Tumor', 1) // Choose output labels (the order matters!); .addLabel('Stroma', 2); .addLabel('Other', 3); .lineThickness(2) // Optionally export annotation boundaries with another label; .setBoundaryLabel('Boundary*', 4) // Define annotation boundary label; .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(). // Export each region; int i = 0; for (annotation in getAnnotationObjects()) {; def region = RegionRequest.createInstance(; labelServer.getPath(), downsample, annotation.getROI()); i++; def outputPath = buildFilePath(pathOutput, 'Region ' + i + '.ome.tif'); writeImageRegion(labelServer, region, outputPath); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-878087749
https://github.com/qupath/qupath/issues/819#issuecomment-922814352:41,Deployability,release,release,41,"Thanks, this should be fixed in the next release (code linked above).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/819#issuecomment-922814352
https://github.com/qupath/qupath/issues/820#issuecomment-919160755:171,Safety,avoid,avoid-this-behavior,171,"Hi @vladpopovici . There's more info about this behavior on the user forum [here](https://forum.image.sc/t/qupath-is-cropping-white-background-in-whole-slide-image-how-to-avoid-this-behavior/40853/2). Basically, you'll need to get the bounding box coordinates from OpenSlide. You can do this either from within a Groovy script in QuPath, or later by accessing OpenSlide through Python. Pete. PS. I'll close this as an issue because the [forum](http://forum.image.sc/tag/qupath) is really the best place for non-bug-related QuPath questions. PPS. Nice to see QuPath could be useful for you, I recognize your name from [this](https://doi.org/10.1093/bioinformatics/btx027) :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/820#issuecomment-919160755
https://github.com/qupath/qupath/issues/820#issuecomment-919160755:350,Security,access,accessing,350,"Hi @vladpopovici . There's more info about this behavior on the user forum [here](https://forum.image.sc/t/qupath-is-cropping-white-background-in-whole-slide-image-how-to-avoid-this-behavior/40853/2). Basically, you'll need to get the bounding box coordinates from OpenSlide. You can do this either from within a Groovy script in QuPath, or later by accessing OpenSlide through Python. Pete. PS. I'll close this as an issue because the [forum](http://forum.image.sc/tag/qupath) is really the best place for non-bug-related QuPath questions. PPS. Nice to see QuPath could be useful for you, I recognize your name from [this](https://doi.org/10.1093/bioinformatics/btx027) :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/820#issuecomment-919160755
https://github.com/qupath/qupath/issues/825#issuecomment-925039627:38,Availability,error,error,38,"@petebankhead thanks, yeah same exact error",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925039627
https://github.com/qupath/qupath/issues/825#issuecomment-925047351:239,Availability,error,error,239,"Ah ok, then I'm afraid I have no idea and no way to reproduce the problem. It is working for me on all my test systems (but I haven't got CentOS installed anywhere). I can't see any obvious clues to a problem within QuPath's code from the error. The versions of Java, JavaFX and jpackage have been updated for v0.3.0, not sure if that is related. One option would be to try [building from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) using a different JDK, or launch using `./gradlew run` (which would skip the jpackage part).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925047351
https://github.com/qupath/qupath/issues/825#issuecomment-925047351:145,Deployability,install,installed,145,"Ah ok, then I'm afraid I have no idea and no way to reproduce the problem. It is working for me on all my test systems (but I haven't got CentOS installed anywhere). I can't see any obvious clues to a problem within QuPath's code from the error. The versions of Java, JavaFX and jpackage have been updated for v0.3.0, not sure if that is related. One option would be to try [building from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) using a different JDK, or launch using `./gradlew run` (which would skip the jpackage part).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925047351
https://github.com/qupath/qupath/issues/825#issuecomment-925047351:298,Deployability,update,updated,298,"Ah ok, then I'm afraid I have no idea and no way to reproduce the problem. It is working for me on all my test systems (but I haven't got CentOS installed anywhere). I can't see any obvious clues to a problem within QuPath's code from the error. The versions of Java, JavaFX and jpackage have been updated for v0.3.0, not sure if that is related. One option would be to try [building from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) using a different JDK, or launch using `./gradlew run` (which would skip the jpackage part).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925047351
https://github.com/qupath/qupath/issues/825#issuecomment-925047351:106,Testability,test,test,106,"Ah ok, then I'm afraid I have no idea and no way to reproduce the problem. It is working for me on all my test systems (but I haven't got CentOS installed anywhere). I can't see any obvious clues to a problem within QuPath's code from the error. The versions of Java, JavaFX and jpackage have been updated for v0.3.0, not sure if that is related. One option would be to try [building from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) using a different JDK, or launch using `./gradlew run` (which would skip the jpackage part).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925047351
https://github.com/qupath/qupath/issues/825#issuecomment-925051403:372,Availability,error,error,372,"The safest way is probably to use Docker or something similiar. ons. 22. sep. 2021, 17:38 skrev Pete ***@***.***>:. > Ah ok, then I'm afraid I have no idea and no way to reproduce the problem.; > It is working for me on all my test systems (but I haven't got CentOS; > installed anywhere).; >; > I can't see any obvious clues to a problem within QuPath's code from the; > error. The versions of Java, JavaFX and jpackage have been updated for; > v0.3.0, not sure if that is related.; >; > One option would be to try building from source; > <https://qupath.readthedocs.io/en/stable/docs/reference/building.html>; > using a different JDK, or launch using ./gradlew run (which would skip; > the jpackage part).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/825#issuecomment-925047351>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AH7WSL62XZNUGJTSADEHNB3UDHZ6HANCNFSM5ERSPAHA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925051403
https://github.com/qupath/qupath/issues/825#issuecomment-925051403:269,Deployability,install,installed,269,"The safest way is probably to use Docker or something similiar. ons. 22. sep. 2021, 17:38 skrev Pete ***@***.***>:. > Ah ok, then I'm afraid I have no idea and no way to reproduce the problem.; > It is working for me on all my test systems (but I haven't got CentOS; > installed anywhere).; >; > I can't see any obvious clues to a problem within QuPath's code from the; > error. The versions of Java, JavaFX and jpackage have been updated for; > v0.3.0, not sure if that is related.; >; > One option would be to try building from source; > <https://qupath.readthedocs.io/en/stable/docs/reference/building.html>; > using a different JDK, or launch using ./gradlew run (which would skip; > the jpackage part).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/825#issuecomment-925047351>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AH7WSL62XZNUGJTSADEHNB3UDHZ6HANCNFSM5ERSPAHA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925051403
https://github.com/qupath/qupath/issues/825#issuecomment-925051403:431,Deployability,update,updated,431,"The safest way is probably to use Docker or something similiar. ons. 22. sep. 2021, 17:38 skrev Pete ***@***.***>:. > Ah ok, then I'm afraid I have no idea and no way to reproduce the problem.; > It is working for me on all my test systems (but I haven't got CentOS; > installed anywhere).; >; > I can't see any obvious clues to a problem within QuPath's code from the; > error. The versions of Java, JavaFX and jpackage have been updated for; > v0.3.0, not sure if that is related.; >; > One option would be to try building from source; > <https://qupath.readthedocs.io/en/stable/docs/reference/building.html>; > using a different JDK, or launch using ./gradlew run (which would skip; > the jpackage part).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/825#issuecomment-925047351>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AH7WSL62XZNUGJTSADEHNB3UDHZ6HANCNFSM5ERSPAHA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925051403
https://github.com/qupath/qupath/issues/825#issuecomment-925051403:4,Safety,safe,safest,4,"The safest way is probably to use Docker or something similiar. ons. 22. sep. 2021, 17:38 skrev Pete ***@***.***>:. > Ah ok, then I'm afraid I have no idea and no way to reproduce the problem.; > It is working for me on all my test systems (but I haven't got CentOS; > installed anywhere).; >; > I can't see any obvious clues to a problem within QuPath's code from the; > error. The versions of Java, JavaFX and jpackage have been updated for; > v0.3.0, not sure if that is related.; >; > One option would be to try building from source; > <https://qupath.readthedocs.io/en/stable/docs/reference/building.html>; > using a different JDK, or launch using ./gradlew run (which would skip; > the jpackage part).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/825#issuecomment-925047351>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AH7WSL62XZNUGJTSADEHNB3UDHZ6HANCNFSM5ERSPAHA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925051403
https://github.com/qupath/qupath/issues/825#issuecomment-925051403:227,Testability,test,test,227,"The safest way is probably to use Docker or something similiar. ons. 22. sep. 2021, 17:38 skrev Pete ***@***.***>:. > Ah ok, then I'm afraid I have no idea and no way to reproduce the problem.; > It is working for me on all my test systems (but I haven't got CentOS; > installed anywhere).; >; > I can't see any obvious clues to a problem within QuPath's code from the; > error. The versions of Java, JavaFX and jpackage have been updated for; > v0.3.0, not sure if that is related.; >; > One option would be to try building from source; > <https://qupath.readthedocs.io/en/stable/docs/reference/building.html>; > using a different JDK, or launch using ./gradlew run (which would skip; > the jpackage part).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/825#issuecomment-925047351>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AH7WSL62XZNUGJTSADEHNB3UDHZ6HANCNFSM5ERSPAHA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925051403
https://github.com/qupath/qupath/issues/825#issuecomment-925125755:58,Availability,down,downloading,58,"I've had similar issues with different Linux distros, try downloading the JDK/JRE for Java 16 from AdoptOpenJDK (Here's the JRE 16 for Linux x64: https://github.com/AdoptOpenJDK/openjdk16-binaries/releases/download/jdk-16.0.1%2B9/OpenJDK16U-jre_x64_linux_hotspot_16.0.1_9.tar.gz), extract it, and navigate to `<QuPath folder>/lib/app` and run `<where you extracted the JRE>/jdk-16.0.1+9-jre/bin/java -cp ""./*"" qupath.QuPath` (or set the folder to your PATH and just use `java`). This has magically solved many of my issues.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925125755
https://github.com/qupath/qupath/issues/825#issuecomment-925125755:206,Availability,down,download,206,"I've had similar issues with different Linux distros, try downloading the JDK/JRE for Java 16 from AdoptOpenJDK (Here's the JRE 16 for Linux x64: https://github.com/AdoptOpenJDK/openjdk16-binaries/releases/download/jdk-16.0.1%2B9/OpenJDK16U-jre_x64_linux_hotspot_16.0.1_9.tar.gz), extract it, and navigate to `<QuPath folder>/lib/app` and run `<where you extracted the JRE>/jdk-16.0.1+9-jre/bin/java -cp ""./*"" qupath.QuPath` (or set the folder to your PATH and just use `java`). This has magically solved many of my issues.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925125755
https://github.com/qupath/qupath/issues/825#issuecomment-925125755:197,Deployability,release,releases,197,"I've had similar issues with different Linux distros, try downloading the JDK/JRE for Java 16 from AdoptOpenJDK (Here's the JRE 16 for Linux x64: https://github.com/AdoptOpenJDK/openjdk16-binaries/releases/download/jdk-16.0.1%2B9/OpenJDK16U-jre_x64_linux_hotspot_16.0.1_9.tar.gz), extract it, and navigate to `<QuPath folder>/lib/app` and run `<where you extracted the JRE>/jdk-16.0.1+9-jre/bin/java -cp ""./*"" qupath.QuPath` (or set the folder to your PATH and just use `java`). This has magically solved many of my issues.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925125755
https://github.com/qupath/qupath/issues/825#issuecomment-1732336555:201,Deployability,release,release,201,"I'll close this, since it has been 2 years since the last reply and I want to optimistically believe that means @yli-hallila's solution is working well enough. In any case, it relates to an old QuPath release and I want to clean up our open issues to remove ones we won't realistically be able to solve. QuPath v0.5.0 is coming soon; if there are still problems with it and CentOS, feel free to open a new issue then.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-1732336555
https://github.com/qupath/qupath/issues/826#issuecomment-926350763:547,Integrability,depend,dependent,547,"I've had a quick look at the code and it should be possible to make some minor improvements to help with this, although it isn't a completely trivial fix. The main reason is that opacity = 0 is not equivalent to not painting anything; there is an *Always show selected objects* preference (on by default) that means selected objects should always be painted. So the object-painting code cannot be switched off entirely, and the various other painting optimizations need to be navigated carefully. The behavior you are seeing is also somewhat zoom-dependent, because detections are painted directly when upsampling - but otherwise they are painted once and cached. So if you zoom out a little, I'd hope that any lag you notice would be temporary at most. There are lots of possible permutations of options (showing/hiding detections/annotations, filled, unfilled, selected/unselected, global opacity option & per-overlay opacity option, zoom) - the most common of these have already been optimized to some degree, but the specific scenario you point out hasn't yet. > Issue impacts QoL very slightly, but I'm curious if the lag is more disruptive/noticeable on lower-end machines. If it's not, then might not be something worth spending the time to fix. The lag should be no more than what occurs whenever opacity is not zero - and I'd expect that someone using QuPath will generally want to see their objects at some point. Therefore if it's a major issue for anyone, I'd expect QuPath to already be unusable for them. If this is the only problem they encounter, there is already an easy fix with a shortcut (turn off the detections with `D`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/826#issuecomment-926350763
https://github.com/qupath/qupath/issues/826#issuecomment-926350763:451,Performance,optimiz,optimizations,451,"I've had a quick look at the code and it should be possible to make some minor improvements to help with this, although it isn't a completely trivial fix. The main reason is that opacity = 0 is not equivalent to not painting anything; there is an *Always show selected objects* preference (on by default) that means selected objects should always be painted. So the object-painting code cannot be switched off entirely, and the various other painting optimizations need to be navigated carefully. The behavior you are seeing is also somewhat zoom-dependent, because detections are painted directly when upsampling - but otherwise they are painted once and cached. So if you zoom out a little, I'd hope that any lag you notice would be temporary at most. There are lots of possible permutations of options (showing/hiding detections/annotations, filled, unfilled, selected/unselected, global opacity option & per-overlay opacity option, zoom) - the most common of these have already been optimized to some degree, but the specific scenario you point out hasn't yet. > Issue impacts QoL very slightly, but I'm curious if the lag is more disruptive/noticeable on lower-end machines. If it's not, then might not be something worth spending the time to fix. The lag should be no more than what occurs whenever opacity is not zero - and I'd expect that someone using QuPath will generally want to see their objects at some point. Therefore if it's a major issue for anyone, I'd expect QuPath to already be unusable for them. If this is the only problem they encounter, there is already an easy fix with a shortcut (turn off the detections with `D`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/826#issuecomment-926350763
https://github.com/qupath/qupath/issues/826#issuecomment-926350763:656,Performance,cache,cached,656,"I've had a quick look at the code and it should be possible to make some minor improvements to help with this, although it isn't a completely trivial fix. The main reason is that opacity = 0 is not equivalent to not painting anything; there is an *Always show selected objects* preference (on by default) that means selected objects should always be painted. So the object-painting code cannot be switched off entirely, and the various other painting optimizations need to be navigated carefully. The behavior you are seeing is also somewhat zoom-dependent, because detections are painted directly when upsampling - but otherwise they are painted once and cached. So if you zoom out a little, I'd hope that any lag you notice would be temporary at most. There are lots of possible permutations of options (showing/hiding detections/annotations, filled, unfilled, selected/unselected, global opacity option & per-overlay opacity option, zoom) - the most common of these have already been optimized to some degree, but the specific scenario you point out hasn't yet. > Issue impacts QoL very slightly, but I'm curious if the lag is more disruptive/noticeable on lower-end machines. If it's not, then might not be something worth spending the time to fix. The lag should be no more than what occurs whenever opacity is not zero - and I'd expect that someone using QuPath will generally want to see their objects at some point. Therefore if it's a major issue for anyone, I'd expect QuPath to already be unusable for them. If this is the only problem they encounter, there is already an easy fix with a shortcut (turn off the detections with `D`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/826#issuecomment-926350763
https://github.com/qupath/qupath/issues/826#issuecomment-926350763:987,Performance,optimiz,optimized,987,"I've had a quick look at the code and it should be possible to make some minor improvements to help with this, although it isn't a completely trivial fix. The main reason is that opacity = 0 is not equivalent to not painting anything; there is an *Always show selected objects* preference (on by default) that means selected objects should always be painted. So the object-painting code cannot be switched off entirely, and the various other painting optimizations need to be navigated carefully. The behavior you are seeing is also somewhat zoom-dependent, because detections are painted directly when upsampling - but otherwise they are painted once and cached. So if you zoom out a little, I'd hope that any lag you notice would be temporary at most. There are lots of possible permutations of options (showing/hiding detections/annotations, filled, unfilled, selected/unselected, global opacity option & per-overlay opacity option, zoom) - the most common of these have already been optimized to some degree, but the specific scenario you point out hasn't yet. > Issue impacts QoL very slightly, but I'm curious if the lag is more disruptive/noticeable on lower-end machines. If it's not, then might not be something worth spending the time to fix. The lag should be no more than what occurs whenever opacity is not zero - and I'd expect that someone using QuPath will generally want to see their objects at some point. Therefore if it's a major issue for anyone, I'd expect QuPath to already be unusable for them. If this is the only problem they encounter, there is already an easy fix with a shortcut (turn off the detections with `D`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/826#issuecomment-926350763
https://github.com/qupath/qupath/issues/826#issuecomment-926350763:566,Safety,detect,detections,566,"I've had a quick look at the code and it should be possible to make some minor improvements to help with this, although it isn't a completely trivial fix. The main reason is that opacity = 0 is not equivalent to not painting anything; there is an *Always show selected objects* preference (on by default) that means selected objects should always be painted. So the object-painting code cannot be switched off entirely, and the various other painting optimizations need to be navigated carefully. The behavior you are seeing is also somewhat zoom-dependent, because detections are painted directly when upsampling - but otherwise they are painted once and cached. So if you zoom out a little, I'd hope that any lag you notice would be temporary at most. There are lots of possible permutations of options (showing/hiding detections/annotations, filled, unfilled, selected/unselected, global opacity option & per-overlay opacity option, zoom) - the most common of these have already been optimized to some degree, but the specific scenario you point out hasn't yet. > Issue impacts QoL very slightly, but I'm curious if the lag is more disruptive/noticeable on lower-end machines. If it's not, then might not be something worth spending the time to fix. The lag should be no more than what occurs whenever opacity is not zero - and I'd expect that someone using QuPath will generally want to see their objects at some point. Therefore if it's a major issue for anyone, I'd expect QuPath to already be unusable for them. If this is the only problem they encounter, there is already an easy fix with a shortcut (turn off the detections with `D`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/826#issuecomment-926350763
https://github.com/qupath/qupath/issues/826#issuecomment-926350763:821,Safety,detect,detections,821,"I've had a quick look at the code and it should be possible to make some minor improvements to help with this, although it isn't a completely trivial fix. The main reason is that opacity = 0 is not equivalent to not painting anything; there is an *Always show selected objects* preference (on by default) that means selected objects should always be painted. So the object-painting code cannot be switched off entirely, and the various other painting optimizations need to be navigated carefully. The behavior you are seeing is also somewhat zoom-dependent, because detections are painted directly when upsampling - but otherwise they are painted once and cached. So if you zoom out a little, I'd hope that any lag you notice would be temporary at most. There are lots of possible permutations of options (showing/hiding detections/annotations, filled, unfilled, selected/unselected, global opacity option & per-overlay opacity option, zoom) - the most common of these have already been optimized to some degree, but the specific scenario you point out hasn't yet. > Issue impacts QoL very slightly, but I'm curious if the lag is more disruptive/noticeable on lower-end machines. If it's not, then might not be something worth spending the time to fix. The lag should be no more than what occurs whenever opacity is not zero - and I'd expect that someone using QuPath will generally want to see their objects at some point. Therefore if it's a major issue for anyone, I'd expect QuPath to already be unusable for them. If this is the only problem they encounter, there is already an easy fix with a shortcut (turn off the detections with `D`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/826#issuecomment-926350763
https://github.com/qupath/qupath/issues/826#issuecomment-926350763:1622,Safety,detect,detections,1622,"I've had a quick look at the code and it should be possible to make some minor improvements to help with this, although it isn't a completely trivial fix. The main reason is that opacity = 0 is not equivalent to not painting anything; there is an *Always show selected objects* preference (on by default) that means selected objects should always be painted. So the object-painting code cannot be switched off entirely, and the various other painting optimizations need to be navigated carefully. The behavior you are seeing is also somewhat zoom-dependent, because detections are painted directly when upsampling - but otherwise they are painted once and cached. So if you zoom out a little, I'd hope that any lag you notice would be temporary at most. There are lots of possible permutations of options (showing/hiding detections/annotations, filled, unfilled, selected/unselected, global opacity option & per-overlay opacity option, zoom) - the most common of these have already been optimized to some degree, but the specific scenario you point out hasn't yet. > Issue impacts QoL very slightly, but I'm curious if the lag is more disruptive/noticeable on lower-end machines. If it's not, then might not be something worth spending the time to fix. The lag should be no more than what occurs whenever opacity is not zero - and I'd expect that someone using QuPath will generally want to see their objects at some point. Therefore if it's a major issue for anyone, I'd expect QuPath to already be unusable for them. If this is the only problem they encounter, there is already an easy fix with a shortcut (turn off the detections with `D`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/826#issuecomment-926350763
https://github.com/qupath/qupath/issues/826#issuecomment-944299730:992,Modifiability,maintainab,maintainability,992,"I'd like to close this issue. I suspect between us we have already spent much more time investigating and describing it than the sum total of all the milliseconds of lag likely to be suffered by all users :). For the reasons outlined above, fixing it without breaking something else isn't trivial - and then the behavior might well resurface in the future if some other repainting aspect is optimised. I'll keep the laggy behavior in mind during any future attempt to improve repainting performance, but I don't really want to introduce additional complexity into the code to address only this. I can't think of a scenario when the lag will be problematic for someone with a machine capable of running meaningful QuPath analysis - and even if that happens, there's a simple workaround (i.e. press `D` instead of using the opacity slider). I don't think this should count as a bug so much as the absence of one possible optimisation. It's always a tradeoff between impact, developer time, and maintainability when deciding which optimisations are worth the effort to implement. It has already take some time, and while a 'fix' might be quite to implement, thoroughly checking nothing else is broken would likely take much longer. Feel free to reopen if you find more problematic consequences of the behavior.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/826#issuecomment-944299730
https://github.com/qupath/qupath/issues/826#issuecomment-944299730:487,Performance,perform,performance,487,"I'd like to close this issue. I suspect between us we have already spent much more time investigating and describing it than the sum total of all the milliseconds of lag likely to be suffered by all users :). For the reasons outlined above, fixing it without breaking something else isn't trivial - and then the behavior might well resurface in the future if some other repainting aspect is optimised. I'll keep the laggy behavior in mind during any future attempt to improve repainting performance, but I don't really want to introduce additional complexity into the code to address only this. I can't think of a scenario when the lag will be problematic for someone with a machine capable of running meaningful QuPath analysis - and even if that happens, there's a simple workaround (i.e. press `D` instead of using the opacity slider). I don't think this should count as a bug so much as the absence of one possible optimisation. It's always a tradeoff between impact, developer time, and maintainability when deciding which optimisations are worth the effort to implement. It has already take some time, and while a 'fix' might be quite to implement, thoroughly checking nothing else is broken would likely take much longer. Feel free to reopen if you find more problematic consequences of the behavior.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/826#issuecomment-944299730
https://github.com/qupath/qupath/issues/826#issuecomment-944299730:767,Usability,simpl,simple,767,"I'd like to close this issue. I suspect between us we have already spent much more time investigating and describing it than the sum total of all the milliseconds of lag likely to be suffered by all users :). For the reasons outlined above, fixing it without breaking something else isn't trivial - and then the behavior might well resurface in the future if some other repainting aspect is optimised. I'll keep the laggy behavior in mind during any future attempt to improve repainting performance, but I don't really want to introduce additional complexity into the code to address only this. I can't think of a scenario when the lag will be problematic for someone with a machine capable of running meaningful QuPath analysis - and even if that happens, there's a simple workaround (i.e. press `D` instead of using the opacity slider). I don't think this should count as a bug so much as the absence of one possible optimisation. It's always a tradeoff between impact, developer time, and maintainability when deciding which optimisations are worth the effort to implement. It has already take some time, and while a 'fix' might be quite to implement, thoroughly checking nothing else is broken would likely take much longer. Feel free to reopen if you find more problematic consequences of the behavior.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/826#issuecomment-944299730
https://github.com/qupath/qupath/pull/827#issuecomment-931108801:77,Performance,optimiz,optimized,77,"Thanks! That's an impressive speedup, and a common enough case to deserve an optimized version. I'll check it out (probably for v0.4.0 rather than v0.3.1).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-931108801
https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:112,Deployability,release,release,112,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547
https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:1173,Performance,perform,performance,1173,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547
https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:1452,Performance,optimiz,optimized,1452,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547
https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:1641,Performance,perform,performance,1641,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547
https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:1661,Performance,optimiz,optimized,1661,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547
https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:1221,Safety,avoid,avoiding,1221,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547
https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:1333,Testability,test,tests,1333,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547
https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:1628,Testability,test,test,1628,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547
https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:1899,Testability,test,test,1899,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547
https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:1929,Testability,Test,TestOpenCVTools,1929,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547
https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:1421,Usability,simpl,simpler,1421,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547
https://github.com/qupath/qupath/pull/827#issuecomment-1319890779:55,Deployability,release,release,55,"Thanks, @petebankhead! I'll definitely try it once new release will be published.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319890779
https://github.com/qupath/qupath/issues/828#issuecomment-932290410:34,Availability,error,errors,34,"@andyp05 have you checked for any errors under *View &rarr; Show log*?. I have not seen this behavior and have no way to replicate it, but my guess is that there may *possibly* be a memory error. You seem to have a lot of cores relative to the amount of available RAM, so reducing the *Number of parallel threads* option under *Edit &rarr; Preferences...* may help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932290410
https://github.com/qupath/qupath/issues/828#issuecomment-932290410:189,Availability,error,error,189,"@andyp05 have you checked for any errors under *View &rarr; Show log*?. I have not seen this behavior and have no way to replicate it, but my guess is that there may *possibly* be a memory error. You seem to have a lot of cores relative to the amount of available RAM, so reducing the *Number of parallel threads* option under *Edit &rarr; Preferences...* may help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932290410
https://github.com/qupath/qupath/issues/828#issuecomment-932290410:254,Availability,avail,available,254,"@andyp05 have you checked for any errors under *View &rarr; Show log*?. I have not seen this behavior and have no way to replicate it, but my guess is that there may *possibly* be a memory error. You seem to have a lot of cores relative to the amount of available RAM, so reducing the *Number of parallel threads* option under *Edit &rarr; Preferences...* may help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932290410
https://github.com/qupath/qupath/issues/828#issuecomment-932290410:65,Testability,log,log,65,"@andyp05 have you checked for any errors under *View &rarr; Show log*?. I have not seen this behavior and have no way to replicate it, but my guess is that there may *possibly* be a memory error. You seem to have a lot of cores relative to the amount of available RAM, so reducing the *Number of parallel threads* option under *Edit &rarr; Preferences...* may help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932290410
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:316,Availability,ERROR,ERROR,316,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:323,Availability,Error,Error,323,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:337,Modifiability,plugin,plugin,337,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:625,Modifiability,plugin,plugins,625,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:716,Modifiability,plugin,plugins,716,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:804,Modifiability,Plugin,PluginRunnerFX,804,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:828,Modifiability,Plugin,PluginRunnerFX,828,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:867,Modifiability,plugin,plugins,867,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:1785,Modifiability,plugin,plugins,1785,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:400,Performance,concurren,concurrent,400,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:499,Performance,concurren,concurrent,499,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:568,Performance,concurren,concurrent,568,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:1891,Performance,concurren,concurrent,1891,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:1973,Performance,concurren,concurrent,1973,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:2039,Performance,concurren,concurrent,2039,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:2121,Performance,concurren,concurrent,2121,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:2187,Performance,concurren,concurrent,2187,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:2267,Performance,concurren,concurrent,2267,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:1317,Safety,detect,detect,1317,R: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Sourc,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:1438,Safety,detect,detect,1438,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:1561,Safety,detect,detect,1561,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:1674,Safety,detect,detect,1674,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:1709,Safety,Detect,DetectorWrapper,1709,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:1793,Safety,Detect,DetectionPluginTools,1793,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:1814,Safety,Detect,DetectionRunnable,1814,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:1836,Safety,Detect,DetectionPluginTools,1836,eap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932330593:105,Testability,log,log,105,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593
https://github.com/qupath/qupath/issues/828#issuecomment-932368906:119,Availability,avail,available,119,"Sounds like a potential memory leak, but I'm not aware of any that would cause this. > I still have 15GB free. Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with *View &rarr; Show memory monitor* (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). There are some instructions for making more memory available to QuPath [here](https://qupath.readthedocs.io/en/stable/docs/reference/faqs.html#set-max-memory). If you're comfortable digging deeper, [VisualVM](https://visualvm.github.io) is extremely helpful for tracking memory in any running Java application (and is what I'd use if I could replicate the issue). Apart from that, how are you running positive cell detection - interactively, or from a script? How do you define the regions within which cells are detected?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932368906
https://github.com/qupath/qupath/issues/828#issuecomment-932368906:419,Availability,avail,available,419,"Sounds like a potential memory leak, but I'm not aware of any that would cause this. > I still have 15GB free. Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with *View &rarr; Show memory monitor* (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). There are some instructions for making more memory available to QuPath [here](https://qupath.readthedocs.io/en/stable/docs/reference/faqs.html#set-max-memory). If you're comfortable digging deeper, [VisualVM](https://visualvm.github.io) is extremely helpful for tracking memory in any running Java application (and is what I'd use if I could replicate the issue). Apart from that, how are you running positive cell detection - interactively, or from a script? How do you define the regions within which cells are detected?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932368906
https://github.com/qupath/qupath/issues/828#issuecomment-932368906:237,Energy Efficiency,monitor,monitor,237,"Sounds like a potential memory leak, but I'm not aware of any that would cause this. > I still have 15GB free. Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with *View &rarr; Show memory monitor* (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). There are some instructions for making more memory available to QuPath [here](https://qupath.readthedocs.io/en/stable/docs/reference/faqs.html#set-max-memory). If you're comfortable digging deeper, [VisualVM](https://visualvm.github.io) is extremely helpful for tracking memory in any running Java application (and is what I'd use if I could replicate the issue). Apart from that, how are you running positive cell detection - interactively, or from a script? How do you define the regions within which cells are detected?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932368906
https://github.com/qupath/qupath/issues/828#issuecomment-932368906:783,Safety,detect,detection,783,"Sounds like a potential memory leak, but I'm not aware of any that would cause this. > I still have 15GB free. Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with *View &rarr; Show memory monitor* (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). There are some instructions for making more memory available to QuPath [here](https://qupath.readthedocs.io/en/stable/docs/reference/faqs.html#set-max-memory). If you're comfortable digging deeper, [VisualVM](https://visualvm.github.io) is extremely helpful for tracking memory in any running Java application (and is what I'd use if I could replicate the issue). Apart from that, how are you running positive cell detection - interactively, or from a script? How do you define the regions within which cells are detected?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932368906
https://github.com/qupath/qupath/issues/828#issuecomment-932368906:881,Safety,detect,detected,881,"Sounds like a potential memory leak, but I'm not aware of any that would cause this. > I still have 15GB free. Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with *View &rarr; Show memory monitor* (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). There are some instructions for making more memory available to QuPath [here](https://qupath.readthedocs.io/en/stable/docs/reference/faqs.html#set-max-memory). If you're comfortable digging deeper, [VisualVM](https://visualvm.github.io) is extremely helpful for tracking memory in any running Java application (and is what I'd use if I could replicate the issue). Apart from that, how are you running positive cell detection - interactively, or from a script? How do you define the regions within which cells are detected?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932368906
https://github.com/qupath/qupath/issues/828#issuecomment-939591061:352,Safety,detect,detect,352,"was running a script but it never finishes. ```; setImageType('BRIGHTFIELD_H_E');; setColorDeconvolutionStains('{""Name"" : ""H&E default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049"", ""Stain 2"" : ""Eosin"", ""Values 2"" : ""0.2159 0.8012 0.5581"", ""Background"" : "" 244 244 244""}');; createSelectAllObject(true);; runPlugin('qupath.imagej.detect.cells.PositiveCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: Eosin OD mean"", ""thresholdPositive1"": 0.2, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6000000000000001, ""singleThreshold"": true}');. ```; If I run individually, exit, restart and run another it always works. It is when I try to run this on multiple slides without restarting that I run into trouble.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-939591061
https://github.com/qupath/qupath/issues/828#issuecomment-939591061:392,Safety,detect,detectionImageBrightfield,392,"was running a script but it never finishes. ```; setImageType('BRIGHTFIELD_H_E');; setColorDeconvolutionStains('{""Name"" : ""H&E default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049"", ""Stain 2"" : ""Eosin"", ""Values 2"" : ""0.2159 0.8012 0.5581"", ""Background"" : "" 244 244 244""}');; createSelectAllObject(true);; runPlugin('qupath.imagej.detect.cells.PositiveCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: Eosin OD mean"", ""thresholdPositive1"": 0.2, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6000000000000001, ""singleThreshold"": true}');. ```; If I run individually, exit, restart and run another it always works. It is when I try to run this on multiple slides without restarting that I run into trouble.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-939591061
https://github.com/qupath/qupath/issues/828#issuecomment-939704186:615,Availability,avail,available,615,"> was running a script but it never finishes. I don't understand exactly what steps you are taking?; * Are you using *Run &rarr; Run* from the script editor, or *Run &rarr; Run for project*? *Run for project* enables you to [run the same script sequentially across multiple images](https://qupath.readthedocs.io/en/stable/docs/scripting/workflows_to_scripts.html#running-a-script-for-multiple-images), but I don't know if you're using this.; * Do you have multiple images open simultaneously in QuPath, or only a single image at a time?. Please see also my question above:. >> I still have 15GB free; > ; > Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with View → Show memory monitor (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). The memory monitor also provides ways to reclaim memory at any time. Although problem **the most important thing** is that I can see in your script (and screenshot) that you are running the cell detection after; ```groovy; createSelectAllObject(true);; ```; This is likely to be **extremely** inefficient, because it will process all the empty white space as well. Processing should be much faster, and memory use much lower, if you restrict cell detection to only the tissue regions.; See [Detecting tissue](https://qupath.readthedocs.io/en/stable/docs/tutorials/thresholding.html) for details; [Pixel classification](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html) is another option.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-939704186
https://github.com/qupath/qupath/issues/828#issuecomment-939704186:727,Energy Efficiency,monitor,monitor,727,"> was running a script but it never finishes. I don't understand exactly what steps you are taking?; * Are you using *Run &rarr; Run* from the script editor, or *Run &rarr; Run for project*? *Run for project* enables you to [run the same script sequentially across multiple images](https://qupath.readthedocs.io/en/stable/docs/scripting/workflows_to_scripts.html#running-a-script-for-multiple-images), but I don't know if you're using this.; * Do you have multiple images open simultaneously in QuPath, or only a single image at a time?. Please see also my question above:. >> I still have 15GB free; > ; > Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with View → Show memory monitor (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). The memory monitor also provides ways to reclaim memory at any time. Although problem **the most important thing** is that I can see in your script (and screenshot) that you are running the cell detection after; ```groovy; createSelectAllObject(true);; ```; This is likely to be **extremely** inefficient, because it will process all the empty white space as well. Processing should be much faster, and memory use much lower, if you restrict cell detection to only the tissue regions.; See [Detecting tissue](https://qupath.readthedocs.io/en/stable/docs/tutorials/thresholding.html) for details; [Pixel classification](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html) is another option.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-939704186
https://github.com/qupath/qupath/issues/828#issuecomment-939704186:868,Energy Efficiency,monitor,monitor,868,"> was running a script but it never finishes. I don't understand exactly what steps you are taking?; * Are you using *Run &rarr; Run* from the script editor, or *Run &rarr; Run for project*? *Run for project* enables you to [run the same script sequentially across multiple images](https://qupath.readthedocs.io/en/stable/docs/scripting/workflows_to_scripts.html#running-a-script-for-multiple-images), but I don't know if you're using this.; * Do you have multiple images open simultaneously in QuPath, or only a single image at a time?. Please see also my question above:. >> I still have 15GB free; > ; > Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with View → Show memory monitor (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). The memory monitor also provides ways to reclaim memory at any time. Although problem **the most important thing** is that I can see in your script (and screenshot) that you are running the cell detection after; ```groovy; createSelectAllObject(true);; ```; This is likely to be **extremely** inefficient, because it will process all the empty white space as well. Processing should be much faster, and memory use much lower, if you restrict cell detection to only the tissue regions.; See [Detecting tissue](https://qupath.readthedocs.io/en/stable/docs/tutorials/thresholding.html) for details; [Pixel classification](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html) is another option.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-939704186
https://github.com/qupath/qupath/issues/828#issuecomment-939704186:1052,Safety,detect,detection,1052,"> was running a script but it never finishes. I don't understand exactly what steps you are taking?; * Are you using *Run &rarr; Run* from the script editor, or *Run &rarr; Run for project*? *Run for project* enables you to [run the same script sequentially across multiple images](https://qupath.readthedocs.io/en/stable/docs/scripting/workflows_to_scripts.html#running-a-script-for-multiple-images), but I don't know if you're using this.; * Do you have multiple images open simultaneously in QuPath, or only a single image at a time?. Please see also my question above:. >> I still have 15GB free; > ; > Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with View → Show memory monitor (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). The memory monitor also provides ways to reclaim memory at any time. Although problem **the most important thing** is that I can see in your script (and screenshot) that you are running the cell detection after; ```groovy; createSelectAllObject(true);; ```; This is likely to be **extremely** inefficient, because it will process all the empty white space as well. Processing should be much faster, and memory use much lower, if you restrict cell detection to only the tissue regions.; See [Detecting tissue](https://qupath.readthedocs.io/en/stable/docs/tutorials/thresholding.html) for details; [Pixel classification](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html) is another option.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-939704186
https://github.com/qupath/qupath/issues/828#issuecomment-939704186:1304,Safety,detect,detection,1304,"> was running a script but it never finishes. I don't understand exactly what steps you are taking?; * Are you using *Run &rarr; Run* from the script editor, or *Run &rarr; Run for project*? *Run for project* enables you to [run the same script sequentially across multiple images](https://qupath.readthedocs.io/en/stable/docs/scripting/workflows_to_scripts.html#running-a-script-for-multiple-images), but I don't know if you're using this.; * Do you have multiple images open simultaneously in QuPath, or only a single image at a time?. Please see also my question above:. >> I still have 15GB free; > ; > Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with View → Show memory monitor (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). The memory monitor also provides ways to reclaim memory at any time. Although problem **the most important thing** is that I can see in your script (and screenshot) that you are running the cell detection after; ```groovy; createSelectAllObject(true);; ```; This is likely to be **extremely** inefficient, because it will process all the empty white space as well. Processing should be much faster, and memory use much lower, if you restrict cell detection to only the tissue regions.; See [Detecting tissue](https://qupath.readthedocs.io/en/stable/docs/tutorials/thresholding.html) for details; [Pixel classification](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html) is another option.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-939704186
https://github.com/qupath/qupath/issues/828#issuecomment-939704186:1348,Safety,Detect,Detecting,1348,"> was running a script but it never finishes. I don't understand exactly what steps you are taking?; * Are you using *Run &rarr; Run* from the script editor, or *Run &rarr; Run for project*? *Run for project* enables you to [run the same script sequentially across multiple images](https://qupath.readthedocs.io/en/stable/docs/scripting/workflows_to_scripts.html#running-a-script-for-multiple-images), but I don't know if you're using this.; * Do you have multiple images open simultaneously in QuPath, or only a single image at a time?. Please see also my question above:. >> I still have 15GB free; > ; > Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with View → Show memory monitor (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). The memory monitor also provides ways to reclaim memory at any time. Although problem **the most important thing** is that I can see in your script (and screenshot) that you are running the cell detection after; ```groovy; createSelectAllObject(true);; ```; This is likely to be **extremely** inefficient, because it will process all the empty white space as well. Processing should be much faster, and memory use much lower, if you restrict cell detection to only the tissue regions.; See [Detecting tissue](https://qupath.readthedocs.io/en/stable/docs/tutorials/thresholding.html) for details; [Pixel classification](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html) is another option.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-939704186
https://github.com/qupath/qupath/issues/829#issuecomment-944358370:477,Availability,repair,repaired,477,"@melvingelbard ; Thank you for kindly providing a possible solution!; However, manually modifying `.qptma` file is rather complicated. I have to first export `.qptma`, insert uniqueID, and import it, for every image.; For now, my alternative solution is through menu File -> TMA data -> import TMA data, copy arranged Unique ID, finally `Paste Gird`. At least, this method avoids export `.qptma` file with lots of other images. Hope the ""Drag and Drop `.qpmap`"" feature can be repaired soon~",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-944358370
https://github.com/qupath/qupath/issues/829#issuecomment-944358370:373,Safety,avoid,avoids,373,"@melvingelbard ; Thank you for kindly providing a possible solution!; However, manually modifying `.qptma` file is rather complicated. I have to first export `.qptma`, insert uniqueID, and import it, for every image.; For now, my alternative solution is through menu File -> TMA data -> import TMA data, copy arranged Unique ID, finally `Paste Gird`. At least, this method avoids export `.qptma` file with lots of other images. Hope the ""Drag and Drop `.qpmap`"" feature can be repaired soon~",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-944358370
https://github.com/qupath/qupath/issues/829#issuecomment-944846938:501,Usability,learn,learned,501,"@melvingelbard ; 1.Prepare arranged `unique ID` in EXCEL; ![Snipaste_2021-10-16_11-06-56](https://user-images.githubusercontent.com/24513381/137571506-fb2baca9-98e0-4f94-b406-b6ca960d20e9.jpg). 2.Save as tab-delimited `.txt` file; ![Snipaste_2021-10-16_11-07-50](https://user-images.githubusercontent.com/24513381/137571544-36ceb3f0-c614-466f-a389-60ba34a4abc7.jpg). 3.finally rename file extension from `.txt` to `.qpmap`. My OS is in Chinese and it can be confused for you.; The official document I learned the `.qpmap` file is below, at `Import TMA map & survival data (optional)`.; TMA CD3 analysis · qupath/qupath Wiki; https://github.com/qupath/qupath/wiki/TMA-CD3-analysis",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-944846938
https://github.com/qupath/qupath/issues/829#issuecomment-946615284:1310,Modifiability,Refactor,Refactoring,1310,"Hi @ybyOxidant ,. After a small investigation with @petebankhead , we've found out that the issue was related to [this part](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/TMADataImporter.java#L311) of the code. . ### Issue; Basically, QuPath parses each line of your `.qpmap` file and splits each row according to the delimiter (in your case, a tab `\t`). Since the last line of your `.qpmap` is a single value and does not have a delimiter, QuPath assumes this is the end of the grid and therefore can't match the size of the grid-to-import with the current grid in the image. It then fails and since it thinks it cannot be a TMA grid anymore, it tries to understand whether the file is an image, hence the image importer window. ### Workaround; A simple workaround would be to add a dummy value after the last line of your file. QuPath would then 'acknowledge' the last line of your file and process it. E.g.:; ```; C2293 C2297 C2301 C2313 C2314 C2315 C2334 C2345 C2357 C2384; C2386 C2388 C2401 C2402 C2437 C2447 C2481 C2510 C2512 C2528; C2524 C2536 C2539 C2557 C2585 C2595 C2602 C2615; C2293 Dummy; ```; I would recreate the file in the same way as you did in the past, just adding a dummy value at step 1 (in Excel). ### Refactoring; On our side, we can keep this issue as a reminder to account for this kind of situations where a single value is present in a row and needs to be processed. E.g. something along those lines:; ```; if (row.contains(""\t"")); cols = row.split(""\t"");; else if (row.contains("","")); cols = row.split("","");; else if (row.isEmpty()) // Stop at the first empty row (lacking delimiters); break;; ```. ### Note; That part of the code hasn't changed in about 5 years so the change in QuPath version is not the problem, as explained above. I'd still recommend you to use the last version - v0.3.0 at the time of writing. ; Thanks for reporting this @ybyOxidant !",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946615284
https://github.com/qupath/qupath/issues/829#issuecomment-946615284:834,Usability,simpl,simple,834,"Hi @ybyOxidant ,. After a small investigation with @petebankhead , we've found out that the issue was related to [this part](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/TMADataImporter.java#L311) of the code. . ### Issue; Basically, QuPath parses each line of your `.qpmap` file and splits each row according to the delimiter (in your case, a tab `\t`). Since the last line of your `.qpmap` is a single value and does not have a delimiter, QuPath assumes this is the end of the grid and therefore can't match the size of the grid-to-import with the current grid in the image. It then fails and since it thinks it cannot be a TMA grid anymore, it tries to understand whether the file is an image, hence the image importer window. ### Workaround; A simple workaround would be to add a dummy value after the last line of your file. QuPath would then 'acknowledge' the last line of your file and process it. E.g.:; ```; C2293 C2297 C2301 C2313 C2314 C2315 C2334 C2345 C2357 C2384; C2386 C2388 C2401 C2402 C2437 C2447 C2481 C2510 C2512 C2528; C2524 C2536 C2539 C2557 C2585 C2595 C2602 C2615; C2293 Dummy; ```; I would recreate the file in the same way as you did in the past, just adding a dummy value at step 1 (in Excel). ### Refactoring; On our side, we can keep this issue as a reminder to account for this kind of situations where a single value is present in a row and needs to be processed. E.g. something along those lines:; ```; if (row.contains(""\t"")); cols = row.split(""\t"");; else if (row.contains("","")); cols = row.split("","");; else if (row.isEmpty()) // Stop at the first empty row (lacking delimiters); break;; ```. ### Note; That part of the code hasn't changed in about 5 years so the change in QuPath version is not the problem, as explained above. I'd still recommend you to use the last version - v0.3.0 at the time of writing. ; Thanks for reporting this @ybyOxidant !",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946615284
https://github.com/qupath/qupath/issues/829#issuecomment-946818399:74,Deployability,patch,patch,74,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399
https://github.com/qupath/qupath/issues/829#issuecomment-946818399:93,Testability,test,test,93,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399
https://github.com/qupath/qupath/issues/829#issuecomment-946818399:211,Testability,test,test,211,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399
https://github.com/qupath/qupath/issues/829#issuecomment-946818399:616,Testability,test,test,616,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399
https://github.com/qupath/qupath/issues/829#issuecomment-946818399:682,Testability,test,test,682,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399
https://github.com/qupath/qupath/issues/829#issuecomment-946818399:963,Testability,test,test,963,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399
https://github.com/qupath/qupath/issues/829#issuecomment-946818399:1046,Testability,test,test,1046,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399
https://github.com/qupath/qupath/issues/829#issuecomment-946818399:1390,Testability,test,test,1390,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399
https://github.com/qupath/qupath/issues/829#issuecomment-946818399:1481,Testability,test,test,1481,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399
https://github.com/qupath/qupath/issues/829#issuecomment-946818399:359,Usability,simpl,simplified,359,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399
https://github.com/qupath/qupath/issues/829#issuecomment-946836728:460,Usability,simpl,simply,460,"Ah it's better to give a detailed description of your file, which now we know contains Chinese characters, because that turns this into a different problem. In this case, the issue is located [here](https://github.com/qupath/qupath/blob/1dbc4816d08f01ed67ac2e45e768b44bd2d6a18b/qupath-core/src/main/java/qupath/lib/common/GeneralTools.java#L603), where QuPath reads the input file with a UTF-8 encoding. . There's no plan to change this unfortunately. I would simply remove the incompatible characters from your file in order for QuPath to process it. I was able to reproduce the issue with **and** without the Chinese characters though. The first option gave me an `IOException` at the location mentioned here above and the second one didn't give me an Exception but QuPath did misinterpret the grid in the file, as mentioned in my earlier post. In both case there is an easy workaround so hopefully that should be ok :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946836728
https://github.com/qupath/qupath/pull/830#issuecomment-957188687:836,Deployability,release,release,836,"Thanks @tp81! It might take me a bit of time to look at this in detail, because I've switched focus temporarily to finish some papers. First thoughts: I've also had the issue of having to click on the viewer to activate it for backspace to work, I agree it would be best to avoid this. Minor concerns are; * it introduces public methods, and I'd rather reduce this as much as possible; * if it basically duplicates some code elsewhere, perhaps some refactoring elsewhere could promote reuse. There is also a bit of JavaFX/macOS weirdness when it comes to single-key accelerators (i.e. not requiring Cmd+Something to run a menu item). I'm not sure if it's relevant here but anything accelerator-related takes some extra cross-platform testing. I've assigned it to a v0.4.0 milestone to remind us to try to get this functionality in that release (tentatively planned for early next year).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/830#issuecomment-957188687
https://github.com/qupath/qupath/pull/830#issuecomment-957188687:353,Energy Efficiency,reduce,reduce,353,"Thanks @tp81! It might take me a bit of time to look at this in detail, because I've switched focus temporarily to finish some papers. First thoughts: I've also had the issue of having to click on the viewer to activate it for backspace to work, I agree it would be best to avoid this. Minor concerns are; * it introduces public methods, and I'd rather reduce this as much as possible; * if it basically duplicates some code elsewhere, perhaps some refactoring elsewhere could promote reuse. There is also a bit of JavaFX/macOS weirdness when it comes to single-key accelerators (i.e. not requiring Cmd+Something to run a menu item). I'm not sure if it's relevant here but anything accelerator-related takes some extra cross-platform testing. I've assigned it to a v0.4.0 milestone to remind us to try to get this functionality in that release (tentatively planned for early next year).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/830#issuecomment-957188687
https://github.com/qupath/qupath/pull/830#issuecomment-957188687:449,Modifiability,refactor,refactoring,449,"Thanks @tp81! It might take me a bit of time to look at this in detail, because I've switched focus temporarily to finish some papers. First thoughts: I've also had the issue of having to click on the viewer to activate it for backspace to work, I agree it would be best to avoid this. Minor concerns are; * it introduces public methods, and I'd rather reduce this as much as possible; * if it basically duplicates some code elsewhere, perhaps some refactoring elsewhere could promote reuse. There is also a bit of JavaFX/macOS weirdness when it comes to single-key accelerators (i.e. not requiring Cmd+Something to run a menu item). I'm not sure if it's relevant here but anything accelerator-related takes some extra cross-platform testing. I've assigned it to a v0.4.0 milestone to remind us to try to get this functionality in that release (tentatively planned for early next year).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/830#issuecomment-957188687
https://github.com/qupath/qupath/pull/830#issuecomment-957188687:274,Safety,avoid,avoid,274,"Thanks @tp81! It might take me a bit of time to look at this in detail, because I've switched focus temporarily to finish some papers. First thoughts: I've also had the issue of having to click on the viewer to activate it for backspace to work, I agree it would be best to avoid this. Minor concerns are; * it introduces public methods, and I'd rather reduce this as much as possible; * if it basically duplicates some code elsewhere, perhaps some refactoring elsewhere could promote reuse. There is also a bit of JavaFX/macOS weirdness when it comes to single-key accelerators (i.e. not requiring Cmd+Something to run a menu item). I'm not sure if it's relevant here but anything accelerator-related takes some extra cross-platform testing. I've assigned it to a v0.4.0 milestone to remind us to try to get this functionality in that release (tentatively planned for early next year).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/830#issuecomment-957188687
https://github.com/qupath/qupath/pull/830#issuecomment-957188687:734,Testability,test,testing,734,"Thanks @tp81! It might take me a bit of time to look at this in detail, because I've switched focus temporarily to finish some papers. First thoughts: I've also had the issue of having to click on the viewer to activate it for backspace to work, I agree it would be best to avoid this. Minor concerns are; * it introduces public methods, and I'd rather reduce this as much as possible; * if it basically duplicates some code elsewhere, perhaps some refactoring elsewhere could promote reuse. There is also a bit of JavaFX/macOS weirdness when it comes to single-key accelerators (i.e. not requiring Cmd+Something to run a menu item). I'm not sure if it's relevant here but anything accelerator-related takes some extra cross-platform testing. I've assigned it to a v0.4.0 milestone to remind us to try to get this functionality in that release (tentatively planned for early next year).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/830#issuecomment-957188687
https://github.com/qupath/qupath/pull/830#issuecomment-974651012:189,Safety,safe,safer,189,"Hi @tp81 I've had a look at this and would like to make a counter-offer :). Would https://github.com/qupath/qupath/pull/848 be a suitable replacement?. Triggering the 'Delete' button feels safer to me than copying the viewer behavior. I think the main difference is that my proposed alternative will always prompt for confirmation, while backspace within the viewer could delete a single selected annotation immediately. It also means both buttons (*Select all* and *Delete*) have exact keyboard replacements. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/830#issuecomment-974651012
https://github.com/qupath/qupath/issues/831#issuecomment-949332484:343,Availability,error,error,343,"Hi @charleshugo I would need more information to understand if this is a bug, including; * Version of QuPath you are using; * Type of classifier (e.g. RTrees, ANN); * Information about how many training annotations you have (e.g. a few hundred cells, or a few million); * Number of features for the classifier; * What happens on freezing (any error message, it eventually works again or it never works). I would also need a way to replicate the issue. Memory use was improved in v0.3.0, but elements of the live training and prediction cannot easily be parallelised because QuPath is a JavaFX application, which requires 1 thread for the user interface. Based on your description, my guess is that you may have too many training annotations - or your training annotations are too large. I suggest only drawing small training annotations to begin with, and gradually increase annotations to correct misclassifications. This can also easily happen by accident: if you have a single large annotation that has a classification (e.g. defining the entire tissue) then this will be used during classifier training and may cause a freeze. One workaround to this is to leave any large regions unclassified (or [use an 'ignored' class with an asterisk in the name](https://qupath.readthedocs.io/en/stable/docs/concepts/classifications.html#ignored-classifications); I often use `Region*`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949332484
https://github.com/qupath/qupath/issues/831#issuecomment-949332484:349,Integrability,message,message,349,"Hi @charleshugo I would need more information to understand if this is a bug, including; * Version of QuPath you are using; * Type of classifier (e.g. RTrees, ANN); * Information about how many training annotations you have (e.g. a few hundred cells, or a few million); * Number of features for the classifier; * What happens on freezing (any error message, it eventually works again or it never works). I would also need a way to replicate the issue. Memory use was improved in v0.3.0, but elements of the live training and prediction cannot easily be parallelised because QuPath is a JavaFX application, which requires 1 thread for the user interface. Based on your description, my guess is that you may have too many training annotations - or your training annotations are too large. I suggest only drawing small training annotations to begin with, and gradually increase annotations to correct misclassifications. This can also easily happen by accident: if you have a single large annotation that has a classification (e.g. defining the entire tissue) then this will be used during classifier training and may cause a freeze. One workaround to this is to leave any large regions unclassified (or [use an 'ignored' class with an asterisk in the name](https://qupath.readthedocs.io/en/stable/docs/concepts/classifications.html#ignored-classifications); I often use `Region*`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949332484
https://github.com/qupath/qupath/issues/831#issuecomment-949332484:643,Integrability,interface,interface,643,"Hi @charleshugo I would need more information to understand if this is a bug, including; * Version of QuPath you are using; * Type of classifier (e.g. RTrees, ANN); * Information about how many training annotations you have (e.g. a few hundred cells, or a few million); * Number of features for the classifier; * What happens on freezing (any error message, it eventually works again or it never works). I would also need a way to replicate the issue. Memory use was improved in v0.3.0, but elements of the live training and prediction cannot easily be parallelised because QuPath is a JavaFX application, which requires 1 thread for the user interface. Based on your description, my guess is that you may have too many training annotations - or your training annotations are too large. I suggest only drawing small training annotations to begin with, and gradually increase annotations to correct misclassifications. This can also easily happen by accident: if you have a single large annotation that has a classification (e.g. defining the entire tissue) then this will be used during classifier training and may cause a freeze. One workaround to this is to leave any large regions unclassified (or [use an 'ignored' class with an asterisk in the name](https://qupath.readthedocs.io/en/stable/docs/concepts/classifications.html#ignored-classifications); I often use `Region*`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949332484
https://github.com/qupath/qupath/issues/831#issuecomment-949332484:525,Safety,predict,prediction,525,"Hi @charleshugo I would need more information to understand if this is a bug, including; * Version of QuPath you are using; * Type of classifier (e.g. RTrees, ANN); * Information about how many training annotations you have (e.g. a few hundred cells, or a few million); * Number of features for the classifier; * What happens on freezing (any error message, it eventually works again or it never works). I would also need a way to replicate the issue. Memory use was improved in v0.3.0, but elements of the live training and prediction cannot easily be parallelised because QuPath is a JavaFX application, which requires 1 thread for the user interface. Based on your description, my guess is that you may have too many training annotations - or your training annotations are too large. I suggest only drawing small training annotations to begin with, and gradually increase annotations to correct misclassifications. This can also easily happen by accident: if you have a single large annotation that has a classification (e.g. defining the entire tissue) then this will be used during classifier training and may cause a freeze. One workaround to this is to leave any large regions unclassified (or [use an 'ignored' class with an asterisk in the name](https://qupath.readthedocs.io/en/stable/docs/concepts/classifications.html#ignored-classifications); I often use `Region*`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949332484
https://github.com/qupath/qupath/issues/831#issuecomment-949927812:161,Safety,detect,detected,161,"Hi Pete,. Thank you for your reply!; Version of QuPath you are using: 0.3.0; Type of classifier: RTrees; How many training annotations: 1+ Million to 3+ Million detected cells and 200+ annotations which cover 90% of the detected cells; Number of features for the classifier: 20 to 30; What happens on freezing: when freezing, only one core of CPU is running, less than 10G of 64G RAM is occupied. the rotating icon is keep rotating. Other issue:; Classify -> Train Object Classifier -> Select Class, the pop up window is minimized and can not be resized so I can't choose classes. This window issue happen in multiple place, when I choose Simple tissue detection from ""Ctrl-L"". When the number of detect cells is 3 million, Exporting objects will last 20 to 30 minutes, saving any change will take 3 to 5 minutes, importing a 7G geojson will take nearly 45mins to 1hour, not because of the shortage of resources. I noticed that the usage of CPU is 1 to 2 CPU and RAM is 6 to 10G when exporting and importing, much lower than I assigned to Qpath.. May you consider to re-write Qpath with other language to parallelize exporting, importing, saving etc. I/O related tasks and the Parquet format may be a better format than geojson. Without parallelize above task, Qpath is good at detection but freezing in the scenario of Millions level I/O, training and classifying. We have to turn to other tools to analyze the data exported from Qpath. Thank you Pete for your effort!; Charles",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949927812
https://github.com/qupath/qupath/issues/831#issuecomment-949927812:220,Safety,detect,detected,220,"Hi Pete,. Thank you for your reply!; Version of QuPath you are using: 0.3.0; Type of classifier: RTrees; How many training annotations: 1+ Million to 3+ Million detected cells and 200+ annotations which cover 90% of the detected cells; Number of features for the classifier: 20 to 30; What happens on freezing: when freezing, only one core of CPU is running, less than 10G of 64G RAM is occupied. the rotating icon is keep rotating. Other issue:; Classify -> Train Object Classifier -> Select Class, the pop up window is minimized and can not be resized so I can't choose classes. This window issue happen in multiple place, when I choose Simple tissue detection from ""Ctrl-L"". When the number of detect cells is 3 million, Exporting objects will last 20 to 30 minutes, saving any change will take 3 to 5 minutes, importing a 7G geojson will take nearly 45mins to 1hour, not because of the shortage of resources. I noticed that the usage of CPU is 1 to 2 CPU and RAM is 6 to 10G when exporting and importing, much lower than I assigned to Qpath.. May you consider to re-write Qpath with other language to parallelize exporting, importing, saving etc. I/O related tasks and the Parquet format may be a better format than geojson. Without parallelize above task, Qpath is good at detection but freezing in the scenario of Millions level I/O, training and classifying. We have to turn to other tools to analyze the data exported from Qpath. Thank you Pete for your effort!; Charles",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949927812
https://github.com/qupath/qupath/issues/831#issuecomment-949927812:653,Safety,detect,detection,653,"Hi Pete,. Thank you for your reply!; Version of QuPath you are using: 0.3.0; Type of classifier: RTrees; How many training annotations: 1+ Million to 3+ Million detected cells and 200+ annotations which cover 90% of the detected cells; Number of features for the classifier: 20 to 30; What happens on freezing: when freezing, only one core of CPU is running, less than 10G of 64G RAM is occupied. the rotating icon is keep rotating. Other issue:; Classify -> Train Object Classifier -> Select Class, the pop up window is minimized and can not be resized so I can't choose classes. This window issue happen in multiple place, when I choose Simple tissue detection from ""Ctrl-L"". When the number of detect cells is 3 million, Exporting objects will last 20 to 30 minutes, saving any change will take 3 to 5 minutes, importing a 7G geojson will take nearly 45mins to 1hour, not because of the shortage of resources. I noticed that the usage of CPU is 1 to 2 CPU and RAM is 6 to 10G when exporting and importing, much lower than I assigned to Qpath.. May you consider to re-write Qpath with other language to parallelize exporting, importing, saving etc. I/O related tasks and the Parquet format may be a better format than geojson. Without parallelize above task, Qpath is good at detection but freezing in the scenario of Millions level I/O, training and classifying. We have to turn to other tools to analyze the data exported from Qpath. Thank you Pete for your effort!; Charles",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949927812
https://github.com/qupath/qupath/issues/831#issuecomment-949927812:697,Safety,detect,detect,697,"Hi Pete,. Thank you for your reply!; Version of QuPath you are using: 0.3.0; Type of classifier: RTrees; How many training annotations: 1+ Million to 3+ Million detected cells and 200+ annotations which cover 90% of the detected cells; Number of features for the classifier: 20 to 30; What happens on freezing: when freezing, only one core of CPU is running, less than 10G of 64G RAM is occupied. the rotating icon is keep rotating. Other issue:; Classify -> Train Object Classifier -> Select Class, the pop up window is minimized and can not be resized so I can't choose classes. This window issue happen in multiple place, when I choose Simple tissue detection from ""Ctrl-L"". When the number of detect cells is 3 million, Exporting objects will last 20 to 30 minutes, saving any change will take 3 to 5 minutes, importing a 7G geojson will take nearly 45mins to 1hour, not because of the shortage of resources. I noticed that the usage of CPU is 1 to 2 CPU and RAM is 6 to 10G when exporting and importing, much lower than I assigned to Qpath.. May you consider to re-write Qpath with other language to parallelize exporting, importing, saving etc. I/O related tasks and the Parquet format may be a better format than geojson. Without parallelize above task, Qpath is good at detection but freezing in the scenario of Millions level I/O, training and classifying. We have to turn to other tools to analyze the data exported from Qpath. Thank you Pete for your effort!; Charles",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949927812
https://github.com/qupath/qupath/issues/831#issuecomment-949927812:1278,Safety,detect,detection,1278,"Hi Pete,. Thank you for your reply!; Version of QuPath you are using: 0.3.0; Type of classifier: RTrees; How many training annotations: 1+ Million to 3+ Million detected cells and 200+ annotations which cover 90% of the detected cells; Number of features for the classifier: 20 to 30; What happens on freezing: when freezing, only one core of CPU is running, less than 10G of 64G RAM is occupied. the rotating icon is keep rotating. Other issue:; Classify -> Train Object Classifier -> Select Class, the pop up window is minimized and can not be resized so I can't choose classes. This window issue happen in multiple place, when I choose Simple tissue detection from ""Ctrl-L"". When the number of detect cells is 3 million, Exporting objects will last 20 to 30 minutes, saving any change will take 3 to 5 minutes, importing a 7G geojson will take nearly 45mins to 1hour, not because of the shortage of resources. I noticed that the usage of CPU is 1 to 2 CPU and RAM is 6 to 10G when exporting and importing, much lower than I assigned to Qpath.. May you consider to re-write Qpath with other language to parallelize exporting, importing, saving etc. I/O related tasks and the Parquet format may be a better format than geojson. Without parallelize above task, Qpath is good at detection but freezing in the scenario of Millions level I/O, training and classifying. We have to turn to other tools to analyze the data exported from Qpath. Thank you Pete for your effort!; Charles",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949927812
https://github.com/qupath/qupath/issues/831#issuecomment-949927812:639,Usability,Simpl,Simple,639,"Hi Pete,. Thank you for your reply!; Version of QuPath you are using: 0.3.0; Type of classifier: RTrees; How many training annotations: 1+ Million to 3+ Million detected cells and 200+ annotations which cover 90% of the detected cells; Number of features for the classifier: 20 to 30; What happens on freezing: when freezing, only one core of CPU is running, less than 10G of 64G RAM is occupied. the rotating icon is keep rotating. Other issue:; Classify -> Train Object Classifier -> Select Class, the pop up window is minimized and can not be resized so I can't choose classes. This window issue happen in multiple place, when I choose Simple tissue detection from ""Ctrl-L"". When the number of detect cells is 3 million, Exporting objects will last 20 to 30 minutes, saving any change will take 3 to 5 minutes, importing a 7G geojson will take nearly 45mins to 1hour, not because of the shortage of resources. I noticed that the usage of CPU is 1 to 2 CPU and RAM is 6 to 10G when exporting and importing, much lower than I assigned to Qpath.. May you consider to re-write Qpath with other language to parallelize exporting, importing, saving etc. I/O related tasks and the Parquet format may be a better format than geojson. Without parallelize above task, Qpath is good at detection but freezing in the scenario of Millions level I/O, training and classifying. We have to turn to other tools to analyze the data exported from Qpath. Thank you Pete for your effort!; Charles",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949927812
https://github.com/qupath/qupath/issues/831#issuecomment-950106875:1154,Energy Efficiency,efficient,efficiently,1154,"r and smaller training annotations. The actual `RTrees` classifiers are implemented in C++ (by OpenCV). After QuPath has generated the training data, the training itself is performed inside OpenCV and in accessible to QuPath. As far as I am aware, this is single-threaded in OpenCV and cannot be changed in QuPath. Similarly, JSON generation and parsing is performed with the help of the Gson library, so performance depends somewhat on Gson. GeoJSON is a standard for representing geometries; I think it solves a different problem from Parquet. In QuPath, it is primarily intended to facilitate exchanging annotations, where choosing an existing open format is strongly desirable for interoperability (rather than trying to define a new standard others have to follow). Performance should not be an issue with several hundred/thousand objects (the common scenario), but it will inevitably be slow to export to export millions of cells as GeoJSON. If you don't need geometry information, you could export much more efficiently features/classifications/centroids only (e.g. through [a measurement table](https://qupath.readthedocs.io/en/stable/docs/tutorials/exporting_measurements.html)). Alternatively, if you need a highly optimized solution or a custom format then you can implement one using a QuPath script or extension. I'd like to close this issue because I think there is no bug in QuPath. The best place for discussing the use of the software or suggested improvements is http://forum.image.sc/tag/qupath. >If you'd like to add a separate GitHub issue for the minimized windows, please fill in the bug report template. I have seen some issues on Ubuntu with Windows not being in the correct place, but not on Windows or macOS. I cannot tell if it is a problem that QuPath can solve, or if it is an issue in JavaFX. But the issue I have seen does not make the dialogs unusable. We don't have the bandwidth to test other linux distributions, so rely on fixes from others if there are problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950106875
https://github.com/qupath/qupath/issues/831#issuecomment-950106875:556,Integrability,depend,depends,556,"Thanks @charleshugo QuPath's object classifiers aren't intended to be trained with so many cells. I would strongly recommend using far fewer and smaller training annotations. The actual `RTrees` classifiers are implemented in C++ (by OpenCV). After QuPath has generated the training data, the training itself is performed inside OpenCV and in accessible to QuPath. As far as I am aware, this is single-threaded in OpenCV and cannot be changed in QuPath. Similarly, JSON generation and parsing is performed with the help of the Gson library, so performance depends somewhat on Gson. GeoJSON is a standard for representing geometries; I think it solves a different problem from Parquet. In QuPath, it is primarily intended to facilitate exchanging annotations, where choosing an existing open format is strongly desirable for interoperability (rather than trying to define a new standard others have to follow). Performance should not be an issue with several hundred/thousand objects (the common scenario), but it will inevitably be slow to export to export millions of cells as GeoJSON. If you don't need geometry information, you could export much more efficiently features/classifications/centroids only (e.g. through [a measurement table](https://qupath.readthedocs.io/en/stable/docs/tutorials/exporting_measurements.html)). Alternatively, if you need a highly optimized solution or a custom format then you can implement one using a QuPath script or extension. I'd like to close this issue because I think there is no bug in QuPath. The best place for discussing the use of the software or suggested improvements is http://forum.image.sc/tag/qupath. >If you'd like to add a separate GitHub issue for the minimized windows, please fill in the bug report template. I have seen some issues on Ubuntu with Windows not being in the correct place, but not on Windows or macOS. I cannot tell if it is a problem that QuPath can solve, or if it is an issue in JavaFX. But the issue I have seen does not mak",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950106875
https://github.com/qupath/qupath/issues/831#issuecomment-950106875:824,Integrability,interoperab,interoperability,824,"Thanks @charleshugo QuPath's object classifiers aren't intended to be trained with so many cells. I would strongly recommend using far fewer and smaller training annotations. The actual `RTrees` classifiers are implemented in C++ (by OpenCV). After QuPath has generated the training data, the training itself is performed inside OpenCV and in accessible to QuPath. As far as I am aware, this is single-threaded in OpenCV and cannot be changed in QuPath. Similarly, JSON generation and parsing is performed with the help of the Gson library, so performance depends somewhat on Gson. GeoJSON is a standard for representing geometries; I think it solves a different problem from Parquet. In QuPath, it is primarily intended to facilitate exchanging annotations, where choosing an existing open format is strongly desirable for interoperability (rather than trying to define a new standard others have to follow). Performance should not be an issue with several hundred/thousand objects (the common scenario), but it will inevitably be slow to export to export millions of cells as GeoJSON. If you don't need geometry information, you could export much more efficiently features/classifications/centroids only (e.g. through [a measurement table](https://qupath.readthedocs.io/en/stable/docs/tutorials/exporting_measurements.html)). Alternatively, if you need a highly optimized solution or a custom format then you can implement one using a QuPath script or extension. I'd like to close this issue because I think there is no bug in QuPath. The best place for discussing the use of the software or suggested improvements is http://forum.image.sc/tag/qupath. >If you'd like to add a separate GitHub issue for the minimized windows, please fill in the bug report template. I have seen some issues on Ubuntu with Windows not being in the correct place, but not on Windows or macOS. I cannot tell if it is a problem that QuPath can solve, or if it is an issue in JavaFX. But the issue I have seen does not mak",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950106875
https://github.com/qupath/qupath/issues/831#issuecomment-950106875:312,Performance,perform,performed,312,"Thanks @charleshugo QuPath's object classifiers aren't intended to be trained with so many cells. I would strongly recommend using far fewer and smaller training annotations. The actual `RTrees` classifiers are implemented in C++ (by OpenCV). After QuPath has generated the training data, the training itself is performed inside OpenCV and in accessible to QuPath. As far as I am aware, this is single-threaded in OpenCV and cannot be changed in QuPath. Similarly, JSON generation and parsing is performed with the help of the Gson library, so performance depends somewhat on Gson. GeoJSON is a standard for representing geometries; I think it solves a different problem from Parquet. In QuPath, it is primarily intended to facilitate exchanging annotations, where choosing an existing open format is strongly desirable for interoperability (rather than trying to define a new standard others have to follow). Performance should not be an issue with several hundred/thousand objects (the common scenario), but it will inevitably be slow to export to export millions of cells as GeoJSON. If you don't need geometry information, you could export much more efficiently features/classifications/centroids only (e.g. through [a measurement table](https://qupath.readthedocs.io/en/stable/docs/tutorials/exporting_measurements.html)). Alternatively, if you need a highly optimized solution or a custom format then you can implement one using a QuPath script or extension. I'd like to close this issue because I think there is no bug in QuPath. The best place for discussing the use of the software or suggested improvements is http://forum.image.sc/tag/qupath. >If you'd like to add a separate GitHub issue for the minimized windows, please fill in the bug report template. I have seen some issues on Ubuntu with Windows not being in the correct place, but not on Windows or macOS. I cannot tell if it is a problem that QuPath can solve, or if it is an issue in JavaFX. But the issue I have seen does not mak",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950106875
https://github.com/qupath/qupath/issues/831#issuecomment-950106875:496,Performance,perform,performed,496,"Thanks @charleshugo QuPath's object classifiers aren't intended to be trained with so many cells. I would strongly recommend using far fewer and smaller training annotations. The actual `RTrees` classifiers are implemented in C++ (by OpenCV). After QuPath has generated the training data, the training itself is performed inside OpenCV and in accessible to QuPath. As far as I am aware, this is single-threaded in OpenCV and cannot be changed in QuPath. Similarly, JSON generation and parsing is performed with the help of the Gson library, so performance depends somewhat on Gson. GeoJSON is a standard for representing geometries; I think it solves a different problem from Parquet. In QuPath, it is primarily intended to facilitate exchanging annotations, where choosing an existing open format is strongly desirable for interoperability (rather than trying to define a new standard others have to follow). Performance should not be an issue with several hundred/thousand objects (the common scenario), but it will inevitably be slow to export to export millions of cells as GeoJSON. If you don't need geometry information, you could export much more efficiently features/classifications/centroids only (e.g. through [a measurement table](https://qupath.readthedocs.io/en/stable/docs/tutorials/exporting_measurements.html)). Alternatively, if you need a highly optimized solution or a custom format then you can implement one using a QuPath script or extension. I'd like to close this issue because I think there is no bug in QuPath. The best place for discussing the use of the software or suggested improvements is http://forum.image.sc/tag/qupath. >If you'd like to add a separate GitHub issue for the minimized windows, please fill in the bug report template. I have seen some issues on Ubuntu with Windows not being in the correct place, but not on Windows or macOS. I cannot tell if it is a problem that QuPath can solve, or if it is an issue in JavaFX. But the issue I have seen does not mak",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950106875
https://github.com/qupath/qupath/issues/831#issuecomment-950106875:544,Performance,perform,performance,544,"Thanks @charleshugo QuPath's object classifiers aren't intended to be trained with so many cells. I would strongly recommend using far fewer and smaller training annotations. The actual `RTrees` classifiers are implemented in C++ (by OpenCV). After QuPath has generated the training data, the training itself is performed inside OpenCV and in accessible to QuPath. As far as I am aware, this is single-threaded in OpenCV and cannot be changed in QuPath. Similarly, JSON generation and parsing is performed with the help of the Gson library, so performance depends somewhat on Gson. GeoJSON is a standard for representing geometries; I think it solves a different problem from Parquet. In QuPath, it is primarily intended to facilitate exchanging annotations, where choosing an existing open format is strongly desirable for interoperability (rather than trying to define a new standard others have to follow). Performance should not be an issue with several hundred/thousand objects (the common scenario), but it will inevitably be slow to export to export millions of cells as GeoJSON. If you don't need geometry information, you could export much more efficiently features/classifications/centroids only (e.g. through [a measurement table](https://qupath.readthedocs.io/en/stable/docs/tutorials/exporting_measurements.html)). Alternatively, if you need a highly optimized solution or a custom format then you can implement one using a QuPath script or extension. I'd like to close this issue because I think there is no bug in QuPath. The best place for discussing the use of the software or suggested improvements is http://forum.image.sc/tag/qupath. >If you'd like to add a separate GitHub issue for the minimized windows, please fill in the bug report template. I have seen some issues on Ubuntu with Windows not being in the correct place, but not on Windows or macOS. I cannot tell if it is a problem that QuPath can solve, or if it is an issue in JavaFX. But the issue I have seen does not mak",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950106875
https://github.com/qupath/qupath/issues/831#issuecomment-950106875:910,Performance,Perform,Performance,910,"Thanks @charleshugo QuPath's object classifiers aren't intended to be trained with so many cells. I would strongly recommend using far fewer and smaller training annotations. The actual `RTrees` classifiers are implemented in C++ (by OpenCV). After QuPath has generated the training data, the training itself is performed inside OpenCV and in accessible to QuPath. As far as I am aware, this is single-threaded in OpenCV and cannot be changed in QuPath. Similarly, JSON generation and parsing is performed with the help of the Gson library, so performance depends somewhat on Gson. GeoJSON is a standard for representing geometries; I think it solves a different problem from Parquet. In QuPath, it is primarily intended to facilitate exchanging annotations, where choosing an existing open format is strongly desirable for interoperability (rather than trying to define a new standard others have to follow). Performance should not be an issue with several hundred/thousand objects (the common scenario), but it will inevitably be slow to export to export millions of cells as GeoJSON. If you don't need geometry information, you could export much more efficiently features/classifications/centroids only (e.g. through [a measurement table](https://qupath.readthedocs.io/en/stable/docs/tutorials/exporting_measurements.html)). Alternatively, if you need a highly optimized solution or a custom format then you can implement one using a QuPath script or extension. I'd like to close this issue because I think there is no bug in QuPath. The best place for discussing the use of the software or suggested improvements is http://forum.image.sc/tag/qupath. >If you'd like to add a separate GitHub issue for the minimized windows, please fill in the bug report template. I have seen some issues on Ubuntu with Windows not being in the correct place, but not on Windows or macOS. I cannot tell if it is a problem that QuPath can solve, or if it is an issue in JavaFX. But the issue I have seen does not mak",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950106875
https://github.com/qupath/qupath/issues/831#issuecomment-950106875:1364,Performance,optimiz,optimized,1364,"r and smaller training annotations. The actual `RTrees` classifiers are implemented in C++ (by OpenCV). After QuPath has generated the training data, the training itself is performed inside OpenCV and in accessible to QuPath. As far as I am aware, this is single-threaded in OpenCV and cannot be changed in QuPath. Similarly, JSON generation and parsing is performed with the help of the Gson library, so performance depends somewhat on Gson. GeoJSON is a standard for representing geometries; I think it solves a different problem from Parquet. In QuPath, it is primarily intended to facilitate exchanging annotations, where choosing an existing open format is strongly desirable for interoperability (rather than trying to define a new standard others have to follow). Performance should not be an issue with several hundred/thousand objects (the common scenario), but it will inevitably be slow to export to export millions of cells as GeoJSON. If you don't need geometry information, you could export much more efficiently features/classifications/centroids only (e.g. through [a measurement table](https://qupath.readthedocs.io/en/stable/docs/tutorials/exporting_measurements.html)). Alternatively, if you need a highly optimized solution or a custom format then you can implement one using a QuPath script or extension. I'd like to close this issue because I think there is no bug in QuPath. The best place for discussing the use of the software or suggested improvements is http://forum.image.sc/tag/qupath. >If you'd like to add a separate GitHub issue for the minimized windows, please fill in the bug report template. I have seen some issues on Ubuntu with Windows not being in the correct place, but not on Windows or macOS. I cannot tell if it is a problem that QuPath can solve, or if it is an issue in JavaFX. But the issue I have seen does not make the dialogs unusable. We don't have the bandwidth to test other linux distributions, so rely on fixes from others if there are problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950106875
https://github.com/qupath/qupath/issues/831#issuecomment-950106875:343,Security,access,accessible,343,"Thanks @charleshugo QuPath's object classifiers aren't intended to be trained with so many cells. I would strongly recommend using far fewer and smaller training annotations. The actual `RTrees` classifiers are implemented in C++ (by OpenCV). After QuPath has generated the training data, the training itself is performed inside OpenCV and in accessible to QuPath. As far as I am aware, this is single-threaded in OpenCV and cannot be changed in QuPath. Similarly, JSON generation and parsing is performed with the help of the Gson library, so performance depends somewhat on Gson. GeoJSON is a standard for representing geometries; I think it solves a different problem from Parquet. In QuPath, it is primarily intended to facilitate exchanging annotations, where choosing an existing open format is strongly desirable for interoperability (rather than trying to define a new standard others have to follow). Performance should not be an issue with several hundred/thousand objects (the common scenario), but it will inevitably be slow to export to export millions of cells as GeoJSON. If you don't need geometry information, you could export much more efficiently features/classifications/centroids only (e.g. through [a measurement table](https://qupath.readthedocs.io/en/stable/docs/tutorials/exporting_measurements.html)). Alternatively, if you need a highly optimized solution or a custom format then you can implement one using a QuPath script or extension. I'd like to close this issue because I think there is no bug in QuPath. The best place for discussing the use of the software or suggested improvements is http://forum.image.sc/tag/qupath. >If you'd like to add a separate GitHub issue for the minimized windows, please fill in the bug report template. I have seen some issues on Ubuntu with Windows not being in the correct place, but not on Windows or macOS. I cannot tell if it is a problem that QuPath can solve, or if it is an issue in JavaFX. But the issue I have seen does not mak",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950106875
https://github.com/qupath/qupath/issues/831#issuecomment-950106875:2056,Testability,test,test,2056,"r and smaller training annotations. The actual `RTrees` classifiers are implemented in C++ (by OpenCV). After QuPath has generated the training data, the training itself is performed inside OpenCV and in accessible to QuPath. As far as I am aware, this is single-threaded in OpenCV and cannot be changed in QuPath. Similarly, JSON generation and parsing is performed with the help of the Gson library, so performance depends somewhat on Gson. GeoJSON is a standard for representing geometries; I think it solves a different problem from Parquet. In QuPath, it is primarily intended to facilitate exchanging annotations, where choosing an existing open format is strongly desirable for interoperability (rather than trying to define a new standard others have to follow). Performance should not be an issue with several hundred/thousand objects (the common scenario), but it will inevitably be slow to export to export millions of cells as GeoJSON. If you don't need geometry information, you could export much more efficiently features/classifications/centroids only (e.g. through [a measurement table](https://qupath.readthedocs.io/en/stable/docs/tutorials/exporting_measurements.html)). Alternatively, if you need a highly optimized solution or a custom format then you can implement one using a QuPath script or extension. I'd like to close this issue because I think there is no bug in QuPath. The best place for discussing the use of the software or suggested improvements is http://forum.image.sc/tag/qupath. >If you'd like to add a separate GitHub issue for the minimized windows, please fill in the bug report template. I have seen some issues on Ubuntu with Windows not being in the correct place, but not on Windows or macOS. I cannot tell if it is a problem that QuPath can solve, or if it is an issue in JavaFX. But the issue I have seen does not make the dialogs unusable. We don't have the bandwidth to test other linux distributions, so rely on fixes from others if there are problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950106875
https://github.com/qupath/qupath/issues/831#issuecomment-950153737:24,Usability,clear,clear,24,"Thank you Pete for your clear explanation!; If Qpath is not intended to deal with Millions of cells, could you recommend a software which have abilities to do it?; Thank you!; Charles",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950153737
https://github.com/qupath/qupath/issues/832#issuecomment-956030617:32,Deployability,install,installed,32,"I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see [docs](https://qupath.readthedocs.io/en/stable/docs/intro/installation.html#macos)). Does that method give the installation failed result for you? Could you find any solution?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956030617
https://github.com/qupath/qupath/issues/832#issuecomment-956030617:212,Deployability,install,installation,212,"I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see [docs](https://qupath.readthedocs.io/en/stable/docs/intro/installation.html#macos)). Does that method give the installation failed result for you? Could you find any solution?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956030617
https://github.com/qupath/qupath/issues/832#issuecomment-956030617:265,Deployability,install,installation,265,"I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see [docs](https://qupath.readthedocs.io/en/stable/docs/intro/installation.html#macos)). Does that method give the installation failed result for you? Could you find any solution?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956030617
https://github.com/qupath/qupath/issues/832#issuecomment-956131733:67,Deployability,install,installation,67,"Yes this method doesn't work.; Are there any dependencies for this installation like Java etc? Can I install through brew? (brew.sh); ________________________________; From: Pete ***@***.***>; Sent: Monday, November 1, 2021 4:23 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see docs<https://urldefense.proofpoint.com/v2/url?u=https-3A__qupath.readthedocs.io_en_stable_docs_intro_installation.html-23macos&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=LQpZPfcWNjnpyAuCn0AUX77UW3OS6YgRTqYTkj4qxu8&e=>). Does that method give the installation failed result for you? Could you find any solution?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956030617&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=bhuMPi2-_5ssdSHfMHAer69h6Hjg7GdSNMjxoB5ybkw&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4HDU7S4VRAOU2I7HBDUJZE7FANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=-UbBn_crqpKeNfYMQmgXYnMsynlZx_lTn7DwWeLsaJI&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956131733
https://github.com/qupath/qupath/issues/832#issuecomment-956131733:101,Deployability,install,install,101,"Yes this method doesn't work.; Are there any dependencies for this installation like Java etc? Can I install through brew? (brew.sh); ________________________________; From: Pete ***@***.***>; Sent: Monday, November 1, 2021 4:23 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see docs<https://urldefense.proofpoint.com/v2/url?u=https-3A__qupath.readthedocs.io_en_stable_docs_intro_installation.html-23macos&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=LQpZPfcWNjnpyAuCn0AUX77UW3OS6YgRTqYTkj4qxu8&e=>). Does that method give the installation failed result for you? Could you find any solution?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956030617&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=bhuMPi2-_5ssdSHfMHAer69h6Hjg7GdSNMjxoB5ybkw&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4HDU7S4VRAOU2I7HBDUJZE7FANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=-UbBn_crqpKeNfYMQmgXYnMsynlZx_lTn7DwWeLsaJI&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956131733
https://github.com/qupath/qupath/issues/832#issuecomment-956131733:353,Deployability,install,installation,353,"Yes this method doesn't work.; Are there any dependencies for this installation like Java etc? Can I install through brew? (brew.sh); ________________________________; From: Pete ***@***.***>; Sent: Monday, November 1, 2021 4:23 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see docs<https://urldefense.proofpoint.com/v2/url?u=https-3A__qupath.readthedocs.io_en_stable_docs_intro_installation.html-23macos&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=LQpZPfcWNjnpyAuCn0AUX77UW3OS6YgRTqYTkj4qxu8&e=>). Does that method give the installation failed result for you? Could you find any solution?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956030617&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=bhuMPi2-_5ssdSHfMHAer69h6Hjg7GdSNMjxoB5ybkw&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4HDU7S4VRAOU2I7HBDUJZE7FANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=-UbBn_crqpKeNfYMQmgXYnMsynlZx_lTn7DwWeLsaJI&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956131733
https://github.com/qupath/qupath/issues/832#issuecomment-956131733:461,Deployability,install,installed,461,"Yes this method doesn't work.; Are there any dependencies for this installation like Java etc? Can I install through brew? (brew.sh); ________________________________; From: Pete ***@***.***>; Sent: Monday, November 1, 2021 4:23 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see docs<https://urldefense.proofpoint.com/v2/url?u=https-3A__qupath.readthedocs.io_en_stable_docs_intro_installation.html-23macos&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=LQpZPfcWNjnpyAuCn0AUX77UW3OS6YgRTqYTkj4qxu8&e=>). Does that method give the installation failed result for you? Could you find any solution?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956030617&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=bhuMPi2-_5ssdSHfMHAer69h6Hjg7GdSNMjxoB5ybkw&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4HDU7S4VRAOU2I7HBDUJZE7FANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=-UbBn_crqpKeNfYMQmgXYnMsynlZx_lTn7DwWeLsaJI&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956131733
https://github.com/qupath/qupath/issues/832#issuecomment-956131733:914,Deployability,install,installation,914,"Yes this method doesn't work.; Are there any dependencies for this installation like Java etc? Can I install through brew? (brew.sh); ________________________________; From: Pete ***@***.***>; Sent: Monday, November 1, 2021 4:23 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see docs<https://urldefense.proofpoint.com/v2/url?u=https-3A__qupath.readthedocs.io_en_stable_docs_intro_installation.html-23macos&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=LQpZPfcWNjnpyAuCn0AUX77UW3OS6YgRTqYTkj4qxu8&e=>). Does that method give the installation failed result for you? Could you find any solution?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956030617&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=bhuMPi2-_5ssdSHfMHAer69h6Hjg7GdSNMjxoB5ybkw&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4HDU7S4VRAOU2I7HBDUJZE7FANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=-UbBn_crqpKeNfYMQmgXYnMsynlZx_lTn7DwWeLsaJI&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956131733
https://github.com/qupath/qupath/issues/832#issuecomment-956131733:45,Integrability,depend,dependencies,45,"Yes this method doesn't work.; Are there any dependencies for this installation like Java etc? Can I install through brew? (brew.sh); ________________________________; From: Pete ***@***.***>; Sent: Monday, November 1, 2021 4:23 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see docs<https://urldefense.proofpoint.com/v2/url?u=https-3A__qupath.readthedocs.io_en_stable_docs_intro_installation.html-23macos&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=LQpZPfcWNjnpyAuCn0AUX77UW3OS6YgRTqYTkj4qxu8&e=>). Does that method give the installation failed result for you? Could you find any solution?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956030617&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=bhuMPi2-_5ssdSHfMHAer69h6Hjg7GdSNMjxoB5ybkw&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4HDU7S4VRAOU2I7HBDUJZE7FANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=-UbBn_crqpKeNfYMQmgXYnMsynlZx_lTn7DwWeLsaJI&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956131733
https://github.com/qupath/qupath/issues/832#issuecomment-956131733:420,Integrability,Message,Message,420,"Yes this method doesn't work.; Are there any dependencies for this installation like Java etc? Can I install through brew? (brew.sh); ________________________________; From: Pete ***@***.***>; Sent: Monday, November 1, 2021 4:23 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see docs<https://urldefense.proofpoint.com/v2/url?u=https-3A__qupath.readthedocs.io_en_stable_docs_intro_installation.html-23macos&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=LQpZPfcWNjnpyAuCn0AUX77UW3OS6YgRTqYTkj4qxu8&e=>). Does that method give the installation failed result for you? Could you find any solution?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956030617&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=bhuMPi2-_5ssdSHfMHAer69h6Hjg7GdSNMjxoB5ybkw&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4HDU7S4VRAOU2I7HBDUJZE7FANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=-UbBn_crqpKeNfYMQmgXYnMsynlZx_lTn7DwWeLsaJI&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956131733
https://github.com/qupath/qupath/issues/832#issuecomment-956171629:155,Availability,error,error,155,"No external dependencies should be needed - a Java Runtime Environment is included in the installation. A google search for `""the installer encountered an error that caused the installation to fail""` reveals quite a few discussions about all kinds of different software applications where the error appeared, but I'm afraid I can't replicate the issue so I can't test any of the proposed solutions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956171629
https://github.com/qupath/qupath/issues/832#issuecomment-956171629:293,Availability,error,error,293,"No external dependencies should be needed - a Java Runtime Environment is included in the installation. A google search for `""the installer encountered an error that caused the installation to fail""` reveals quite a few discussions about all kinds of different software applications where the error appeared, but I'm afraid I can't replicate the issue so I can't test any of the proposed solutions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956171629
https://github.com/qupath/qupath/issues/832#issuecomment-956171629:90,Deployability,install,installation,90,"No external dependencies should be needed - a Java Runtime Environment is included in the installation. A google search for `""the installer encountered an error that caused the installation to fail""` reveals quite a few discussions about all kinds of different software applications where the error appeared, but I'm afraid I can't replicate the issue so I can't test any of the proposed solutions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956171629
https://github.com/qupath/qupath/issues/832#issuecomment-956171629:130,Deployability,install,installer,130,"No external dependencies should be needed - a Java Runtime Environment is included in the installation. A google search for `""the installer encountered an error that caused the installation to fail""` reveals quite a few discussions about all kinds of different software applications where the error appeared, but I'm afraid I can't replicate the issue so I can't test any of the proposed solutions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956171629
https://github.com/qupath/qupath/issues/832#issuecomment-956171629:177,Deployability,install,installation,177,"No external dependencies should be needed - a Java Runtime Environment is included in the installation. A google search for `""the installer encountered an error that caused the installation to fail""` reveals quite a few discussions about all kinds of different software applications where the error appeared, but I'm afraid I can't replicate the issue so I can't test any of the proposed solutions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956171629
https://github.com/qupath/qupath/issues/832#issuecomment-956171629:12,Integrability,depend,dependencies,12,"No external dependencies should be needed - a Java Runtime Environment is included in the installation. A google search for `""the installer encountered an error that caused the installation to fail""` reveals quite a few discussions about all kinds of different software applications where the error appeared, but I'm afraid I can't replicate the issue so I can't test any of the proposed solutions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956171629
https://github.com/qupath/qupath/issues/832#issuecomment-956171629:363,Testability,test,test,363,"No external dependencies should be needed - a Java Runtime Environment is included in the installation. A google search for `""the installer encountered an error that caused the installation to fail""` reveals quite a few discussions about all kinds of different software applications where the error appeared, but I'm afraid I can't replicate the issue so I can't test any of the proposed solutions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956171629
https://github.com/qupath/qupath/issues/832#issuecomment-956184479:88,Deployability,install,installing,88,"It was never stated, but I assume the basics were tried? Redownload the program, or try installing some other open source software to make sure it is not a general installer issue?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956184479
https://github.com/qupath/qupath/issues/832#issuecomment-956184479:164,Deployability,install,installer,164,"It was never stated, but I assume the basics were tried? Redownload the program, or try installing some other open source software to make sure it is not a general installer issue?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956184479
https://github.com/qupath/qupath/issues/832#issuecomment-956212704:246,Deployability,install,installation,246,"These didn't work; ________________________________; From: MicroscopyRA ***@***.***>; Sent: Monday, November 1, 2021 8:16 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. It was never stated, but I assume the basics were tried? Redownload the program, and try installing some other open source software to make sure it is not a general installer issue?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956184479&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=SQhV_0ba6-7CvI8ayoIH4C76t0aAhahDS5S6wo8_DVs&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4BQLF57LQWGJAMJIODUJ2AJTANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=-ILDS4gaU5QrQMsdAA9GOM2cBaKGlpT-Np_xIm64a8U&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=01Hiwb5cDlsaeZ2DtiU2NgPOzL5Jk9Nw-SGVwQDHzHE&e=> or Android<https://urldefense.proofpoint.com/v2/url?u=https-3A__play.google.com_store_apps_details-3Fid-3Dcom.github.android-26referrer-3Dutm-5Fcampaign-253Dnotification-2Demail-2526utm-5Fmedium-253Demail-2526utm-5Fsource-253Dgithub&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=mJkWY6TXlFplGt0",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956212704
https://github.com/qupath/qupath/issues/832#issuecomment-956212704:411,Deployability,install,installing,411,"These didn't work; ________________________________; From: MicroscopyRA ***@***.***>; Sent: Monday, November 1, 2021 8:16 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. It was never stated, but I assume the basics were tried? Redownload the program, and try installing some other open source software to make sure it is not a general installer issue?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956184479&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=SQhV_0ba6-7CvI8ayoIH4C76t0aAhahDS5S6wo8_DVs&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4BQLF57LQWGJAMJIODUJ2AJTANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=-ILDS4gaU5QrQMsdAA9GOM2cBaKGlpT-Np_xIm64a8U&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=01Hiwb5cDlsaeZ2DtiU2NgPOzL5Jk9Nw-SGVwQDHzHE&e=> or Android<https://urldefense.proofpoint.com/v2/url?u=https-3A__play.google.com_store_apps_details-3Fid-3Dcom.github.android-26referrer-3Dutm-5Fcampaign-253Dnotification-2Demail-2526utm-5Fmedium-253Demail-2526utm-5Fsource-253Dgithub&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=mJkWY6TXlFplGt0",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956212704
https://github.com/qupath/qupath/issues/832#issuecomment-956212704:487,Deployability,install,installer,487,"These didn't work; ________________________________; From: MicroscopyRA ***@***.***>; Sent: Monday, November 1, 2021 8:16 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. It was never stated, but I assume the basics were tried? Redownload the program, and try installing some other open source software to make sure it is not a general installer issue?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956184479&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=SQhV_0ba6-7CvI8ayoIH4C76t0aAhahDS5S6wo8_DVs&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4BQLF57LQWGJAMJIODUJ2AJTANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=-ILDS4gaU5QrQMsdAA9GOM2cBaKGlpT-Np_xIm64a8U&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=01Hiwb5cDlsaeZ2DtiU2NgPOzL5Jk9Nw-SGVwQDHzHE&e=> or Android<https://urldefense.proofpoint.com/v2/url?u=https-3A__play.google.com_store_apps_details-3Fid-3Dcom.github.android-26referrer-3Dutm-5Fcampaign-253Dnotification-2Demail-2526utm-5Fmedium-253Demail-2526utm-5Fsource-253Dgithub&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=mJkWY6TXlFplGt0",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956212704
https://github.com/qupath/qupath/issues/832#issuecomment-956212704:313,Integrability,Message,Message,313,"These didn't work; ________________________________; From: MicroscopyRA ***@***.***>; Sent: Monday, November 1, 2021 8:16 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. It was never stated, but I assume the basics were tried? Redownload the program, and try installing some other open source software to make sure it is not a general installer issue?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956184479&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=SQhV_0ba6-7CvI8ayoIH4C76t0aAhahDS5S6wo8_DVs&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4BQLF57LQWGJAMJIODUJ2AJTANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=-ILDS4gaU5QrQMsdAA9GOM2cBaKGlpT-Np_xIm64a8U&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=01Hiwb5cDlsaeZ2DtiU2NgPOzL5Jk9Nw-SGVwQDHzHE&e=> or Android<https://urldefense.proofpoint.com/v2/url?u=https-3A__play.google.com_store_apps_details-3Fid-3Dcom.github.android-26referrer-3Dutm-5Fcampaign-253Dnotification-2Demail-2526utm-5Fmedium-253Demail-2526utm-5Fsource-253Dgithub&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=mJkWY6TXlFplGt0",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956212704
https://github.com/qupath/qupath/issues/832#issuecomment-956259133:26,Availability,avail,available,26,Is there an installer log available with useful information (as described at [this post](https://apple.stackexchange.com/questions/275915/debugging-the-installer-encountered-an-error-that-caused-the-installation-to-fa))?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956259133
https://github.com/qupath/qupath/issues/832#issuecomment-956259133:177,Availability,error,error-that-caused-the-installation-to-fa,177,Is there an installer log available with useful information (as described at [this post](https://apple.stackexchange.com/questions/275915/debugging-the-installer-encountered-an-error-that-caused-the-installation-to-fa))?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956259133
https://github.com/qupath/qupath/issues/832#issuecomment-956259133:12,Deployability,install,installer,12,Is there an installer log available with useful information (as described at [this post](https://apple.stackexchange.com/questions/275915/debugging-the-installer-encountered-an-error-that-caused-the-installation-to-fa))?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956259133
https://github.com/qupath/qupath/issues/832#issuecomment-956259133:152,Deployability,install,installer-encountered-an-error-that-caused-the-installation-to-fa,152,Is there an installer log available with useful information (as described at [this post](https://apple.stackexchange.com/questions/275915/debugging-the-installer-encountered-an-error-that-caused-the-installation-to-fa))?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956259133
https://github.com/qupath/qupath/issues/832#issuecomment-956259133:22,Testability,log,log,22,Is there an installer log available with useful information (as described at [this post](https://apple.stackexchange.com/questions/275915/debugging-the-installer-encountered-an-error-that-caused-the-installation-to-fa))?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956259133
https://github.com/qupath/qupath/issues/832#issuecomment-966046117:113,Availability,down,downloads,113,"I will close this issue because there isn't anything we can replicate or fix. I see there have been about >4,500 downloads of the macOS version of v0.3 at this point, and since there haven't been other reports I guess it may be a system-specific problem that we can't fix on the QuPath side. Please do add comments if there is further info. Meanwhile, it might be possible to get a version of QuPath that works for you by following the [build from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) instructions. This can directly generate an .app rather than a .pkg, so might work around any installer problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-966046117
https://github.com/qupath/qupath/issues/832#issuecomment-966046117:620,Deployability,install,installer,620,"I will close this issue because there isn't anything we can replicate or fix. I see there have been about >4,500 downloads of the macOS version of v0.3 at this point, and since there haven't been other reports I guess it may be a system-specific problem that we can't fix on the QuPath side. Please do add comments if there is further info. Meanwhile, it might be possible to get a version of QuPath that works for you by following the [build from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) instructions. This can directly generate an .app rather than a .pkg, so might work around any installer problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-966046117
https://github.com/qupath/qupath/issues/833#issuecomment-952868251:97,Energy Efficiency,adapt,adapts-to-,97,Hi @mmfalco Does this forum discussion answer your question? https://forum.image.sc/t/qupath-app-adapts-to-4k-screen/54077. (The forum is better for all questions - GitHub issues should just be for bugs; I'm not sure that this describes a bug that we could replicate and fix),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/833#issuecomment-952868251
https://github.com/qupath/qupath/issues/833#issuecomment-952868251:97,Modifiability,adapt,adapts-to-,97,Hi @mmfalco Does this forum discussion answer your question? https://forum.image.sc/t/qupath-app-adapts-to-4k-screen/54077. (The forum is better for all questions - GitHub issues should just be for bugs; I'm not sure that this describes a bug that we could replicate and fix),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/833#issuecomment-952868251
https://github.com/qupath/qupath/issues/833#issuecomment-952886930:57,Integrability,depend,dependent,57,"No problem! From the previous discussion, I think it may dependent upon the operating system and JavaFX - and therefore not something that we can fix within QuPath itself. But I'm not sure. Please do let me know if you find a solution!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/833#issuecomment-952886930
https://github.com/qupath/qupath/issues/833#issuecomment-962152233:46,Deployability,release,release,46,"@mmfalco I've just checked out the [JavaFX 17 release note](https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md) and saw this fix: https://bugs.openjdk.java.net/browse/JDK-8248126. Currently QuPath is using JavaFX 16, although if you'd like to try it with 17 you'd probably only need to change one line [here](https://github.com/qupath/qupath/blob/main/buildSrc/src/main/groovy/qupath.common-conventions.gradle#L70), then build from source as described [here](https://qupath.readthedocs.io/en/stable/docs/reference/building.html). QuPath v0.4.x will use Java/JavaFX 17. I'm a little tempted to introduce JavaFX 17 already in v0.3.1, especially if it resolves this problem (and doesn't [break our own versioning rules](https://qupath.readthedocs.io/en/stable/docs/intro/versions.html)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/833#issuecomment-962152233
https://github.com/qupath/qupath/issues/833#issuecomment-962152233:113,Deployability,release,release-notes-,113,"@mmfalco I've just checked out the [JavaFX 17 release note](https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md) and saw this fix: https://bugs.openjdk.java.net/browse/JDK-8248126. Currently QuPath is using JavaFX 16, although if you'd like to try it with 17 you'd probably only need to change one line [here](https://github.com/qupath/qupath/blob/main/buildSrc/src/main/groovy/qupath.common-conventions.gradle#L70), then build from source as described [here](https://qupath.readthedocs.io/en/stable/docs/reference/building.html). QuPath v0.4.x will use Java/JavaFX 17. I'm a little tempted to introduce JavaFX 17 already in v0.3.1, especially if it resolves this problem (and doesn't [break our own versioning rules](https://qupath.readthedocs.io/en/stable/docs/intro/versions.html)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/833#issuecomment-962152233
https://github.com/qupath/qupath/issues/834#issuecomment-955668356:382,Availability,error,error,382,"Hi @gianlucadirienzo my guess is that JPEG is probably the wrong format to share the files; QuPath works best with [pyramidal images](https://qupath.readthedocs.io/en/stable/docs/intro/formats.html). I suggest asking whoever send the files if they can do so using a different format. If a JPEG is 100 MB, then it is probably much much larger when uncompressed. This would cause the error you see.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955668356
https://github.com/qupath/qupath/issues/834#issuecomment-955743430:373,Availability,error,error,373,"Thanks, I see the image with the smallest file size is 44304 x 25156. Uncompressed, this would require at least 44304 * 25156 * 3 bytes of memory (assuming three, 8-bit channels) - or just over 3 GB. In practice, more memory would be required as the image is being read and uncompressed. I find that I cannot open it in QuPath or ImageJ, and Bio-Formats also fails with an error ; ```; java.io.IOException: Restart interval and markers invalid; 	at loci.formats.services.JPEGTurboServiceImpl.initialize(JPEGTurboServiceImpl.java:222); 	at loci.formats.in.TileJPEGReader.reopenFile(TileJPEGReader.java:144); 	at loci.formats.in.TileJPEGReader.initFile(TileJPEGReader.java:121); 	at loci.formats.FormatReader.setId(FormatReader.java:1421); 	at loci.formats.DelegateReader.setId(DelegateReader.java:300); 	at loci.formats.in.JPEGReader.setId(JPEGReader.java:87); 	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:499); 	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:142); 	at loci.plugins.in.Importer.showDialogs(Importer.java:140); 	at loci.plugins.in.Importer.run(Importer.java:76); 	at loci.plugins.LociImporter.run(LociImporter.java:78); ```. JPEG is just not the right file format to use for images of this size. Even if the file *could* be opened, performance would be really bad because of the memory requirements. QuPath *could* handle a pyramidal TIFF that is much bigger very efficiently. The file names include the words 'cropped region', therefore I would suggest requesting the original files. QuPath might be able to handle them already. I will close this issue because it doesn't seem to be a bug in QuPath (comparable software also can't open the image). If you'd like to discuss formats / suggestions, the forum would be the best place: http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955743430
https://github.com/qupath/qupath/issues/834#issuecomment-955743430:1415,Energy Efficiency,efficient,efficiently,1415,"Thanks, I see the image with the smallest file size is 44304 x 25156. Uncompressed, this would require at least 44304 * 25156 * 3 bytes of memory (assuming three, 8-bit channels) - or just over 3 GB. In practice, more memory would be required as the image is being read and uncompressed. I find that I cannot open it in QuPath or ImageJ, and Bio-Formats also fails with an error ; ```; java.io.IOException: Restart interval and markers invalid; 	at loci.formats.services.JPEGTurboServiceImpl.initialize(JPEGTurboServiceImpl.java:222); 	at loci.formats.in.TileJPEGReader.reopenFile(TileJPEGReader.java:144); 	at loci.formats.in.TileJPEGReader.initFile(TileJPEGReader.java:121); 	at loci.formats.FormatReader.setId(FormatReader.java:1421); 	at loci.formats.DelegateReader.setId(DelegateReader.java:300); 	at loci.formats.in.JPEGReader.setId(JPEGReader.java:87); 	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:499); 	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:142); 	at loci.plugins.in.Importer.showDialogs(Importer.java:140); 	at loci.plugins.in.Importer.run(Importer.java:76); 	at loci.plugins.LociImporter.run(LociImporter.java:78); ```. JPEG is just not the right file format to use for images of this size. Even if the file *could* be opened, performance would be really bad because of the memory requirements. QuPath *could* handle a pyramidal TIFF that is much bigger very efficiently. The file names include the words 'cropped region', therefore I would suggest requesting the original files. QuPath might be able to handle them already. I will close this issue because it doesn't seem to be a bug in QuPath (comparable software also can't open the image). If you'd like to discuss formats / suggestions, the forum would be the best place: http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955743430
https://github.com/qupath/qupath/issues/834#issuecomment-955743430:869,Modifiability,plugin,plugins,869,"Thanks, I see the image with the smallest file size is 44304 x 25156. Uncompressed, this would require at least 44304 * 25156 * 3 bytes of memory (assuming three, 8-bit channels) - or just over 3 GB. In practice, more memory would be required as the image is being read and uncompressed. I find that I cannot open it in QuPath or ImageJ, and Bio-Formats also fails with an error ; ```; java.io.IOException: Restart interval and markers invalid; 	at loci.formats.services.JPEGTurboServiceImpl.initialize(JPEGTurboServiceImpl.java:222); 	at loci.formats.in.TileJPEGReader.reopenFile(TileJPEGReader.java:144); 	at loci.formats.in.TileJPEGReader.initFile(TileJPEGReader.java:121); 	at loci.formats.FormatReader.setId(FormatReader.java:1421); 	at loci.formats.DelegateReader.setId(DelegateReader.java:300); 	at loci.formats.in.JPEGReader.setId(JPEGReader.java:87); 	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:499); 	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:142); 	at loci.plugins.in.Importer.showDialogs(Importer.java:140); 	at loci.plugins.in.Importer.run(Importer.java:76); 	at loci.plugins.LociImporter.run(LociImporter.java:78); ```. JPEG is just not the right file format to use for images of this size. Even if the file *could* be opened, performance would be really bad because of the memory requirements. QuPath *could* handle a pyramidal TIFF that is much bigger very efficiently. The file names include the words 'cropped region', therefore I would suggest requesting the original files. QuPath might be able to handle them already. I will close this issue because it doesn't seem to be a bug in QuPath (comparable software also can't open the image). If you'd like to discuss formats / suggestions, the forum would be the best place: http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955743430
https://github.com/qupath/qupath/issues/834#issuecomment-955743430:943,Modifiability,plugin,plugins,943,"Thanks, I see the image with the smallest file size is 44304 x 25156. Uncompressed, this would require at least 44304 * 25156 * 3 bytes of memory (assuming three, 8-bit channels) - or just over 3 GB. In practice, more memory would be required as the image is being read and uncompressed. I find that I cannot open it in QuPath or ImageJ, and Bio-Formats also fails with an error ; ```; java.io.IOException: Restart interval and markers invalid; 	at loci.formats.services.JPEGTurboServiceImpl.initialize(JPEGTurboServiceImpl.java:222); 	at loci.formats.in.TileJPEGReader.reopenFile(TileJPEGReader.java:144); 	at loci.formats.in.TileJPEGReader.initFile(TileJPEGReader.java:121); 	at loci.formats.FormatReader.setId(FormatReader.java:1421); 	at loci.formats.DelegateReader.setId(DelegateReader.java:300); 	at loci.formats.in.JPEGReader.setId(JPEGReader.java:87); 	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:499); 	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:142); 	at loci.plugins.in.Importer.showDialogs(Importer.java:140); 	at loci.plugins.in.Importer.run(Importer.java:76); 	at loci.plugins.LociImporter.run(LociImporter.java:78); ```. JPEG is just not the right file format to use for images of this size. Even if the file *could* be opened, performance would be really bad because of the memory requirements. QuPath *could* handle a pyramidal TIFF that is much bigger very efficiently. The file names include the words 'cropped region', therefore I would suggest requesting the original files. QuPath might be able to handle them already. I will close this issue because it doesn't seem to be a bug in QuPath (comparable software also can't open the image). If you'd like to discuss formats / suggestions, the forum would be the best place: http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955743430
https://github.com/qupath/qupath/issues/834#issuecomment-955743430:1010,Modifiability,plugin,plugins,1010,"Thanks, I see the image with the smallest file size is 44304 x 25156. Uncompressed, this would require at least 44304 * 25156 * 3 bytes of memory (assuming three, 8-bit channels) - or just over 3 GB. In practice, more memory would be required as the image is being read and uncompressed. I find that I cannot open it in QuPath or ImageJ, and Bio-Formats also fails with an error ; ```; java.io.IOException: Restart interval and markers invalid; 	at loci.formats.services.JPEGTurboServiceImpl.initialize(JPEGTurboServiceImpl.java:222); 	at loci.formats.in.TileJPEGReader.reopenFile(TileJPEGReader.java:144); 	at loci.formats.in.TileJPEGReader.initFile(TileJPEGReader.java:121); 	at loci.formats.FormatReader.setId(FormatReader.java:1421); 	at loci.formats.DelegateReader.setId(DelegateReader.java:300); 	at loci.formats.in.JPEGReader.setId(JPEGReader.java:87); 	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:499); 	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:142); 	at loci.plugins.in.Importer.showDialogs(Importer.java:140); 	at loci.plugins.in.Importer.run(Importer.java:76); 	at loci.plugins.LociImporter.run(LociImporter.java:78); ```. JPEG is just not the right file format to use for images of this size. Even if the file *could* be opened, performance would be really bad because of the memory requirements. QuPath *could* handle a pyramidal TIFF that is much bigger very efficiently. The file names include the words 'cropped region', therefore I would suggest requesting the original files. QuPath might be able to handle them already. I will close this issue because it doesn't seem to be a bug in QuPath (comparable software also can't open the image). If you'd like to discuss formats / suggestions, the forum would be the best place: http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955743430
https://github.com/qupath/qupath/issues/834#issuecomment-955743430:1071,Modifiability,plugin,plugins,1071,"Thanks, I see the image with the smallest file size is 44304 x 25156. Uncompressed, this would require at least 44304 * 25156 * 3 bytes of memory (assuming three, 8-bit channels) - or just over 3 GB. In practice, more memory would be required as the image is being read and uncompressed. I find that I cannot open it in QuPath or ImageJ, and Bio-Formats also fails with an error ; ```; java.io.IOException: Restart interval and markers invalid; 	at loci.formats.services.JPEGTurboServiceImpl.initialize(JPEGTurboServiceImpl.java:222); 	at loci.formats.in.TileJPEGReader.reopenFile(TileJPEGReader.java:144); 	at loci.formats.in.TileJPEGReader.initFile(TileJPEGReader.java:121); 	at loci.formats.FormatReader.setId(FormatReader.java:1421); 	at loci.formats.DelegateReader.setId(DelegateReader.java:300); 	at loci.formats.in.JPEGReader.setId(JPEGReader.java:87); 	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:499); 	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:142); 	at loci.plugins.in.Importer.showDialogs(Importer.java:140); 	at loci.plugins.in.Importer.run(Importer.java:76); 	at loci.plugins.LociImporter.run(LociImporter.java:78); ```. JPEG is just not the right file format to use for images of this size. Even if the file *could* be opened, performance would be really bad because of the memory requirements. QuPath *could* handle a pyramidal TIFF that is much bigger very efficiently. The file names include the words 'cropped region', therefore I would suggest requesting the original files. QuPath might be able to handle them already. I will close this issue because it doesn't seem to be a bug in QuPath (comparable software also can't open the image). If you'd like to discuss formats / suggestions, the forum would be the best place: http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955743430
https://github.com/qupath/qupath/issues/834#issuecomment-955743430:1123,Modifiability,plugin,plugins,1123,"Thanks, I see the image with the smallest file size is 44304 x 25156. Uncompressed, this would require at least 44304 * 25156 * 3 bytes of memory (assuming three, 8-bit channels) - or just over 3 GB. In practice, more memory would be required as the image is being read and uncompressed. I find that I cannot open it in QuPath or ImageJ, and Bio-Formats also fails with an error ; ```; java.io.IOException: Restart interval and markers invalid; 	at loci.formats.services.JPEGTurboServiceImpl.initialize(JPEGTurboServiceImpl.java:222); 	at loci.formats.in.TileJPEGReader.reopenFile(TileJPEGReader.java:144); 	at loci.formats.in.TileJPEGReader.initFile(TileJPEGReader.java:121); 	at loci.formats.FormatReader.setId(FormatReader.java:1421); 	at loci.formats.DelegateReader.setId(DelegateReader.java:300); 	at loci.formats.in.JPEGReader.setId(JPEGReader.java:87); 	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:499); 	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:142); 	at loci.plugins.in.Importer.showDialogs(Importer.java:140); 	at loci.plugins.in.Importer.run(Importer.java:76); 	at loci.plugins.LociImporter.run(LociImporter.java:78); ```. JPEG is just not the right file format to use for images of this size. Even if the file *could* be opened, performance would be really bad because of the memory requirements. QuPath *could* handle a pyramidal TIFF that is much bigger very efficiently. The file names include the words 'cropped region', therefore I would suggest requesting the original files. QuPath might be able to handle them already. I will close this issue because it doesn't seem to be a bug in QuPath (comparable software also can't open the image). If you'd like to discuss formats / suggestions, the forum would be the best place: http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955743430
https://github.com/qupath/qupath/issues/834#issuecomment-955743430:1283,Performance,perform,performance,1283,"Thanks, I see the image with the smallest file size is 44304 x 25156. Uncompressed, this would require at least 44304 * 25156 * 3 bytes of memory (assuming three, 8-bit channels) - or just over 3 GB. In practice, more memory would be required as the image is being read and uncompressed. I find that I cannot open it in QuPath or ImageJ, and Bio-Formats also fails with an error ; ```; java.io.IOException: Restart interval and markers invalid; 	at loci.formats.services.JPEGTurboServiceImpl.initialize(JPEGTurboServiceImpl.java:222); 	at loci.formats.in.TileJPEGReader.reopenFile(TileJPEGReader.java:144); 	at loci.formats.in.TileJPEGReader.initFile(TileJPEGReader.java:121); 	at loci.formats.FormatReader.setId(FormatReader.java:1421); 	at loci.formats.DelegateReader.setId(DelegateReader.java:300); 	at loci.formats.in.JPEGReader.setId(JPEGReader.java:87); 	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:499); 	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:142); 	at loci.plugins.in.Importer.showDialogs(Importer.java:140); 	at loci.plugins.in.Importer.run(Importer.java:76); 	at loci.plugins.LociImporter.run(LociImporter.java:78); ```. JPEG is just not the right file format to use for images of this size. Even if the file *could* be opened, performance would be really bad because of the memory requirements. QuPath *could* handle a pyramidal TIFF that is much bigger very efficiently. The file names include the words 'cropped region', therefore I would suggest requesting the original files. QuPath might be able to handle them already. I will close this issue because it doesn't seem to be a bug in QuPath (comparable software also can't open the image). If you'd like to discuss formats / suggestions, the forum would be the best place: http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955743430
https://github.com/qupath/qupath/pull/835#issuecomment-957197679:1038,Deployability,release,release,1038,"Thanks @jameshball for the PR and thorough description. All looks good to me, but I need to find a bit more time to check in detail (and try to remember if there was any logical reason to ignore annotations in the first place... I suspect there was not and it was just an oversight). The reason I want to check a bit more is that this highlights a bit of weirdness in how [QuPath provides different `MeasurementList` implementations](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-core/src/main/java/qupath/lib/measurements/MeasurementListFactory.java#L44), so the annotation isn't guaranteed to have the same type of list after deserialization as it previously had. This was for reasons of efficiency, and because in an early version there was a 'dynamic measurement' feature that only annotations supported (but this isn't now used). That's a good chance that doesn't matter, but keeping this PR open is a handy reminder to think about measurement lists and GeoJSON in more detail before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/835#issuecomment-957197679
https://github.com/qupath/qupath/pull/835#issuecomment-957197679:170,Testability,log,logical,170,"Thanks @jameshball for the PR and thorough description. All looks good to me, but I need to find a bit more time to check in detail (and try to remember if there was any logical reason to ignore annotations in the first place... I suspect there was not and it was just an oversight). The reason I want to check a bit more is that this highlights a bit of weirdness in how [QuPath provides different `MeasurementList` implementations](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-core/src/main/java/qupath/lib/measurements/MeasurementListFactory.java#L44), so the annotation isn't guaranteed to have the same type of list after deserialization as it previously had. This was for reasons of efficiency, and because in an early version there was a 'dynamic measurement' feature that only annotations supported (but this isn't now used). That's a good chance that doesn't matter, but keeping this PR open is a handy reminder to think about measurement lists and GeoJSON in more detail before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/835#issuecomment-957197679
https://github.com/qupath/qupath/issues/841#issuecomment-964869028:73,Usability,clear,clear-memory-should-be-part-of-all-batch-scripts,73,"Calling `Net.close()` is [reported to fix this](https://forum.image.sc/t/clear-memory-should-be-part-of-all-batch-scripts/46211/8)... although it's still not entirely obvious when or how this should be done. One option could be to use a [`Cleaner`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/ref/Cleaner.html). If this works, it shouldn't require any API change and so could be included in v0.3.1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/841#issuecomment-964869028
https://github.com/qupath/qupath/issues/841#issuecomment-969247636:482,Deployability,patch,patch,482,"Looking into this some more, it is more awkward than I had realised. I had thought that wrapping everything in a `PointerScope` would help, by ensuring that the `Net` was closed properly without further effort - however the use if [`Net.retainReference()`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/OpenCVDnn.java#L651) thwarts this. Calling `System.gc()` before/after using a DNN can help patch over the problem, however a better solution is likely to require a more thorough revision of `OpenCVDnn` - possibly by updating `DnnModel` to implement `AutoCloseable`. This makes it more of a v0.4.0 issue than a v0.3.1 issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/841#issuecomment-969247636
https://github.com/qupath/qupath/issues/841#issuecomment-969247636:88,Integrability,wrap,wrapping,88,"Looking into this some more, it is more awkward than I had realised. I had thought that wrapping everything in a `PointerScope` would help, by ensuring that the `Net` was closed properly without further effort - however the use if [`Net.retainReference()`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/OpenCVDnn.java#L651) thwarts this. Calling `System.gc()` before/after using a DNN can help patch over the problem, however a better solution is likely to require a more thorough revision of `OpenCVDnn` - possibly by updating `DnnModel` to implement `AutoCloseable`. This makes it more of a v0.4.0 issue than a v0.3.1 issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/841#issuecomment-969247636
https://github.com/qupath/qupath/issues/841#issuecomment-1336094677:112,Deployability,release,release,112,It's now possible to call `DnnModel.close()`. It will also be possible to call `StarDist2D.close()` in the next release of the extension.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/841#issuecomment-1336094677
https://github.com/qupath/qupath/pull/846#issuecomment-974648914:61,Deployability,release,release,61,"Great, thanks! I'll merge it for inclusion in the next point release then, I don't think the old behavior can count as anything other than a bug. If you spot any other similar problems please let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/846#issuecomment-974648914
https://github.com/qupath/qupath/issues/856#issuecomment-1018215470:252,Availability,down,download,252,"Hi @saudet thanks very much for checking this. Yes, it is still a problem with JavaCPP 1.5.6 (although less often, with the larger limit). I have just confirmed it following the steps to reproduce above and the [OS-1.ndpi](https://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu/OS-1.ndpi) image from openslide.org. ![Screenshot 2022-01-21 at 05 53 09](https://user-images.githubusercontent.com/4690904/150473986-f94358f8-f834-46d6-b502-d80d040829a6.png). ![Screenshot 2022-01-21 at 05 50 03](https://user-images.githubusercontent.com/4690904/150474005-3aae13a4-6bed-44f9-af05-fb0b677abf0b.png). QuPath's *Memory Monitor* above is based upon whatever `Runtime` provides. I followed the exact same steps on a 2013 iMac without any problems, so there does seem to be something different on the M1. Our use may be a little obscure. QuPath's pixel classifier ([docs](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html)) is designed to support interactively training a machine learning classifier. It should support many image types, but is typically used with very large, tiled, multiresolution biomedical images (usually 10-50 GB per 2D image). The pixel classification uses OpenCV's ML module via JavaCPP, but in principle also supports semantic segmentation using a pretrained deep learning model with OpenCV's DNN module or TensorFlow - JavaCPP is central to it all (thanks!). In all cases, each required image tile is read on demand and cached as a Java `BufferedImage`. It is converted to an OpenCV `Mat` temporarily for whatever calculations are required, then the end result converted back to a `BufferedImage`. Therefore quite a lot of fairly large `Mat` objects can be generated for the pixels, features and predictions, but closed after use and using `PointerScope` extensively since QuPath v0.3. This seems to be working very well everywhere except on M1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470
https://github.com/qupath/qupath/issues/856#issuecomment-1018215470:624,Energy Efficiency,Monitor,Monitor,624,"Hi @saudet thanks very much for checking this. Yes, it is still a problem with JavaCPP 1.5.6 (although less often, with the larger limit). I have just confirmed it following the steps to reproduce above and the [OS-1.ndpi](https://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu/OS-1.ndpi) image from openslide.org. ![Screenshot 2022-01-21 at 05 53 09](https://user-images.githubusercontent.com/4690904/150473986-f94358f8-f834-46d6-b502-d80d040829a6.png). ![Screenshot 2022-01-21 at 05 50 03](https://user-images.githubusercontent.com/4690904/150474005-3aae13a4-6bed-44f9-af05-fb0b677abf0b.png). QuPath's *Memory Monitor* above is based upon whatever `Runtime` provides. I followed the exact same steps on a 2013 iMac without any problems, so there does seem to be something different on the M1. Our use may be a little obscure. QuPath's pixel classifier ([docs](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html)) is designed to support interactively training a machine learning classifier. It should support many image types, but is typically used with very large, tiled, multiresolution biomedical images (usually 10-50 GB per 2D image). The pixel classification uses OpenCV's ML module via JavaCPP, but in principle also supports semantic segmentation using a pretrained deep learning model with OpenCV's DNN module or TensorFlow - JavaCPP is central to it all (thanks!). In all cases, each required image tile is read on demand and cached as a Java `BufferedImage`. It is converted to an OpenCV `Mat` temporarily for whatever calculations are required, then the end result converted back to a `BufferedImage`. Therefore quite a lot of fairly large `Mat` objects can be generated for the pixels, features and predictions, but closed after use and using `PointerScope` extensively since QuPath v0.3. This seems to be working very well everywhere except on M1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470
https://github.com/qupath/qupath/issues/856#issuecomment-1018215470:1479,Performance,cache,cached,1479,"Hi @saudet thanks very much for checking this. Yes, it is still a problem with JavaCPP 1.5.6 (although less often, with the larger limit). I have just confirmed it following the steps to reproduce above and the [OS-1.ndpi](https://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu/OS-1.ndpi) image from openslide.org. ![Screenshot 2022-01-21 at 05 53 09](https://user-images.githubusercontent.com/4690904/150473986-f94358f8-f834-46d6-b502-d80d040829a6.png). ![Screenshot 2022-01-21 at 05 50 03](https://user-images.githubusercontent.com/4690904/150474005-3aae13a4-6bed-44f9-af05-fb0b677abf0b.png). QuPath's *Memory Monitor* above is based upon whatever `Runtime` provides. I followed the exact same steps on a 2013 iMac without any problems, so there does seem to be something different on the M1. Our use may be a little obscure. QuPath's pixel classifier ([docs](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html)) is designed to support interactively training a machine learning classifier. It should support many image types, but is typically used with very large, tiled, multiresolution biomedical images (usually 10-50 GB per 2D image). The pixel classification uses OpenCV's ML module via JavaCPP, but in principle also supports semantic segmentation using a pretrained deep learning model with OpenCV's DNN module or TensorFlow - JavaCPP is central to it all (thanks!). In all cases, each required image tile is read on demand and cached as a Java `BufferedImage`. It is converted to an OpenCV `Mat` temporarily for whatever calculations are required, then the end result converted back to a `BufferedImage`. Therefore quite a lot of fairly large `Mat` objects can be generated for the pixels, features and predictions, but closed after use and using `PointerScope` extensively since QuPath v0.3. This seems to be working very well everywhere except on M1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470
https://github.com/qupath/qupath/issues/856#issuecomment-1018215470:1755,Safety,predict,predictions,1755,"Hi @saudet thanks very much for checking this. Yes, it is still a problem with JavaCPP 1.5.6 (although less often, with the larger limit). I have just confirmed it following the steps to reproduce above and the [OS-1.ndpi](https://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu/OS-1.ndpi) image from openslide.org. ![Screenshot 2022-01-21 at 05 53 09](https://user-images.githubusercontent.com/4690904/150473986-f94358f8-f834-46d6-b502-d80d040829a6.png). ![Screenshot 2022-01-21 at 05 50 03](https://user-images.githubusercontent.com/4690904/150474005-3aae13a4-6bed-44f9-af05-fb0b677abf0b.png). QuPath's *Memory Monitor* above is based upon whatever `Runtime` provides. I followed the exact same steps on a 2013 iMac without any problems, so there does seem to be something different on the M1. Our use may be a little obscure. QuPath's pixel classifier ([docs](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html)) is designed to support interactively training a machine learning classifier. It should support many image types, but is typically used with very large, tiled, multiresolution biomedical images (usually 10-50 GB per 2D image). The pixel classification uses OpenCV's ML module via JavaCPP, but in principle also supports semantic segmentation using a pretrained deep learning model with OpenCV's DNN module or TensorFlow - JavaCPP is central to it all (thanks!). In all cases, each required image tile is read on demand and cached as a Java `BufferedImage`. It is converted to an OpenCV `Mat` temporarily for whatever calculations are required, then the end result converted back to a `BufferedImage`. Therefore quite a lot of fairly large `Mat` objects can be generated for the pixels, features and predictions, but closed after use and using `PointerScope` extensively since QuPath v0.3. This seems to be working very well everywhere except on M1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470
https://github.com/qupath/qupath/issues/856#issuecomment-1018215470:271,Testability,test,testdata,271,"Hi @saudet thanks very much for checking this. Yes, it is still a problem with JavaCPP 1.5.6 (although less often, with the larger limit). I have just confirmed it following the steps to reproduce above and the [OS-1.ndpi](https://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu/OS-1.ndpi) image from openslide.org. ![Screenshot 2022-01-21 at 05 53 09](https://user-images.githubusercontent.com/4690904/150473986-f94358f8-f834-46d6-b502-d80d040829a6.png). ![Screenshot 2022-01-21 at 05 50 03](https://user-images.githubusercontent.com/4690904/150474005-3aae13a4-6bed-44f9-af05-fb0b677abf0b.png). QuPath's *Memory Monitor* above is based upon whatever `Runtime` provides. I followed the exact same steps on a 2013 iMac without any problems, so there does seem to be something different on the M1. Our use may be a little obscure. QuPath's pixel classifier ([docs](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html)) is designed to support interactively training a machine learning classifier. It should support many image types, but is typically used with very large, tiled, multiresolution biomedical images (usually 10-50 GB per 2D image). The pixel classification uses OpenCV's ML module via JavaCPP, but in principle also supports semantic segmentation using a pretrained deep learning model with OpenCV's DNN module or TensorFlow - JavaCPP is central to it all (thanks!). In all cases, each required image tile is read on demand and cached as a Java `BufferedImage`. It is converted to an OpenCV `Mat` temporarily for whatever calculations are required, then the end result converted back to a `BufferedImage`. Therefore quite a lot of fairly large `Mat` objects can be generated for the pixels, features and predictions, but closed after use and using `PointerScope` extensively since QuPath v0.3. This seems to be working very well everywhere except on M1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470
https://github.com/qupath/qupath/issues/856#issuecomment-1018215470:1013,Usability,learn,learning,1013,"Hi @saudet thanks very much for checking this. Yes, it is still a problem with JavaCPP 1.5.6 (although less often, with the larger limit). I have just confirmed it following the steps to reproduce above and the [OS-1.ndpi](https://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu/OS-1.ndpi) image from openslide.org. ![Screenshot 2022-01-21 at 05 53 09](https://user-images.githubusercontent.com/4690904/150473986-f94358f8-f834-46d6-b502-d80d040829a6.png). ![Screenshot 2022-01-21 at 05 50 03](https://user-images.githubusercontent.com/4690904/150474005-3aae13a4-6bed-44f9-af05-fb0b677abf0b.png). QuPath's *Memory Monitor* above is based upon whatever `Runtime` provides. I followed the exact same steps on a 2013 iMac without any problems, so there does seem to be something different on the M1. Our use may be a little obscure. QuPath's pixel classifier ([docs](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html)) is designed to support interactively training a machine learning classifier. It should support many image types, but is typically used with very large, tiled, multiresolution biomedical images (usually 10-50 GB per 2D image). The pixel classification uses OpenCV's ML module via JavaCPP, but in principle also supports semantic segmentation using a pretrained deep learning model with OpenCV's DNN module or TensorFlow - JavaCPP is central to it all (thanks!). In all cases, each required image tile is read on demand and cached as a Java `BufferedImage`. It is converted to an OpenCV `Mat` temporarily for whatever calculations are required, then the end result converted back to a `BufferedImage`. Therefore quite a lot of fairly large `Mat` objects can be generated for the pixels, features and predictions, but closed after use and using `PointerScope` extensively since QuPath v0.3. This seems to be working very well everywhere except on M1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470
https://github.com/qupath/qupath/issues/856#issuecomment-1018215470:1322,Usability,learn,learning,1322,"Hi @saudet thanks very much for checking this. Yes, it is still a problem with JavaCPP 1.5.6 (although less often, with the larger limit). I have just confirmed it following the steps to reproduce above and the [OS-1.ndpi](https://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu/OS-1.ndpi) image from openslide.org. ![Screenshot 2022-01-21 at 05 53 09](https://user-images.githubusercontent.com/4690904/150473986-f94358f8-f834-46d6-b502-d80d040829a6.png). ![Screenshot 2022-01-21 at 05 50 03](https://user-images.githubusercontent.com/4690904/150474005-3aae13a4-6bed-44f9-af05-fb0b677abf0b.png). QuPath's *Memory Monitor* above is based upon whatever `Runtime` provides. I followed the exact same steps on a 2013 iMac without any problems, so there does seem to be something different on the M1. Our use may be a little obscure. QuPath's pixel classifier ([docs](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html)) is designed to support interactively training a machine learning classifier. It should support many image types, but is typically used with very large, tiled, multiresolution biomedical images (usually 10-50 GB per 2D image). The pixel classification uses OpenCV's ML module via JavaCPP, but in principle also supports semantic segmentation using a pretrained deep learning model with OpenCV's DNN module or TensorFlow - JavaCPP is central to it all (thanks!). In all cases, each required image tile is read on demand and cached as a Java `BufferedImage`. It is converted to an OpenCV `Mat` temporarily for whatever calculations are required, then the end result converted back to a `BufferedImage`. Therefore quite a lot of fairly large `Mat` objects can be generated for the pixels, features and predictions, but closed after use and using `PointerScope` extensively since QuPath v0.3. This seems to be working very well everywhere except on M1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470
https://github.com/qupath/qupath/issues/856#issuecomment-1018219477:170,Availability,error,errors,170,"I ran [this script](https://gist.github.com/petebankhead/40520366791ef8fe0ab0ca3403812d8d) to print more memory info from Java and JavaCPP. ### MacBook Pro M1; After the errors above:; ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4082 MB; freeMemory() 	2657.05673980712890625 MB; Memory used 	1424.94326019287109375 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.0015869140625 MB; physicalBytes() 	19015.328125 MB. Total count: 	32. Operating system:; Total: 	16384 MB; Available: 	14.92578125 MB; ```. ### 2013 iMac Intel; After the same processing steps, running without problems:; ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4096 MB; freeMemory() 	2742.839874267578125 MB; Memory used 	1353.160125732421875 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.00140380859375 MB; physicalBytes() 	5464.46875 MB. Total count: 	30. Operating system:; Total: 	32768 MB; Available: 	194.671875 MB; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018219477
https://github.com/qupath/qupath/issues/856#issuecomment-1018219477:511,Availability,Avail,Available,511,"I ran [this script](https://gist.github.com/petebankhead/40520366791ef8fe0ab0ca3403812d8d) to print more memory info from Java and JavaCPP. ### MacBook Pro M1; After the errors above:; ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4082 MB; freeMemory() 	2657.05673980712890625 MB; Memory used 	1424.94326019287109375 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.0015869140625 MB; physicalBytes() 	19015.328125 MB. Total count: 	32. Operating system:; Total: 	16384 MB; Available: 	14.92578125 MB; ```. ### 2013 iMac Intel; After the same processing steps, running without problems:; ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4096 MB; freeMemory() 	2742.839874267578125 MB; Memory used 	1353.160125732421875 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.00140380859375 MB; physicalBytes() 	5464.46875 MB. Total count: 	30. Operating system:; Total: 	32768 MB; Available: 	194.671875 MB; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018219477
https://github.com/qupath/qupath/issues/856#issuecomment-1018219477:946,Availability,Avail,Available,946,"I ran [this script](https://gist.github.com/petebankhead/40520366791ef8fe0ab0ca3403812d8d) to print more memory info from Java and JavaCPP. ### MacBook Pro M1; After the errors above:; ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4082 MB; freeMemory() 	2657.05673980712890625 MB; Memory used 	1424.94326019287109375 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.0015869140625 MB; physicalBytes() 	19015.328125 MB. Total count: 	32. Operating system:; Total: 	16384 MB; Available: 	14.92578125 MB; ```. ### 2013 iMac Intel; After the same processing steps, running without problems:; ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4096 MB; freeMemory() 	2742.839874267578125 MB; Memory used 	1353.160125732421875 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.00140380859375 MB; physicalBytes() 	5464.46875 MB. Total count: 	30. Operating system:; Total: 	32768 MB; Available: 	194.671875 MB; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018219477
https://github.com/qupath/qupath/issues/856#issuecomment-1018240811:45,Availability,avail,available,45,"BTW, binaries for OpenCV on macosx-arm64 are available in the snapshots: http://bytedeco.org/builds/; Would you mind giving that a try with a native (ARM64) version of the JDK?; At the moment, such builds of the JDK seem to be available from at least Azul, Microsoft, and Oracle here: ; https://www.azul.com/downloads/?os=macos&architecture=arm-64-bit&package=jdk; https://github.com/microsoft/openjdk-aarch64/releases/tag/jdk-16.0.2-ga; https://jdk.java.net/17/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811
https://github.com/qupath/qupath/issues/856#issuecomment-1018240811:227,Availability,avail,available,227,"BTW, binaries for OpenCV on macosx-arm64 are available in the snapshots: http://bytedeco.org/builds/; Would you mind giving that a try with a native (ARM64) version of the JDK?; At the moment, such builds of the JDK seem to be available from at least Azul, Microsoft, and Oracle here: ; https://www.azul.com/downloads/?os=macos&architecture=arm-64-bit&package=jdk; https://github.com/microsoft/openjdk-aarch64/releases/tag/jdk-16.0.2-ga; https://jdk.java.net/17/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811
https://github.com/qupath/qupath/issues/856#issuecomment-1018240811:308,Availability,down,downloads,308,"BTW, binaries for OpenCV on macosx-arm64 are available in the snapshots: http://bytedeco.org/builds/; Would you mind giving that a try with a native (ARM64) version of the JDK?; At the moment, such builds of the JDK seem to be available from at least Azul, Microsoft, and Oracle here: ; https://www.azul.com/downloads/?os=macos&architecture=arm-64-bit&package=jdk; https://github.com/microsoft/openjdk-aarch64/releases/tag/jdk-16.0.2-ga; https://jdk.java.net/17/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811
https://github.com/qupath/qupath/issues/856#issuecomment-1018240811:410,Deployability,release,releases,410,"BTW, binaries for OpenCV on macosx-arm64 are available in the snapshots: http://bytedeco.org/builds/; Would you mind giving that a try with a native (ARM64) version of the JDK?; At the moment, such builds of the JDK seem to be available from at least Azul, Microsoft, and Oracle here: ; https://www.azul.com/downloads/?os=macos&architecture=arm-64-bit&package=jdk; https://github.com/microsoft/openjdk-aarch64/releases/tag/jdk-16.0.2-ga; https://jdk.java.net/17/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811
https://github.com/qupath/qupath/issues/856#issuecomment-1018254282:801,Availability,error,errors,801,"Thanks, I should have thought of that. I've just tried the ARM64 build from 2021-11-08 and it works beautifully - I couldn't reproduce the issue, and it runs noticeably faster. I used the old build because it's unfortunately really awkward to build QuPath for M1 - the libraries we use to read whole slide images are stuck on Intel.; * OpenSlide - https://github.com/openslide/openslide / https://github.com/openslide/openslide-java; * Bio-Formats - https://github.com/ome/bioformats (because it uses an older libjpeg-turbo). I hacked together something that works locally with OpenSlide installed via Homebrew so I could test JavaCPP / OpenCV, but I haven't figured out how to make the whole distribution portable (https://github.com/qupath/qupath/issues/629). If it's possible to resolve the memory errors via JavaCPP so that it works via Rosetta that would be excellent, but I understand if not - especially since it seems fine in the ARM64 build, and we'll want to use that as soon as we can figure out how.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282
https://github.com/qupath/qupath/issues/856#issuecomment-1018254282:588,Deployability,install,installed,588,"Thanks, I should have thought of that. I've just tried the ARM64 build from 2021-11-08 and it works beautifully - I couldn't reproduce the issue, and it runs noticeably faster. I used the old build because it's unfortunately really awkward to build QuPath for M1 - the libraries we use to read whole slide images are stuck on Intel.; * OpenSlide - https://github.com/openslide/openslide / https://github.com/openslide/openslide-java; * Bio-Formats - https://github.com/ome/bioformats (because it uses an older libjpeg-turbo). I hacked together something that works locally with OpenSlide installed via Homebrew so I could test JavaCPP / OpenCV, but I haven't figured out how to make the whole distribution portable (https://github.com/qupath/qupath/issues/629). If it's possible to resolve the memory errors via JavaCPP so that it works via Rosetta that would be excellent, but I understand if not - especially since it seems fine in the ARM64 build, and we'll want to use that as soon as we can figure out how.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282
https://github.com/qupath/qupath/issues/856#issuecomment-1018254282:706,Modifiability,portab,portable,706,"Thanks, I should have thought of that. I've just tried the ARM64 build from 2021-11-08 and it works beautifully - I couldn't reproduce the issue, and it runs noticeably faster. I used the old build because it's unfortunately really awkward to build QuPath for M1 - the libraries we use to read whole slide images are stuck on Intel.; * OpenSlide - https://github.com/openslide/openslide / https://github.com/openslide/openslide-java; * Bio-Formats - https://github.com/ome/bioformats (because it uses an older libjpeg-turbo). I hacked together something that works locally with OpenSlide installed via Homebrew so I could test JavaCPP / OpenCV, but I haven't figured out how to make the whole distribution portable (https://github.com/qupath/qupath/issues/629). If it's possible to resolve the memory errors via JavaCPP so that it works via Rosetta that would be excellent, but I understand if not - especially since it seems fine in the ARM64 build, and we'll want to use that as soon as we can figure out how.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282
https://github.com/qupath/qupath/issues/856#issuecomment-1018254282:622,Testability,test,test,622,"Thanks, I should have thought of that. I've just tried the ARM64 build from 2021-11-08 and it works beautifully - I couldn't reproduce the issue, and it runs noticeably faster. I used the old build because it's unfortunately really awkward to build QuPath for M1 - the libraries we use to read whole slide images are stuck on Intel.; * OpenSlide - https://github.com/openslide/openslide / https://github.com/openslide/openslide-java; * Bio-Formats - https://github.com/ome/bioformats (because it uses an older libjpeg-turbo). I hacked together something that works locally with OpenSlide installed via Homebrew so I could test JavaCPP / OpenCV, but I haven't figured out how to make the whole distribution portable (https://github.com/qupath/qupath/issues/629). If it's possible to resolve the memory errors via JavaCPP so that it works via Rosetta that would be excellent, but I understand if not - especially since it seems fine in the ARM64 build, and we'll want to use that as soon as we can figure out how.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282
https://github.com/qupath/qupath/issues/856#issuecomment-1018260476:11,Testability,test,testing,11,"Thanks for testing this out so quickly! So, the issue really is with Rosetta. Obviously, I'd want to have something that works well with Rosetta as well. Let me think about that... As for OpenSlide and what not, well, packaging this as JavaCPP Presets would be one way to get this going smoothly, but someone would need to spend time on it: https://github.com/bytedeco/javacpp-presets/wiki/Create-New-Presets",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018260476
https://github.com/qupath/qupath/issues/856#issuecomment-1021270775:136,Availability,error,error,136,"Thanks @saudet I've just tried this with the latest `javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar` on my M1 MacBook Pro. I do still see the error, but it seems to take longer to reach (I had to train 3 classifiers rather than 2). ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4088 MB; freeMemory() 	2722.48044586181640625 MB; Memory used 	1365.51955413818359375 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.00213623046875 MB; physicalBytes() 	17062.1875 MB. Total count: 	38. Operating system:; Total: 	16384 MB; Available: 	26.12109375 MB; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1021270775
https://github.com/qupath/qupath/issues/856#issuecomment-1021270775:551,Availability,Avail,Available,551,"Thanks @saudet I've just tried this with the latest `javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar` on my M1 MacBook Pro. I do still see the error, but it seems to take longer to reach (I had to train 3 classifiers rather than 2). ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4088 MB; freeMemory() 	2722.48044586181640625 MB; Memory used 	1365.51955413818359375 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.00213623046875 MB; physicalBytes() 	17062.1875 MB. Total count: 	38. Operating system:; Total: 	16384 MB; Available: 	26.12109375 MB; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1021270775
https://github.com/qupath/qupath/issues/856#issuecomment-1022924614:140,Availability,error,error,140,"I deleted the snapshots from my gradle cache, and built QuPath again just now. I'm afraid I still see the same behavior, it still gives the error. In case I was still somehow using an out-of-date jar, I checked the JavaCPP manifest and see; ### JavaCPP; ```; Bundle-Version: 1.5.7.202201240730; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1022924614
https://github.com/qupath/qupath/issues/856#issuecomment-1022924614:39,Performance,cache,cache,39,"I deleted the snapshots from my gradle cache, and built QuPath again just now. I'm afraid I still see the same behavior, it still gives the error. In case I was still somehow using an out-of-date jar, I checked the JavaCPP manifest and see; ### JavaCPP; ```; Bundle-Version: 1.5.7.202201240730; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1022924614
https://github.com/qupath/qupath/issues/856#issuecomment-1022944592:447,Performance,cache,cache,447,"These are currently the latest snapshots for the binaries of JavaCPP and OpenCV for macosx-x86_64:; https://oss.sonatype.org/content/repositories/snapshots/org/bytedeco/javacpp/1.5.7-SNAPSHOT/javacpp-1.5.7-20220124.073227-499-macosx-x86_64.jar; https://oss.sonatype.org/content/repositories/snapshots/org/bytedeco/opencv/4.5.5-1.5.7-SNAPSHOT/opencv-4.5.5-1.5.7-20220125.171651-133-macosx-x86_64.jar; Make sure all the files that are in ~/.javacpp/cache are identical to the files in these JAR files. If any additional files appear in the cache, that's also not a good sign.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1022944592
https://github.com/qupath/qupath/issues/856#issuecomment-1022944592:538,Performance,cache,cache,538,"These are currently the latest snapshots for the binaries of JavaCPP and OpenCV for macosx-x86_64:; https://oss.sonatype.org/content/repositories/snapshots/org/bytedeco/javacpp/1.5.7-SNAPSHOT/javacpp-1.5.7-20220124.073227-499-macosx-x86_64.jar; https://oss.sonatype.org/content/repositories/snapshots/org/bytedeco/opencv/4.5.5-1.5.7-SNAPSHOT/opencv-4.5.5-1.5.7-20220125.171651-133-macosx-x86_64.jar; Make sure all the files that are in ~/.javacpp/cache are identical to the files in these JAR files. If any additional files appear in the cache, that's also not a good sign.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1022944592
https://github.com/qupath/qupath/issues/856#issuecomment-1022952240:168,Safety,detect,detecting,168,"> This is extremely strange. @balgillo said this isn't happening for him with Rosetta... Hi, not sure what you're referring to here. In our case, we saw JavaCPP v1.5.6 detecting excessively-high physicalBytes under Rosetta, we put in place the workaround:; ```; -Dorg.bytedeco.javacpp.maxPhysicalBytes=0; ```; ... and it's still in place, we haven't tried anything else since.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1022952240
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:195,Availability,error,error,195,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:146,Deployability,update,updated,146,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:158,Integrability,depend,dependency,158,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:61,Performance,cache,cache,61,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:136,Performance,cache,cache,136,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:254,Performance,load,loaded,254,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:307,Performance,Load,Loader,307,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:392,Performance,cache,cache,392,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:542,Performance,cache,cache,542,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:695,Performance,cache,cache,695,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:846,Performance,cache,cache,846,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:996,Performance,cache,cache,996,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:1145,Performance,cache,cache,1145,"ated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libqu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:1295,Performance,cache,cache,1295,o print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:1452,Performance,cache,cache,1452,o/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/mac,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:1609,Performance,cache,cache,1609,enblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_core.405.dylib; jniopenblas_nolapack : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/ope,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:1758,Performance,cache,cache,1758,encv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_core.405.dylib; jniopenblas_nolapack : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib; jniopencv_imgproc : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:1901,Performance,cache,cache,1901,bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_core.405.dylib; jniopenblas_nolapack : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib; jniopencv_imgproc : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_imgproc.dylib; openblas@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macos,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:2054,Performance,cache,cache,2054,edeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_core.405.dylib; jniopenblas_nolapack : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib; jniopencv_imgproc : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_imgproc.dylib; openblas@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas.0.dylib; opencv_dnn@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macos,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:2215,Performance,cache,cache,2215,"as/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_core.405.dylib; jniopenblas_nolapack : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib; jniopencv_imgproc : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_imgproc.dylib; openblas@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas.0.dylib; opencv_dnn@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_dnn.405.dylib; ```. The `-Dorg.bytedeco.javacpp.maxPhysicalBytes=0` workaround does avoid the problem, b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:2381,Performance,cache,cache,2381,"ylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_core.405.dylib; jniopenblas_nolapack : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib; jniopencv_imgproc : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_imgproc.dylib; openblas@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas.0.dylib; opencv_dnn@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_dnn.405.dylib; ```. The `-Dorg.bytedeco.javacpp.maxPhysicalBytes=0` workaround does avoid the problem, but I haven't implemented it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:2542,Performance,cache,cache,2542,"ylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_core.405.dylib; jniopenblas_nolapack : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib; jniopencv_imgproc : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_imgproc.dylib; openblas@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas.0.dylib; opencv_dnn@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_dnn.405.dylib; ```. The `-Dorg.bytedeco.javacpp.maxPhysicalBytes=0` workaround does avoid the problem, but I haven't implemented it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:2710,Performance,cache,cache,2710,"ylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_core.405.dylib; jniopenblas_nolapack : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib; jniopencv_imgproc : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_imgproc.dylib; openblas@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas.0.dylib; opencv_dnn@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_dnn.405.dylib; ```. The `-Dorg.bytedeco.javacpp.maxPhysicalBytes=0` workaround does avoid the problem, but I haven't implemented it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:2864,Performance,cache,cache,2864,"ylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_core.405.dylib; jniopenblas_nolapack : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib; jniopencv_imgproc : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_imgproc.dylib; openblas@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas.0.dylib; opencv_dnn@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_dnn.405.dylib; ```. The `-Dorg.bytedeco.javacpp.maxPhysicalBytes=0` workaround does avoid the problem, but I haven't implemented it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:3020,Performance,cache,cache,3020,"ylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_core.405.dylib; jniopenblas_nolapack : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib; jniopencv_imgproc : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_imgproc.dylib; openblas@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas.0.dylib; opencv_dnn@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_dnn.405.dylib; ```. The `-Dorg.bytedeco.javacpp.maxPhysicalBytes=0` workaround does avoid the problem, but I haven't implemented it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:3200,Safety,avoid,avoid,3200,"ylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib; quadmath@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libquadmath.0.dylib; openblas_nolapack@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.0.dylib; opencv_core@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_core.405.dylib; jniopenblas_nolapack : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib; jniopencv_imgproc : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_imgproc.dylib; openblas@.0 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas.0.dylib; opencv_dnn@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_dnn.405.dylib; ```. The `-Dorg.bytedeco.javacpp.maxPhysicalBytes=0` workaround does avoid the problem, but I haven't implemented it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980
https://github.com/qupath/qupath/issues/856#issuecomment-1023172503:71,Performance,load,loaded,71,"Ok, done, make sure the binaries found in this JAR file end up getting loaded:; https://oss.sonatype.org/content/repositories/snapshots/org/bytedeco/openblas/0.3.19-1.5.7-SNAPSHOT/openblas-0.3.19-1.5.7-20220127.123031-179-macosx-x86_64.jar",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023172503
https://github.com/qupath/qupath/issues/856#issuecomment-1024110668:144,Availability,error,errors,144,"I used the jars from your links (in case I was getting old SNAPSHOTs), deleted the JavaCPP cache and I'm afraid that I'm still getting the same errors.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024110668
https://github.com/qupath/qupath/issues/856#issuecomment-1024110668:91,Performance,cache,cache,91,"I used the jars from your links (in case I was getting old SNAPSHOTs), deleted the JavaCPP cache and I'm afraid that I'm still getting the same errors.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024110668
https://github.com/qupath/qupath/issues/856#issuecomment-1024114100:39,Testability,test,test,39,This is really strange. I added a unit test for that here:; https://github.com/bytedeco/javacpp/blob/master/src/test/java/org/bytedeco/javacpp/PointerTest.java#L1154-L1177; Could you try to run that and see if it fails under Rosetta?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024114100
https://github.com/qupath/qupath/issues/856#issuecomment-1024114100:112,Testability,test,test,112,This is really strange. I added a unit test for that here:; https://github.com/bytedeco/javacpp/blob/master/src/test/java/org/bytedeco/javacpp/PointerTest.java#L1154-L1177; Could you try to run that and see if it fails under Rosetta?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024114100
https://github.com/qupath/qupath/issues/856#issuecomment-1024124145:31,Testability,test,test,31,"I cloned the repo and ran `mvn test`. Everything passed, and I saw printed; ```; NoFileBytes; 670285824 676003840; ```; I'll try to figure out if there's something else I'm doing wrong.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024124145
https://github.com/qupath/qupath/issues/856#issuecomment-1024136572:333,Availability,failure,failure,333,"I've run it several times with different JDKs, both x86_64 and aarch64. Tests have passed every time... except once, using AdoptOpenJDK 16 with Rosetta. ![Screenshot 2022-01-28 at 11 40 01](https://user-images.githubusercontent.com/4690904/151541015-d439dd98-5411-4115-ad08-c91cab4f620c.png). However I haven't managed to repeat the failure despite repeatedly trying with the same JDK. I am confused...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024136572
https://github.com/qupath/qupath/issues/856#issuecomment-1024136572:72,Testability,Test,Tests,72,"I've run it several times with different JDKs, both x86_64 and aarch64. Tests have passed every time... except once, using AdoptOpenJDK 16 with Rosetta. ![Screenshot 2022-01-28 at 11 40 01](https://user-images.githubusercontent.com/4690904/151541015-d439dd98-5411-4115-ad08-c91cab4f620c.png). However I haven't managed to repeat the failure despite repeatedly trying with the same JDK. I am confused...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024136572
https://github.com/qupath/qupath/issues/856#issuecomment-1024146066:83,Deployability,release,release,83,"The test isn't perfect, it might fail sometimes because the JVM may not be able to release the memory in time for whatever reason. The fact that it passes most of the time is OK. So that works. However, the base load for ""internal"" memory seems to be around 640 MB, which sounds big to me, it's typically less than 100 MB, but maybe that's normal for Rosetta, not sure...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024146066
https://github.com/qupath/qupath/issues/856#issuecomment-1024146066:212,Performance,load,load,212,"The test isn't perfect, it might fail sometimes because the JVM may not be able to release the memory in time for whatever reason. The fact that it passes most of the time is OK. So that works. However, the base load for ""internal"" memory seems to be around 640 MB, which sounds big to me, it's typically less than 100 MB, but maybe that's normal for Rosetta, not sure...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024146066
https://github.com/qupath/qupath/issues/856#issuecomment-1024146066:4,Testability,test,test,4,"The test isn't perfect, it might fail sometimes because the JVM may not be able to release the memory in time for whatever reason. The fact that it passes most of the time is OK. So that works. However, the base load for ""internal"" memory seems to be around 640 MB, which sounds big to me, it's typically less than 100 MB, but maybe that's normal for Rosetta, not sure...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024146066
https://github.com/qupath/qupath/issues/856#issuecomment-1024150043:69,Testability,test,test,69,"Maybe there's still some old binary lying around, so try to run that test code, make sure it passes, and right after that don't close the process, but continue to run your test with QuPath. Hopefully the right newer version of Pointer.physicalBytes() sticks around.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024150043
https://github.com/qupath/qupath/issues/856#issuecomment-1024150043:172,Testability,test,test,172,"Maybe there's still some old binary lying around, so try to run that test code, make sure it passes, and right after that don't close the process, but continue to run your test with QuPath. Hopefully the right newer version of Pointer.physicalBytes() sticks around.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024150043
https://github.com/qupath/qupath/issues/856#issuecomment-1024152670:289,Availability,failure,failures,289,"I'm not sure... I'm now trying to run specifically that one test through eclipse, switching between OpenJDK 17 for x86_64 and for aarch64. It is failing reproducibly for me using `x86_64`, and passing with `aarch64`.; I've added a `System.out.println(System.getProperty(""os.arch""));` with failures I see e.g.; ```; NoFileBytes; x86_64; 420986880 436666368; ```; and with successes; ```; NoFileBytes; aarch64; 36864000 40239104; ```. VM args (adjusted so the other tests pass):; ```; -ea -Xmx1G -Dorg.bytedeco.javacpp.maxRetries=3; ```. Meanwhile I have seen more failures with the full `mvn test`, but it remains inconsistent. However, when it does fail it is always on that test.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024152670
https://github.com/qupath/qupath/issues/856#issuecomment-1024152670:563,Availability,failure,failures,563,"I'm not sure... I'm now trying to run specifically that one test through eclipse, switching between OpenJDK 17 for x86_64 and for aarch64. It is failing reproducibly for me using `x86_64`, and passing with `aarch64`.; I've added a `System.out.println(System.getProperty(""os.arch""));` with failures I see e.g.; ```; NoFileBytes; x86_64; 420986880 436666368; ```; and with successes; ```; NoFileBytes; aarch64; 36864000 40239104; ```. VM args (adjusted so the other tests pass):; ```; -ea -Xmx1G -Dorg.bytedeco.javacpp.maxRetries=3; ```. Meanwhile I have seen more failures with the full `mvn test`, but it remains inconsistent. However, when it does fail it is always on that test.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024152670
https://github.com/qupath/qupath/issues/856#issuecomment-1024152670:60,Testability,test,test,60,"I'm not sure... I'm now trying to run specifically that one test through eclipse, switching between OpenJDK 17 for x86_64 and for aarch64. It is failing reproducibly for me using `x86_64`, and passing with `aarch64`.; I've added a `System.out.println(System.getProperty(""os.arch""));` with failures I see e.g.; ```; NoFileBytes; x86_64; 420986880 436666368; ```; and with successes; ```; NoFileBytes; aarch64; 36864000 40239104; ```. VM args (adjusted so the other tests pass):; ```; -ea -Xmx1G -Dorg.bytedeco.javacpp.maxRetries=3; ```. Meanwhile I have seen more failures with the full `mvn test`, but it remains inconsistent. However, when it does fail it is always on that test.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024152670
https://github.com/qupath/qupath/issues/856#issuecomment-1024152670:464,Testability,test,tests,464,"I'm not sure... I'm now trying to run specifically that one test through eclipse, switching between OpenJDK 17 for x86_64 and for aarch64. It is failing reproducibly for me using `x86_64`, and passing with `aarch64`.; I've added a `System.out.println(System.getProperty(""os.arch""));` with failures I see e.g.; ```; NoFileBytes; x86_64; 420986880 436666368; ```; and with successes; ```; NoFileBytes; aarch64; 36864000 40239104; ```. VM args (adjusted so the other tests pass):; ```; -ea -Xmx1G -Dorg.bytedeco.javacpp.maxRetries=3; ```. Meanwhile I have seen more failures with the full `mvn test`, but it remains inconsistent. However, when it does fail it is always on that test.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024152670
https://github.com/qupath/qupath/issues/856#issuecomment-1024152670:591,Testability,test,test,591,"I'm not sure... I'm now trying to run specifically that one test through eclipse, switching between OpenJDK 17 for x86_64 and for aarch64. It is failing reproducibly for me using `x86_64`, and passing with `aarch64`.; I've added a `System.out.println(System.getProperty(""os.arch""));` with failures I see e.g.; ```; NoFileBytes; x86_64; 420986880 436666368; ```; and with successes; ```; NoFileBytes; aarch64; 36864000 40239104; ```. VM args (adjusted so the other tests pass):; ```; -ea -Xmx1G -Dorg.bytedeco.javacpp.maxRetries=3; ```. Meanwhile I have seen more failures with the full `mvn test`, but it remains inconsistent. However, when it does fail it is always on that test.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024152670
https://github.com/qupath/qupath/issues/856#issuecomment-1024152670:675,Testability,test,test,675,"I'm not sure... I'm now trying to run specifically that one test through eclipse, switching between OpenJDK 17 for x86_64 and for aarch64. It is failing reproducibly for me using `x86_64`, and passing with `aarch64`.; I've added a `System.out.println(System.getProperty(""os.arch""));` with failures I see e.g.; ```; NoFileBytes; x86_64; 420986880 436666368; ```; and with successes; ```; NoFileBytes; aarch64; 36864000 40239104; ```. VM args (adjusted so the other tests pass):; ```; -ea -Xmx1G -Dorg.bytedeco.javacpp.maxRetries=3; ```. Meanwhile I have seen more failures with the full `mvn test`, but it remains inconsistent. However, when it does fail it is always on that test.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024152670
https://github.com/qupath/qupath/issues/856#issuecomment-1024180132:171,Testability,test,test,171,"It looks fine, I wouldn't worry. Maybe we should just check it doesn't increase by 100 MB here instead of only 10 MB:; https://github.com/bytedeco/javacpp/blob/master/src/test/java/org/bytedeco/javacpp/PointerTest.java#L1175",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024180132
https://github.com/qupath/qupath/issues/856#issuecomment-1024245119:60,Availability,reliab,reliably,60,"Thanks, makes sense. I'm still unable to get things working reliably in QuPath, including after a restart and when keeping the process alive after testing, but I'm not sure what else to try. For QuPath itself, the problem remains pretty obscure (I don't think any users have complained yet). I wouldn't want this to delay any 1.5.7 release, and I can't be certain any lingering problems aren't on our side anyway - I'm looking forward to the non-SNAPSHOT aarch64 builds being available.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119
https://github.com/qupath/qupath/issues/856#issuecomment-1024245119:135,Availability,alive,alive,135,"Thanks, makes sense. I'm still unable to get things working reliably in QuPath, including after a restart and when keeping the process alive after testing, but I'm not sure what else to try. For QuPath itself, the problem remains pretty obscure (I don't think any users have complained yet). I wouldn't want this to delay any 1.5.7 release, and I can't be certain any lingering problems aren't on our side anyway - I'm looking forward to the non-SNAPSHOT aarch64 builds being available.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119
https://github.com/qupath/qupath/issues/856#issuecomment-1024245119:476,Availability,avail,available,476,"Thanks, makes sense. I'm still unable to get things working reliably in QuPath, including after a restart and when keeping the process alive after testing, but I'm not sure what else to try. For QuPath itself, the problem remains pretty obscure (I don't think any users have complained yet). I wouldn't want this to delay any 1.5.7 release, and I can't be certain any lingering problems aren't on our side anyway - I'm looking forward to the non-SNAPSHOT aarch64 builds being available.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119
https://github.com/qupath/qupath/issues/856#issuecomment-1024245119:332,Deployability,release,release,332,"Thanks, makes sense. I'm still unable to get things working reliably in QuPath, including after a restart and when keeping the process alive after testing, but I'm not sure what else to try. For QuPath itself, the problem remains pretty obscure (I don't think any users have complained yet). I wouldn't want this to delay any 1.5.7 release, and I can't be certain any lingering problems aren't on our side anyway - I'm looking forward to the non-SNAPSHOT aarch64 builds being available.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119
https://github.com/qupath/qupath/issues/856#issuecomment-1024245119:147,Testability,test,testing,147,"Thanks, makes sense. I'm still unable to get things working reliably in QuPath, including after a restart and when keeping the process alive after testing, but I'm not sure what else to try. For QuPath itself, the problem remains pretty obscure (I don't think any users have complained yet). I wouldn't want this to delay any 1.5.7 release, and I can't be certain any lingering problems aren't on our side anyway - I'm looking forward to the non-SNAPSHOT aarch64 builds being available.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119
https://github.com/qupath/qupath/issues/856#issuecomment-1024399344:370,Deployability,release,release,370,"Maybe it's a legitimate memory leak in Rosetta? Did you check that? It appears a lot of people are having problems with it, like this: https://feedback-readonly.photoshop.com/conversations/lightroom-classic/lightroom-classic-desktop-disk-readwrite-to-ssd-m1-macs-with-rosetta/5fd7cefe7288d52d004c5a1c. Anyway, I'm waiting after a couple of things myself before the next release of JavaCPP, so if you figure out anything in the next week or so and find something, please do let me know! Thanks",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024399344
https://github.com/qupath/qupath/issues/856#issuecomment-1024399344:143,Usability,feedback,feedback-readonly,143,"Maybe it's a legitimate memory leak in Rosetta? Did you check that? It appears a lot of people are having problems with it, like this: https://feedback-readonly.photoshop.com/conversations/lightroom-classic/lightroom-classic-desktop-disk-readwrite-to-ssd-m1-macs-with-rosetta/5fd7cefe7288d52d004c5a1c. Anyway, I'm waiting after a couple of things myself before the next release of JavaCPP, so if you figure out anything in the next week or so and find something, please do let me know! Thanks",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024399344
https://github.com/qupath/qupath/issues/856#issuecomment-1024452486:102,Deployability,upgrade,upgrade,102,"Thanks @saudet good point! Alas, I'm currently stuck on macOS Big Sur 11.6.2 on (work's) M1, so can't upgrade to the latest OS - it would be nice (I think) to discover any issue has already been fixed there, and both QuPath and JavaCPP were fine all along. I'll certainly let you know if I discover anything further - thanks for all your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024452486
https://github.com/qupath/qupath/issues/856#issuecomment-1732338602:83,Deployability,update,updates,83,"I'll close this because there's now an Apple Silicon build of QuPath, other QuPath updates, JavaCPP updates, macOS updates... and I can't remember the last time I saw the problem. So let's assume it's no longer a problem at all. Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1732338602
https://github.com/qupath/qupath/issues/856#issuecomment-1732338602:100,Deployability,update,updates,100,"I'll close this because there's now an Apple Silicon build of QuPath, other QuPath updates, JavaCPP updates, macOS updates... and I can't remember the last time I saw the problem. So let's assume it's no longer a problem at all. Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1732338602
https://github.com/qupath/qupath/issues/856#issuecomment-1732338602:115,Deployability,update,updates,115,"I'll close this because there's now an Apple Silicon build of QuPath, other QuPath updates, JavaCPP updates, macOS updates... and I can't remember the last time I saw the problem. So let's assume it's no longer a problem at all. Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1732338602
https://github.com/qupath/qupath/issues/864#issuecomment-999608202:209,Usability,clear,clear,209,"My suggestion would be the same as @MichaelSNelson's, to check the image server. I'll close this issue because without a response there isn't really anything we can do on the QuPath side. Also, since it's not clear that there is any bug, the forum would be a better place to discuss further: https://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/864#issuecomment-999608202
https://github.com/qupath/qupath/issues/865#issuecomment-996635041:52,Energy Efficiency,reduce,reduce,52,"Upon further investigation, memoization can greatly reduce the severity of the problem - which is probably why it hasn't generated more complaints.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/865#issuecomment-996635041
https://github.com/qupath/qupath/issues/866#issuecomment-996226418:246,Availability,Down,Download,246,"Hi @petebankhead, thanks for the pointer. To close the loop here, **my installation of QuPath is now working as expected**, and the text is displaying appropriately. In case others encounter a similar problem, here's what worked to solve it:. 1. Download the Segoe UI font (e.g., from https://www.fontreach.com/segoe-ui-font-free-download/) and reinstall Segoe UI. For future reference, the following steps did NOT work:. 1. Reinstalling QuPath. 2. Using the `Repair` tool to repair the existing Qupath installation. 3. Updating Java to the latest version. 4. Updating OS from Windows 10 to Windows 11. Here are some links I found on 'javafx unreadable text' and Segoe UI:. 1. https://stackoverflow.com/questions/66747171/why-javafx-application-and-scene-builder-is-showing-garbled-text. 2. https://stackoverflow.com/questions/14091011/how-to-add-utf-8-for-non-english-support-in-javafx. 3. https://stackoverflow.com/questions/65150438/scene-builder-editor-displaying-weird-characters",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996226418
https://github.com/qupath/qupath/issues/866#issuecomment-996226418:330,Availability,down,download,330,"Hi @petebankhead, thanks for the pointer. To close the loop here, **my installation of QuPath is now working as expected**, and the text is displaying appropriately. In case others encounter a similar problem, here's what worked to solve it:. 1. Download the Segoe UI font (e.g., from https://www.fontreach.com/segoe-ui-font-free-download/) and reinstall Segoe UI. For future reference, the following steps did NOT work:. 1. Reinstalling QuPath. 2. Using the `Repair` tool to repair the existing Qupath installation. 3. Updating Java to the latest version. 4. Updating OS from Windows 10 to Windows 11. Here are some links I found on 'javafx unreadable text' and Segoe UI:. 1. https://stackoverflow.com/questions/66747171/why-javafx-application-and-scene-builder-is-showing-garbled-text. 2. https://stackoverflow.com/questions/14091011/how-to-add-utf-8-for-non-english-support-in-javafx. 3. https://stackoverflow.com/questions/65150438/scene-builder-editor-displaying-weird-characters",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996226418
https://github.com/qupath/qupath/issues/866#issuecomment-996226418:460,Availability,Repair,Repair,460,"Hi @petebankhead, thanks for the pointer. To close the loop here, **my installation of QuPath is now working as expected**, and the text is displaying appropriately. In case others encounter a similar problem, here's what worked to solve it:. 1. Download the Segoe UI font (e.g., from https://www.fontreach.com/segoe-ui-font-free-download/) and reinstall Segoe UI. For future reference, the following steps did NOT work:. 1. Reinstalling QuPath. 2. Using the `Repair` tool to repair the existing Qupath installation. 3. Updating Java to the latest version. 4. Updating OS from Windows 10 to Windows 11. Here are some links I found on 'javafx unreadable text' and Segoe UI:. 1. https://stackoverflow.com/questions/66747171/why-javafx-application-and-scene-builder-is-showing-garbled-text. 2. https://stackoverflow.com/questions/14091011/how-to-add-utf-8-for-non-english-support-in-javafx. 3. https://stackoverflow.com/questions/65150438/scene-builder-editor-displaying-weird-characters",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996226418
https://github.com/qupath/qupath/issues/866#issuecomment-996226418:476,Availability,repair,repair,476,"Hi @petebankhead, thanks for the pointer. To close the loop here, **my installation of QuPath is now working as expected**, and the text is displaying appropriately. In case others encounter a similar problem, here's what worked to solve it:. 1. Download the Segoe UI font (e.g., from https://www.fontreach.com/segoe-ui-font-free-download/) and reinstall Segoe UI. For future reference, the following steps did NOT work:. 1. Reinstalling QuPath. 2. Using the `Repair` tool to repair the existing Qupath installation. 3. Updating Java to the latest version. 4. Updating OS from Windows 10 to Windows 11. Here are some links I found on 'javafx unreadable text' and Segoe UI:. 1. https://stackoverflow.com/questions/66747171/why-javafx-application-and-scene-builder-is-showing-garbled-text. 2. https://stackoverflow.com/questions/14091011/how-to-add-utf-8-for-non-english-support-in-javafx. 3. https://stackoverflow.com/questions/65150438/scene-builder-editor-displaying-weird-characters",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996226418
https://github.com/qupath/qupath/issues/866#issuecomment-996226418:71,Deployability,install,installation,71,"Hi @petebankhead, thanks for the pointer. To close the loop here, **my installation of QuPath is now working as expected**, and the text is displaying appropriately. In case others encounter a similar problem, here's what worked to solve it:. 1. Download the Segoe UI font (e.g., from https://www.fontreach.com/segoe-ui-font-free-download/) and reinstall Segoe UI. For future reference, the following steps did NOT work:. 1. Reinstalling QuPath. 2. Using the `Repair` tool to repair the existing Qupath installation. 3. Updating Java to the latest version. 4. Updating OS from Windows 10 to Windows 11. Here are some links I found on 'javafx unreadable text' and Segoe UI:. 1. https://stackoverflow.com/questions/66747171/why-javafx-application-and-scene-builder-is-showing-garbled-text. 2. https://stackoverflow.com/questions/14091011/how-to-add-utf-8-for-non-english-support-in-javafx. 3. https://stackoverflow.com/questions/65150438/scene-builder-editor-displaying-weird-characters",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996226418
https://github.com/qupath/qupath/issues/866#issuecomment-996226418:503,Deployability,install,installation,503,"Hi @petebankhead, thanks for the pointer. To close the loop here, **my installation of QuPath is now working as expected**, and the text is displaying appropriately. In case others encounter a similar problem, here's what worked to solve it:. 1. Download the Segoe UI font (e.g., from https://www.fontreach.com/segoe-ui-font-free-download/) and reinstall Segoe UI. For future reference, the following steps did NOT work:. 1. Reinstalling QuPath. 2. Using the `Repair` tool to repair the existing Qupath installation. 3. Updating Java to the latest version. 4. Updating OS from Windows 10 to Windows 11. Here are some links I found on 'javafx unreadable text' and Segoe UI:. 1. https://stackoverflow.com/questions/66747171/why-javafx-application-and-scene-builder-is-showing-garbled-text. 2. https://stackoverflow.com/questions/14091011/how-to-add-utf-8-for-non-english-support-in-javafx. 3. https://stackoverflow.com/questions/65150438/scene-builder-editor-displaying-weird-characters",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996226418
https://github.com/qupath/qupath/issues/866#issuecomment-996245078:40,Deployability,install,install,40,Thanks @ayushnoori do you maybe need to install additional versions? I guess the garbled text should be bold and I'm not sure if that requires another file.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996245078
https://github.com/qupath/qupath/issues/866#issuecomment-996246433:145,Availability,down,download,145,"I tried to install Segoe UI Bold from an online vendor but doing so simply reverted all the text to the garbled version. Looks like you can't re-download the original TrueType font files directly from Microsoft (see https://docs.microsoft.com/en-us/typography/font-list/segoe-ui), so not sure where to obtain the correct `.ttf` files from.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996246433
https://github.com/qupath/qupath/issues/866#issuecomment-996246433:11,Deployability,install,install,11,"I tried to install Segoe UI Bold from an online vendor but doing so simply reverted all the text to the garbled version. Looks like you can't re-download the original TrueType font files directly from Microsoft (see https://docs.microsoft.com/en-us/typography/font-list/segoe-ui), so not sure where to obtain the correct `.ttf` files from.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996246433
https://github.com/qupath/qupath/issues/866#issuecomment-996246433:68,Usability,simpl,simply,68,"I tried to install Segoe UI Bold from an online vendor but doing so simply reverted all the text to the garbled version. Looks like you can't re-download the original TrueType font files directly from Microsoft (see https://docs.microsoft.com/en-us/typography/font-list/segoe-ui), so not sure where to obtain the correct `.ttf` files from.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996246433
https://github.com/qupath/qupath/pull/867#issuecomment-1001474808:161,Performance,concurren,concurrent-dynamic-object-pool-for-non-thread-safe-objects-using-blocking-queue,161,Just in case that's useful (I may be late...) I use a readerpool in bigdataviewer-bioformats. I used the class from here:. https://www.dbtsai.com/blog/2013/java-concurrent-dynamic-object-pool-for-non-thread-safe-objects-using-blocking-queue/. It's working great so far. One thing to take care of is to put tile reading in between a `pool.acquire()` and `pool.recycle(reader)` statements:. https://github.com/BIOP/bigdataviewer-bioformats/blob/bfb48be52694ffebaa03fbbe6339ac509aab66ea/src/main/java/ch/epfl/biop/bdv/bioformats/bioformatssource/BioFormatsBdvSourceUnsignedShort.java#L119-L157,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1001474808
https://github.com/qupath/qupath/pull/867#issuecomment-1001474808:207,Safety,safe,safe-objects-using-blocking-queue,207,Just in case that's useful (I may be late...) I use a readerpool in bigdataviewer-bioformats. I used the class from here:. https://www.dbtsai.com/blog/2013/java-concurrent-dynamic-object-pool-for-non-thread-safe-objects-using-blocking-queue/. It's working great so far. One thing to take care of is to put tile reading in between a `pool.acquire()` and `pool.recycle(reader)` statements:. https://github.com/BIOP/bigdataviewer-bioformats/blob/bfb48be52694ffebaa03fbbe6339ac509aab66ea/src/main/java/ch/epfl/biop/bdv/bioformats/bioformatssource/BioFormatsBdvSourceUnsignedShort.java#L119-L157,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1001474808
https://github.com/qupath/qupath/pull/867#issuecomment-1002502877:640,Availability,avail,available,640,"Thanks @NicoKiaru that sounds pretty similar to what I've tried to do here. As far as I can see, my implementation is working ok so I'll stick with it for now. One minor difference is that my version restricts creating new readers to a single background thread, since I found that sometimes (although rarely) constructing many reader simultaneously had really bad performance, as all the constructors got stuck parsing XML. By ensuring readers are created sequentially, I avoid blocking for too long when tile reading is substantially faster than reader initializing: if a thread wants a reader, it puts in its request. If there's a reader available, it gets that immediately. If not (and the max reader limit isn't reached) a background thread goes off to create a new reader. The original thread will then wait for the next available reader - which *might* be the one initialized because of its request, but it might also be one that has since become available. Waiting time is minimized in any case. I also added some `Cleaner` support from Java 9 to handle the fact that it's easy to miss closing an `ImageServer` properly. PS. Since the recycling is really important, should you do it in a `finally` block?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1002502877
https://github.com/qupath/qupath/pull/867#issuecomment-1002502877:826,Availability,avail,available,826,"Thanks @NicoKiaru that sounds pretty similar to what I've tried to do here. As far as I can see, my implementation is working ok so I'll stick with it for now. One minor difference is that my version restricts creating new readers to a single background thread, since I found that sometimes (although rarely) constructing many reader simultaneously had really bad performance, as all the constructors got stuck parsing XML. By ensuring readers are created sequentially, I avoid blocking for too long when tile reading is substantially faster than reader initializing: if a thread wants a reader, it puts in its request. If there's a reader available, it gets that immediately. If not (and the max reader limit isn't reached) a background thread goes off to create a new reader. The original thread will then wait for the next available reader - which *might* be the one initialized because of its request, but it might also be one that has since become available. Waiting time is minimized in any case. I also added some `Cleaner` support from Java 9 to handle the fact that it's easy to miss closing an `ImageServer` properly. PS. Since the recycling is really important, should you do it in a `finally` block?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1002502877
https://github.com/qupath/qupath/pull/867#issuecomment-1002502877:953,Availability,avail,available,953,"Thanks @NicoKiaru that sounds pretty similar to what I've tried to do here. As far as I can see, my implementation is working ok so I'll stick with it for now. One minor difference is that my version restricts creating new readers to a single background thread, since I found that sometimes (although rarely) constructing many reader simultaneously had really bad performance, as all the constructors got stuck parsing XML. By ensuring readers are created sequentially, I avoid blocking for too long when tile reading is substantially faster than reader initializing: if a thread wants a reader, it puts in its request. If there's a reader available, it gets that immediately. If not (and the max reader limit isn't reached) a background thread goes off to create a new reader. The original thread will then wait for the next available reader - which *might* be the one initialized because of its request, but it might also be one that has since become available. Waiting time is minimized in any case. I also added some `Cleaner` support from Java 9 to handle the fact that it's easy to miss closing an `ImageServer` properly. PS. Since the recycling is really important, should you do it in a `finally` block?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1002502877
https://github.com/qupath/qupath/pull/867#issuecomment-1002502877:364,Performance,perform,performance,364,"Thanks @NicoKiaru that sounds pretty similar to what I've tried to do here. As far as I can see, my implementation is working ok so I'll stick with it for now. One minor difference is that my version restricts creating new readers to a single background thread, since I found that sometimes (although rarely) constructing many reader simultaneously had really bad performance, as all the constructors got stuck parsing XML. By ensuring readers are created sequentially, I avoid blocking for too long when tile reading is substantially faster than reader initializing: if a thread wants a reader, it puts in its request. If there's a reader available, it gets that immediately. If not (and the max reader limit isn't reached) a background thread goes off to create a new reader. The original thread will then wait for the next available reader - which *might* be the one initialized because of its request, but it might also be one that has since become available. Waiting time is minimized in any case. I also added some `Cleaner` support from Java 9 to handle the fact that it's easy to miss closing an `ImageServer` properly. PS. Since the recycling is really important, should you do it in a `finally` block?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1002502877
https://github.com/qupath/qupath/pull/867#issuecomment-1002502877:472,Safety,avoid,avoid,472,"Thanks @NicoKiaru that sounds pretty similar to what I've tried to do here. As far as I can see, my implementation is working ok so I'll stick with it for now. One minor difference is that my version restricts creating new readers to a single background thread, since I found that sometimes (although rarely) constructing many reader simultaneously had really bad performance, as all the constructors got stuck parsing XML. By ensuring readers are created sequentially, I avoid blocking for too long when tile reading is substantially faster than reader initializing: if a thread wants a reader, it puts in its request. If there's a reader available, it gets that immediately. If not (and the max reader limit isn't reached) a background thread goes off to create a new reader. The original thread will then wait for the next available reader - which *might* be the one initialized because of its request, but it might also be one that has since become available. Waiting time is minimized in any case. I also added some `Cleaner` support from Java 9 to handle the fact that it's easy to miss closing an `ImageServer` properly. PS. Since the recycling is really important, should you do it in a `finally` block?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1002502877
https://github.com/qupath/qupath/pull/867#issuecomment-1002527257:624,Performance,perform,performance,624,"> Since the recycling is really important, should you do it in a finally block?. I need to check this! An the cleaner thing as well, but for now, Fiji = Java 8, so yeah, let's see if I can avoid it. ; I'm limiting the number of reader as well, it's a property of my dataset, and it's true that limiting the number of parallel reader to around 10 usually gives the best result (usually lower than the number of cores). > One minor difference is that my version restricts creating new readers to a single background thread, since I found that sometimes (although rarely) constructing many reader simultaneously had really bad performance, as all the constructors got stuck parsing XML. Right! In bdv, a first reader is created to parse metadata and build the memo file, I guess it's similar in QuPath. Then extra readers are creating for tile reading, once the memo file is already created. . There may be some optimisation possible for these 'extra readers', since metadata is not required anymore: https://forum.image.sc/t/open-czi-in-bio-formats-large-ram-requirements/45592/5, but I did not test it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1002527257
https://github.com/qupath/qupath/pull/867#issuecomment-1002527257:189,Safety,avoid,avoid,189,"> Since the recycling is really important, should you do it in a finally block?. I need to check this! An the cleaner thing as well, but for now, Fiji = Java 8, so yeah, let's see if I can avoid it. ; I'm limiting the number of reader as well, it's a property of my dataset, and it's true that limiting the number of parallel reader to around 10 usually gives the best result (usually lower than the number of cores). > One minor difference is that my version restricts creating new readers to a single background thread, since I found that sometimes (although rarely) constructing many reader simultaneously had really bad performance, as all the constructors got stuck parsing XML. Right! In bdv, a first reader is created to parse metadata and build the memo file, I guess it's similar in QuPath. Then extra readers are creating for tile reading, once the memo file is already created. . There may be some optimisation possible for these 'extra readers', since metadata is not required anymore: https://forum.image.sc/t/open-czi-in-bio-formats-large-ram-requirements/45592/5, but I did not test it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1002527257
https://github.com/qupath/qupath/pull/867#issuecomment-1002527257:1093,Testability,test,test,1093,"> Since the recycling is really important, should you do it in a finally block?. I need to check this! An the cleaner thing as well, but for now, Fiji = Java 8, so yeah, let's see if I can avoid it. ; I'm limiting the number of reader as well, it's a property of my dataset, and it's true that limiting the number of parallel reader to around 10 usually gives the best result (usually lower than the number of cores). > One minor difference is that my version restricts creating new readers to a single background thread, since I found that sometimes (although rarely) constructing many reader simultaneously had really bad performance, as all the constructors got stuck parsing XML. Right! In bdv, a first reader is created to parse metadata and build the memo file, I guess it's similar in QuPath. Then extra readers are creating for tile reading, once the memo file is already created. . There may be some optimisation possible for these 'extra readers', since metadata is not required anymore: https://forum.image.sc/t/open-czi-in-bio-formats-large-ram-requirements/45592/5, but I did not test it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1002527257
https://github.com/qupath/qupath/issues/872#issuecomment-1000156285:143,Availability,error,error-exists-when-open-a-tiff-image,143,Hi @SikangSHU I'm closing this issue because you've also posted it at https://github.com/qupath/qupath/issues/221 and https://forum.image.sc/t/error-exists-when-open-a-tiff-image/61380. Please help us manage the demand for QuPath support by posting each question only once. The forum is the right place to ask so I've responded [there](https://forum.image.sc/t/error-exists-when-open-a-tiff-image/61380).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/872#issuecomment-1000156285
https://github.com/qupath/qupath/issues/872#issuecomment-1000156285:361,Availability,error,error-exists-when-open-a-tiff-image,361,Hi @SikangSHU I'm closing this issue because you've also posted it at https://github.com/qupath/qupath/issues/221 and https://forum.image.sc/t/error-exists-when-open-a-tiff-image/61380. Please help us manage the demand for QuPath support by posting each question only once. The forum is the right place to ask so I've responded [there](https://forum.image.sc/t/error-exists-when-open-a-tiff-image/61380).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/872#issuecomment-1000156285
https://github.com/qupath/qupath/issues/891#issuecomment-1016529189:74,Testability,log,log,74,"What is the file format? Is there any information under *View &rarr; Show log*?. My guess is .mrxs, with some kind of compression that OpenSlide is missing on Windows. But that is entirely a guess :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/891#issuecomment-1016529189
https://github.com/qupath/qupath/issues/891#issuecomment-1016538196:110,Deployability,install,installations,110,"And is the same server being used for both? I am not sure why it would not be, but I am not sure how much the installations may have been modified.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/891#issuecomment-1016538196
https://github.com/qupath/qupath/issues/891#issuecomment-1027855598:1721,Integrability,Message,Message,1721,"Hello,. Sorry for not being able to reply, in the end I didn't bother and used the; mac instead of my windows laptop.; The name server was the same for both indeed;; As for the .vsi file, I didn't find it, however I used the same source; (external hdd), so the files used were exactly the same between the test on; windows and the test on mac. Again, Sorry for the late reply,; If you want to further explore this bug, I can try to fetch the logs for; you. Best,; PA. On Wed, Feb 2, 2022 at 12:29 PM Pete ***@***.***> wrote:. > Upon reflection, it could also be a .vsi file with the core data directory; > missing - but it's really not possible for us to guess with much confidence.; >; > I'll close this issue due to a lack of information.; >; > Bug reports here should really follow the defined template shown when; > creating a new issue, so that they contain enough information for us to; > understand and address any issues. Please feel free to start a topic on; > https://forum.image.sc/tag/qupath for any general discussion to try to; > identify what may be going wrong.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/891#issuecomment-1027846469>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AXL6CANNPIUHWFEUZL7PLZDUZEISDANCNFSM5MKBAMCA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/891#issuecomment-1027855598
https://github.com/qupath/qupath/issues/891#issuecomment-1027855598:306,Testability,test,test,306,"Hello,. Sorry for not being able to reply, in the end I didn't bother and used the; mac instead of my windows laptop.; The name server was the same for both indeed;; As for the .vsi file, I didn't find it, however I used the same source; (external hdd), so the files used were exactly the same between the test on; windows and the test on mac. Again, Sorry for the late reply,; If you want to further explore this bug, I can try to fetch the logs for; you. Best,; PA. On Wed, Feb 2, 2022 at 12:29 PM Pete ***@***.***> wrote:. > Upon reflection, it could also be a .vsi file with the core data directory; > missing - but it's really not possible for us to guess with much confidence.; >; > I'll close this issue due to a lack of information.; >; > Bug reports here should really follow the defined template shown when; > creating a new issue, so that they contain enough information for us to; > understand and address any issues. Please feel free to start a topic on; > https://forum.image.sc/tag/qupath for any general discussion to try to; > identify what may be going wrong.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/891#issuecomment-1027846469>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AXL6CANNPIUHWFEUZL7PLZDUZEISDANCNFSM5MKBAMCA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/891#issuecomment-1027855598
https://github.com/qupath/qupath/issues/891#issuecomment-1027855598:331,Testability,test,test,331,"Hello,. Sorry for not being able to reply, in the end I didn't bother and used the; mac instead of my windows laptop.; The name server was the same for both indeed;; As for the .vsi file, I didn't find it, however I used the same source; (external hdd), so the files used were exactly the same between the test on; windows and the test on mac. Again, Sorry for the late reply,; If you want to further explore this bug, I can try to fetch the logs for; you. Best,; PA. On Wed, Feb 2, 2022 at 12:29 PM Pete ***@***.***> wrote:. > Upon reflection, it could also be a .vsi file with the core data directory; > missing - but it's really not possible for us to guess with much confidence.; >; > I'll close this issue due to a lack of information.; >; > Bug reports here should really follow the defined template shown when; > creating a new issue, so that they contain enough information for us to; > understand and address any issues. Please feel free to start a topic on; > https://forum.image.sc/tag/qupath for any general discussion to try to; > identify what may be going wrong.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/891#issuecomment-1027846469>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AXL6CANNPIUHWFEUZL7PLZDUZEISDANCNFSM5MKBAMCA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/891#issuecomment-1027855598
https://github.com/qupath/qupath/issues/891#issuecomment-1027855598:442,Testability,log,logs,442,"Hello,. Sorry for not being able to reply, in the end I didn't bother and used the; mac instead of my windows laptop.; The name server was the same for both indeed;; As for the .vsi file, I didn't find it, however I used the same source; (external hdd), so the files used were exactly the same between the test on; windows and the test on mac. Again, Sorry for the late reply,; If you want to further explore this bug, I can try to fetch the logs for; you. Best,; PA. On Wed, Feb 2, 2022 at 12:29 PM Pete ***@***.***> wrote:. > Upon reflection, it could also be a .vsi file with the core data directory; > missing - but it's really not possible for us to guess with much confidence.; >; > I'll close this issue due to a lack of information.; >; > Bug reports here should really follow the defined template shown when; > creating a new issue, so that they contain enough information for us to; > understand and address any issues. Please feel free to start a topic on; > https://forum.image.sc/tag/qupath for any general discussion to try to; > identify what may be going wrong.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/891#issuecomment-1027846469>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AXL6CANNPIUHWFEUZL7PLZDUZEISDANCNFSM5MKBAMCA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/891#issuecomment-1027855598
https://github.com/qupath/qupath/issues/891#issuecomment-1027873778:605,Integrability,rout,routinely,605,"If you're working with .vsi files, then the problem I've seen before is that the accompanying .ets files are missing or inaccessible. For example, see https://forum.image.sc/t/open-vsi-images-in-qupath/41481/6. Although I'm not sure how that could happen using the same hard drive. No need for logs from my side - QuPath relies on Bio-Formats to read .vsi files, so I'm not sure if there is any QuPath bug to fix anyway :) The forum would be the best place to post if this becomes more problematic, since the Bio-Formats team are active there (along with some others who I know use .vsi files with QuPath routinely).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/891#issuecomment-1027873778
https://github.com/qupath/qupath/issues/891#issuecomment-1027873778:294,Testability,log,logs,294,"If you're working with .vsi files, then the problem I've seen before is that the accompanying .ets files are missing or inaccessible. For example, see https://forum.image.sc/t/open-vsi-images-in-qupath/41481/6. Although I'm not sure how that could happen using the same hard drive. No need for logs from my side - QuPath relies on Bio-Formats to read .vsi files, so I'm not sure if there is any QuPath bug to fix anyway :) The forum would be the best place to post if this becomes more problematic, since the Bio-Formats team are active there (along with some others who I know use .vsi files with QuPath routinely).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/891#issuecomment-1027873778
https://github.com/qupath/qupath/issues/894#issuecomment-1186392664:70,Deployability,release,release,70,"The code has been fixed, so this should work again in the next QuPath release (v0.4.0). Until then, the workaround is to **open the image through a project**. I'm leaving this issue open because the question understandably comes up quite often, and I want to make the solution easier to find. Duplicates:. * #904 ; * #973; * #1020 ; * #1023",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/894#issuecomment-1186392664
https://github.com/qupath/qupath/issues/904#issuecomment-1025461117:502,Availability,error,errors,502,"I could not replicate the problem. I opened the common sample image `CMU-1.svs` and used QuPath to write a pyramidal OME-TIFF with tile size 1024x1024 and default compression option (here, uses JPEG). After relaunching QuPath v0.3.2 (to ensure a clean start), It works properly with tile reading, caching and viewing across resolutions. * Have you tested this with multiple OME-TIFF files?; * Which software was used to write the pyramidal OME-TIFF files that are misbehaving?; * Are there any clues / errors reported in QuPath under *View &rarr; Show log*?; * Can you share any example images exhibiting this issue?. Note that v0.3.1 temporarily used a different version of Bio-Formats (6.8.0), but v0.3.0 and v0.3.2 use the same version of Bio-Formats (6.7.0). If you could compare behavior across all three versions, this may help identify when any problem could have been introduced.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1025461117
https://github.com/qupath/qupath/issues/904#issuecomment-1025461117:348,Testability,test,tested,348,"I could not replicate the problem. I opened the common sample image `CMU-1.svs` and used QuPath to write a pyramidal OME-TIFF with tile size 1024x1024 and default compression option (here, uses JPEG). After relaunching QuPath v0.3.2 (to ensure a clean start), It works properly with tile reading, caching and viewing across resolutions. * Have you tested this with multiple OME-TIFF files?; * Which software was used to write the pyramidal OME-TIFF files that are misbehaving?; * Are there any clues / errors reported in QuPath under *View &rarr; Show log*?; * Can you share any example images exhibiting this issue?. Note that v0.3.1 temporarily used a different version of Bio-Formats (6.8.0), but v0.3.0 and v0.3.2 use the same version of Bio-Formats (6.7.0). If you could compare behavior across all three versions, this may help identify when any problem could have been introduced.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1025461117
https://github.com/qupath/qupath/issues/904#issuecomment-1025461117:552,Testability,log,log,552,"I could not replicate the problem. I opened the common sample image `CMU-1.svs` and used QuPath to write a pyramidal OME-TIFF with tile size 1024x1024 and default compression option (here, uses JPEG). After relaunching QuPath v0.3.2 (to ensure a clean start), It works properly with tile reading, caching and viewing across resolutions. * Have you tested this with multiple OME-TIFF files?; * Which software was used to write the pyramidal OME-TIFF files that are misbehaving?; * Are there any clues / errors reported in QuPath under *View &rarr; Show log*?; * Can you share any example images exhibiting this issue?. Note that v0.3.1 temporarily used a different version of Bio-Formats (6.8.0), but v0.3.0 and v0.3.2 use the same version of Bio-Formats (6.7.0). If you could compare behavior across all three versions, this may help identify when any problem could have been introduced.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1025461117
https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:765,Availability,error,errors,765,"Sorry about the wait. **In response to your questions**. - I have tested zooming into an image with multiple OME-TIFF files and have gotten the same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475
https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:1105,Availability,error,error,1105,"ing into an image with multiple OME-TIFF files and have gotten the same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As well, here is a link to download two of my OME-TIFF images, if you would like",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475
https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:2025,Availability,down,download,2025,"e same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As well, here is a link to download two of my OME-TIFF images, if you would like to try viewing them on QuPath: http://gofile.me/6VSoS/CNJndmlCr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475
https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:1149,Performance,cache,cache,1149,"e same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As well, here is a link to download two of my OME-TIFF images, if you would like to try viewing them on QuPath: http://gofile.me/6VSoS/CNJndmlCr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475
https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:1164,Performance,load,load,1164,"e same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As well, here is a link to download two of my OME-TIFF images, if you would like to try viewing them on QuPath: http://gofile.me/6VSoS/CNJndmlCr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475
https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:66,Testability,test,tested,66,"Sorry about the wait. **In response to your questions**. - I have tested zooming into an image with multiple OME-TIFF files and have gotten the same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475
https://github.com/qupath/qupath/issues/904#issuecomment-1065014828:378,Availability,error,error,378,"I've tried now on three computers (Windows 64, Mac M1, Mac Intel) and can't replicate any problem - the tiles open fine at all resolutions in QuPath v0.3.2. I see the warning in v0.3.1 but the image still opens without problems. Two things you could try:; * Reset QuPath's preferences, with *Edit &rarr; Reset preferences*; * Increase the logging in the hope that a more useful error appears; to do this go to *Edit &rarr; Preferences...* and search for `Log level`, then set its value to `DEBUG`. (I do see that the images aren't recognised as RGB, but that's a different issue... I may need to update QuPath to convert it to a more standard RGB automatically)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828
https://github.com/qupath/qupath/issues/904#issuecomment-1065014828:596,Deployability,update,update,596,"I've tried now on three computers (Windows 64, Mac M1, Mac Intel) and can't replicate any problem - the tiles open fine at all resolutions in QuPath v0.3.2. I see the warning in v0.3.1 but the image still opens without problems. Two things you could try:; * Reset QuPath's preferences, with *Edit &rarr; Reset preferences*; * Increase the logging in the hope that a more useful error appears; to do this go to *Edit &rarr; Preferences...* and search for `Log level`, then set its value to `DEBUG`. (I do see that the images aren't recognised as RGB, but that's a different issue... I may need to update QuPath to convert it to a more standard RGB automatically)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828
https://github.com/qupath/qupath/issues/904#issuecomment-1065014828:339,Testability,log,logging,339,"I've tried now on three computers (Windows 64, Mac M1, Mac Intel) and can't replicate any problem - the tiles open fine at all resolutions in QuPath v0.3.2. I see the warning in v0.3.1 but the image still opens without problems. Two things you could try:; * Reset QuPath's preferences, with *Edit &rarr; Reset preferences*; * Increase the logging in the hope that a more useful error appears; to do this go to *Edit &rarr; Preferences...* and search for `Log level`, then set its value to `DEBUG`. (I do see that the images aren't recognised as RGB, but that's a different issue... I may need to update QuPath to convert it to a more standard RGB automatically)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828
https://github.com/qupath/qupath/issues/904#issuecomment-1065014828:455,Testability,Log,Log,455,"I've tried now on three computers (Windows 64, Mac M1, Mac Intel) and can't replicate any problem - the tiles open fine at all resolutions in QuPath v0.3.2. I see the warning in v0.3.1 but the image still opens without problems. Two things you could try:; * Reset QuPath's preferences, with *Edit &rarr; Reset preferences*; * Increase the logging in the hope that a more useful error appears; to do this go to *Edit &rarr; Preferences...* and search for `Log level`, then set its value to `DEBUG`. (I do see that the images aren't recognised as RGB, but that's a different issue... I may need to update QuPath to convert it to a more standard RGB automatically)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828
https://github.com/qupath/qupath/issues/904#issuecomment-1065833035:458,Deployability,release,release,458,"@ajaysingh096 thanks, I've identified the source of the problem as being the same as https://github.com/qupath/qupath/issues/894 - although it appears in a slightly different way (just opening a low-res image rather than freezing). It was also discussed [here](https://forum.image.sc/t/problem-about-opening-ndpis-files-in-qupath-v0-3-1/62184). The good news it that this means the bug has already been fixed, and the fix will be included in the next QuPath release. In the meantime, it should be possible to open the images in QuPath as long as you [add them to a project first](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1065833035
https://github.com/qupath/qupath/issues/915#issuecomment-1041907962:15,Usability,clear,clear,15,"Thanks for the clear report, I wasn't aware of the 255 argument limit. I think switching to a list makes sense. I'll look into this soon - there are a few scripting things that need an overhaul before v0.4.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/915#issuecomment-1041907962
https://github.com/qupath/qupath/issues/915#issuecomment-1087825570:37,Deployability,update,update,37,"Thanks, this should now be fixed. To update older scripts, you can convert the list of names to a String array by adding `[` at the start and `] as String[]` at the end. It should look something like this; ```groovy; removeMeasurements(qupath.lib.objects.PathCellObject, [""Name 1"", ""Name 2"", ..., ""Name X""] as String[]); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/915#issuecomment-1087825570
https://github.com/qupath/qupath/issues/916#issuecomment-1046935325:128,Energy Efficiency,adapt,adapting,128,"I couldn't replicate this on my Mac - however that may be because the bit you linked to is hard-coded to use `Ctrl` rather than adapting to use `Cmd`... which might also be an issue, I guess. I need to use `Cmd + Backspace` to delete the full word. Either way, sounds like a bug that needs fixed for Windows & Linux.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/916#issuecomment-1046935325
https://github.com/qupath/qupath/issues/916#issuecomment-1046935325:128,Modifiability,adapt,adapting,128,"I couldn't replicate this on my Mac - however that may be because the bit you linked to is hard-coded to use `Ctrl` rather than adapting to use `Cmd`... which might also be an issue, I guess. I need to use `Cmd + Backspace` to delete the full word. Either way, sounds like a bug that needs fixed for Windows & Linux.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/916#issuecomment-1046935325
https://github.com/qupath/qupath/issues/932#issuecomment-1056908079:167,Availability,error,error,167,"From the log, it looks like you're calling the script with `40770,35790` as the width and height parameters - which seems much too big, leading to a memory allocation error. Could it be that the bug is in whatever script you're using to make the request from QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1056908079
https://github.com/qupath/qupath/issues/932#issuecomment-1056908079:9,Testability,log,log,9,"From the log, it looks like you're calling the script with `40770,35790` as the width and height parameters - which seems much too big, leading to a memory allocation error. Could it be that the bug is in whatever script you're using to make the request from QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1056908079
https://github.com/qupath/qupath/issues/932#issuecomment-1057108089:423,Safety,avoid,avoid,423,"Thanks, there seems to be an issue with Bio-Formats reading the files, either not recognising them as pyramidal or only extracting the lowest resolution level. The contents of the 'Image' tab would give more useful information about what exactly is being read. There were recently issues with Aperio files reported at https://github.com/ome/bioformats/issues/3757; QuPath v0.3.2 reverts back to Bio-Formats 6.7.0 to try to avoid this specific issue but perhaps something related is going wrong. Forcing OpenSlide to be used as the reader rather than Bio-Formats may help: https://forum.image.sc/t/problem-about-opening-some-svs-slides-in-qupath-v0-3-1-bio-formats-6-8-0/61404/14. Apart from that, I'd need an example failing image to be able to investigate further - but even then I'm not sure that this is a bug that can be fixed in QuPath. To get things working, it may require the problematic files to be supported in Bio-Formats. However... > If I run the code on the same image it just broke on again, it works fine. There is seemingly no regularity to which images it fails on, other than they seem to be "".tif"" files. I have never had this bug appear on previous versions of QuPath. That does sounds strange. Assuming it's true, then I'm probably wrong in attributing it to Bio-Formats and it could indeed be a QuPath bug. But I'm afraid I have no way to exploring or fixing it. It would be helpful to know which QuPath versions works and which fail to be able to identify the problem more precisely. If I had to make a complete guess, it *might* have some connection with https://github.com/qupath/qupath/issues/894; If so, it *might* already be fixed if you [build from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html). I'd be interested if that's the case, but I don't recommend to using the current snapshot version (subject to change at any moment) - so would suggest reverting to the last working version instead. But I really am guessing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057108089
https://github.com/qupath/qupath/issues/932#issuecomment-1057152300:604,Availability,failure,failure,604,"Hi Pete,. Thank you for your reply. I attach another video which goes back in time to find which version was last able to open the image in question. In short, it's 0.3.0, but the video serves as evidence that I checked them correctly. I will rerun the tile extraction using QuPath 0.3.0 tonight (as opposed to 0.3.2, which is the one that failed). I hope this new information helps. When I say the code fails on one image, but works if I rerun it, I'm really not joking. It is super weird. I was thinking of putting it inside a try and except statement and giving it three or four goes before accepting failure because it never seems to fail on the same image twice in a row. I'd like to try building from source out of curiosity. I will also ask my PI if I'm allowed to get the image to you, if you'd like to try it for yourself?. https://user-images.githubusercontent.com/44713405/156409401-178cd9aa-81b1-4c2d-b76a-4bc8965f394c.mp4. Best,. Jim",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057152300
https://github.com/qupath/qupath/issues/932#issuecomment-1057173906:1090,Availability,error,error,1090,"I think the video is showing exactly this issue: https://github.com/qupath/qupath/issues/894; It relates to opening a subset of images *outside of a project* using Bio-Formats in v0.3.1 and v0.3.2, when QuPath hangs. Not all svs files are affected, it depends upon how labels/macro images are stored inside. Some other formats (e.g. .vsi, .lif) suffer the issue too. I've already fixed that and the fix will be in the next release. Because that particular bug is related to the UI, I don't think it should have any impact when called from the command line - so I think it's different from the original tiling issue here. I'm really interested to find out of the tiling issue is avoided when using QuPath v0.3.0. There was a change in how tiles are requested in parallel in QuPath v0.3.1 and v0.3.2. This didn't directly *cause* the UI problem, but it revealed its existence (because the UI code was requesting tiles from an image after it was closed, and that caused the hang). Intermittent issues like the tiling one here do sound like parallelisation is somehow involved, but the initial error on this thread is strange.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906
https://github.com/qupath/qupath/issues/932#issuecomment-1057173906:423,Deployability,release,release,423,"I think the video is showing exactly this issue: https://github.com/qupath/qupath/issues/894; It relates to opening a subset of images *outside of a project* using Bio-Formats in v0.3.1 and v0.3.2, when QuPath hangs. Not all svs files are affected, it depends upon how labels/macro images are stored inside. Some other formats (e.g. .vsi, .lif) suffer the issue too. I've already fixed that and the fix will be in the next release. Because that particular bug is related to the UI, I don't think it should have any impact when called from the command line - so I think it's different from the original tiling issue here. I'm really interested to find out of the tiling issue is avoided when using QuPath v0.3.0. There was a change in how tiles are requested in parallel in QuPath v0.3.1 and v0.3.2. This didn't directly *cause* the UI problem, but it revealed its existence (because the UI code was requesting tiles from an image after it was closed, and that caused the hang). Intermittent issues like the tiling one here do sound like parallelisation is somehow involved, but the initial error on this thread is strange.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906
https://github.com/qupath/qupath/issues/932#issuecomment-1057173906:252,Integrability,depend,depends,252,"I think the video is showing exactly this issue: https://github.com/qupath/qupath/issues/894; It relates to opening a subset of images *outside of a project* using Bio-Formats in v0.3.1 and v0.3.2, when QuPath hangs. Not all svs files are affected, it depends upon how labels/macro images are stored inside. Some other formats (e.g. .vsi, .lif) suffer the issue too. I've already fixed that and the fix will be in the next release. Because that particular bug is related to the UI, I don't think it should have any impact when called from the command line - so I think it's different from the original tiling issue here. I'm really interested to find out of the tiling issue is avoided when using QuPath v0.3.0. There was a change in how tiles are requested in parallel in QuPath v0.3.1 and v0.3.2. This didn't directly *cause* the UI problem, but it revealed its existence (because the UI code was requesting tiles from an image after it was closed, and that caused the hang). Intermittent issues like the tiling one here do sound like parallelisation is somehow involved, but the initial error on this thread is strange.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906
https://github.com/qupath/qupath/issues/932#issuecomment-1057173906:678,Safety,avoid,avoided,678,"I think the video is showing exactly this issue: https://github.com/qupath/qupath/issues/894; It relates to opening a subset of images *outside of a project* using Bio-Formats in v0.3.1 and v0.3.2, when QuPath hangs. Not all svs files are affected, it depends upon how labels/macro images are stored inside. Some other formats (e.g. .vsi, .lif) suffer the issue too. I've already fixed that and the fix will be in the next release. Because that particular bug is related to the UI, I don't think it should have any impact when called from the command line - so I think it's different from the original tiling issue here. I'm really interested to find out of the tiling issue is avoided when using QuPath v0.3.0. There was a change in how tiles are requested in parallel in QuPath v0.3.1 and v0.3.2. This didn't directly *cause* the UI problem, but it revealed its existence (because the UI code was requesting tiles from an image after it was closed, and that caused the hang). Intermittent issues like the tiling one here do sound like parallelisation is somehow involved, but the initial error on this thread is strange.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:52,Availability,error,error,52,"That's good to know, thanks. Poking deeper into the error I see; ```; qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqupath/lib/images/servers/TileRequest;IIZLjava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;+249; ```; which is definitely a new line connected with how tiles are paralleled in QuPath's Bio-Formats reading since v0.3.1. However, the bigger context is very mysterious:; ```; # Problematic frame:; # C [libc.so.6+0x9a23b] __libc_malloc+0x12b. [...more stuff...]. Current thread (0x00007f594d8d5540): JavaThread ""tile-exporter10"" daemon [_thread_in_vm, id=314754, stack(0x00007f4ec1aaf000,0x00007f4ec1bb0000)]. Stack: [0x00007f4ec1aaf000,0x00007f4ec1bb0000], sp=0x00007f4ec1bac3d0, free space=1012k; Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code); C [libc.so.6+0x9a23b] __libc_malloc+0x12b. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); J 758 java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:1651,Performance,load,loader,1651,"c1bb0000)]. Stack: [0x00007f4ec1aaf000,0x00007f4ec1bb0000], sp=0x00007f4ec1bac3d0, free space=1012k; Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code); C [libc.so.6+0x9a23b] __libc_malloc+0x12b. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); J 758 java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; J 631 c1 java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (7 bytes) @ 0x00007f593b0b1134 [0x00007f593b0b1040+0x00000000000000f4]; v ~StubRoutines::call_stub; j qupath.lib.images.se",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:1721,Performance,load,loader,1721,"00007f4ec1bac3d0, free space=1012k; Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code); C [libc.so.6+0x9a23b] __libc_malloc+0x12b. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); J 758 java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; J 631 c1 java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (7 bytes) @ 0x00007f593b0b1134 [0x00007f593b0b1040+0x00000000000000f4]; v ~StubRoutines::call_stub; j qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqup",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:1869,Performance,load,loader,1869,".6+0x9a23b] __libc_malloc+0x12b. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); J 758 java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; J 631 c1 java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (7 bytes) @ 0x00007f593b0b1134 [0x00007f593b0b1040+0x00000000000000f4]; v ~StubRoutines::call_stub; j qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqupath/lib/images/servers/TileRequest;IIZLjava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;+249; j qupath.lib.images.servers.bioformats.BioFormatsIma",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:2072,Performance,load,loader,2072,"ctionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; J 631 c1 java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (7 bytes) @ 0x00007f593b0b1134 [0x00007f593b0b1040+0x00000000000000f4]; v ~StubRoutines::call_stub; j qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqupath/lib/images/servers/TileRequest;IIZLjava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;+249; j qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(Lqupath/lib/images/servers/TileRequest;)Ljava/awt/image/BufferedImage;+21; ```; This makes it look like something has gone wrong deeper in the bowels of Java, and I don't see how to res",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:2098,Performance,load,loadClassOrNull,2098,"a.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; J 631 c1 java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (7 bytes) @ 0x00007f593b0b1134 [0x00007f593b0b1040+0x00000000000000f4]; v ~StubRoutines::call_stub; j qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqupath/lib/images/servers/TileRequest;IIZLjava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;+249; j qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(Lqupath/lib/images/servers/TileRequest;)Ljava/awt/image/BufferedImage;+21; ```; This makes it look like something has gone wrong deeper in the bowels of Java, and I don't see how to resolve it from the QuPath side. I'm reluctant to retur",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:2265,Performance,load,loader,2265,"ava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; J 631 c1 java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (7 bytes) @ 0x00007f593b0b1134 [0x00007f593b0b1040+0x00000000000000f4]; v ~StubRoutines::call_stub; j qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqupath/lib/images/servers/TileRequest;IIZLjava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;+249; j qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(Lqupath/lib/images/servers/TileRequest;)Ljava/awt/image/BufferedImage;+21; ```; This makes it look like something has gone wrong deeper in the bowels of Java, and I don't see how to resolve it from the QuPath side. I'm reluctant to return to the v0.3.0 method of parallelisation, since it had other (more frequent) problems https://github.com/qupath/qupath/issues/865",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:2300,Performance,load,loadClass,2300,"ava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; J 631 c1 java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (7 bytes) @ 0x00007f593b0b1134 [0x00007f593b0b1040+0x00000000000000f4]; v ~StubRoutines::call_stub; j qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqupath/lib/images/servers/TileRequest;IIZLjava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;+249; j qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(Lqupath/lib/images/servers/TileRequest;)Ljava/awt/image/BufferedImage;+21; ```; This makes it look like something has gone wrong deeper in the bowels of Java, and I don't see how to resolve it from the QuPath side. I'm reluctant to return to the v0.3.0 method of parallelisation, since it had other (more frequent) problems https://github.com/qupath/qupath/issues/865",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:2469,Performance,load,loadClass,2469,"ava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; J 631 c1 java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (7 bytes) @ 0x00007f593b0b1134 [0x00007f593b0b1040+0x00000000000000f4]; v ~StubRoutines::call_stub; j qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqupath/lib/images/servers/TileRequest;IIZLjava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;+249; j qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(Lqupath/lib/images/servers/TileRequest;)Ljava/awt/image/BufferedImage;+21; ```; This makes it look like something has gone wrong deeper in the bowels of Java, and I don't see how to resolve it from the QuPath side. I'm reluctant to return to the v0.3.0 method of parallelisation, since it had other (more frequent) problems https://github.com/qupath/qupath/issues/865",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:1061,Security,secur,security,1061,"; ```; qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqupath/lib/images/servers/TileRequest;IIZLjava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;+249; ```; which is definitely a new line connected with how tiles are paralleled in QuPath's Bio-Formats reading since v0.3.1. However, the bigger context is very mysterious:; ```; # Problematic frame:; # C [libc.so.6+0x9a23b] __libc_malloc+0x12b. [...more stuff...]. Current thread (0x00007f594d8d5540): JavaThread ""tile-exporter10"" daemon [_thread_in_vm, id=314754, stack(0x00007f4ec1aaf000,0x00007f4ec1bb0000)]. Stack: [0x00007f4ec1aaf000,0x00007f4ec1bb0000], sp=0x00007f4ec1bac3d0, free space=1012k; Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code); C [libc.so.6+0x9a23b] __libc_malloc+0x12b. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); J 758 java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:1284,Security,secur,security,1284,"ne connected with how tiles are paralleled in QuPath's Bio-Formats reading since v0.3.1. However, the bigger context is very mysterious:; ```; # Problematic frame:; # C [libc.so.6+0x9a23b] __libc_malloc+0x12b. [...more stuff...]. Current thread (0x00007f594d8d5540): JavaThread ""tile-exporter10"" daemon [_thread_in_vm, id=314754, stack(0x00007f4ec1aaf000,0x00007f4ec1bb0000)]. Stack: [0x00007f4ec1aaf000,0x00007f4ec1bb0000], sp=0x00007f4ec1bac3d0, free space=1012k; Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code); C [libc.so.6+0x9a23b] __libc_malloc+0x12b. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); J 758 java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppC",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:1433,Security,secur,security,1433,"blematic frame:; # C [libc.so.6+0x9a23b] __libc_malloc+0x12b. [...more stuff...]. Current thread (0x00007f594d8d5540): JavaThread ""tile-exporter10"" daemon [_thread_in_vm, id=314754, stack(0x00007f4ec1aaf000,0x00007f4ec1bb0000)]. Stack: [0x00007f4ec1aaf000,0x00007f4ec1bb0000], sp=0x00007f4ec1bac3d0, free space=1012k; Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code); C [libc.so.6+0x9a23b] __libc_malloc+0x12b. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); J 758 java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:1442,Security,Secur,SecureClassLoader,1442,":; # C [libc.so.6+0x9a23b] __libc_malloc+0x12b. [...more stuff...]. Current thread (0x00007f594d8d5540): JavaThread ""tile-exporter10"" daemon [_thread_in_vm, id=314754, stack(0x00007f4ec1aaf000,0x00007f4ec1bb0000)]. Stack: [0x00007f4ec1aaf000,0x00007f4ec1bb0000], sp=0x00007f4ec1bac3d0, free space=1012k; Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code); C [libc.so.6+0x9a23b] __libc_malloc+0x12b. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); J 758 java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; J 631 c1 java",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:1500,Security,secur,security,1500,".more stuff...]. Current thread (0x00007f594d8d5540): JavaThread ""tile-exporter10"" daemon [_thread_in_vm, id=314754, stack(0x00007f4ec1aaf000,0x00007f4ec1bb0000)]. Stack: [0x00007f4ec1aaf000,0x00007f4ec1bb0000], sp=0x00007f4ec1bac3d0, free space=1012k; Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code); C [libc.so.6+0x9a23b] __libc_malloc+0x12b. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); J 758 java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; J 631 c1 java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljav",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:2608,Testability,Stub,StubRoutines,2608,"ava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b0be434 [0x00007f593b0bd460+0x0000000000000fd4]; J 3884 c1 jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (143 bytes) @ 0x00007f593b6e8024 [0x00007f593b6e71c0+0x0000000000000e64]; J 632 c1 jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class; java.base@16.0.2 (40 bytes) @ 0x00007f593b0b206c [0x00007f593b0b1a60+0x000000000000060c]; J 631 c1 java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (7 bytes) @ 0x00007f593b0b1134 [0x00007f593b0b1040+0x00000000000000f4]; v ~StubRoutines::call_stub; j qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqupath/lib/images/servers/TileRequest;IIZLjava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;+249; j qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(Lqupath/lib/images/servers/TileRequest;)Ljava/awt/image/BufferedImage;+21; ```; This makes it look like something has gone wrong deeper in the bowels of Java, and I don't see how to resolve it from the QuPath side. I'm reluctant to return to the v0.3.0 method of parallelisation, since it had other (more frequent) problems https://github.com/qupath/qupath/issues/865",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302
https://github.com/qupath/qupath/issues/932#issuecomment-1732337755:167,Deployability,update,updates,167,"I'll close this issue, because it has been over a year and QuPath v0.4.x has come along in the meantime with other changes that may have helped (including Bio-Formats updates)... or at least taken us further away from figuring out what happened in v0.3.2 specifically. v0.5.0 will also be long soon; feel free to reopen if the issue reoccurs with it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1732337755
https://github.com/qupath/qupath/issues/942#issuecomment-1087804966:15,Usability,clear,clear,15,"Thanks for the clear bug report again, it should be fixed now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/942#issuecomment-1087804966
https://github.com/qupath/qupath/issues/947#issuecomment-1091970309:53,Availability,error,error,53,That is a very large classifier. Do you get the same error with both ANN and Decision Trees? When removing one scale?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1091970309
https://github.com/qupath/qupath/issues/947#issuecomment-1092019624:392,Security,access,accessible,392,"Hi @MarkZaidi I agree with @MichaelSNelson that that sounds like a very large classifier... large enough that I think it would be reasonable for QuPath not to support it, although ideally it wouldn't fail with an exception. I can't really feasibly use the 'steps to reproduce'. Is there any chance you can replicate the problem with a more manageable/minimal dataset - preferably of publicly-accessible images?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092019624
https://github.com/qupath/qupath/issues/947#issuecomment-1092033821:55,Availability,error,error,55,"> That is a very large classifier. Do you get the same error with both ANN and Decision Trees? When removing one scale?. Yep, I get the same error for both ANN and Decision Trees. When I drop scales until one succeeds, the other succeeds also. >Is there any chance you can replicate the problem with a more manageable/minimal dataset - preferably of publicly-accessible images?. Understandable; I'm working on creating a dataset from images that be publicly available regardless at the I2K conference. Will post a link shortly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092033821
https://github.com/qupath/qupath/issues/947#issuecomment-1092033821:141,Availability,error,error,141,"> That is a very large classifier. Do you get the same error with both ANN and Decision Trees? When removing one scale?. Yep, I get the same error for both ANN and Decision Trees. When I drop scales until one succeeds, the other succeeds also. >Is there any chance you can replicate the problem with a more manageable/minimal dataset - preferably of publicly-accessible images?. Understandable; I'm working on creating a dataset from images that be publicly available regardless at the I2K conference. Will post a link shortly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092033821
https://github.com/qupath/qupath/issues/947#issuecomment-1092033821:458,Availability,avail,available,458,"> That is a very large classifier. Do you get the same error with both ANN and Decision Trees? When removing one scale?. Yep, I get the same error for both ANN and Decision Trees. When I drop scales until one succeeds, the other succeeds also. >Is there any chance you can replicate the problem with a more manageable/minimal dataset - preferably of publicly-accessible images?. Understandable; I'm working on creating a dataset from images that be publicly available regardless at the I2K conference. Will post a link shortly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092033821
https://github.com/qupath/qupath/issues/947#issuecomment-1092033821:359,Security,access,accessible,359,"> That is a very large classifier. Do you get the same error with both ANN and Decision Trees? When removing one scale?. Yep, I get the same error for both ANN and Decision Trees. When I drop scales until one succeeds, the other succeeds also. >Is there any chance you can replicate the problem with a more manageable/minimal dataset - preferably of publicly-accessible images?. Understandable; I'm working on creating a dataset from images that be publicly available regardless at the I2K conference. Will post a link shortly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092033821
https://github.com/qupath/qupath/issues/947#issuecomment-1092063797:5,Availability,error,error,5,"This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker. I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092063797
https://github.com/qupath/qupath/issues/947#issuecomment-1092063797:33,Modifiability,variab,variables,33,"This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker. I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092063797
https://github.com/qupath/qupath/issues/947#issuecomment-1092063797:312,Modifiability,variab,variable,312,"This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker. I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092063797
https://github.com/qupath/qupath/issues/947#issuecomment-1092063797:379,Modifiability,variab,variables,379,"This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker. I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092063797
https://github.com/qupath/qupath/issues/947#issuecomment-1092066516:46,Availability,down,download,46,"@MichaelSNelson @petebankhead I've sent you a download link on the forums to a QuPath project and images that I'm able to reproduce the bug with, about 92 Mb in size. To reproduce the error, train a pixel classifier using all scales, features, and channels available, loading training from all 3 images in the project:; ![image](https://user-images.githubusercontent.com/52012166/162270961-33456355-318c-403c-8afc-151085a78d94.png); Thanks again for all your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092066516
https://github.com/qupath/qupath/issues/947#issuecomment-1092066516:184,Availability,error,error,184,"@MichaelSNelson @petebankhead I've sent you a download link on the forums to a QuPath project and images that I'm able to reproduce the bug with, about 92 Mb in size. To reproduce the error, train a pixel classifier using all scales, features, and channels available, loading training from all 3 images in the project:; ![image](https://user-images.githubusercontent.com/52012166/162270961-33456355-318c-403c-8afc-151085a78d94.png); Thanks again for all your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092066516
https://github.com/qupath/qupath/issues/947#issuecomment-1092066516:257,Availability,avail,available,257,"@MichaelSNelson @petebankhead I've sent you a download link on the forums to a QuPath project and images that I'm able to reproduce the bug with, about 92 Mb in size. To reproduce the error, train a pixel classifier using all scales, features, and channels available, loading training from all 3 images in the project:; ![image](https://user-images.githubusercontent.com/52012166/162270961-33456355-318c-403c-8afc-151085a78d94.png); Thanks again for all your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092066516
https://github.com/qupath/qupath/issues/947#issuecomment-1092066516:268,Performance,load,loading,268,"@MichaelSNelson @petebankhead I've sent you a download link on the forums to a QuPath project and images that I'm able to reproduce the bug with, about 92 Mb in size. To reproduce the error, train a pixel classifier using all scales, features, and channels available, loading training from all 3 images in the project:; ![image](https://user-images.githubusercontent.com/52012166/162270961-33456355-318c-403c-8afc-151085a78d94.png); Thanks again for all your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092066516
https://github.com/qupath/qupath/issues/947#issuecomment-1092079728:7,Availability,error,error,7,"> This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker.; > ; > I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one. Under the Advanced Options, there is the ability to perform PCA dimensionality reduction. My understanding is that it computes a PCA variance ""score"" for each feature (a feature being a unique combination between a scale X convolution X channel), sorts the features by their score, and selects the top _n_ features that account for _m_% of variance, as specified in ""PCA Retained Variance"". But as you mentioned, there's not really a way to control this feature augmentation to be more heavily weighted on a specific channel.; ![image](https://user-images.githubusercontent.com/52012166/162272015-63b7051c-a9b4-4e26-8579-0dc5173cab6c.png). The other option is to check ""Compute Variable Importance"" in the classifier parameters, however not all model types have this as an option. Still, I usually use this as a first-pass pruning of what channels to use for training each classifier; ![image](https://user-images.githubusercontent.com/52012166/162272798-9a94e40f-eee4-4e43-9dee-9aa2b5480f61.png). One way of potentially implementing feature scoring across all models would be to compute various descriptive statistics of the feature across each class of an annotated area, and find which features have the greatest variance across classes (or some other metric such as fold change). I've",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092079728
https://github.com/qupath/qupath/issues/947#issuecomment-1092079728:35,Modifiability,variab,variables,35,"> This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker.; > ; > I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one. Under the Advanced Options, there is the ability to perform PCA dimensionality reduction. My understanding is that it computes a PCA variance ""score"" for each feature (a feature being a unique combination between a scale X convolution X channel), sorts the features by their score, and selects the top _n_ features that account for _m_% of variance, as specified in ""PCA Retained Variance"". But as you mentioned, there's not really a way to control this feature augmentation to be more heavily weighted on a specific channel.; ![image](https://user-images.githubusercontent.com/52012166/162272015-63b7051c-a9b4-4e26-8579-0dc5173cab6c.png). The other option is to check ""Compute Variable Importance"" in the classifier parameters, however not all model types have this as an option. Still, I usually use this as a first-pass pruning of what channels to use for training each classifier; ![image](https://user-images.githubusercontent.com/52012166/162272798-9a94e40f-eee4-4e43-9dee-9aa2b5480f61.png). One way of potentially implementing feature scoring across all models would be to compute various descriptive statistics of the feature across each class of an annotated area, and find which features have the greatest variance across classes (or some other metric such as fold change). I've",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092079728
https://github.com/qupath/qupath/issues/947#issuecomment-1092079728:314,Modifiability,variab,variable,314,"> This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker.; > ; > I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one. Under the Advanced Options, there is the ability to perform PCA dimensionality reduction. My understanding is that it computes a PCA variance ""score"" for each feature (a feature being a unique combination between a scale X convolution X channel), sorts the features by their score, and selects the top _n_ features that account for _m_% of variance, as specified in ""PCA Retained Variance"". But as you mentioned, there's not really a way to control this feature augmentation to be more heavily weighted on a specific channel.; ![image](https://user-images.githubusercontent.com/52012166/162272015-63b7051c-a9b4-4e26-8579-0dc5173cab6c.png). The other option is to check ""Compute Variable Importance"" in the classifier parameters, however not all model types have this as an option. Still, I usually use this as a first-pass pruning of what channels to use for training each classifier; ![image](https://user-images.githubusercontent.com/52012166/162272798-9a94e40f-eee4-4e43-9dee-9aa2b5480f61.png). One way of potentially implementing feature scoring across all models would be to compute various descriptive statistics of the feature across each class of an annotated area, and find which features have the greatest variance across classes (or some other metric such as fold change). I've",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092079728
https://github.com/qupath/qupath/issues/947#issuecomment-1092079728:381,Modifiability,variab,variables,381,"> This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker.; > ; > I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one. Under the Advanced Options, there is the ability to perform PCA dimensionality reduction. My understanding is that it computes a PCA variance ""score"" for each feature (a feature being a unique combination between a scale X convolution X channel), sorts the features by their score, and selects the top _n_ features that account for _m_% of variance, as specified in ""PCA Retained Variance"". But as you mentioned, there's not really a way to control this feature augmentation to be more heavily weighted on a specific channel.; ![image](https://user-images.githubusercontent.com/52012166/162272015-63b7051c-a9b4-4e26-8579-0dc5173cab6c.png). The other option is to check ""Compute Variable Importance"" in the classifier parameters, however not all model types have this as an option. Still, I usually use this as a first-pass pruning of what channels to use for training each classifier; ![image](https://user-images.githubusercontent.com/52012166/162272798-9a94e40f-eee4-4e43-9dee-9aa2b5480f61.png). One way of potentially implementing feature scoring across all models would be to compute various descriptive statistics of the feature across each class of an annotated area, and find which features have the greatest variance across classes (or some other metric such as fold change). I've",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092079728
https://github.com/qupath/qupath/issues/947#issuecomment-1092079728:1391,Modifiability,Variab,Variable,1391,"it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker.; > ; > I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one. Under the Advanced Options, there is the ability to perform PCA dimensionality reduction. My understanding is that it computes a PCA variance ""score"" for each feature (a feature being a unique combination between a scale X convolution X channel), sorts the features by their score, and selects the top _n_ features that account for _m_% of variance, as specified in ""PCA Retained Variance"". But as you mentioned, there's not really a way to control this feature augmentation to be more heavily weighted on a specific channel.; ![image](https://user-images.githubusercontent.com/52012166/162272015-63b7051c-a9b4-4e26-8579-0dc5173cab6c.png). The other option is to check ""Compute Variable Importance"" in the classifier parameters, however not all model types have this as an option. Still, I usually use this as a first-pass pruning of what channels to use for training each classifier; ![image](https://user-images.githubusercontent.com/52012166/162272798-9a94e40f-eee4-4e43-9dee-9aa2b5480f61.png). One way of potentially implementing feature scoring across all models would be to compute various descriptive statistics of the feature across each class of an annotated area, and find which features have the greatest variance across classes (or some other metric such as fold change). I've been working on something similar using external object classifiers such as XGBoost, where I can compute the variable importance for each cell measurement, and find the sum importance of all features relating to a specific channel or feature set (e.g. mean cell intensity)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092079728
https://github.com/qupath/qupath/issues/947#issuecomment-1092079728:2111,Modifiability,variab,variable,2111,"it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker.; > ; > I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one. Under the Advanced Options, there is the ability to perform PCA dimensionality reduction. My understanding is that it computes a PCA variance ""score"" for each feature (a feature being a unique combination between a scale X convolution X channel), sorts the features by their score, and selects the top _n_ features that account for _m_% of variance, as specified in ""PCA Retained Variance"". But as you mentioned, there's not really a way to control this feature augmentation to be more heavily weighted on a specific channel.; ![image](https://user-images.githubusercontent.com/52012166/162272015-63b7051c-a9b4-4e26-8579-0dc5173cab6c.png). The other option is to check ""Compute Variable Importance"" in the classifier parameters, however not all model types have this as an option. Still, I usually use this as a first-pass pruning of what channels to use for training each classifier; ![image](https://user-images.githubusercontent.com/52012166/162272798-9a94e40f-eee4-4e43-9dee-9aa2b5480f61.png). One way of potentially implementing feature scoring across all models would be to compute various descriptive statistics of the feature across each class of an annotated area, and find which features have the greatest variance across classes (or some other metric such as fold change). I've been working on something similar using external object classifiers such as XGBoost, where I can compute the variable importance for each cell measurement, and find the sum importance of all features relating to a specific channel or feature set (e.g. mean cell intensity)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092079728
https://github.com/qupath/qupath/issues/947#issuecomment-1092079728:765,Performance,perform,perform,765,"> This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker.; > ; > I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one. Under the Advanced Options, there is the ability to perform PCA dimensionality reduction. My understanding is that it computes a PCA variance ""score"" for each feature (a feature being a unique combination between a scale X convolution X channel), sorts the features by their score, and selects the top _n_ features that account for _m_% of variance, as specified in ""PCA Retained Variance"". But as you mentioned, there's not really a way to control this feature augmentation to be more heavily weighted on a specific channel.; ![image](https://user-images.githubusercontent.com/52012166/162272015-63b7051c-a9b4-4e26-8579-0dc5173cab6c.png). The other option is to check ""Compute Variable Importance"" in the classifier parameters, however not all model types have this as an option. Still, I usually use this as a first-pass pruning of what channels to use for training each classifier; ![image](https://user-images.githubusercontent.com/52012166/162272798-9a94e40f-eee4-4e43-9dee-9aa2b5480f61.png). One way of potentially implementing feature scoring across all models would be to compute various descriptive statistics of the feature across each class of an annotated area, and find which features have the greatest variance across classes (or some other metric such as fold change). I've",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092079728
https://github.com/qupath/qupath/issues/947#issuecomment-1092097811:93,Modifiability,Variab,Variable,93,"Ah, good call, that is exactly what I was looking for in terms of the Decision trees Compute Variable Importance (had been on my phone and could not look it up), but had not considered the PCA in the Advanced options. For all that I always balance class weights, I had overlooked that option.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092097811
https://github.com/qupath/qupath/issues/947#issuecomment-1092108822:171,Availability,error,error,171,"It definitely seems to be entirely a result of the length of the variables vector/string/etc. Even reducing the Training Data - Maximum samples to 5, I still get the same error at the same number of variables. ; In the case of the provided data set, that occurs between two and three ""Scales"" being selected, and it does not matter which scales are selected. . Attempting to use the PCA option does not change the result, probably because it needs to _start_ with the complete set of different measurements, and fails _there_ rather than after PCA when using the reduced set. Loading data from a single image also results in the error. The final message is somewhat odd, and probably a result of the string passed to OpenCV failing? ; `WARN: No training data found - if you have training annotations, check the features are compatible with the current image.; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822
https://github.com/qupath/qupath/issues/947#issuecomment-1092108822:629,Availability,error,error,629,"It definitely seems to be entirely a result of the length of the variables vector/string/etc. Even reducing the Training Data - Maximum samples to 5, I still get the same error at the same number of variables. ; In the case of the provided data set, that occurs between two and three ""Scales"" being selected, and it does not matter which scales are selected. . Attempting to use the PCA option does not change the result, probably because it needs to _start_ with the complete set of different measurements, and fails _there_ rather than after PCA when using the reduced set. Loading data from a single image also results in the error. The final message is somewhat odd, and probably a result of the string passed to OpenCV failing? ; `WARN: No training data found - if you have training annotations, check the features are compatible with the current image.; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822
https://github.com/qupath/qupath/issues/947#issuecomment-1092108822:563,Energy Efficiency,reduce,reduced,563,"It definitely seems to be entirely a result of the length of the variables vector/string/etc. Even reducing the Training Data - Maximum samples to 5, I still get the same error at the same number of variables. ; In the case of the provided data set, that occurs between two and three ""Scales"" being selected, and it does not matter which scales are selected. . Attempting to use the PCA option does not change the result, probably because it needs to _start_ with the complete set of different measurements, and fails _there_ rather than after PCA when using the reduced set. Loading data from a single image also results in the error. The final message is somewhat odd, and probably a result of the string passed to OpenCV failing? ; `WARN: No training data found - if you have training annotations, check the features are compatible with the current image.; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822
https://github.com/qupath/qupath/issues/947#issuecomment-1092108822:646,Integrability,message,message,646,"It definitely seems to be entirely a result of the length of the variables vector/string/etc. Even reducing the Training Data - Maximum samples to 5, I still get the same error at the same number of variables. ; In the case of the provided data set, that occurs between two and three ""Scales"" being selected, and it does not matter which scales are selected. . Attempting to use the PCA option does not change the result, probably because it needs to _start_ with the complete set of different measurements, and fails _there_ rather than after PCA when using the reduced set. Loading data from a single image also results in the error. The final message is somewhat odd, and probably a result of the string passed to OpenCV failing? ; `WARN: No training data found - if you have training annotations, check the features are compatible with the current image.; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822
https://github.com/qupath/qupath/issues/947#issuecomment-1092108822:65,Modifiability,variab,variables,65,"It definitely seems to be entirely a result of the length of the variables vector/string/etc. Even reducing the Training Data - Maximum samples to 5, I still get the same error at the same number of variables. ; In the case of the provided data set, that occurs between two and three ""Scales"" being selected, and it does not matter which scales are selected. . Attempting to use the PCA option does not change the result, probably because it needs to _start_ with the complete set of different measurements, and fails _there_ rather than after PCA when using the reduced set. Loading data from a single image also results in the error. The final message is somewhat odd, and probably a result of the string passed to OpenCV failing? ; `WARN: No training data found - if you have training annotations, check the features are compatible with the current image.; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822
https://github.com/qupath/qupath/issues/947#issuecomment-1092108822:199,Modifiability,variab,variables,199,"It definitely seems to be entirely a result of the length of the variables vector/string/etc. Even reducing the Training Data - Maximum samples to 5, I still get the same error at the same number of variables. ; In the case of the provided data set, that occurs between two and three ""Scales"" being selected, and it does not matter which scales are selected. . Attempting to use the PCA option does not change the result, probably because it needs to _start_ with the complete set of different measurements, and fails _there_ rather than after PCA when using the reduced set. Loading data from a single image also results in the error. The final message is somewhat odd, and probably a result of the string passed to OpenCV failing? ; `WARN: No training data found - if you have training annotations, check the features are compatible with the current image.; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822
https://github.com/qupath/qupath/issues/947#issuecomment-1092108822:576,Performance,Load,Loading,576,"It definitely seems to be entirely a result of the length of the variables vector/string/etc. Even reducing the Training Data - Maximum samples to 5, I still get the same error at the same number of variables. ; In the case of the provided data set, that occurs between two and three ""Scales"" being selected, and it does not matter which scales are selected. . Attempting to use the PCA option does not change the result, probably because it needs to _start_ with the complete set of different measurements, and fails _there_ rather than after PCA when using the reduced set. Loading data from a single image also results in the error. The final message is somewhat odd, and probably a result of the string passed to OpenCV failing? ; `WARN: No training data found - if you have training annotations, check the features are compatible with the current image.; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822
https://github.com/qupath/qupath/issues/947#issuecomment-1092122418:252,Availability,error,error,252,"Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail. Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092122418
https://github.com/qupath/qupath/issues/947#issuecomment-1092122418:258,Integrability,message,message,258,"Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail. Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092122418
https://github.com/qupath/qupath/issues/947#issuecomment-1092122418:166,Modifiability,rewrite,rewrite,166,"Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail. Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092122418
https://github.com/qupath/qupath/issues/947#issuecomment-1092122418:12,Usability,learn,learned,12,"Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail. Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092122418
https://github.com/qupath/qupath/issues/947#issuecomment-1092134032:261,Availability,error,error,261,"> Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail.; > ; > Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message. Sounds reasonable, I wouldn't expect most classifiers to benefit from using that many channels, given that they're all derived from a few dozen IHC channels at most.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092134032
https://github.com/qupath/qupath/issues/947#issuecomment-1092134032:267,Integrability,message,message,267,"> Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail.; > ; > Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message. Sounds reasonable, I wouldn't expect most classifiers to benefit from using that many channels, given that they're all derived from a few dozen IHC channels at most.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092134032
https://github.com/qupath/qupath/issues/947#issuecomment-1092134032:175,Modifiability,rewrite,rewrite,175,"> Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail.; > ; > Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message. Sounds reasonable, I wouldn't expect most classifiers to benefit from using that many channels, given that they're all derived from a few dozen IHC channels at most.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092134032
https://github.com/qupath/qupath/issues/947#issuecomment-1092134032:14,Usability,learn,learned,14,"> Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail.; > ; > Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message. Sounds reasonable, I wouldn't expect most classifiers to benefit from using that many channels, given that they're all derived from a few dozen IHC channels at most.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092134032
https://github.com/qupath/qupath/issues/947#issuecomment-1092149041:59,Availability,error,error,59,I'll leave this issue open until either a more informative error is displayed (but that's a little awkward because of where in the code it occurs) and/or the limitation is added to the documentation.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092149041
https://github.com/qupath/qupath/issues/947#issuecomment-1092348518:239,Availability,avail,available,239,"BTW, the C++ API of PyTorch has no such limitations when it comes to this kind of semantic segmentation, and we can easily use it from Java: https://github.com/bytedeco/javacpp-presets/tree/master/pytorch. There is some sample code in C++ available here: https://github.com/AllentDan/LibtorchSegmentation. @HGuillemet might have some sample code in Java to offer. However, I don't believe it supports algorithms like logistic regression and SVM...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092348518
https://github.com/qupath/qupath/issues/947#issuecomment-1092348518:417,Testability,log,logistic,417,"BTW, the C++ API of PyTorch has no such limitations when it comes to this kind of semantic segmentation, and we can easily use it from Java: https://github.com/bytedeco/javacpp-presets/tree/master/pytorch. There is some sample code in C++ available here: https://github.com/AllentDan/LibtorchSegmentation. @HGuillemet might have some sample code in Java to offer. However, I don't believe it supports algorithms like logistic regression and SVM...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092348518
https://github.com/qupath/qupath/issues/947#issuecomment-1098276166:96,Availability,error,error,96,I'll close this because https://github.com/qupath/qupath/pull/951 should now display a sensible error notification when attempting to use more features than OpenCV can merge.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1098276166
https://github.com/qupath/qupath/issues/949#issuecomment-1095678096:114,Availability,error,error,114,"@petebankhead thank you, could you please have a look at this question? I tried to build from github but got this error. https://stackoverflow.com/questions/71835049/failed-to-apply-plugin-class-org-gradle-api-plugins-javaplugin-gradle-plugins",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095678096
https://github.com/qupath/qupath/issues/949#issuecomment-1095678096:182,Modifiability,plugin,plugin-class-org-gradle-api-plugins-javaplugin-gradle-plugins,182,"@petebankhead thank you, could you please have a look at this question? I tried to build from github but got this error. https://stackoverflow.com/questions/71835049/failed-to-apply-plugin-class-org-gradle-api-plugins-javaplugin-gradle-plugins",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095678096
https://github.com/qupath/qupath/issues/949#issuecomment-1095727131:77,Deployability,install,installed,77,@saudet could you please let me know how to do this in CentOS 7? ; gradle is installed in /opt/gradle,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095727131
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:115,Availability,error,error,115,"@saudet since my machine is CentOS 7, I decided to build the code from scratch (as you can see in my Stackoverflow error). Running what you mentioned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:218,Availability,error,error,218,"@saudet since my machine is CentOS 7, I decided to build the code from scratch (as you can see in my Stackoverflow error). Running what you mentioned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:476,Availability,down,downloads,476,"@saudet since my machine is CentOS 7, I decided to build the code from scratch (as you can see in my Stackoverflow error). Running what you mentioned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1692,Availability,error,error,1692,"; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1834,Availability,Error,Error,1834,"nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:2998,Availability,down,downloads,2998,_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:3086,Availability,down,downloads,3086,/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:3174,Availability,down,downloads,3174,71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuP,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:3273,Availability,down,downloads,3273,so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:4164,Availability,down,downloads,4164,lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b8000-55d91f2b9000 rw-p 00116000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b9000-55d91f2bc000 rw-p 00000000 00:00 0 ; 55d91ffd0000-55d920002000 rw-p 00000000 00:00 0 [heap]; 7f78664d2000-7f78668e6000 r-xp 00000000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f78668e6000-7f7866ae5000 ---p 00414000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:4258,Availability,down,downloads,4258,lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b8000-55d91f2b9000 rw-p 00116000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b9000-55d91f2bc000 rw-p 00000000 00:00 0 ; 55d91ffd0000-55d920002000 rw-p 00000000 00:00 0 [heap]; 7f78664d2000-7f78668e6000 r-xp 00000000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f78668e6000-7f7866ae5000 ---p 00414000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:4352,Availability,down,downloads,4352,lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b8000-55d91f2b9000 rw-p 00116000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b9000-55d91f2bc000 rw-p 00000000 00:00 0 ; 55d91ffd0000-55d920002000 rw-p 00000000 00:00 0 [heap]; 7f78664d2000-7f78668e6000 r-xp 00000000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f78668e6000-7f7866ae5000 ---p 00414000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:15667,Availability,down,downloads,15667,ome/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79411ff000-7f79413fe000 ---p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413fe000-7f79413ff000 r--p 0000c000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/download,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:15784,Availability,down,downloads,15784,4/libjnijavacpp.so; 7f79413fe000-7f79413ff000 r--p 0000c000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:15901,Availability,down,downloads,15901,-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16018,Availability,down,downloads,16018,0:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16135,Availability,down,downloads,16135,ijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16255,Availability,down,downloads,16255,scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16375,Availability,down,downloads,16375,f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downlo,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16495,Availability,down,downloads,16495,00000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16615,Availability,down,downloads,16615,7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16732,Availability,down,downloads,16732,79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f7943,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16849,Availability,down,downloads,16849,79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16966,Availability,down,downloads,16966,79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17133,Availability,down,downloads,17133, r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 230,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17245,Availability,down,downloads,17245,:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/g,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17357,Availability,down,downloads,17357,0d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 23060194,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17469,Availability,down,downloads,17469,rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19741,Availability,down,downloads,19741,:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19855,Availability,down,downloads,19855, /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0 ; 7f7954021000-7f7958000000 ---p 00000000 00:00 0 ; 7f7958023000-7f7958024000 ---p 00000000 00:00 0 ; 7f7958024000-7f7958125000 rw-p 00000000 00:00 0 ; 7f7958125000-7f7958126000 ---p 00000000 00:00 0 ; 7f7958126000-7f7958227000 rw-p 00000000 00:00 0 ; 7f795822700,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19969,Availability,down,downloads,19969, 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0 ; 7f7954021000-7f7958000000 ---p 00000000 00:00 0 ; 7f7958023000-7f7958024000 ---p 00000000 00:00 0 ; 7f7958024000-7f7958125000 rw-p 00000000 00:00 0 ; 7f7958125000-7f7958126000 ---p 00000000 00:00 0 ; 7f7958126000-7f7958227000 rw-p 00000000 00:00 0 ; 7f7958227000-7f7958228000 ---p 00000000 00:00 0 ; 7f7958228000-7f7958a28000 rw-p 00000000 00:00 0 ; 7f7958a28000-7f7958a34000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:20083,Availability,down,downloads,20083,2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0 ; 7f7954021000-7f7958000000 ---p 00000000 00:00 0 ; 7f7958023000-7f7958024000 ---p 00000000 00:00 0 ; 7f7958024000-7f7958125000 rw-p 00000000 00:00 0 ; 7f7958125000-7f7958126000 ---p 00000000 00:00 0 ; 7f7958126000-7f7958227000 rw-p 00000000 00:00 0 ; 7f7958227000-7f7958228000 ---p 00000000 00:00 0 ; 7f7958228000-7f7958a28000 rw-p 00000000 00:00 0 ; 7f7958a28000-7f7958a34000 r-xp 00000000 fd:00 68762842 /usr/lib64/gio/modules/libdconfsettings.so; 7f7958a34000-7f7958c33000 ---p 0000c000 ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1022,Deployability,release,release,1022,"@saudet since my machine is CentOS 7, I decided to build the code from scratch (as you can see in my Stackoverflow error). Running what you mentioned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1133,Deployability,configurat,configuration,1133,"ned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1820,Energy Efficiency,adapt,adapters,1820,"nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1820,Integrability,adapter,adapters,1820,"nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1133,Modifiability,config,configuration,1133,"ned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1820,Modifiability,adapt,adapters,1820,"nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1161,Performance,load,loaded,1161,"ned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1565,Performance,cache,cache,1565,"ad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:2457,Performance,cache,cache,2457,tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:4571,Performance,cache,cache,4571,p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b8000-55d91f2b9000 rw-p 00116000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b9000-55d91f2bc000 rw-p 00000000 00:00 0 ; 55d91ffd0000-55d920002000 rw-p 00000000 00:00 0 [heap]; 7f78664d2000-7f78668e6000 r-xp 00000000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f78668e6000-7f7866ae5000 ---p 00414000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af3000-7f7866af9000 rw-p 00421000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af9000-7f7866aff000 rw-p 00000000 00:00 0 ; 7f7866aff000-7f78682ab000 r-xp 00000000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78682ab000-7f78684ab000 ---p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.ja,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:4753,Performance,cache,cache,4753,00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b8000-55d91f2b9000 rw-p 00116000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b9000-55d91f2bc000 rw-p 00000000 00:00 0 ; 55d91ffd0000-55d920002000 rw-p 00000000 00:00 0 [heap]; 7f78664d2000-7f78668e6000 r-xp 00000000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f78668e6000-7f7866ae5000 ---p 00414000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af3000-7f7866af9000 rw-p 00421000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af9000-7f7866aff000 rw-p 00000000 00:00 0 ; 7f7866aff000-7f78682ab000 r-xp 00000000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78682ab000-7f78684ab000 ---p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ab000-7f78684ac000 r--p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.j,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:4935,Performance,cache,cache,4935,0-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b8000-55d91f2b9000 rw-p 00116000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b9000-55d91f2bc000 rw-p 00000000 00:00 0 ; 55d91ffd0000-55d920002000 rw-p 00000000 00:00 0 [heap]; 7f78664d2000-7f78668e6000 r-xp 00000000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f78668e6000-7f7866ae5000 ---p 00414000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af3000-7f7866af9000 rw-p 00421000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af9000-7f7866aff000 rw-p 00000000 00:00 0 ; 7f7866aff000-7f78682ab000 r-xp 00000000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78682ab000-7f78684ab000 ---p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ab000-7f78684ac000 r--p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ac000-7f78684b4000 rw-p 017ad000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:5117,Performance,cache,cache,5117,0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b8000-55d91f2b9000 rw-p 00116000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b9000-55d91f2bc000 rw-p 00000000 00:00 0 ; 55d91ffd0000-55d920002000 rw-p 00000000 00:00 0 [heap]; 7f78664d2000-7f78668e6000 r-xp 00000000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f78668e6000-7f7866ae5000 ---p 00414000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af3000-7f7866af9000 rw-p 00421000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af9000-7f7866aff000 rw-p 00000000 00:00 0 ; 7f7866aff000-7f78682ab000 r-xp 00000000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78682ab000-7f78684ab000 ---p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ab000-7f78684ac000 r--p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ac000-7f78684b4000 rw-p 017ad000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684b4000-7f78684b5000 rw-p 00000000 00:00 0 ; 7f78684b5000-7f78784b5000 rw-p 00000000 00:00 0 ; 7f78784b5000-7f78784b600,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:5349,Performance,cache,cache,5349,ownloads/QuPath/bin/QuPath; 55d91f2b9000-55d91f2bc000 rw-p 00000000 00:00 0 ; 55d91ffd0000-55d920002000 rw-p 00000000 00:00 0 [heap]; 7f78664d2000-7f78668e6000 r-xp 00000000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f78668e6000-7f7866ae5000 ---p 00414000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af3000-7f7866af9000 rw-p 00421000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af9000-7f7866aff000 rw-p 00000000 00:00 0 ; 7f7866aff000-7f78682ab000 r-xp 00000000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78682ab000-7f78684ab000 ---p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ab000-7f78684ac000 r--p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ac000-7f78684b4000 rw-p 017ad000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684b4000-7f78684b5000 rw-p 00000000 00:00 0 ; 7f78684b5000-7f78784b5000 rw-p 00000000 00:00 0 ; 7f78784b5000-7f78784b6000 ---p 00000000 00:00 0 ; 7f78784b6000-7f7878cb6000 rw-p 00000000 00:00 0 ; 7f7878cb6000-7f7880cb6000 rw-p 00000000 00:00 0 ; 7f7880cb6000-7f7880cb7000 ---p 00000000 00:00 0 ; 7f7880cb7000-7f78814b7000 rw-p 00000000 00:00 0 ; 7f78814,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:5532,Performance,cache,cache,5532,8694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f78668e6000-7f7866ae5000 ---p 00414000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af3000-7f7866af9000 rw-p 00421000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af9000-7f7866aff000 rw-p 00000000 00:00 0 ; 7f7866aff000-7f78682ab000 r-xp 00000000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78682ab000-7f78684ab000 ---p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ab000-7f78684ac000 r--p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ac000-7f78684b4000 rw-p 017ad000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684b4000-7f78684b5000 rw-p 00000000 00:00 0 ; 7f78684b5000-7f78784b5000 rw-p 00000000 00:00 0 ; 7f78784b5000-7f78784b6000 ---p 00000000 00:00 0 ; 7f78784b6000-7f7878cb6000 rw-p 00000000 00:00 0 ; 7f7878cb6000-7f7880cb6000 rw-p 00000000 00:00 0 ; 7f7880cb6000-7f7880cb7000 ---p 00000000 00:00 0 ; 7f7880cb7000-7f78814b7000 rw-p 00000000 00:00 0 ; 7f78814b7000-7f78894b7000 rw-p 00000000 00:00 0 ; 7f78894b7000-7f78894b8000 ---p 00000000 00:00 0 ; 7f78894b8000-7f7889cb8000 rw-p 00000000 00:00 0 ; 7f7889cb8000-7f7891cb8000 rw-p 00000000 ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:5715,Performance,cache,cache,5715,694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af3000-7f7866af9000 rw-p 00421000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af9000-7f7866aff000 rw-p 00000000 00:00 0 ; 7f7866aff000-7f78682ab000 r-xp 00000000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78682ab000-7f78684ab000 ---p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ab000-7f78684ac000 r--p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ac000-7f78684b4000 rw-p 017ad000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684b4000-7f78684b5000 rw-p 00000000 00:00 0 ; 7f78684b5000-7f78784b5000 rw-p 00000000 00:00 0 ; 7f78784b5000-7f78784b6000 ---p 00000000 00:00 0 ; 7f78784b6000-7f7878cb6000 rw-p 00000000 00:00 0 ; 7f7878cb6000-7f7880cb6000 rw-p 00000000 00:00 0 ; 7f7880cb6000-7f7880cb7000 ---p 00000000 00:00 0 ; 7f7880cb7000-7f78814b7000 rw-p 00000000 00:00 0 ; 7f78814b7000-7f78894b7000 rw-p 00000000 00:00 0 ; 7f78894b7000-7f78894b8000 ---p 00000000 00:00 0 ; 7f78894b8000-7f7889cb8000 rw-p 00000000 00:00 0 ; 7f7889cb8000-7f7891cb8000 rw-p 00000000 00:00 0 ; 7f7891cb8000-7f7891cb9000 ---p 00000000 00:00 0 ; 7f7891cb9000-7f78924b9000 rw-p 00000000 00:00 0 ; 7f78924b9000-7f789a4b9000 rw-p 00000000 00:00 0 ; 7f789a4b9000-7f789a4ba0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:5898,Performance,cache,cache,5898,94349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af3000-7f7866af9000 rw-p 00421000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866af9000-7f7866aff000 rw-p 00000000 00:00 0 ; 7f7866aff000-7f78682ab000 r-xp 00000000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78682ab000-7f78684ab000 ---p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ab000-7f78684ac000 r--p 017ac000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684ac000-7f78684b4000 rw-p 017ad000 00:2f 2345794470 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas.so; 7f78684b4000-7f78684b5000 rw-p 00000000 00:00 0 ; 7f78684b5000-7f78784b5000 rw-p 00000000 00:00 0 ; 7f78784b5000-7f78784b6000 ---p 00000000 00:00 0 ; 7f78784b6000-7f7878cb6000 rw-p 00000000 00:00 0 ; 7f7878cb6000-7f7880cb6000 rw-p 00000000 00:00 0 ; 7f7880cb6000-7f7880cb7000 ---p 00000000 00:00 0 ; 7f7880cb7000-7f78814b7000 rw-p 00000000 00:00 0 ; 7f78814b7000-7f78894b7000 rw-p 00000000 00:00 0 ; 7f78894b7000-7f78894b8000 ---p 00000000 00:00 0 ; 7f78894b8000-7f7889cb8000 rw-p 00000000 00:00 0 ; 7f7889cb8000-7f7891cb8000 rw-p 00000000 00:00 0 ; 7f7891cb8000-7f7891cb9000 ---p 00000000 00:00 0 ; 7f7891cb9000-7f78924b9000 rw-p 00000000 00:00 0 ; 7f78924b9000-7f789a4b9000 rw-p 00000000 00:00 0 ; 7f789a4b9000-7f789a4ba000 ---p 00000000 00:00 0 ; 7f789a4ba000-7f789acba000 rw-p 00000000 00:00 0 ; 7f789acba000-7f78a2cba000 rw-p 00000000 00:00 0 ; 7f78a2cba000-7f78a2cbb000 ---p 00000000 00:00 0 ; 7f78a2,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:7681,Performance,cache,cache,7681,0 00:00 0 ; 7f789a4b9000-7f789a4ba000 ---p 00000000 00:00 0 ; 7f789a4ba000-7f789acba000 rw-p 00000000 00:00 0 ; 7f789acba000-7f78a2cba000 rw-p 00000000 00:00 0 ; 7f78a2cba000-7f78a2cbb000 ---p 00000000 00:00 0 ; 7f78a2cbb000-7f78a34bb000 rw-p 00000000 00:00 0 ; 7f78a34bb000-7f78ab4bb000 rw-p 00000000 00:00 0 ; 7f78ab4bb000-7f78ab4bc000 ---p 00000000 00:00 0 ; 7f78ab4bc000-7f78abcbc000 rw-p 00000000 00:00 0 ; 7f78abcbc000-7f78b3cbc000 rw-p 00000000 00:00 0 ; 7f78b3cbc000-7f78b3cbd000 ---p 00000000 00:00 0 ; 7f78b3cbd000-7f78b44bd000 rw-p 00000000 00:00 0 ; 7f78b44bd000-7f78c44bd000 rw-p 00000000 00:00 0 ; 7f78c44bd000-7f78c44be000 ---p 00000000 00:00 0 ; 7f78c44be000-7f78c4cbe000 rw-p 00000000 00:00 0 ; 7f78c4cbe000-7f78c4cbf000 ---p 00000000 00:00 0 ; 7f78c4cbf000-7f78c54bf000 rw-p 00000000 00:00 0 ; 7f78c54bf000-7f78c54c0000 ---p 00000000 00:00 0 ; 7f78c54c0000-7f78c5cc0000 rw-p 00000000 00:00 0 ; 7f78c5cc0000-7f78c79d9000 r-xp 00000000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c79d9000-7f78c7bd8000 ---p 01d19000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bd8000-7f78c7bde000 r--p 01d18000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bde000-7f78c7bf4000 rw-p 01d1e000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bf4000-7f78c7c20000 rw-p 00000000 00:00 0 ; 7f78c7c20000-7f78c8400000 ---p 00000000 00:00 0 ; 7f78c87f9000-7f78d87f9000 rw-p 00000000 00:00 0 ; 7f78d87f9000-7f78d87fa000 ---p 00000000 00:00 0 ; 7f78d87fa000-7f78d8ffa000 rw-p 00000000 00:00 0 ; 7f78d8ffa000-7f78e0ffa000 rw-p 00000000 00:00 0 ; 7f78e0ffa000-7f78e0ffb000 ---p 00000000 00:00 0 ; 7f78e0ffb00,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:7863,Performance,cache,cache,7863,bb000 ---p 00000000 00:00 0 ; 7f78a2cbb000-7f78a34bb000 rw-p 00000000 00:00 0 ; 7f78a34bb000-7f78ab4bb000 rw-p 00000000 00:00 0 ; 7f78ab4bb000-7f78ab4bc000 ---p 00000000 00:00 0 ; 7f78ab4bc000-7f78abcbc000 rw-p 00000000 00:00 0 ; 7f78abcbc000-7f78b3cbc000 rw-p 00000000 00:00 0 ; 7f78b3cbc000-7f78b3cbd000 ---p 00000000 00:00 0 ; 7f78b3cbd000-7f78b44bd000 rw-p 00000000 00:00 0 ; 7f78b44bd000-7f78c44bd000 rw-p 00000000 00:00 0 ; 7f78c44bd000-7f78c44be000 ---p 00000000 00:00 0 ; 7f78c44be000-7f78c4cbe000 rw-p 00000000 00:00 0 ; 7f78c4cbe000-7f78c4cbf000 ---p 00000000 00:00 0 ; 7f78c4cbf000-7f78c54bf000 rw-p 00000000 00:00 0 ; 7f78c54bf000-7f78c54c0000 ---p 00000000 00:00 0 ; 7f78c54c0000-7f78c5cc0000 rw-p 00000000 00:00 0 ; 7f78c5cc0000-7f78c79d9000 r-xp 00000000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c79d9000-7f78c7bd8000 ---p 01d19000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bd8000-7f78c7bde000 r--p 01d18000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bde000-7f78c7bf4000 rw-p 01d1e000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bf4000-7f78c7c20000 rw-p 00000000 00:00 0 ; 7f78c7c20000-7f78c8400000 ---p 00000000 00:00 0 ; 7f78c87f9000-7f78d87f9000 rw-p 00000000 00:00 0 ; 7f78d87f9000-7f78d87fa000 ---p 00000000 00:00 0 ; 7f78d87fa000-7f78d8ffa000 rw-p 00000000 00:00 0 ; 7f78d8ffa000-7f78e0ffa000 rw-p 00000000 00:00 0 ; 7f78e0ffa000-7f78e0ffb000 ---p 00000000 00:00 0 ; 7f78e0ffb000-7f78e17fb000 rw-p 00000000 00:00 0 ; 7f78e17fb000-7f78e97fb000 rw-p 00000000 00:00 0 ; 7f78e97fb000-7f78e97fc000 ---p 00000000 00:00 0 ; 7f78e97fc000-7f78e9ffc000 rw-p 00000000 00:,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:8045,Performance,cache,cache,8045,78ab4bc000-7f78abcbc000 rw-p 00000000 00:00 0 ; 7f78abcbc000-7f78b3cbc000 rw-p 00000000 00:00 0 ; 7f78b3cbc000-7f78b3cbd000 ---p 00000000 00:00 0 ; 7f78b3cbd000-7f78b44bd000 rw-p 00000000 00:00 0 ; 7f78b44bd000-7f78c44bd000 rw-p 00000000 00:00 0 ; 7f78c44bd000-7f78c44be000 ---p 00000000 00:00 0 ; 7f78c44be000-7f78c4cbe000 rw-p 00000000 00:00 0 ; 7f78c4cbe000-7f78c4cbf000 ---p 00000000 00:00 0 ; 7f78c4cbf000-7f78c54bf000 rw-p 00000000 00:00 0 ; 7f78c54bf000-7f78c54c0000 ---p 00000000 00:00 0 ; 7f78c54c0000-7f78c5cc0000 rw-p 00000000 00:00 0 ; 7f78c5cc0000-7f78c79d9000 r-xp 00000000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c79d9000-7f78c7bd8000 ---p 01d19000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bd8000-7f78c7bde000 r--p 01d18000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bde000-7f78c7bf4000 rw-p 01d1e000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bf4000-7f78c7c20000 rw-p 00000000 00:00 0 ; 7f78c7c20000-7f78c8400000 ---p 00000000 00:00 0 ; 7f78c87f9000-7f78d87f9000 rw-p 00000000 00:00 0 ; 7f78d87f9000-7f78d87fa000 ---p 00000000 00:00 0 ; 7f78d87fa000-7f78d8ffa000 rw-p 00000000 00:00 0 ; 7f78d8ffa000-7f78e0ffa000 rw-p 00000000 00:00 0 ; 7f78e0ffa000-7f78e0ffb000 ---p 00000000 00:00 0 ; 7f78e0ffb000-7f78e17fb000 rw-p 00000000 00:00 0 ; 7f78e17fb000-7f78e97fb000 rw-p 00000000 00:00 0 ; 7f78e97fb000-7f78e97fc000 ---p 00000000 00:00 0 ; 7f78e97fc000-7f78e9ffc000 rw-p 00000000 00:00 0 ; 7f78e9ffc000-7f78f9ffc000 rw-p 00000000 00:00 0 ; 7f78f9ffc000-7f78f9ffd000 ---p 00000000 00:00 0 ; 7f78f9ffd000-7f78fa7fd000 rw-p 00000000 00:00 0 ; 7f78fa7fd000-7f78fa7fe000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:8227,Performance,cache,cache,8227,00000 00:00 0 ; 7f78b44bd000-7f78c44bd000 rw-p 00000000 00:00 0 ; 7f78c44bd000-7f78c44be000 ---p 00000000 00:00 0 ; 7f78c44be000-7f78c4cbe000 rw-p 00000000 00:00 0 ; 7f78c4cbe000-7f78c4cbf000 ---p 00000000 00:00 0 ; 7f78c4cbf000-7f78c54bf000 rw-p 00000000 00:00 0 ; 7f78c54bf000-7f78c54c0000 ---p 00000000 00:00 0 ; 7f78c54c0000-7f78c5cc0000 rw-p 00000000 00:00 0 ; 7f78c5cc0000-7f78c79d9000 r-xp 00000000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c79d9000-7f78c7bd8000 ---p 01d19000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bd8000-7f78c7bde000 r--p 01d18000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bde000-7f78c7bf4000 rw-p 01d1e000 00:2f 2345794468 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0; 7f78c7bf4000-7f78c7c20000 rw-p 00000000 00:00 0 ; 7f78c7c20000-7f78c8400000 ---p 00000000 00:00 0 ; 7f78c87f9000-7f78d87f9000 rw-p 00000000 00:00 0 ; 7f78d87f9000-7f78d87fa000 ---p 00000000 00:00 0 ; 7f78d87fa000-7f78d8ffa000 rw-p 00000000 00:00 0 ; 7f78d8ffa000-7f78e0ffa000 rw-p 00000000 00:00 0 ; 7f78e0ffa000-7f78e0ffb000 ---p 00000000 00:00 0 ; 7f78e0ffb000-7f78e17fb000 rw-p 00000000 00:00 0 ; 7f78e17fb000-7f78e97fb000 rw-p 00000000 00:00 0 ; 7f78e97fb000-7f78e97fc000 ---p 00000000 00:00 0 ; 7f78e97fc000-7f78e9ffc000 rw-p 00000000 00:00 0 ; 7f78e9ffc000-7f78f9ffc000 rw-p 00000000 00:00 0 ; 7f78f9ffc000-7f78f9ffd000 ---p 00000000 00:00 0 ; 7f78f9ffd000-7f78fa7fd000 rw-p 00000000 00:00 0 ; 7f78fa7fd000-7f78fa7fe000 ---p 00000000 00:00 0 ; 7f78fa7fe000-7f78faffe000 rw-p 00000000 00:00 0 ; 7f78faffe000-7f7902ffe000 rw-p 00000000 00:00 0 ; 7f7902ffe000-7f7902fff000 ---p 00000000 00:00 0 ; 7f7902f,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:10059,Performance,cache,cache,10059,0 00:00 0 ; 7f78fa7fe000-7f78faffe000 rw-p 00000000 00:00 0 ; 7f78faffe000-7f7902ffe000 rw-p 00000000 00:00 0 ; 7f7902ffe000-7f7902fff000 ---p 00000000 00:00 0 ; 7f7902fff000-7f79037ff000 rw-p 00000000 00:00 0 ; 7f79037ff000-7f790b7ff000 rw-p 00000000 00:00 0 ; 7f790b7ff000-7f790b800000 ---p 00000000 00:00 0 ; 7f790b800000-7f790c000000 rw-p 00000000 00:00 0 ; 7f790c000000-7f7924000000 rw-p 00000000 00:00 0 ; 7f7924000000-7f79244e4000 rw-p 00000000 00:00 0 ; 7f79244e4000-7f7928000000 ---p 00000000 00:00 0 ; 7f79280bc000-7f79280bd000 ---p 00000000 00:00 0 ; 7f79280bd000-7f79288bd000 rw-p 00000000 00:00 0 ; 7f79288bd000-7f79288be000 ---p 00000000 00:00 0 ; 7f79288be000-7f79290be000 rw-p 00000000 00:00 0 ; 7f79290be000-7f79290bf000 ---p 00000000 00:00 0 ; 7f79290bf000-7f79298bf000 rw-p 00000000 00:00 0 ; 7f79298bf000-7f79298c0000 ---p 00000000 00:00 0 ; 7f79298c0000-7f792a0c0000 rw-p 00000000 00:00 0 ; 7f792a0c0000-7f792bdd9000 r-xp 00000000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bdd9000-7f792bfd8000 ---p 01d19000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bfd8000-7f792bfde000 r--p 01d18000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bfde000-7f792bff4000 rw-p 01d1e000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bff4000-7f792c000000 rw-p 00000000 00:00 0 ; 7f792c000000-7f792c021000 rw-p 00000000 00:00 0 ; 7f792c021000-7f7930000000 ---p 00000000 00:00 0 ; 7f7930000000-7f7930021000 rw-p 00000000 00:00 0 ; 7f7930021000-7f7934000000 ---p 00000000 00:00 0 ; 7f7934000000-7f79349a9000 rw-p 00000000 00:00 0 ; 7f79349a9000-7f7938000000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:10250,Performance,cache,cache,10250,p 00000000 00:00 0 ; 7f79037ff000-7f790b7ff000 rw-p 00000000 00:00 0 ; 7f790b7ff000-7f790b800000 ---p 00000000 00:00 0 ; 7f790b800000-7f790c000000 rw-p 00000000 00:00 0 ; 7f790c000000-7f7924000000 rw-p 00000000 00:00 0 ; 7f7924000000-7f79244e4000 rw-p 00000000 00:00 0 ; 7f79244e4000-7f7928000000 ---p 00000000 00:00 0 ; 7f79280bc000-7f79280bd000 ---p 00000000 00:00 0 ; 7f79280bd000-7f79288bd000 rw-p 00000000 00:00 0 ; 7f79288bd000-7f79288be000 ---p 00000000 00:00 0 ; 7f79288be000-7f79290be000 rw-p 00000000 00:00 0 ; 7f79290be000-7f79290bf000 ---p 00000000 00:00 0 ; 7f79290bf000-7f79298bf000 rw-p 00000000 00:00 0 ; 7f79298bf000-7f79298c0000 ---p 00000000 00:00 0 ; 7f79298c0000-7f792a0c0000 rw-p 00000000 00:00 0 ; 7f792a0c0000-7f792bdd9000 r-xp 00000000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bdd9000-7f792bfd8000 ---p 01d19000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bfd8000-7f792bfde000 r--p 01d18000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bfde000-7f792bff4000 rw-p 01d1e000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bff4000-7f792c000000 rw-p 00000000 00:00 0 ; 7f792c000000-7f792c021000 rw-p 00000000 00:00 0 ; 7f792c021000-7f7930000000 ---p 00000000 00:00 0 ; 7f7930000000-7f7930021000 rw-p 00000000 00:00 0 ; 7f7930021000-7f7934000000 ---p 00000000 00:00 0 ; 7f7934000000-7f79349a9000 rw-p 00000000 00:00 0 ; 7f79349a9000-7f7938000000 ---p 00000000 00:00 0 ; 7f7938000000-7f793850e000 rw-p 00000000 00:00 0 ; 7f793850e000-7f793c000000 ---p 00000000 00:00 0 ; 7f793c000000-7f793c021000 rw-p 00000000 00:00 0 ; 7f793c021000-7f7,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:10441,Performance,cache,cache,10441,00000 rw-p 00000000 00:00 0 ; 7f7924000000-7f79244e4000 rw-p 00000000 00:00 0 ; 7f79244e4000-7f7928000000 ---p 00000000 00:00 0 ; 7f79280bc000-7f79280bd000 ---p 00000000 00:00 0 ; 7f79280bd000-7f79288bd000 rw-p 00000000 00:00 0 ; 7f79288bd000-7f79288be000 ---p 00000000 00:00 0 ; 7f79288be000-7f79290be000 rw-p 00000000 00:00 0 ; 7f79290be000-7f79290bf000 ---p 00000000 00:00 0 ; 7f79290bf000-7f79298bf000 rw-p 00000000 00:00 0 ; 7f79298bf000-7f79298c0000 ---p 00000000 00:00 0 ; 7f79298c0000-7f792a0c0000 rw-p 00000000 00:00 0 ; 7f792a0c0000-7f792bdd9000 r-xp 00000000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bdd9000-7f792bfd8000 ---p 01d19000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bfd8000-7f792bfde000 r--p 01d18000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bfde000-7f792bff4000 rw-p 01d1e000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bff4000-7f792c000000 rw-p 00000000 00:00 0 ; 7f792c000000-7f792c021000 rw-p 00000000 00:00 0 ; 7f792c021000-7f7930000000 ---p 00000000 00:00 0 ; 7f7930000000-7f7930021000 rw-p 00000000 00:00 0 ; 7f7930021000-7f7934000000 ---p 00000000 00:00 0 ; 7f7934000000-7f79349a9000 rw-p 00000000 00:00 0 ; 7f79349a9000-7f7938000000 ---p 00000000 00:00 0 ; 7f7938000000-7f793850e000 rw-p 00000000 00:00 0 ; 7f793850e000-7f793c000000 ---p 00000000 00:00 0 ; 7f793c000000-7f793c021000 rw-p 00000000 00:00 0 ; 7f793c021000-7f7940000000 ---p 00000000 00:00 0 ; 7f79401bb000-7f7940203000 r-xp 00000000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:10632,Performance,cache,cache,10632,0-7f79288bd000 rw-p 00000000 00:00 0 ; 7f79288bd000-7f79288be000 ---p 00000000 00:00 0 ; 7f79288be000-7f79290be000 rw-p 00000000 00:00 0 ; 7f79290be000-7f79290bf000 ---p 00000000 00:00 0 ; 7f79290bf000-7f79298bf000 rw-p 00000000 00:00 0 ; 7f79298bf000-7f79298c0000 ---p 00000000 00:00 0 ; 7f79298c0000-7f792a0c0000 rw-p 00000000 00:00 0 ; 7f792a0c0000-7f792bdd9000 r-xp 00000000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bdd9000-7f792bfd8000 ---p 01d19000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bfd8000-7f792bfde000 r--p 01d18000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bfde000-7f792bff4000 rw-p 01d1e000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bff4000-7f792c000000 rw-p 00000000 00:00 0 ; 7f792c000000-7f792c021000 rw-p 00000000 00:00 0 ; 7f792c021000-7f7930000000 ---p 00000000 00:00 0 ; 7f7930000000-7f7930021000 rw-p 00000000 00:00 0 ; 7f7930021000-7f7934000000 ---p 00000000 00:00 0 ; 7f7934000000-7f79349a9000 rw-p 00000000 00:00 0 ; 7f79349a9000-7f7938000000 ---p 00000000 00:00 0 ; 7f7938000000-7f793850e000 rw-p 00000000 00:00 0 ; 7f793850e000-7f793c000000 ---p 00000000 00:00 0 ; 7f793c000000-7f793c021000 rw-p 00000000 00:00 0 ; 7f793c021000-7f7940000000 ---p 00000000 00:00 0 ; 7f79401bb000-7f7940203000 r-xp 00000000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940203000-7f7940403000 ---p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:11373,Performance,cache,cache,11373,de000 r--p 01d18000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bfde000-7f792bff4000 rw-p 01d1e000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bff4000-7f792c000000 rw-p 00000000 00:00 0 ; 7f792c000000-7f792c021000 rw-p 00000000 00:00 0 ; 7f792c021000-7f7930000000 ---p 00000000 00:00 0 ; 7f7930000000-7f7930021000 rw-p 00000000 00:00 0 ; 7f7930021000-7f7934000000 ---p 00000000 00:00 0 ; 7f7934000000-7f79349a9000 rw-p 00000000 00:00 0 ; 7f79349a9000-7f7938000000 ---p 00000000 00:00 0 ; 7f7938000000-7f793850e000 rw-p 00000000 00:00 0 ; 7f793850e000-7f793c000000 ---p 00000000 00:00 0 ; 7f793c000000-7f793c021000 rw-p 00000000 00:00 0 ; 7f793c021000-7f7940000000 ---p 00000000 00:00 0 ; 7f79401bb000-7f7940203000 r-xp 00000000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940203000-7f7940403000 ---p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940403000-7f7940404000 r--p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940404000-7f7940405000 rw-p 00049000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940405000-7f7940524000 r-xp 00000000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940524000-7f7940724000 ---p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940724000-7f7940725000 r--p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940725000-7f7940727000 rw-p 00120000 fd:00 10081528,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:11565,Performance,cache,cache,11565,4000 rw-p 01d1e000 00:2f 2345794464 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libopenblas_nolapack.so.0; 7f792bff4000-7f792c000000 rw-p 00000000 00:00 0 ; 7f792c000000-7f792c021000 rw-p 00000000 00:00 0 ; 7f792c021000-7f7930000000 ---p 00000000 00:00 0 ; 7f7930000000-7f7930021000 rw-p 00000000 00:00 0 ; 7f7930021000-7f7934000000 ---p 00000000 00:00 0 ; 7f7934000000-7f79349a9000 rw-p 00000000 00:00 0 ; 7f79349a9000-7f7938000000 ---p 00000000 00:00 0 ; 7f7938000000-7f793850e000 rw-p 00000000 00:00 0 ; 7f793850e000-7f793c000000 ---p 00000000 00:00 0 ; 7f793c000000-7f793c021000 rw-p 00000000 00:00 0 ; 7f793c021000-7f7940000000 ---p 00000000 00:00 0 ; 7f79401bb000-7f7940203000 r-xp 00000000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940203000-7f7940403000 ---p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940403000-7f7940404000 r--p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940404000-7f7940405000 rw-p 00049000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940405000-7f7940524000 r-xp 00000000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940524000-7f7940724000 ---p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940724000-7f7940725000 r--p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940725000-7f7940727000 rw-p 00120000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940727000-7f7940893000 r-xp 00000000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:11757,Performance,cache,cache,11757,000 rw-p 00000000 00:00 0 ; 7f792c000000-7f792c021000 rw-p 00000000 00:00 0 ; 7f792c021000-7f7930000000 ---p 00000000 00:00 0 ; 7f7930000000-7f7930021000 rw-p 00000000 00:00 0 ; 7f7930021000-7f7934000000 ---p 00000000 00:00 0 ; 7f7934000000-7f79349a9000 rw-p 00000000 00:00 0 ; 7f79349a9000-7f7938000000 ---p 00000000 00:00 0 ; 7f7938000000-7f793850e000 rw-p 00000000 00:00 0 ; 7f793850e000-7f793c000000 ---p 00000000 00:00 0 ; 7f793c000000-7f793c021000 rw-p 00000000 00:00 0 ; 7f793c021000-7f7940000000 ---p 00000000 00:00 0 ; 7f79401bb000-7f7940203000 r-xp 00000000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940203000-7f7940403000 ---p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940403000-7f7940404000 r--p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940404000-7f7940405000 rw-p 00049000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940405000-7f7940524000 r-xp 00000000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940524000-7f7940724000 ---p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940724000-7f7940725000 r--p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940725000-7f7940727000 rw-p 00120000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940727000-7f7940893000 r-xp 00000000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940893000-7f7940a92000 ---p 0016c000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/lib,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:11949,Performance,cache,cache,11949,f7934000000 ---p 00000000 00:00 0 ; 7f7934000000-7f79349a9000 rw-p 00000000 00:00 0 ; 7f79349a9000-7f7938000000 ---p 00000000 00:00 0 ; 7f7938000000-7f793850e000 rw-p 00000000 00:00 0 ; 7f793850e000-7f793c000000 ---p 00000000 00:00 0 ; 7f793c000000-7f793c021000 rw-p 00000000 00:00 0 ; 7f793c021000-7f7940000000 ---p 00000000 00:00 0 ; 7f79401bb000-7f7940203000 r-xp 00000000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940203000-7f7940403000 ---p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940403000-7f7940404000 r--p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940404000-7f7940405000 rw-p 00049000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940405000-7f7940524000 r-xp 00000000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940524000-7f7940724000 ---p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940724000-7f7940725000 r--p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940725000-7f7940727000 rw-p 00120000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940727000-7f7940893000 r-xp 00000000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940893000-7f7940a92000 ---p 0016c000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a92000-7f7940a95000 rw-p 0016b000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.s,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:12497,Performance,cache,cache,12497,03000 ---p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940403000-7f7940404000 r--p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940404000-7f7940405000 rw-p 00049000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940405000-7f7940524000 r-xp 00000000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940524000-7f7940724000 ---p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940724000-7f7940725000 r--p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940725000-7f7940727000 rw-p 00120000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940727000-7f7940893000 r-xp 00000000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940893000-7f7940a92000 ---p 0016c000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a92000-7f7940a95000 rw-p 0016b000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a95000-7f7940ad4000 r-xp 00000000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940ad4000-7f7940cd3000 ---p 0003f000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd3000-7f7940cd4000 rw-p 0003e000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:12679,Performance,cache,cache,12679,00-7f7940404000 r--p 00048000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940404000-7f7940405000 rw-p 00049000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940405000-7f7940524000 r-xp 00000000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940524000-7f7940724000 ---p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940724000-7f7940725000 r--p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940725000-7f7940727000 rw-p 00120000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940727000-7f7940893000 r-xp 00000000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940893000-7f7940a92000 ---p 0016c000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a92000-7f7940a95000 rw-p 0016b000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a95000-7f7940ad4000 r-xp 00000000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940ad4000-7f7940cd3000 ---p 0003f000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd3000-7f7940cd4000 rw-p 0003e000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd4000-7f7940cea000 r-xp 00000000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:12861,Performance,cache,cache,12861,7f7940404000-7f7940405000 rw-p 00049000 00:2f 2345794467 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libjniopenblas_nolapack.so; 7f7940405000-7f7940524000 r-xp 00000000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940524000-7f7940724000 ---p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940724000-7f7940725000 r--p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940725000-7f7940727000 rw-p 00120000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940727000-7f7940893000 r-xp 00000000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940893000-7f7940a92000 ---p 0016c000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a92000-7f7940a95000 rw-p 0016b000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a95000-7f7940ad4000 r-xp 00000000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940ad4000-7f7940cd3000 ---p 0003f000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd3000-7f7940cd4000 rw-p 0003e000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd4000-7f7940cea000 r-xp 00000000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940cea000-7f7940ee9000 ---p 00016000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:13043,Performance,cache,cache,13043,apack.so; 7f7940405000-7f7940524000 r-xp 00000000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940524000-7f7940724000 ---p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940724000-7f7940725000 r--p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940725000-7f7940727000 rw-p 00120000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940727000-7f7940893000 r-xp 00000000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940893000-7f7940a92000 ---p 0016c000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a92000-7f7940a95000 rw-p 0016b000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a95000-7f7940ad4000 r-xp 00000000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940ad4000-7f7940cd3000 ---p 0003f000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd3000-7f7940cd4000 rw-p 0003e000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd4000-7f7940cea000 r-xp 00000000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940cea000-7f7940ee9000 ---p 00016000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940ee9000-7f7940eea000 rw-p 00015000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:13225,Performance,cache,cache,13225,.0.0; 7f7940724000-7f7940725000 r--p 0011f000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940725000-7f7940727000 rw-p 00120000 fd:00 100815288 /usr/lib64/libgfortran.so.3.0.0; 7f7940727000-7f7940893000 r-xp 00000000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940893000-7f7940a92000 ---p 0016c000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a92000-7f7940a95000 rw-p 0016b000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a95000-7f7940ad4000 r-xp 00000000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940ad4000-7f7940cd3000 ---p 0003f000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd3000-7f7940cd4000 rw-p 0003e000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd4000-7f7940cea000 r-xp 00000000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940cea000-7f7940ee9000 ---p 00016000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940ee9000-7f7940eea000 rw-p 00015000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940eea000-7f7940fd3000 r-xp 00000000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f7940fd3000-7f79411d3000 ---p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411d3000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:13407,Performance,cache,cache,13407,; 7f7940727000-7f7940893000 r-xp 00000000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940893000-7f7940a92000 ---p 0016c000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a92000-7f7940a95000 rw-p 0016b000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a95000-7f7940ad4000 r-xp 00000000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940ad4000-7f7940cd3000 ---p 0003f000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd3000-7f7940cd4000 rw-p 0003e000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd4000-7f7940cea000 r-xp 00000000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940cea000-7f7940ee9000 ---p 00016000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940ee9000-7f7940eea000 rw-p 00015000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940eea000-7f7940fd3000 r-xp 00000000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f7940fd3000-7f79411d3000 ---p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411d3000-7f79411db000 r--p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411db000-7f79411dd000 rw-p 000f1000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411dd000-7f794,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:13589,Performance,cache,cache,13589,; 7f7940893000-7f7940a92000 ---p 0016c000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a92000-7f7940a95000 rw-p 0016b000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a95000-7f7940ad4000 r-xp 00000000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940ad4000-7f7940cd3000 ---p 0003f000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd3000-7f7940cd4000 rw-p 0003e000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd4000-7f7940cea000 r-xp 00000000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940cea000-7f7940ee9000 ---p 00016000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940ee9000-7f7940eea000 rw-p 00015000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940eea000-7f7940fd3000 r-xp 00000000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f7940fd3000-7f79411d3000 ---p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411d3000-7f79411db000 r--p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411db000-7f79411dd000 rw-p 000f1000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411dd000-7f79411f2000 rw-p 00000000 00:00 0 ; 7f79411f2000-7f79411ff000 r-xp 00000000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x8,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:13768,Performance,cache,cache,13768,o.4; 7f7940a92000-7f7940a95000 rw-p 0016b000 00:2f 2345794462 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgfortran.so.4; 7f7940a95000-7f7940ad4000 r-xp 00000000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940ad4000-7f7940cd3000 ---p 0003f000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd3000-7f7940cd4000 rw-p 0003e000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd4000-7f7940cea000 r-xp 00000000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940cea000-7f7940ee9000 ---p 00016000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940ee9000-7f7940eea000 rw-p 00015000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940eea000-7f7940fd3000 r-xp 00000000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f7940fd3000-7f79411d3000 ---p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411d3000-7f79411db000 r--p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411db000-7f79411dd000 rw-p 000f1000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411dd000-7f79411f2000 rw-p 00000000 00:00 0 ; 7f79411f2000-7f79411ff000 r-xp 00000000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79411ff000-7f79413fe000 ---p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/l,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:13947,Performance,cache,cache,13947,n.so.4; 7f7940a95000-7f7940ad4000 r-xp 00000000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940ad4000-7f7940cd3000 ---p 0003f000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd3000-7f7940cd4000 rw-p 0003e000 00:2f 2345794460 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libquadmath.so.0; 7f7940cd4000-7f7940cea000 r-xp 00000000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940cea000-7f7940ee9000 ---p 00016000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940ee9000-7f7940eea000 rw-p 00015000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940eea000-7f7940fd3000 r-xp 00000000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f7940fd3000-7f79411d3000 ---p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411d3000-7f79411db000 r--p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411db000-7f79411dd000 rw-p 000f1000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411dd000-7f79411f2000 rw-p 00000000 00:00 0 ; 7f79411f2000-7f79411ff000 r-xp 00000000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79411ff000-7f79413fe000 ---p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413fe000-7f79413ff000 r--p 0000c000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnij,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:14528,Performance,cache,cache,14528,-xp 00000000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940cea000-7f7940ee9000 ---p 00016000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940ee9000-7f7940eea000 rw-p 00015000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940eea000-7f7940fd3000 r-xp 00000000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f7940fd3000-7f79411d3000 ---p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411d3000-7f79411db000 r--p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411db000-7f79411dd000 rw-p 000f1000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411dd000-7f79411f2000 rw-p 00000000 00:00 0 ; 7f79411f2000-7f79411ff000 r-xp 00000000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79411ff000-7f79413fe000 ---p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413fe000-7f79413ff000 r--p 0000c000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:14701,Performance,cache,cache,14701,9000 ---p 00016000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940ee9000-7f7940eea000 rw-p 00015000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940eea000-7f7940fd3000 r-xp 00000000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f7940fd3000-7f79411d3000 ---p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411d3000-7f79411db000 r--p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411db000-7f79411dd000 rw-p 000f1000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411dd000-7f79411f2000 rw-p 00000000 00:00 0 ; 7f79411f2000-7f79411ff000 r-xp 00000000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79411ff000-7f79413fe000 ---p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413fe000-7f79413ff000 r--p 0000c000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libha,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:14874,Performance,cache,cache,14874,7940eea000 rw-p 00015000 00:2f 2345794458 /home/grad3/jalal/.javacpp/cache/openblas-0.3.17-1.5.6-linux-x86_64.jar/org/bytedeco/openblas/linux-x86_64/libgcc_s.so.1; 7f7940eea000-7f7940fd3000 r-xp 00000000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f7940fd3000-7f79411d3000 ---p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411d3000-7f79411db000 r--p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411db000-7f79411dd000 rw-p 000f1000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411dd000-7f79411f2000 rw-p 00000000 00:00 0 ; 7f79411f2000-7f79411ff000 r-xp 00000000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79411ff000-7f79413fe000 ---p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413fe000-7f79413ff000 r--p 0000c000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:15047,Performance,cache,cache,15047,000-7f7940fd3000 r-xp 00000000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f7940fd3000-7f79411d3000 ---p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411d3000-7f79411db000 r--p 000e9000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411db000-7f79411dd000 rw-p 000f1000 fd:00 100675410 /usr/lib64/libstdc++.so.6.0.19; 7f79411dd000-7f79411f2000 rw-p 00000000 00:00 0 ; 7f79411f2000-7f79411ff000 r-xp 00000000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79411ff000-7f79413fe000 ---p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413fe000-7f79413ff000 r--p 0000c000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:18005,Performance,cache,cache,18005,_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:18127,Performance,cache,cache,18127,atch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:18249,Performance,cache,cache,18249,loads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_fo,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:18371,Performance,cache,cache,18371,th/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so;,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:18493,Performance,cache,cache,18493,time/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:18618,Performance,cache,cache,18618,2e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:18743,Performance,cache,cache,18743, 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/dow,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:18868,Performance,cache,cache,18868, /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:18993,Performance,cache,cache,18993,al/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runt,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19109,Performance,cache,cache,19109,d3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtim,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19225,Performance,cache,cache,19225,me/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19341,Performance,cache,cache,19341,09 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79436f6000-7f79438f5000 ---p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:27431,Performance,cache,cache,27431, 00000000 fd:00 100984258 /usr/lib64/libutil-2.17.so; 7f795b2f1000-7f795b4f0000 ---p 00002000 fd:00 100984258 /usr/lib64/libutil-2.17.so; 7f795b4f0000-7f795b4f1000 r--p 00001000 fd:00 100984258 /usr/lib64/libutil-2.17.so; 7f795b4f1000-7f795b4f2000 rw-p 00002000 fd:00 100984258 /usr/lib64/libutil-2.17.so; 7f795b4f2000-7f795b52b000 r-xp 00000000 fd:00 101491398 /usr/lib64/gvfs/libgvfscommon.so; 7f795b52b000-7f795b72a000 ---p 00039000 fd:00 101491398 /usr/lib64/gvfs/libgvfscommon.so; 7f795b72a000-7f795b730000 r--p 00038000 fd:00 101491398 /usr/lib64/gvfs/libgvfscommon.so; 7f795b730000-7f795b731000 rw-p 0003e000 fd:00 101491398 /usr/lib64/gvfs/libgvfscommon.so; 7f795b731000-7f795b763000 r-xp 00000000 fd:00 67550447 /usr/lib64/gio/modules/libgvfsdbus.so; 7f795b763000-7f795b963000 ---p 00032000 fd:00 67550447 /usr/lib64/gio/modules/libgvfsdbus.so; 7f795b963000-7f795b964000 r--p 00032000 fd:00 67550447 /usr/lib64/gio/modules/libgvfsdbus.so; 7f795b964000-7f795b966000 rw-p 00033000 fd:00 67550447 /usr/lib64/gio/modules/libgvfsdbus.so; 7f795b966000-7f795b96b000 r-xp 00000000 fd:00 102425537 /usr/lib64/libXtst.so.6.1.0; 7f795b96b000-7f795bb6a000 ---p 00005000 fd:00 102425537 /usr/lib64/libXtst.so.6.1.0; 7f795bb6a000-7f795bb6b000 r--p 00004000 fd:00 102425537 /usr/lib64/libXtst.so.6.1.0; 7f795bb6b000-7f795bb6c000 rw-p 00005000 fd:00 102425537 /usr/lib64/libXtst.so.6.1.0; 7f795bb6c000-7f795bb6d000 r-xp 00000000 fd:00 100925272 /usr/lib64/libgthread-2.0.so.0.5600.1; 7f795bb6d000-7f795bd6c000 ---p 00001000 fd:00 100925272 /usr/lib64/libgthread-2.0.so.0.5600.1; 7f795bd6c000-7f795bd6d000 r--p 00000000 fd:00 100925272 /usr/lib64/libgthread-2.0.so.0.5600.1; 7f795bd6d000-7f795bd6e000 rw-p 00001000 fd:00 100925272 /usr/lib64/libgthread-2.0.so.0.5600.1; 7f795bd6e000-7f795bdce000 r-xp 00000000 00:2f 2306019405 /home/grad3/jalal/.openjfx/cache/17.0.1/libglassgtk3.so; 7f795bdce000-7f795bfcd000 ---p 00060000 00:2f 2306019405 /home/grad3/jalal/.openjfx/cache/17.0.1/libglassgtk3.soAborted; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:27545,Performance,cache,cache,27545, 00000000 fd:00 100984258 /usr/lib64/libutil-2.17.so; 7f795b2f1000-7f795b4f0000 ---p 00002000 fd:00 100984258 /usr/lib64/libutil-2.17.so; 7f795b4f0000-7f795b4f1000 r--p 00001000 fd:00 100984258 /usr/lib64/libutil-2.17.so; 7f795b4f1000-7f795b4f2000 rw-p 00002000 fd:00 100984258 /usr/lib64/libutil-2.17.so; 7f795b4f2000-7f795b52b000 r-xp 00000000 fd:00 101491398 /usr/lib64/gvfs/libgvfscommon.so; 7f795b52b000-7f795b72a000 ---p 00039000 fd:00 101491398 /usr/lib64/gvfs/libgvfscommon.so; 7f795b72a000-7f795b730000 r--p 00038000 fd:00 101491398 /usr/lib64/gvfs/libgvfscommon.so; 7f795b730000-7f795b731000 rw-p 0003e000 fd:00 101491398 /usr/lib64/gvfs/libgvfscommon.so; 7f795b731000-7f795b763000 r-xp 00000000 fd:00 67550447 /usr/lib64/gio/modules/libgvfsdbus.so; 7f795b763000-7f795b963000 ---p 00032000 fd:00 67550447 /usr/lib64/gio/modules/libgvfsdbus.so; 7f795b963000-7f795b964000 r--p 00032000 fd:00 67550447 /usr/lib64/gio/modules/libgvfsdbus.so; 7f795b964000-7f795b966000 rw-p 00033000 fd:00 67550447 /usr/lib64/gio/modules/libgvfsdbus.so; 7f795b966000-7f795b96b000 r-xp 00000000 fd:00 102425537 /usr/lib64/libXtst.so.6.1.0; 7f795b96b000-7f795bb6a000 ---p 00005000 fd:00 102425537 /usr/lib64/libXtst.so.6.1.0; 7f795bb6a000-7f795bb6b000 r--p 00004000 fd:00 102425537 /usr/lib64/libXtst.so.6.1.0; 7f795bb6b000-7f795bb6c000 rw-p 00005000 fd:00 102425537 /usr/lib64/libXtst.so.6.1.0; 7f795bb6c000-7f795bb6d000 r-xp 00000000 fd:00 100925272 /usr/lib64/libgthread-2.0.so.0.5600.1; 7f795bb6d000-7f795bd6c000 ---p 00001000 fd:00 100925272 /usr/lib64/libgthread-2.0.so.0.5600.1; 7f795bd6c000-7f795bd6d000 r--p 00000000 fd:00 100925272 /usr/lib64/libgthread-2.0.so.0.5600.1; 7f795bd6d000-7f795bd6e000 rw-p 00001000 fd:00 100925272 /usr/lib64/libgthread-2.0.so.0.5600.1; 7f795bd6e000-7f795bdce000 r-xp 00000000 00:2f 2306019405 /home/grad3/jalal/.openjfx/cache/17.0.1/libglassgtk3.so; 7f795bdce000-7f795bfcd000 ---p 00060000 00:2f 2306019405 /home/grad3/jalal/.openjfx/cache/17.0.1/libglassgtk3.soAborted; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:969,Security,access,access,969,"@saudet since my machine is CentOS 7, I decided to build the code from scratch (as you can see in my Stackoverflow error). Running what you mentioned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018
https://github.com/qupath/qupath/issues/950#issuecomment-1096162506:18,Deployability,install,install,18,"Strange... if you install gradle separately, then you can also use `gradle clean jpackage` (i.e. avoid relying upon gradle wrapper). I'm not sure if that'll help. I have limited experience using Linux, and none using CentOS. I don't know whether JavaFX 18 (used by QuPath now) is compatible with CentOS 7 so even if you overcome the building issue, I don't know if it will run.; * https://github.com/qupath/qupath/issues/825; * https://github.com/qupath/qupath/issues/949",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/950#issuecomment-1096162506
https://github.com/qupath/qupath/issues/950#issuecomment-1096162506:123,Integrability,wrap,wrapper,123,"Strange... if you install gradle separately, then you can also use `gradle clean jpackage` (i.e. avoid relying upon gradle wrapper). I'm not sure if that'll help. I have limited experience using Linux, and none using CentOS. I don't know whether JavaFX 18 (used by QuPath now) is compatible with CentOS 7 so even if you overcome the building issue, I don't know if it will run.; * https://github.com/qupath/qupath/issues/825; * https://github.com/qupath/qupath/issues/949",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/950#issuecomment-1096162506
https://github.com/qupath/qupath/issues/950#issuecomment-1096162506:97,Safety,avoid,avoid,97,"Strange... if you install gradle separately, then you can also use `gradle clean jpackage` (i.e. avoid relying upon gradle wrapper). I'm not sure if that'll help. I have limited experience using Linux, and none using CentOS. I don't know whether JavaFX 18 (used by QuPath now) is compatible with CentOS 7 so even if you overcome the building issue, I don't know if it will run.; * https://github.com/qupath/qupath/issues/825; * https://github.com/qupath/qupath/issues/949",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/950#issuecomment-1096162506
https://github.com/qupath/qupath/issues/955#issuecomment-1105367880:125,Deployability,update,updated,125,It seems YouTube changed the access settings a while ago - they should be visible again now. (Note that the wiki hasn't been updated since QuPath v0.1.2 - the current documentation is at https://qupath.readthedocs.io/ ),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/955#issuecomment-1105367880
https://github.com/qupath/qupath/issues/955#issuecomment-1105367880:29,Security,access,access,29,It seems YouTube changed the access settings a while ago - they should be visible again now. (Note that the wiki hasn't been updated since QuPath v0.1.2 - the current documentation is at https://qupath.readthedocs.io/ ),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/955#issuecomment-1105367880
https://github.com/qupath/qupath/pull/964#issuecomment-1142018795:134,Safety,avoid,avoiding,134,"Merged now - alongside https://github.com/qupath/qupath/pull/975 this should resolve the issue with labeled image export in two ways: avoiding 'smooth' (area averaging) interpolation when it shouldn't be used, and fixing its behavior for integer images when it is used. https://github.com/qupath/qupath/issues/961 should be handled later in a separate PR. Thanks again for the bug report and PR!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/964#issuecomment-1142018795
https://github.com/qupath/qupath/issues/967#issuecomment-1123958983:162,Integrability,depend,depends,162,"Hi, I see you've also posted this at https://forum.image.sc/t/qupath-0-3-2-shows-blank-black-image-for-vips-8-11-produced-tiled-tiff-pyramid-image/66896. QuPath [depends on Bio-Formats and OpenSlide](https://qupath.readthedocs.io/en/stable/docs/intro/formats.html) to read pyramidal images, so if the image doesn't display properly then it's likely because your image isn't supported by either of them. If needed, you can [specify which library reads the image during import to a project](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html#add-images). See also https://www.libvips.org/2020/06/18/What%27s-new-in-8.10.html#pyramids. The forum is a better place to discuss it, because it's (probably) not a bug in QuPath - so I'll close this issue to prevent parallel discussions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/967#issuecomment-1123958983
https://github.com/qupath/qupath/issues/968#issuecomment-1128920092:537,Energy Efficiency,reduce,reduce,537,"Hi @miyakorogers . Although I agree that QuPath should really handle this more elegantly, I'd recommend posting a question on the forum instead: https://forum.image.sc/tag/qupath. There's no bug report template here for me to act on, so this seems more an issue of how QuPath is being used rather than a clear bug with steps to reproduce. The images sound huge, which is probably the real problem. Any solution is likely to require converting to a [pyramidal OME-TIFF](https://qupath.readthedocs.io/en/stable/docs/intro/formats.html) to reduce memory requirements. You can do this using the QuPath [`convert-ome` command on the command line](https://qupath.readthedocs.io/en/stable/docs/advanced/command_line.html) - you may find some tips via https://forum.image.sc/search?q=qupath%20convert-ome or post a new question.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/968#issuecomment-1128920092
https://github.com/qupath/qupath/issues/968#issuecomment-1128920092:304,Usability,clear,clear,304,"Hi @miyakorogers . Although I agree that QuPath should really handle this more elegantly, I'd recommend posting a question on the forum instead: https://forum.image.sc/tag/qupath. There's no bug report template here for me to act on, so this seems more an issue of how QuPath is being used rather than a clear bug with steps to reproduce. The images sound huge, which is probably the real problem. Any solution is likely to require converting to a [pyramidal OME-TIFF](https://qupath.readthedocs.io/en/stable/docs/intro/formats.html) to reduce memory requirements. You can do this using the QuPath [`convert-ome` command on the command line](https://qupath.readthedocs.io/en/stable/docs/advanced/command_line.html) - you may find some tips via https://forum.image.sc/search?q=qupath%20convert-ome or post a new question.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/968#issuecomment-1128920092
https://github.com/qupath/qupath/issues/973#issuecomment-1141062643:281,Testability,log,log,281,"Hi, some questions:; * What is the file format?; * Under the 'Image' tab, what is shown at the entry 'Server type'?; * Have you been able to view the whole slide image with any other version of QuPath (e.g. on Windows)?; * Is there any relevant information under *View &rarr; Show log*?. If you have an mrxs image, this may be relevant: https://forum.image.sc/t/potential-fix-for-problem-low-resolution-mrxs-3dhistech-scans/32917. If you have an mrxs or vsi image, you might be missing the folder the should exist alongside the main image file (the folder contains the high-resolution data).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/973#issuecomment-1141062643
