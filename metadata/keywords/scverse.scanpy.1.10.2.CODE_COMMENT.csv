quality_attribute,keyword,matched_word,sentence,source,filename,author,repo,version,url
sample,fast,fast,"""""""Suite for fast preprocessing operations",MatchSource.CODE_COMMENT,benchmarks/benchmarks/preprocessing_log.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/benchmarks/benchmarks/preprocessing_log.py#:~:text=%22%22%22Suite%20for%20fast%20preprocessing%20operations
sample,speed,speed,"To speed up reading, consider passing ``cache=True``, which creates an hdf5",MatchSource.CODE_COMMENT,src/scanpy/readwrite.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/readwrite.py#:~:text=To%20speed%20up%20reading%2C%20consider%20passing%20%60%60cache%3DTrue%60%60%2C%20which%20creates%20an%20hdf5
sample,fast,fast,"If `False`, read from source, if `True`, read from fast 'h5ad' cache",MatchSource.CODE_COMMENT,src/scanpy/readwrite.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/readwrite.py#:~:text=If%20%60False%60%2C%20read%20from%20source%2C%20if%20%60True%60%2C%20read%20from%20fast%20%27h5ad%27%20cache
sample,fast,fast,"If `False`, read from source, if `True`, read from fast 'h5ad' cache",MatchSource.CODE_COMMENT,src/scanpy/readwrite.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/readwrite.py#:~:text=If%20%60False%60%2C%20read%20from%20source%2C%20if%20%60True%60%2C%20read%20from%20fast%20%27h5ad%27%20cache
sample,fast,faster,# write for faster reading when calling the next time,MatchSource.CODE_COMMENT,src/scanpy/readwrite.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/readwrite.py#:~:text=%23%20write%20for%20faster%20reading%20when%20calling%20the%20next%20time
sample,fast,faster,# write a cache file for faster subsequent reading,MatchSource.CODE_COMMENT,src/scanpy/datasets/_datasets.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/datasets/_datasets.py#:~:text=%23%20write%20a%20cache%20file%20for%20faster%20subsequent%20reading
sample,perf,performed,umap` are performed,MatchSource.CODE_COMMENT,src/scanpy/datasets/_datasets.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/datasets/_datasets.py#:~:text=umap%60%20are%20performed
sample,speed,speed,Setting this to `False` can speed up code for large datasets,MatchSource.CODE_COMMENT,src/scanpy/experimental/_docs.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/experimental/_docs.py#:~:text=Setting%20this%20to%20%60False%60%20can%20speed%20up%20code%20for%20large%20datasets
sample,optimiz,optimization,Random seed for setting the initial states for the optimization in the PCA step,MatchSource.CODE_COMMENT,src/scanpy/experimental/_docs.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/experimental/_docs.py#:~:text=Random%20seed%20for%20setting%20the%20initial%20states%20for%20the%20optimization%20in%20the%20PCA%20step
sample,perf,performed,Pearson residual normalization and PCA are performed,MatchSource.CODE_COMMENT,src/scanpy/experimental/pp/_recipes.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/experimental/pp/_recipes.py#:~:text=Pearson%20residual%20normalization%20and%20PCA%20are%20performed
sample,fast,fast,# To do: check if Alex's h5sparse format will allow fast loading from just,MatchSource.CODE_COMMENT,src/scanpy/external/exporting.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/exporting.py#:~:text=%23%20To%20do%3A%20check%20if%20Alex%27s%20h5sparse%20format%20will%20allow%20fast%20loading%20from%20just
sample,fast,faster,"This option will make the export a lot faster,",MatchSource.CODE_COMMENT,src/scanpy/external/exporting.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/exporting.py#:~:text=This%20option%20will%20make%20the%20export%20a%20lot%20faster%2C
sample,perf,performance,This improves performance at a minor cost to numerical,MatchSource.CODE_COMMENT,src/scanpy/external/pp/_bbknn.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_bbknn.py#:~:text=This%20improves%20performance%20at%20a%20minor%20cost%20to%20numerical
sample,perf,performed,"If true, library size normalization is performed using",MatchSource.CODE_COMMENT,src/scanpy/external/pp/_dca.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_dca.py#:~:text=If%20true%2C%20library%20size%20normalization%20is%20performed%20using
sample,perf,performed,"If true, batch normalization is performed",MatchSource.CODE_COMMENT,src/scanpy/external/pp/_dca.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_dca.py#:~:text=If%20true%2C%20batch%20normalization%20is%20performed
sample,optimiz,optimizer,optimizer,MatchSource.CODE_COMMENT,src/scanpy/external/pp/_dca.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_dca.py#:~:text=optimizer
sample,optimiz,optimization,Type of optimization method used for training,MatchSource.CODE_COMMENT,src/scanpy/external/pp/_dca.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_dca.py#:~:text=Type%20of%20optimization%20method%20used%20for%20training
sample,perf,performing,"principal components, this function should be run after performing",MatchSource.CODE_COMMENT,src/scanpy/external/pp/_harmony_integrate.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_harmony_integrate.py#:~:text=principal%20components%2C%20this%20function%20should%20be%20run%20after%20performing
sample,perf,performed,"If provided, demultiplexing will be performed separately for each",MatchSource.CODE_COMMENT,src/scanpy/external/pp/_hashsolo.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_hashsolo.py#:~:text=If%20provided%2C%20demultiplexing%20will%20be%20performed%20separately%20for%20each
sample,speed,speed,"in the PCA space, rather than the data space, for speed and",MatchSource.CODE_COMMENT,src/scanpy/external/pp/_magic.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_magic.py#:~:text=in%20the%20PCA%20space%2C%20rather%20than%20the%20data%20space%2C%20for%20speed%20and
sample,perf,performed,"If `None`, no PCA is performed",MatchSource.CODE_COMMENT,src/scanpy/external/pp/_magic.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_magic.py#:~:text=If%20%60None%60%2C%20no%20PCA%20is%20performed
sample,fast,faster,"""approximate"" uses a faster",MatchSource.CODE_COMMENT,src/scanpy/external/pp/_magic.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_magic.py#:~:text=%22approximate%22%20uses%20a%20faster
sample,perf,performs,implementation that performs imputation in the PCA space and then,MatchSource.CODE_COMMENT,src/scanpy/external/pp/_magic.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_magic.py#:~:text=implementation%20that%20performs%20imputation%20in%20the%20PCA%20space%20and%20then
sample,perf,perform,"subset of vars to perform MNN correction, and should be supplied with",MatchSource.CODE_COMMENT,src/scanpy/external/pp/_mnn_correct.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_mnn_correct.py#:~:text=subset%20of%20vars%20to%20perform%20MNN%20correction%2C%20and%20should%20be%20supplied%20with
sample,perf,performing,The subset of vars (list of str) to be used when performing MNN,MatchSource.CODE_COMMENT,src/scanpy/external/pp/_mnn_correct.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_mnn_correct.py#:~:text=The%20subset%20of%20vars%20%28list%20of%20str%29%20to%20be%20used%20when%20performing%20MNN
sample,perf,performed,Whether cosine normalization should be performed on the input data prior,MatchSource.CODE_COMMENT,src/scanpy/external/pp/_mnn_correct.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_mnn_correct.py#:~:text=Whether%20cosine%20normalization%20should%20be%20performed%20on%20the%20input%20data%20prior
sample,perf,performed,Whether cosine normalization should be performed prior to computing corrected expression values,MatchSource.CODE_COMMENT,src/scanpy/external/pp/_mnn_correct.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_mnn_correct.py#:~:text=Whether%20cosine%20normalization%20should%20be%20performed%20prior%20to%20computing%20corrected%20expression%20values
sample,perf,perfores,`'irlb'` perfores,MatchSource.CODE_COMMENT,src/scanpy/external/pp/_mnn_correct.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_mnn_correct.py#:~:text=%60%27irlb%27%60%20perfores
sample,perf,performing,function should be run after performing PCA but before computing,MatchSource.CODE_COMMENT,src/scanpy/external/pp/_scanorama_integrate.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_scanorama_integrate.py#:~:text=function%20should%20be%20run%20after%20performing%20PCA%20but%20before%20computing
sample,speed,speeds,greatly speeds up matching runtime,MatchSource.CODE_COMMENT,src/scanpy/external/pp/_scanorama_integrate.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/pp/_scanorama_integrate.py#:~:text=greatly%20speeds%20up%20matching%20runtime
sample,fast,fast,number of landmarks to use in fast PHATE,MatchSource.CODE_COMMENT,src/scanpy/external/tl/_phate.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/tl/_phate.py#:~:text=number%20of%20landmarks%20to%20use%20in%20fast%20PHATE
sample,perf,performance,Note that performance will be,MatchSource.CODE_COMMENT,src/scanpy/external/tl/_phenograph.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/tl/_phenograph.py#:~:text=Note%20that%20performance%20will%20be
sample,optimiz,optimization,"precision, for monitoring modularity optimization",MatchSource.CODE_COMMENT,src/scanpy/external/tl/_phenograph.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/tl/_phenograph.py#:~:text=precision%2C%20for%20monitoring%20modularity%20optimization
sample,optimiz,optimization,Maximum number of seconds to run modularity optimization,MatchSource.CODE_COMMENT,src/scanpy/external/tl/_phenograph.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/tl/_phenograph.py#:~:text=Maximum%20number%20of%20seconds%20to%20run%20modularity%20optimization
sample,perf,performs,"computation, performs faster than kdtree",MatchSource.CODE_COMMENT,src/scanpy/external/tl/_phenograph.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/tl/_phenograph.py#:~:text=computation%2C%20performs%20faster%20than%20kdtree
sample,optimiz,optimization,Leiden initialization of the optimization,MatchSource.CODE_COMMENT,src/scanpy/external/tl/_phenograph.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/external/tl/_phenograph.py#:~:text=Leiden%20initialization%20of%20the%20optimization
sample,perf,perform,"Aggregation to perform is specified by `func`, which can be a single metric or a",MatchSource.CODE_COMMENT,src/scanpy/get/_aggregated.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/get/_aggregated.py#:~:text=Aggregation%20to%20perform%20is%20specified%20by%20%60func%60%2C%20which%20can%20be%20a%20single%20metric%20or%20a
sample,perf,performance,"#   parallelized, which boosts performance almost linearly with cores",MatchSource.CODE_COMMENT,src/scanpy/metrics/_gearys_c.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/metrics/_gearys_c.py#:~:text=%23%20%20%20parallelized%2C%20which%20boosts%20performance%20almost%20linearly%20with%20cores
sample,fast,faster,# TODO: These are faster if we can compile them in parallel mode,MatchSource.CODE_COMMENT,src/scanpy/metrics/_gearys_c.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/metrics/_gearys_c.py#:~:text=%23%20TODO%3A%20These%20are%20faster%20if%20we%20can%20compile%20them%20in%20parallel%20mode
sample,optimiz,optimization,different intial states for the optimization,MatchSource.CODE_COMMENT,src/scanpy/plotting/_tools/paga.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/plotting/_tools/paga.py#:~:text=different%20intial%20states%20for%20the%20optimization
sample,optimiz,optimization,Change to use different initial states for the optimization,MatchSource.CODE_COMMENT,src/scanpy/preprocessing/_pca.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/preprocessing/_pca.py#:~:text=Change%20to%20use%20different%20initial%20states%20for%20the%20optimization
sample,perf,perform,"If `True`, perform an incremental PCA on segments of `chunk_size`",MatchSource.CODE_COMMENT,src/scanpy/preprocessing/_pca.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/preprocessing/_pca.py#:~:text=If%20%60True%60%2C%20perform%20an%20incremental%20PCA%20on%20segments%20of%20%60chunk_size%60
sample,perf,perform,"If `False`, perform a full PCA and",MatchSource.CODE_COMMENT,src/scanpy/preprocessing/_pca.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/preprocessing/_pca.py#:~:text=If%20%60False%60%2C%20perform%20a%20full%20PCA%20and
sample,perf,performed,Whether this function should be performed inplace,MatchSource.CODE_COMMENT,src/scanpy/preprocessing/_scale.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/preprocessing/_scale.py#:~:text=Whether%20this%20function%20should%20be%20performed%20inplace
sample,perf,performance,# the performance gain is substantial,MatchSource.CODE_COMMENT,src/scanpy/preprocessing/_simple.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/preprocessing/_simple.py#:~:text=%23%20the%20performance%20gain%20is%20substantial
sample,perf,perform,"Otherwise, perform computation inplace and return `None`",MatchSource.CODE_COMMENT,src/scanpy/tools/_dpt.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_dpt.py#:~:text=Otherwise%2C%20perform%20computation%20inplace%20and%20return%20%60None%60
sample,perf,perform,Call function _detect_branching and perform bookkeeping on segs and,MatchSource.CODE_COMMENT,src/scanpy/tools/_dpt.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_dpt.py#:~:text=Call%20function%20_detect_branching%20and%20perform%20bookkeeping%20on%20segs%20and
sample,fast,faster,"faster than 'fr'), 'kk' (Kamadi Kawai', slower than 'fr'), 'lgl' (Large",MatchSource.CODE_COMMENT,src/scanpy/tools/_draw_graph.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_draw_graph.py#:~:text=faster%20than%20%27fr%27%29%2C%20%27kk%27%20%28Kamadi%20Kawai%27%2C%20slower%20than%20%27fr%27%29%2C%20%27lgl%27%20%28Large
sample,fast,fast,"Graph, very fast), 'drl' (Distributed Recursive Layout, pretty fast) and",MatchSource.CODE_COMMENT,src/scanpy/tools/_draw_graph.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_draw_graph.py#:~:text=Graph%2C%20very%20fast%29%2C%20%27drl%27%20%28Distributed%20Recursive%20Layout%2C%20pretty%20fast%29%20and
sample,optimiz,optimization,different intial states for the optimization,MatchSource.CODE_COMMENT,src/scanpy/tools/_draw_graph.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_draw_graph.py#:~:text=different%20intial%20states%20for%20the%20optimization
sample,perf,performed,This can be performed per category over a,MatchSource.CODE_COMMENT,src/scanpy/tools/_embedding_density.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_embedding_density.py#:~:text=This%20can%20be%20performed%20per%20category%20over%20a
sample,optimiz,optimization,Change the initialization of the optimization,MatchSource.CODE_COMMENT,src/scanpy/tools/_leiden.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_leiden.py#:~:text=Change%20the%20initialization%20of%20the%20optimization
sample,perf,perform,How many iterations of the Leiden clustering algorithm to perform,MatchSource.CODE_COMMENT,src/scanpy/tools/_leiden.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_leiden.py#:~:text=How%20many%20iterations%20of%20the%20Leiden%20clustering%20algorithm%20to%20perform
sample,perf,perform,"Positive values above 2 define the total number of iterations to perform,",MatchSource.CODE_COMMENT,src/scanpy/tools/_leiden.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_leiden.py#:~:text=Positive%20values%20above%202%20define%20the%20total%20number%20of%20iterations%20to%20perform%2C
sample,fast,faster,2 is faster and the default for underlying packages,MatchSource.CODE_COMMENT,src/scanpy/tools/_leiden.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_leiden.py#:~:text=2%20is%20faster%20and%20the%20default%20for%20underlying%20packages
sample,optimiz,optimization,Change the initialization of the optimization,MatchSource.CODE_COMMENT,src/scanpy/tools/_louvain.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_louvain.py#:~:text=Change%20the%20initialization%20of%20the%20optimization
sample,perf,perform,"Otherwise, perform",MatchSource.CODE_COMMENT,src/scanpy/tools/_paga.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_paga.py#:~:text=Otherwise%2C%20perform
sample,perf,perform,layers` whose value will be used to perform tests on,MatchSource.CODE_COMMENT,src/scanpy/tools/_rank_genes_groups.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_rank_genes_groups.py#:~:text=layers%60%20whose%20value%20will%20be%20used%20to%20perform%20tests%20on
sample,speed,speed,"# Since convergence speed varies, we take the slower one, i",MatchSource.CODE_COMMENT,src/scanpy/tools/_top_genes.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_top_genes.py#:~:text=%23%20Since%20convergence%20speed%20varies%2C%20we%20take%20the%20slower%20one%2C%20i
sample,speed,speed,This might have future speed-up,MatchSource.CODE_COMMENT,src/scanpy/tools/_top_genes.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_top_genes.py#:~:text=This%20might%20have%20future%20speed-up
sample,optimiz,optimization,# TODO: optimization frame,MatchSource.CODE_COMMENT,src/scanpy/tools/_top_genes.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_top_genes.py#:~:text=%23%20TODO%3A%20optimization%20frame
sample,speed,speedup,a huge speedup and better convergence if you install Multicore-tSNE_,MatchSource.CODE_COMMENT,src/scanpy/tools/_tsne.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_tsne.py#:~:text=a%20huge%20speedup%20and%20better%20convergence%20if%20you%20install%20Multicore-tSNE_
sample,optimiz,optimization,"If the cost function increases during initial optimization,",MatchSource.CODE_COMMENT,src/scanpy/tools/_tsne.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_tsne.py#:~:text=If%20the%20cost%20function%20increases%20during%20initial%20optimization%2C
sample,optimiz,optimization,"optimization, the early exaggeration factor or the learning rate",MatchSource.CODE_COMMENT,src/scanpy/tools/_tsne.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_tsne.py#:~:text=optimization%2C%20the%20early%20exaggeration%20factor%20or%20the%20learning%20rate
sample,optimiz,optimization,Change this to use different intial states for the optimization,MatchSource.CODE_COMMENT,src/scanpy/tools/_tsne.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_tsne.py#:~:text=Change%20this%20to%20use%20different%20intial%20states%20for%20the%20optimization
sample,fast,faster,"be faster than tSNE, it optimizes the embedding such that it best reflects",MatchSource.CODE_COMMENT,src/scanpy/tools/_umap.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_umap.py#:~:text=be%20faster%20than%20tSNE%2C%20it%20optimizes%20the%20embedding%20such%20that%20it%20best%20reflects
sample,optimiz,optimizes,"tSNE, by contrast, optimizes the distribution of",MatchSource.CODE_COMMENT,src/scanpy/tools/_umap.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_umap.py#:~:text=tSNE%2C%20by%20contrast%2C%20optimizes%20the%20distribution%20of
sample,optimiz,optimization,The number of iterations (epochs) of the optimization,MatchSource.CODE_COMMENT,src/scanpy/tools/_umap.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_umap.py#:~:text=The%20number%20of%20iterations%20%28epochs%29%20of%20the%20optimization
sample,optimiz,optimization,The initial learning rate for the embedding optimization,MatchSource.CODE_COMMENT,src/scanpy/tools/_umap.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_umap.py#:~:text=The%20initial%20learning%20rate%20for%20the%20embedding%20optimization
sample,optimiz,optimization,optimization,MatchSource.CODE_COMMENT,src/scanpy/tools/_umap.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_umap.py#:~:text=optimization
sample,optimiz,optimizing,edge/1-simplex sample in optimizing the low dimensional embedding,MatchSource.CODE_COMMENT,src/scanpy/tools/_umap.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/tools/_umap.py#:~:text=edge/1-simplex%20sample%20in%20optimizing%20the%20low%20dimensional%20embedding
sample,fast,faster,# is faster than sampling,MatchSource.CODE_COMMENT,src/scanpy/_utils/__init__.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/src/scanpy/_utils/__init__.py#:~:text=%23%20is%20faster%20than%20sampling
sample,perf,perfectly,# Test case with perfectly seperated groups,MatchSource.CODE_COMMENT,tests/test_metrics.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/tests/test_metrics.py#:~:text=%23%20Test%20case%20with%20perfectly%20seperated%20groups
sample,speed,speed,# Subsetting for speed of test,MatchSource.CODE_COMMENT,tests/test_pca.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/tests/test_pca.py#:~:text=%23%20Subsetting%20for%20speed%20of%20test
sample,fast,faster,# Reduce size of input for faster test,MatchSource.CODE_COMMENT,tests/test_scrublet.py,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/tree/1.10.2/tests/test_scrublet.py#:~:text=%23%20Reduce%20size%20of%20input%20for%20faster%20test
