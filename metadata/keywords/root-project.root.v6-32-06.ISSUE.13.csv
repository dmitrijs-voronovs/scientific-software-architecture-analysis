id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/12372:32506,Performance,optimiz,optimized,32506,"er/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #31 CPyCppyy::CPPMethod::Execute (this=0x16ae03d30, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #32 0x00007fff7cb4fe44 in CPyCppyy::CPPMethod::Call (this=0x16ae03d30, self=; 0x7fff6b79ae90: 0x7fff6b533fc0, args=0x7fff7cc54b08, kwds=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #33 0x00007fff7cb56de8 in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fff6b79ae80, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /usr/include/c++/8/bits/move.h:74; #34 0x00007fff7cb93498 in CPyCppyy::tpp_call (pytmpl=0x7fff6b53b228, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:32690,Performance,optimiz,optimized,32690,"cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #31 CPyCppyy::CPPMethod::Execute (this=0x16ae03d30, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #32 0x00007fff7cb4fe44 in CPyCppyy::CPPMethod::Call (this=0x16ae03d30, self=; 0x7fff6b79ae90: 0x7fff6b533fc0, args=0x7fff7cc54b08, kwds=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #33 0x00007fff7cb56de8 in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fff6b79ae80, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /usr/include/c++/8/bits/move.h:74; #34 0x00007fff7cb93498 in CPyCppyy::tpp_call (pytmpl=0x7fff6b53b228, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:598; #35 0x00007fff8a3d0fec in _PyObject_FastCallKeywords () from /lib64/libpython3.6m.so.1.0; #36 0x00007fff8a3d1ed4 in call_function () from /lib64/libpython3.6m.so.1.0; #37 0x00007fff8a3d2fb4 in _PyEval_EvalFrameDefaul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:32714,Performance,optimiz,optimized,32714,"cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #31 CPyCppyy::CPPMethod::Execute (this=0x16ae03d30, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #32 0x00007fff7cb4fe44 in CPyCppyy::CPPMethod::Call (this=0x16ae03d30, self=; 0x7fff6b79ae90: 0x7fff6b533fc0, args=0x7fff7cc54b08, kwds=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #33 0x00007fff7cb56de8 in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fff6b79ae80, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /usr/include/c++/8/bits/move.h:74; #34 0x00007fff7cb93498 in CPyCppyy::tpp_call (pytmpl=0x7fff6b53b228, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:598; #35 0x00007fff8a3d0fec in _PyObject_FastCallKeywords () from /lib64/libpython3.6m.so.1.0; #36 0x00007fff8a3d1ed4 in call_function () from /lib64/libpython3.6m.so.1.0; #37 0x00007fff8a3d2fb4 in _PyEval_EvalFrameDefaul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:32736,Performance,optimiz,optimized,32736,"cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #31 CPyCppyy::CPPMethod::Execute (this=0x16ae03d30, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #32 0x00007fff7cb4fe44 in CPyCppyy::CPPMethod::Call (this=0x16ae03d30, self=; 0x7fff6b79ae90: 0x7fff6b533fc0, args=0x7fff7cc54b08, kwds=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #33 0x00007fff7cb56de8 in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fff6b79ae80, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /usr/include/c++/8/bits/move.h:74; #34 0x00007fff7cb93498 in CPyCppyy::tpp_call (pytmpl=0x7fff6b53b228, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:598; #35 0x00007fff8a3d0fec in _PyObject_FastCallKeywords () from /lib64/libpython3.6m.so.1.0; #36 0x00007fff8a3d1ed4 in call_function () from /lib64/libpython3.6m.so.1.0; #37 0x00007fff8a3d2fb4 in _PyEval_EvalFrameDefaul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:32981,Performance,optimiz,optimized,32981,"pyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #31 CPyCppyy::CPPMethod::Execute (this=0x16ae03d30, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #32 0x00007fff7cb4fe44 in CPyCppyy::CPPMethod::Call (this=0x16ae03d30, self=; 0x7fff6b79ae90: 0x7fff6b533fc0, args=0x7fff7cc54b08, kwds=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #33 0x00007fff7cb56de8 in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fff6b79ae80, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /usr/include/c++/8/bits/move.h:74; #34 0x00007fff7cb93498 in CPyCppyy::tpp_call (pytmpl=0x7fff6b53b228, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:598; #35 0x00007fff8a3d0fec in _PyObject_FastCallKeywords () from /lib64/libpython3.6m.so.1.0; #36 0x00007fff8a3d1ed4 in call_function () from /lib64/libpython3.6m.so.1.0; #37 0x00007fff8a3d2fb4 in _PyEval_EvalFrameDefault () from /lib64/libpython3.6m.so.1.0; #38 0x00007fff8a39a880 in fast_function () from /lib64/libpython3.6m.so.1.0; #39 0x00007fff8a3d1cb8 in call_function () from /lib64/libpython3.6m.so.1.0; #40 0x00007fff8a3d2fb4 in _PyEval_EvalFrameDef",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:11723,Safety,abort,aborted,11723," /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #46 TKey::ReadObjectAny (this=0x10aa98220, expectedClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TKey.cxx:1102; #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /builddir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:96,Testability,test,test,96,"### Describe the bug. When building root 6.28.00 for RHEL+EPEL 8 on ppc64le there are build and test failures. Test failures happens in compiled unit tests (gtest), tests using interpreded root and tests using python. All tests fail with the error ""pure virtual method called"" and the backtrace all indicate the same line:. ~~~; #9 llvm::orc::ExecutionSession::lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; ~~~. https://github.com/root-project/root/blob/db1e83871f8a34574c4980d94c5e5ab667fa8672/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp#L2031-L2043. 187 tests fail with the error ""pure virtual method called"". Most of them are related to dataframe or roofit, but not exclusively. These errors do not happen on the other RHEL+EPEL 8 architecture (x86_64).; These errors do not happen on ppc64le on other systems: RHEL+EPEL 9, Fedora 36, 37, 38, 39. It is specific to ppc64le on RHEL+EPEL 8. ### Expected behaviour. Root should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:111,Testability,Test,Test,111,"### Describe the bug. When building root 6.28.00 for RHEL+EPEL 8 on ppc64le there are build and test failures. Test failures happens in compiled unit tests (gtest), tests using interpreded root and tests using python. All tests fail with the error ""pure virtual method called"" and the backtrace all indicate the same line:. ~~~; #9 llvm::orc::ExecutionSession::lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; ~~~. https://github.com/root-project/root/blob/db1e83871f8a34574c4980d94c5e5ab667fa8672/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp#L2031-L2043. 187 tests fail with the error ""pure virtual method called"". Most of them are related to dataframe or roofit, but not exclusively. These errors do not happen on the other RHEL+EPEL 8 architecture (x86_64).; These errors do not happen on ppc64le on other systems: RHEL+EPEL 9, Fedora 36, 37, 38, 39. It is specific to ppc64le on RHEL+EPEL 8. ### Expected behaviour. Root should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:150,Testability,test,tests,150,"### Describe the bug. When building root 6.28.00 for RHEL+EPEL 8 on ppc64le there are build and test failures. Test failures happens in compiled unit tests (gtest), tests using interpreded root and tests using python. All tests fail with the error ""pure virtual method called"" and the backtrace all indicate the same line:. ~~~; #9 llvm::orc::ExecutionSession::lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; ~~~. https://github.com/root-project/root/blob/db1e83871f8a34574c4980d94c5e5ab667fa8672/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp#L2031-L2043. 187 tests fail with the error ""pure virtual method called"". Most of them are related to dataframe or roofit, but not exclusively. These errors do not happen on the other RHEL+EPEL 8 architecture (x86_64).; These errors do not happen on ppc64le on other systems: RHEL+EPEL 9, Fedora 36, 37, 38, 39. It is specific to ppc64le on RHEL+EPEL 8. ### Expected behaviour. Root should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:165,Testability,test,tests,165,"### Describe the bug. When building root 6.28.00 for RHEL+EPEL 8 on ppc64le there are build and test failures. Test failures happens in compiled unit tests (gtest), tests using interpreded root and tests using python. All tests fail with the error ""pure virtual method called"" and the backtrace all indicate the same line:. ~~~; #9 llvm::orc::ExecutionSession::lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; ~~~. https://github.com/root-project/root/blob/db1e83871f8a34574c4980d94c5e5ab667fa8672/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp#L2031-L2043. 187 tests fail with the error ""pure virtual method called"". Most of them are related to dataframe or roofit, but not exclusively. These errors do not happen on the other RHEL+EPEL 8 architecture (x86_64).; These errors do not happen on ppc64le on other systems: RHEL+EPEL 9, Fedora 36, 37, 38, 39. It is specific to ppc64le on RHEL+EPEL 8. ### Expected behaviour. Root should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:198,Testability,test,tests,198,"### Describe the bug. When building root 6.28.00 for RHEL+EPEL 8 on ppc64le there are build and test failures. Test failures happens in compiled unit tests (gtest), tests using interpreded root and tests using python. All tests fail with the error ""pure virtual method called"" and the backtrace all indicate the same line:. ~~~; #9 llvm::orc::ExecutionSession::lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; ~~~. https://github.com/root-project/root/blob/db1e83871f8a34574c4980d94c5e5ab667fa8672/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp#L2031-L2043. 187 tests fail with the error ""pure virtual method called"". Most of them are related to dataframe or roofit, but not exclusively. These errors do not happen on the other RHEL+EPEL 8 architecture (x86_64).; These errors do not happen on ppc64le on other systems: RHEL+EPEL 9, Fedora 36, 37, 38, 39. It is specific to ppc64le on RHEL+EPEL 8. ### Expected behaviour. Root should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:222,Testability,test,tests,222,"### Describe the bug. When building root 6.28.00 for RHEL+EPEL 8 on ppc64le there are build and test failures. Test failures happens in compiled unit tests (gtest), tests using interpreded root and tests using python. All tests fail with the error ""pure virtual method called"" and the backtrace all indicate the same line:. ~~~; #9 llvm::orc::ExecutionSession::lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; ~~~. https://github.com/root-project/root/blob/db1e83871f8a34574c4980d94c5e5ab667fa8672/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp#L2031-L2043. 187 tests fail with the error ""pure virtual method called"". Most of them are related to dataframe or roofit, but not exclusively. These errors do not happen on the other RHEL+EPEL 8 architecture (x86_64).; These errors do not happen on ppc64le on other systems: RHEL+EPEL 9, Fedora 36, 37, 38, 39. It is specific to ppc64le on RHEL+EPEL 8. ### Expected behaviour. Root should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:742,Testability,test,tests,742,"### Describe the bug. When building root 6.28.00 for RHEL+EPEL 8 on ppc64le there are build and test failures. Test failures happens in compiled unit tests (gtest), tests using interpreded root and tests using python. All tests fail with the error ""pure virtual method called"" and the backtrace all indicate the same line:. ~~~; #9 llvm::orc::ExecutionSession::lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; ~~~. https://github.com/root-project/root/blob/db1e83871f8a34574c4980d94c5e5ab667fa8672/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp#L2031-L2043. 187 tests fail with the error ""pure virtual method called"". Most of them are related to dataframe or roofit, but not exclusively. These errors do not happen on the other RHEL+EPEL 8 architecture (x86_64).; These errors do not happen on ppc64le on other systems: RHEL+EPEL 9, Fedora 36, 37, 38, 39. It is specific to ppc64le on RHEL+EPEL 8. ### Expected behaviour. Root should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:1360,Testability,test,tests,1360,":lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; ~~~. https://github.com/root-project/root/blob/db1e83871f8a34574c4980d94c5e5ab667fa8672/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp#L2031-L2043. 187 tests fail with the error ""pure virtual method called"". Most of them are related to dataframe or roofit, but not exclusively. These errors do not happen on the other RHEL+EPEL 8 architecture (x86_64).; These errors do not happen on ppc64le on other systems: RHEL+EPEL 9, Fedora 36, 37, 38, 39. It is specific to ppc64le on RHEL+EPEL 8. ### Expected behaviour. Root should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8fa9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x1098e5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8fac1c8 in TUnixS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:11425,Testability,test,test,11425,"treamerTObject (pThis=0x10a596170, object=0x109986ba0, b=...) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6797; #45 0x00007fffa93abef0 in TClass::Streamer (onfile_class=0x0, b=..., obj=0x109986ba0, this=0x10a596170) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #46 TKey::ReadObjectAny (this=0x10aa98220, expectedClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TKey.cxx:1102; #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /builddir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:11817,Testability,test,testing,11817,"/BUILD/root-6.28.00/io/io/src/TKey.cxx:1102; #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /builddir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:11894,Testability,Test,Test,11894,"ed (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /builddir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x11eee5850) at /builddir/buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:18508,Testability,test,test,18508,"ommand (this=0x7fffff1572b0, actionResult=; 0x7fffff157260: cling::MetaSema::AR_Success, resultValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #25 0x00007fffa2ae4044 in cling::MetaProcessor::process (this=0x11f260fc0, input_line=..., compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=0x7fffff157520, disableValuePrinting=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #26 0x00007fffa282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:18537,Testability,Test,Test,18537,"taSema::AR_Success, resultValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #25 0x00007fffa2ae4044 in cling::MetaProcessor::process (this=0x11f260fc0, input_line=..., compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=0x7fffff157520, disableValuePrinting=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #26 0x00007fffa282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:18579,Testability,test,test-testActionHelpers,18579,"taSema::AR_Success, resultValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #25 0x00007fffa2ae4044 in cling::MetaProcessor::process (this=0x11f260fc0, input_line=..., compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=0x7fffff157520, disableValuePrinting=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #26 0x00007fffa282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:18687,Testability,Test,Test,18687,"arser.cpp:118; #25 0x00007fffa2ae4044 in cling::MetaProcessor::process (this=0x11f260fc0, input_line=..., compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=0x7fffff157520, disableValuePrinting=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #26 0x00007fffa282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa13a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:18868,Testability,test,tests,18868,"ffff157520, disableValuePrinting=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #26 0x00007fffa282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa13a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x173f45850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa13ac1c8 in TU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:18881,Testability,test,test,18881,"ffff157520, disableValuePrinting=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #26 0x00007fffa282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa13a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x173f45850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa13ac1c8 in TU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:18913,Testability,test,test,18913," /usr/include/c++/8/bits/unique_ptr.h:345; #26 0x00007fffa282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa13a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x173f45850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa13ac1c8 in TUnixSystem::DispatchSignals (this=0x173f45850, sig=k",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:18954,Testability,test,tests,18954,"282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa13a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x173f45850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa13ac1c8 in TUnixSystem::DispatchSignals (this=0x173f45850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25019,Testability,Test,TestBody,25019,":RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., context=""RLoopManager::Run"") at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RDFUtils.cxx:357; #22 0x00007fffa326c338 in ROOT::Detail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25114,Testability,test,test,25114,"anager::Run"") at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RDFUtils.cxx:357; #22 0x00007fffa326c338 in ROOT::Detail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25119,Testability,test,testActionHelpers,25119,"anager::Run"") at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RDFUtils.cxx:357; #22 0x00007fffa326c338 in ROOT::Detail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25176,Testability,test,testing,25176,"tail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25231,Testability,test,testing,25231,"tail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25240,Testability,Test,Test,25240,"tail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25252,Testability,test,testing,25252,"tail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25261,Testability,Test,Test,25261,"tail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25274,Testability,test,testing,25274,"tail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25283,Testability,Test,Test,25283,"tail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25368,Testability,test,testing,25368,":RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25377,Testability,Test,Test,25377,":RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25449,Testability,test,testing,25449,"/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec; test_histo1D (dataframe_histograms.HistogramsFromRDF) ... *** Break *** segmentati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25458,Testability,Test,TestInfo,25458,"/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec; test_histo1D (dataframe_histograms.HistogramsFromRDF) ... *** Break *** segmentati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25534,Testability,test,testing,25534,"::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec; test_histo1D (dataframe_histograms.HistogramsFromRDF) ... *** Break *** segmentation violation; ===========================================================; There was ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25543,Testability,Test,TestCase,25543,"::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec; test_histo1D (dataframe_histograms.HistogramsFromRDF) ... *** Break *** segmentation violation; ===========================================================; There was ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25619,Testability,test,testing,25619,"0/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec; test_histo1D (dataframe_histograms.HistogramsFromRDF) ... *** Break *** segmentation violation; ===========================================================; There was a crash (#8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:25726,Testability,test,testing,25726,"fd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec; test_histo1D (dataframe_histograms.HistogramsFromRDF) ... *** Break *** segmentation violation; ===========================================================; There was a crash (#8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ==",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/issues/12372:26275,Testability,Test,Test,26275,")(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec; test_histo1D (dataframe_histograms.HistogramsFromRDF) ... *** Break *** segmentation violation; ===========================================================; There was a crash (#8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fff89ef2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fff89e5a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fff8ac49ad8 in system_compat () from /lib64/glibc-hwcaps/power9/libpthread-2.28.so; #3 0x00007fff7c7a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x16573fa50) at /builddir/build/BUIL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12372
https://github.com/root-project/root/pull/12375:61,Deployability,update,update,61,"# This Pull request:. ## Changes or fixes:. After the recent update of the TMVA classification tests, some comments were not updated to reflect the changes, which is confusing. This PR makes the comments the same in all tests to reduce the conusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12375
https://github.com/root-project/root/pull/12375:125,Deployability,update,updated,125,"# This Pull request:. ## Changes or fixes:. After the recent update of the TMVA classification tests, some comments were not updated to reflect the changes, which is confusing. This PR makes the comments the same in all tests to reduce the conusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12375
https://github.com/root-project/root/pull/12375:229,Energy Efficiency,reduce,reduce,229,"# This Pull request:. ## Changes or fixes:. After the recent update of the TMVA classification tests, some comments were not updated to reflect the changes, which is confusing. This PR makes the comments the same in all tests to reduce the conusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12375
https://github.com/root-project/root/pull/12375:95,Testability,test,tests,95,"# This Pull request:. ## Changes or fixes:. After the recent update of the TMVA classification tests, some comments were not updated to reflect the changes, which is confusing. This PR makes the comments the same in all tests to reduce the conusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12375
https://github.com/root-project/root/pull/12375:220,Testability,test,tests,220,"# This Pull request:. ## Changes or fixes:. After the recent update of the TMVA classification tests, some comments were not updated to reflect the changes, which is confusing. This PR makes the comments the same in all tests to reduce the conusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12375
https://github.com/root-project/root/pull/12376:1479,Deployability,update,updated,1479,"d as follows:; ```c++; auto model = RNTupleModel::Create();; auto field1 = model->MakeField<float>(""field1"", 42.0);. auto ntuple = RNTupleWriter::Recreate(std::move(model), ""myNTuple"", ""some/file.root"");; auto modelUpdater = ntuple->CreateModelUpdater();; modelUpdater->BeginUpdate();; float field2 = 10.0;; modelUpdater->AddField<float>(""field2"", &field2);; modelUpdater->CommitUpdate();; // possibly more calls to `BeginUpdate()`/`CommitUpdate()` here... *field2 = 42.0;; ntuple->Fill();; ```. ## Changes or fixes:; - Changes required to `RNTupleDescriptor`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID both when they are seen for the first time (in page lists) and by the time the description for the schema extension is serialized.; This change only affects how the schema is serialized and does not change deserialization, i.e. the change is backwards compatible.; - `RPageSink::UpdateSchema(const RNTupleModelChangeset &)` allows incremental updates to the ntuple descriptor kept internally in the `RPageSink`, which is required, e.g. if new fields were added after the in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12376
https://github.com/root-project/root/pull/12376:2281,Deployability,Update,UpdateSchema,2281,"`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID both when they are seen for the first time (in page lists) and by the time the description for the schema extension is serialized.; This change only affects how the schema is serialized and does not change deserialization, i.e. the change is backwards compatible.; - `RPageSink::UpdateSchema(const RNTupleModelChangeset &)` allows incremental updates to the ntuple descriptor kept internally in the `RPageSink`, which is required, e.g. if new fields were added after the initial call to `RPageSink::Create(RNTupleModel &)`.; - Per the current state of affairs in `RPageSinkBuf`, some adjustments are also needed to keep `fInnerModel` in sync.; - Add class `RNTupleModel::RUpdater`, which provides limited support for incremental updates, e.g. addition of new fields.; - Add `RNTupleWriter::CreateModelUpdater()` that returns a usable `RUpdater` object. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] Update to format version to RC 2 -- to be done after merging both parts + split encoding",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12376
https://github.com/root-project/root/pull/12376:2345,Deployability,update,updates,2345,"`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID both when they are seen for the first time (in page lists) and by the time the description for the schema extension is serialized.; This change only affects how the schema is serialized and does not change deserialization, i.e. the change is backwards compatible.; - `RPageSink::UpdateSchema(const RNTupleModelChangeset &)` allows incremental updates to the ntuple descriptor kept internally in the `RPageSink`, which is required, e.g. if new fields were added after the initial call to `RPageSink::Create(RNTupleModel &)`.; - Per the current state of affairs in `RPageSinkBuf`, some adjustments are also needed to keep `fInnerModel` in sync.; - Add class `RNTupleModel::RUpdater`, which provides limited support for incremental updates, e.g. addition of new fields.; - Add `RNTupleWriter::CreateModelUpdater()` that returns a usable `RUpdater` object. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] Update to format version to RC 2 -- to be done after merging both parts + split encoding",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12376
https://github.com/root-project/root/pull/12376:2731,Deployability,update,updates,2731,"`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID both when they are seen for the first time (in page lists) and by the time the description for the schema extension is serialized.; This change only affects how the schema is serialized and does not change deserialization, i.e. the change is backwards compatible.; - `RPageSink::UpdateSchema(const RNTupleModelChangeset &)` allows incremental updates to the ntuple descriptor kept internally in the `RPageSink`, which is required, e.g. if new fields were added after the initial call to `RPageSink::Create(RNTupleModel &)`.; - Per the current state of affairs in `RPageSinkBuf`, some adjustments are also needed to keep `fInnerModel` in sync.; - Add class `RNTupleModel::RUpdater`, which provides limited support for incremental updates, e.g. addition of new fields.; - Add `RNTupleWriter::CreateModelUpdater()` that returns a usable `RUpdater` object. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] Update to format version to RC 2 -- to be done after merging both parts + split encoding",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12376
https://github.com/root-project/root/pull/12376:2906,Deployability,update,updated,2906,"`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID both when they are seen for the first time (in page lists) and by the time the description for the schema extension is serialized.; This change only affects how the schema is serialized and does not change deserialization, i.e. the change is backwards compatible.; - `RPageSink::UpdateSchema(const RNTupleModelChangeset &)` allows incremental updates to the ntuple descriptor kept internally in the `RPageSink`, which is required, e.g. if new fields were added after the initial call to `RPageSink::Create(RNTupleModel &)`.; - Per the current state of affairs in `RPageSinkBuf`, some adjustments are also needed to keep `fInnerModel` in sync.; - Add class `RNTupleModel::RUpdater`, which provides limited support for incremental updates, e.g. addition of new fields.; - Add `RNTupleWriter::CreateModelUpdater()` that returns a usable `RUpdater` object. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] Update to format version to RC 2 -- to be done after merging both parts + split encoding",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12376
https://github.com/root-project/root/pull/12376:2945,Deployability,Update,Update,2945,"`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID both when they are seen for the first time (in page lists) and by the time the description for the schema extension is serialized.; This change only affects how the schema is serialized and does not change deserialization, i.e. the change is backwards compatible.; - `RPageSink::UpdateSchema(const RNTupleModelChangeset &)` allows incremental updates to the ntuple descriptor kept internally in the `RPageSink`, which is required, e.g. if new fields were added after the initial call to `RPageSink::Create(RNTupleModel &)`.; - Per the current state of affairs in `RPageSinkBuf`, some adjustments are also needed to keep `fInnerModel` in sync.; - Add class `RNTupleModel::RUpdater`, which provides limited support for incremental updates, e.g. addition of new fields.; - Add `RNTupleWriter::CreateModelUpdater()` that returns a usable `RUpdater` object. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] Update to format version to RC 2 -- to be done after merging both parts + split encoding",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12376
https://github.com/root-project/root/pull/12376:76,Modifiability,extend,extending,76,"This pull request implements the foundations for late model extension, i.e. extending the ntuple model with new fields after the initial schema has been fixed.; Per this PR, we only allow extending the model before the first entry is filled. This restriction will be removed in a follow-up PR. **NOTE:** after the changes in this PR, all the currently existing ntuple files remain readable. The user-facing API is based on a new class `RNTupleModel::RUpdater` that can be used as follows:; ```c++; auto model = RNTupleModel::Create();; auto field1 = model->MakeField<float>(""field1"", 42.0);. auto ntuple = RNTupleWriter::Recreate(std::move(model), ""myNTuple"", ""some/file.root"");; auto modelUpdater = ntuple->CreateModelUpdater();; modelUpdater->BeginUpdate();; float field2 = 10.0;; modelUpdater->AddField<float>(""field2"", &field2);; modelUpdater->CommitUpdate();; // possibly more calls to `BeginUpdate()`/`CommitUpdate()` here... *field2 = 42.0;; ntuple->Fill();; ```. ## Changes or fixes:; - Changes required to `RNTupleDescriptor`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12376
https://github.com/root-project/root/pull/12376:188,Modifiability,extend,extending,188,"This pull request implements the foundations for late model extension, i.e. extending the ntuple model with new fields after the initial schema has been fixed.; Per this PR, we only allow extending the model before the first entry is filled. This restriction will be removed in a follow-up PR. **NOTE:** after the changes in this PR, all the currently existing ntuple files remain readable. The user-facing API is based on a new class `RNTupleModel::RUpdater` that can be used as follows:; ```c++; auto model = RNTupleModel::Create();; auto field1 = model->MakeField<float>(""field1"", 42.0);. auto ntuple = RNTupleWriter::Recreate(std::move(model), ""myNTuple"", ""some/file.root"");; auto modelUpdater = ntuple->CreateModelUpdater();; modelUpdater->BeginUpdate();; float field2 = 10.0;; modelUpdater->AddField<float>(""field2"", &field2);; modelUpdater->CommitUpdate();; // possibly more calls to `BeginUpdate()`/`CommitUpdate()` here... *field2 = 42.0;; ntuple->Fill();; ```. ## Changes or fixes:; - Changes required to `RNTupleDescriptor`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12376
https://github.com/root-project/root/pull/12376:2876,Testability,test,tested,2876,"`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID both when they are seen for the first time (in page lists) and by the time the description for the schema extension is serialized.; This change only affects how the schema is serialized and does not change deserialization, i.e. the change is backwards compatible.; - `RPageSink::UpdateSchema(const RNTupleModelChangeset &)` allows incremental updates to the ntuple descriptor kept internally in the `RPageSink`, which is required, e.g. if new fields were added after the initial call to `RPageSink::Create(RNTupleModel &)`.; - Per the current state of affairs in `RPageSinkBuf`, some adjustments are also needed to keep `fInnerModel` in sync.; - Add class `RNTupleModel::RUpdater`, which provides limited support for incremental updates, e.g. addition of new fields.; - Add `RNTupleWriter::CreateModelUpdater()` that returns a usable `RUpdater` object. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] Update to format version to RC 2 -- to be done after merging both parts + split encoding",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12376
https://github.com/root-project/root/pull/12376:2829,Usability,usab,usable,2829,"`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID both when they are seen for the first time (in page lists) and by the time the description for the schema extension is serialized.; This change only affects how the schema is serialized and does not change deserialization, i.e. the change is backwards compatible.; - `RPageSink::UpdateSchema(const RNTupleModelChangeset &)` allows incremental updates to the ntuple descriptor kept internally in the `RPageSink`, which is required, e.g. if new fields were added after the initial call to `RPageSink::Create(RNTupleModel &)`.; - Per the current state of affairs in `RPageSinkBuf`, some adjustments are also needed to keep `fInnerModel` in sync.; - Add class `RNTupleModel::RUpdater`, which provides limited support for incremental updates, e.g. addition of new fields.; - Add `RNTupleWriter::CreateModelUpdater()` that returns a usable `RUpdater` object. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] Update to format version to RC 2 -- to be done after merging both parts + split encoding",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12376
https://github.com/root-project/root/pull/12377:100,Deployability,patch,patches,100,This pull request is a backport of https://github.com/root-project/root/pull/12298 to the `v6-28-00-patches` branch. This fixes an unfortunate memory leak we introduced in https://github.com/root-project/root/pull/10775.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12377
https://github.com/root-project/root/issues/12378:1059,Performance,load,loads,1059,"### Describe the bug; We have typedefs in ATLAS EDM that are not resolved immediately by TClass::GetClass() but only at the second call to it:; root [0] TClass::GetClass(""MissingETBase::Types::jetlink_t""); (TClass *) nullptr; root [1] TClass::GetClass(""MissingETBase::Types::jetlink_t""); (TClass *) 0x4d3eff0. I am tentatively calling it a bug - because the behavior is inconsistent, but it's also possible we are missing something in selection.xml files?. ### Expected behavior; Hopefully it would work at the first try! 😄 . ### To Reproduce; For ROOT 6.26.8 ATLAS setup, on lxplus:; % source /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/AtlasSetup/V02-01-05/AtlasSetup/scripts/asetup.sh master,latest,Athena; % root. For ROOT master ATLAS setup (using LCG DEV3 nightly):; source /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/AtlasSetup/V02-01-05/AtlasSetup/scripts/asetup.sh master--dev3LCG,latest,Athena. ### Additional context; The typedef is defined in a different library than the actual class - I suspect the first call to GetClass() only loads the first library, gets the typedef definition but stops at this point. Only the second call loads the other library with the real class definition. This is not a stopper for us, but kind of annoying. ""Typedef package"" includes and selection.xml:; https://acode-browser1.usatlas.bnl.gov/lxr/source/athena/Event/xAOD/xAODMissingET/xAODMissingET/; ""Class package"" includes:; https://acode-browser1.usatlas.bnl.gov/lxr/source/athena/Event/xAOD/xAODJet/xAODJet/. Cheers, Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12378
https://github.com/root-project/root/issues/12378:1158,Performance,load,loads,1158,"### Describe the bug; We have typedefs in ATLAS EDM that are not resolved immediately by TClass::GetClass() but only at the second call to it:; root [0] TClass::GetClass(""MissingETBase::Types::jetlink_t""); (TClass *) nullptr; root [1] TClass::GetClass(""MissingETBase::Types::jetlink_t""); (TClass *) 0x4d3eff0. I am tentatively calling it a bug - because the behavior is inconsistent, but it's also possible we are missing something in selection.xml files?. ### Expected behavior; Hopefully it would work at the first try! 😄 . ### To Reproduce; For ROOT 6.26.8 ATLAS setup, on lxplus:; % source /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/AtlasSetup/V02-01-05/AtlasSetup/scripts/asetup.sh master,latest,Athena; % root. For ROOT master ATLAS setup (using LCG DEV3 nightly):; source /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/AtlasSetup/V02-01-05/AtlasSetup/scripts/asetup.sh master--dev3LCG,latest,Athena. ### Additional context; The typedef is defined in a different library than the actual class - I suspect the first call to GetClass() only loads the first library, gets the typedef definition but stops at this point. Only the second call loads the other library with the real class definition. This is not a stopper for us, but kind of annoying. ""Typedef package"" includes and selection.xml:; https://acode-browser1.usatlas.bnl.gov/lxr/source/athena/Event/xAOD/xAODMissingET/xAODMissingET/; ""Class package"" includes:; https://acode-browser1.usatlas.bnl.gov/lxr/source/athena/Event/xAOD/xAODJet/xAODJet/. Cheers, Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12378
https://github.com/root-project/root/pull/12379:598,Integrability,message,message,598,"Silence many `Warnings C4624` like for example:; ```; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(79,1): warning C4624: 'llvm::detail::copy_construction_triviality_helper<T>': destructor was implicitly defined as deleted [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' bei",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12379
https://github.com/root-project/root/pull/12379:1034,Integrability,message,message,1034,"m/Support/type_traits.h(79,1): warning C4624: 'llvm::detail::copy_construction_triviality_helper<T>': destructor was implicitly defined as deleted [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12379
https://github.com/root-project/root/pull/12379:1494,Integrability,message,message,1494,"14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\include\clang/Basic/Diagnostic.h(180): message : see reference to class template instantiation 'llvm::SmallVector<clang::FixItHint,6>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12379
https://github.com/root-project/root/pull/12379:1915,Integrability,message,message,1915,"14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\include\clang/Basic/Diagnostic.h(180): message : see reference to class template instantiation 'llvm::SmallVector<clang::FixItHint,6>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12379
https://github.com/root-project/root/pull/12379:2333,Integrability,message,message,2333,"14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\include\clang/Basic/Diagnostic.h(180): message : see reference to class template instantiation 'llvm::SmallVector<clang::FixItHint,6>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12379
https://github.com/root-project/root/pull/12380:748,Deployability,update,updated,748,"This pull request improves the support for storage of collections that use `TVirtualCollectionProxy`, which was initially landed in #11525. However, `TVirtualCollectionProxy` allows for traversing a collection using iterators, which should be faster than using `TVirtualCollectionProxy::At()`. Also, this interface avoids (where possible) an additional copy during element insertion. ## Changes or fixes:; - Switches from using `TVirtualCollectionProxy::{Size,At}()` to the use of iterators. After merging this PR, an implementation for the following functions is required instead: `TVirtualCollectionProxy::GetFunctionCreateIterators()`, `GetFunctionNext()`, and `GetFunctionDeleteTwoIterators`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11671.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12380
https://github.com/root-project/root/pull/12380:305,Integrability,interface,interface,305,"This pull request improves the support for storage of collections that use `TVirtualCollectionProxy`, which was initially landed in #11525. However, `TVirtualCollectionProxy` allows for traversing a collection using iterators, which should be faster than using `TVirtualCollectionProxy::At()`. Also, this interface avoids (where possible) an additional copy during element insertion. ## Changes or fixes:; - Switches from using `TVirtualCollectionProxy::{Size,At}()` to the use of iterators. After merging this PR, an implementation for the following functions is required instead: `TVirtualCollectionProxy::GetFunctionCreateIterators()`, `GetFunctionNext()`, and `GetFunctionDeleteTwoIterators`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11671.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12380
https://github.com/root-project/root/pull/12380:315,Safety,avoid,avoids,315,"This pull request improves the support for storage of collections that use `TVirtualCollectionProxy`, which was initially landed in #11525. However, `TVirtualCollectionProxy` allows for traversing a collection using iterators, which should be faster than using `TVirtualCollectionProxy::At()`. Also, this interface avoids (where possible) an additional copy during element insertion. ## Changes or fixes:; - Switches from using `TVirtualCollectionProxy::{Size,At}()` to the use of iterators. After merging this PR, an implementation for the following functions is required instead: `TVirtualCollectionProxy::GetFunctionCreateIterators()`, `GetFunctionNext()`, and `GetFunctionDeleteTwoIterators`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11671.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12380
https://github.com/root-project/root/pull/12380:718,Testability,test,tested,718,"This pull request improves the support for storage of collections that use `TVirtualCollectionProxy`, which was initially landed in #11525. However, `TVirtualCollectionProxy` allows for traversing a collection using iterators, which should be faster than using `TVirtualCollectionProxy::At()`. Also, this interface avoids (where possible) an additional copy during element insertion. ## Changes or fixes:; - Switches from using `TVirtualCollectionProxy::{Size,At}()` to the use of iterators. After merging this PR, an implementation for the following functions is required instead: `TVirtualCollectionProxy::GetFunctionCreateIterators()`, `GetFunctionNext()`, and `GetFunctionDeleteTwoIterators`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11671.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12380
https://github.com/root-project/root/pull/12381:45,Integrability,interface,interface,45,This commit adds a ROOT::Math::Functor based interface to the minimizer for RooFuncWrapper. A functor based approach allows for the wrapper to choose between using AD/analytical and numerical derivatives easily.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12381
https://github.com/root-project/root/pull/12381:132,Integrability,wrap,wrapper,132,This commit adds a ROOT::Math::Functor based interface to the minimizer for RooFuncWrapper. A functor based approach allows for the wrapper to choose between using AD/analytical and numerical derivatives easily.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12381
https://github.com/root-project/root/pull/12383:123,Security,access,access,123,"* Implement scene subscription in order to add and remove views dynamically on client; * Add toolbar in a view to directly access control to expand, swap, and destroy; * Change 'View'manu in the menubar to 'Subscribe' menu to create views on the client that are not yet subscribed; * Fix possible deadlock on client disconnect while the client is updating",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12383
https://github.com/root-project/root/pull/12384:145,Deployability,update,updated,145,gold is not evolving anymore and causes problems. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12384
https://github.com/root-project/root/pull/12384:115,Testability,test,tested,115,gold is not evolving anymore and causes problems. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12384
https://github.com/root-project/root/pull/12385:42,Deployability,install,install,42,"Like this, we are polluting the build and install directories less with unneeded files and it also speeds up the build process a bit if RooFit and/or TMVA are disabled. Their pythonization files don't need to be compiled to `.pyc` files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12385
https://github.com/root-project/root/pull/12386:65,Availability,error,errors,65,# This Pull request:. Adds annotations for compiler warnings and errors during the build. - Creates annotations in the workflow summary. [Example](https://web.archive.org/web/20230317122819/https://github.com/olemorud/root/actions/runs/4446441053); - Creates annotations in the `Files changed` section of pull requests. [Example](https://web.archive.org/web/20230317122218/https://github.com/olemorud/root/pull/9/files#diff-8d4418f3872066807d7fb0e2558bd6f5e9ed9bb028a0c82bf7cb0fcd63935b26); - Highlights warnings/errors in the build log:; ![image](https://user-images.githubusercontent.com/82065181/225905454-7b5ff1b6-047f-4ff2-8ae2-c897c07c62ee.png). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12386
https://github.com/root-project/root/pull/12386:513,Availability,error,errors,513,# This Pull request:. Adds annotations for compiler warnings and errors during the build. - Creates annotations in the workflow summary. [Example](https://web.archive.org/web/20230317122819/https://github.com/olemorud/root/actions/runs/4446441053); - Creates annotations in the `Files changed` section of pull requests. [Example](https://web.archive.org/web/20230317122218/https://github.com/olemorud/root/pull/9/files#diff-8d4418f3872066807d7fb0e2558bd6f5e9ed9bb028a0c82bf7cb0fcd63935b26); - Highlights warnings/errors in the build log:; ![image](https://user-images.githubusercontent.com/82065181/225905454-7b5ff1b6-047f-4ff2-8ae2-c897c07c62ee.png). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12386
https://github.com/root-project/root/pull/12386:703,Deployability,update,updated,703,# This Pull request:. Adds annotations for compiler warnings and errors during the build. - Creates annotations in the workflow summary. [Example](https://web.archive.org/web/20230317122819/https://github.com/olemorud/root/actions/runs/4446441053); - Creates annotations in the `Files changed` section of pull requests. [Example](https://web.archive.org/web/20230317122218/https://github.com/olemorud/root/pull/9/files#diff-8d4418f3872066807d7fb0e2558bd6f5e9ed9bb028a0c82bf7cb0fcd63935b26); - Highlights warnings/errors in the build log:; ![image](https://user-images.githubusercontent.com/82065181/225905454-7b5ff1b6-047f-4ff2-8ae2-c897c07c62ee.png). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12386
https://github.com/root-project/root/pull/12386:533,Testability,log,log,533,# This Pull request:. Adds annotations for compiler warnings and errors during the build. - Creates annotations in the workflow summary. [Example](https://web.archive.org/web/20230317122819/https://github.com/olemorud/root/actions/runs/4446441053); - Creates annotations in the `Files changed` section of pull requests. [Example](https://web.archive.org/web/20230317122218/https://github.com/olemorud/root/pull/9/files#diff-8d4418f3872066807d7fb0e2558bd6f5e9ed9bb028a0c82bf7cb0fcd63935b26); - Highlights warnings/errors in the build log:; ![image](https://user-images.githubusercontent.com/82065181/225905454-7b5ff1b6-047f-4ff2-8ae2-c897c07c62ee.png). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12386
https://github.com/root-project/root/pull/12386:673,Testability,test,tested,673,# This Pull request:. Adds annotations for compiler warnings and errors during the build. - Creates annotations in the workflow summary. [Example](https://web.archive.org/web/20230317122819/https://github.com/olemorud/root/actions/runs/4446441053); - Creates annotations in the `Files changed` section of pull requests. [Example](https://web.archive.org/web/20230317122218/https://github.com/olemorud/root/pull/9/files#diff-8d4418f3872066807d7fb0e2558bd6f5e9ed9bb028a0c82bf7cb0fcd63935b26); - Highlights warnings/errors in the build log:; ![image](https://user-images.githubusercontent.com/82065181/225905454-7b5ff1b6-047f-4ff2-8ae2-c897c07c62ee.png). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12386
https://github.com/root-project/root/issues/12387:940,Availability,down,download,940,"### Explain what you would like to see improved; <!-- ; Explain what isn't as good as it could be and why; --> ; In RooMCStudy, the parameter of interest should also be fitted with Gaussian in addition to its pull distribution. This is important to perform the linearity test.; ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; --> The details problem and solution are explained in, https://root-forum.cern.ch/t/why-the-fitgauss-true-doesnt-work-for-plotparam-in-roomcstudy/53706. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12387
https://github.com/root-project/root/issues/12387:922,Deployability,install,install,922,"### Explain what you would like to see improved; <!-- ; Explain what isn't as good as it could be and why; --> ; In RooMCStudy, the parameter of interest should also be fitted with Gaussian in addition to its pull distribution. This is important to perform the linearity test.; ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; --> The details problem and solution are explained in, https://root-forum.cern.ch/t/why-the-fitgauss-true-doesnt-work-for-plotparam-in-roomcstudy/53706. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12387
https://github.com/root-project/root/issues/12387:249,Performance,perform,perform,249,"### Explain what you would like to see improved; <!-- ; Explain what isn't as good as it could be and why; --> ; In RooMCStudy, the parameter of interest should also be fitted with Gaussian in addition to its pull distribution. This is important to perform the linearity test.; ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; --> The details problem and solution are explained in, https://root-forum.cern.ch/t/why-the-fitgauss-true-doesnt-work-for-plotparam-in-roomcstudy/53706. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12387
https://github.com/root-project/root/issues/12387:271,Testability,test,test,271,"### Explain what you would like to see improved; <!-- ; Explain what isn't as good as it could be and why; --> ; In RooMCStudy, the parameter of interest should also be fitted with Gaussian in addition to its pull distribution. This is important to perform the linearity test.; ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; --> The details problem and solution are explained in, https://root-forum.cern.ch/t/why-the-fitgauss-true-doesnt-work-for-plotparam-in-roomcstudy/53706. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12387
https://github.com/root-project/root/pull/12388:182,Modifiability,rewrite,rewrites,182,"# This Pull request:. Resolves #12297. Changes the matrix to do some jobs with different options, e.g. `DLLVM_BUILD_TYP=Debug` for one of the ubuntu22 builds. (can be changed). Also rewrites the matrix to explicitly type each job, instead of doing a N x M jobs. I believe this syntax is easier to configure and makes implementation cleaner, as opposed to using nested lists to provide matrix options. Example run (picture added in case it expires): https://github.com/olemorud/root/actions/runs/4284703493; ![image](https://user-images.githubusercontent.com/82065181/221802381-3394775e-2b1b-45e9-8e3c-63ce0d44bd18.png). ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12388
https://github.com/root-project/root/pull/12388:297,Modifiability,config,configure,297,"# This Pull request:. Resolves #12297. Changes the matrix to do some jobs with different options, e.g. `DLLVM_BUILD_TYP=Debug` for one of the ubuntu22 builds. (can be changed). Also rewrites the matrix to explicitly type each job, instead of doing a N x M jobs. I believe this syntax is easier to configure and makes implementation cleaner, as opposed to using nested lists to provide matrix options. Example run (picture added in case it expires): https://github.com/olemorud/root/actions/runs/4284703493; ![image](https://user-images.githubusercontent.com/82065181/221802381-3394775e-2b1b-45e9-8e3c-63ce0d44bd18.png). ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12388
https://github.com/root-project/root/pull/12388:641,Testability,test,tested,641,"# This Pull request:. Resolves #12297. Changes the matrix to do some jobs with different options, e.g. `DLLVM_BUILD_TYP=Debug` for one of the ubuntu22 builds. (can be changed). Also rewrites the matrix to explicitly type each job, instead of doing a N x M jobs. I believe this syntax is easier to configure and makes implementation cleaner, as opposed to using nested lists to provide matrix options. Example run (picture added in case it expires): https://github.com/olemorud/root/actions/runs/4284703493; ![image](https://user-images.githubusercontent.com/82065181/221802381-3394775e-2b1b-45e9-8e3c-63ce0d44bd18.png). ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12388
https://github.com/root-project/root/pull/12389:90,Availability,error,errors,90,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:103,Availability,failure,failure,103,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:384,Availability,Failure,Failure,384,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:625,Availability,Failure,Failure,625,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:898,Deployability,update,updated,898,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:26,Testability,test,testRooAbsL,26,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:38,Testability,test,test,38,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:227,Testability,test,test,227,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:343,Testability,test,test,343,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:348,Testability,Test,TestStatistics,348,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:363,Testability,test,testRooAbsL,363,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:584,Testability,test,test,584,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:589,Testability,Test,TestStatistics,589,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:604,Testability,test,testRooAbsL,604,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12389:868,Testability,test,tested,868,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12389
https://github.com/root-project/root/pull/12390:623,Deployability,update,updated,623,# This Pull request:. The stressVector test fails on ix86 due to too strict check:; ~~~; DeltaR TLorentzVector 	 time = 0.2610929	(sec); DeltaR XYZTVector 	 time = 0.22973299	(sec); DeltaR PtEtaPhiEVector 	 time = 0.0016570091	(sec); -12823.3585955796	-12823.35859557827	-12823.35859557827; Test DeltaR failed !!; ~~~; ## Changes or fixes:. The new value for the scale parameter (50) was calculated from the above values:; ~~~; root [2] (-12823.3585955796 - (-12823.35859557827)) / -12823.3585955796 / std::numeric_limits<double>::epsilon() / 10; (double) 46.762663; ~~~; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12390
https://github.com/root-project/root/pull/12390:39,Testability,test,test,39,# This Pull request:. The stressVector test fails on ix86 due to too strict check:; ~~~; DeltaR TLorentzVector 	 time = 0.2610929	(sec); DeltaR XYZTVector 	 time = 0.22973299	(sec); DeltaR PtEtaPhiEVector 	 time = 0.0016570091	(sec); -12823.3585955796	-12823.35859557827	-12823.35859557827; Test DeltaR failed !!; ~~~; ## Changes or fixes:. The new value for the scale parameter (50) was calculated from the above values:; ~~~; root [2] (-12823.3585955796 - (-12823.35859557827)) / -12823.3585955796 / std::numeric_limits<double>::epsilon() / 10; (double) 46.762663; ~~~; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12390
https://github.com/root-project/root/pull/12390:291,Testability,Test,Test,291,# This Pull request:. The stressVector test fails on ix86 due to too strict check:; ~~~; DeltaR TLorentzVector 	 time = 0.2610929	(sec); DeltaR XYZTVector 	 time = 0.22973299	(sec); DeltaR PtEtaPhiEVector 	 time = 0.0016570091	(sec); -12823.3585955796	-12823.35859557827	-12823.35859557827; Test DeltaR failed !!; ~~~; ## Changes or fixes:. The new value for the scale parameter (50) was calculated from the above values:; ~~~; root [2] (-12823.3585955796 - (-12823.35859557827)) / -12823.3585955796 / std::numeric_limits<double>::epsilon() / 10; (double) 46.762663; ~~~; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12390
https://github.com/root-project/root/pull/12390:593,Testability,test,tested,593,# This Pull request:. The stressVector test fails on ix86 due to too strict check:; ~~~; DeltaR TLorentzVector 	 time = 0.2610929	(sec); DeltaR XYZTVector 	 time = 0.22973299	(sec); DeltaR PtEtaPhiEVector 	 time = 0.0016570091	(sec); -12823.3585955796	-12823.35859557827	-12823.35859557827; Test DeltaR failed !!; ~~~; ## Changes or fixes:. The new value for the scale parameter (50) was calculated from the above values:; ~~~; root [2] (-12823.3585955796 - (-12823.35859557827)) / -12823.3585955796 / std::numeric_limits<double>::epsilon() / 10; (double) 46.762663; ~~~; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12390
https://github.com/root-project/root/issues/12391:357,Availability,error,error,357,"- [X] Checked for duplicates. ### Describe the bug. First seen on the forum (see [here](https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198)). The Python code below; ```python; import ROOT. class Fitter(ROOT.Fit.Fitter):; def __init__(self):; super().__init__(); ```; triggers the following error; ```; /tmp/ipykernel_2130/1942954617.py:1: RuntimeWarning: class ""ROOT::Fit::Fitter"" has no virtual destructor; class Fitter(ROOT.Fit.Fitter):; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[2], line 1; ----> 1 class Fitter(ROOT.Fit.Fitter):; 2 def __init__(self):; 3 super().__init__(). TypeError: no python-side overrides supported (failed to compile the dispatcher code); input_line_54:41:12: error: cannot initialize return object of type 'ROOT::Math::IBaseFunctionMultiDimTempl<double> *' with an rvalue of type 'const ROOT::Math::IMultiGenFunction *' (aka 'const IBaseFunctionMultiDimTempl<double> *'); return Fitter::ObjFunction();; ```. ### Setup; 1. ROOT version: fails both in 6.29/01 (Python 3.11), and 6.26/10 (Python 3.10); 2. Operating system: Linux x86_64. ### Additional context; The issue has been tracked down to the introduction of the `Fitter::ObjFunction()` in [commit 9d322a6a38fca106d0e5b6064bd09c8c6dbb979a](https://github.com/root-project/root/commit/9d322a6a38fca106d0e5b6064bd09c8c6dbb979a).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12391
https://github.com/root-project/root/issues/12391:842,Availability,error,error,842,"- [X] Checked for duplicates. ### Describe the bug. First seen on the forum (see [here](https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198)). The Python code below; ```python; import ROOT. class Fitter(ROOT.Fit.Fitter):; def __init__(self):; super().__init__(); ```; triggers the following error; ```; /tmp/ipykernel_2130/1942954617.py:1: RuntimeWarning: class ""ROOT::Fit::Fitter"" has no virtual destructor; class Fitter(ROOT.Fit.Fitter):; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[2], line 1; ----> 1 class Fitter(ROOT.Fit.Fitter):; 2 def __init__(self):; 3 super().__init__(). TypeError: no python-side overrides supported (failed to compile the dispatcher code); input_line_54:41:12: error: cannot initialize return object of type 'ROOT::Math::IBaseFunctionMultiDimTempl<double> *' with an rvalue of type 'const ROOT::Math::IMultiGenFunction *' (aka 'const IBaseFunctionMultiDimTempl<double> *'); return Fitter::ObjFunction();; ```. ### Setup; 1. ROOT version: fails both in 6.29/01 (Python 3.11), and 6.26/10 (Python 3.10); 2. Operating system: Linux x86_64. ### Additional context; The issue has been tracked down to the introduction of the `Fitter::ObjFunction()` in [commit 9d322a6a38fca106d0e5b6064bd09c8c6dbb979a](https://github.com/root-project/root/commit/9d322a6a38fca106d0e5b6064bd09c8c6dbb979a).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12391
https://github.com/root-project/root/issues/12391:1269,Availability,down,down,1269,"- [X] Checked for duplicates. ### Describe the bug. First seen on the forum (see [here](https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198)). The Python code below; ```python; import ROOT. class Fitter(ROOT.Fit.Fitter):; def __init__(self):; super().__init__(); ```; triggers the following error; ```; /tmp/ipykernel_2130/1942954617.py:1: RuntimeWarning: class ""ROOT::Fit::Fitter"" has no virtual destructor; class Fitter(ROOT.Fit.Fitter):; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[2], line 1; ----> 1 class Fitter(ROOT.Fit.Fitter):; 2 def __init__(self):; 3 super().__init__(). TypeError: no python-side overrides supported (failed to compile the dispatcher code); input_line_54:41:12: error: cannot initialize return object of type 'ROOT::Math::IBaseFunctionMultiDimTempl<double> *' with an rvalue of type 'const ROOT::Math::IMultiGenFunction *' (aka 'const IBaseFunctionMultiDimTempl<double> *'); return Fitter::ObjFunction();; ```. ### Setup; 1. ROOT version: fails both in 6.29/01 (Python 3.11), and 6.26/10 (Python 3.10); 2. Operating system: Linux x86_64. ### Additional context; The issue has been tracked down to the introduction of the `Fitter::ObjFunction()` in [commit 9d322a6a38fca106d0e5b6064bd09c8c6dbb979a](https://github.com/root-project/root/commit/9d322a6a38fca106d0e5b6064bd09c8c6dbb979a).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12391
https://github.com/root-project/root/pull/12393:45,Testability,test,tests,45,"As suggested by @pcanal in #12220, adds unit tests to verify the on-disk encoding of split encoded columns",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12393
https://github.com/root-project/root/issues/12394:1180,Deployability,release,release,1180,"### Expected behavior; The problem occurs when two histograms that were created with different upper edge of the last bin are drawn in the same pad with Log y axis. I would expect that the edge of the last bin would be drawn as the minimum y value of the pad, instead it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. ### To Reproduce; python3 demo.py # produces demo.pdf; [demo.pdf](https://github.com/root-project/root/files/10851293/demo.pdf). # demo.py; from ROOT import *. gStyle.SetOptStat(0) # no statistics box; gStyle.SetOptTitle(0) # no title. #....make two histograms with different xmax; h15 = TH1F('h15','test histogram', 15*2, 0, 15); h25 = TH1F('h25','test histogram', 25*2, 0, 25). gaus = gROOT.GetFunction('gaus'); gaus.SetParameters(1, 0, 15) # Constant, Mean, Sigma; h15.FillRandom('gaus', 10000). gaus.SetParameters(1, 0, 25) # Constant, Mean, Sigma; h25.FillRandom('gaus', 10000); h25.SetLineColor(2). h15.Scale(.0005); h25.Scale(.02). h25.SetMaximum(10); h25.SetMinimum(.01). h25.Draw('hist'); h15.Draw('hist same'). gPad.SetLogy(1); gPad.Print('demo.pdf'). ### Setup; Root v6.26.10; Red Hat Enterprise Linux release 8.7 (Ootpa); Installed and compiled from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12394
https://github.com/root-project/root/issues/12394:1201,Deployability,Install,Installed,1201,"### Expected behavior; The problem occurs when two histograms that were created with different upper edge of the last bin are drawn in the same pad with Log y axis. I would expect that the edge of the last bin would be drawn as the minimum y value of the pad, instead it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. ### To Reproduce; python3 demo.py # produces demo.pdf; [demo.pdf](https://github.com/root-project/root/files/10851293/demo.pdf). # demo.py; from ROOT import *. gStyle.SetOptStat(0) # no statistics box; gStyle.SetOptTitle(0) # no title. #....make two histograms with different xmax; h15 = TH1F('h15','test histogram', 15*2, 0, 15); h25 = TH1F('h25','test histogram', 25*2, 0, 25). gaus = gROOT.GetFunction('gaus'); gaus.SetParameters(1, 0, 15) # Constant, Mean, Sigma; h15.FillRandom('gaus', 10000). gaus.SetParameters(1, 0, 25) # Constant, Mean, Sigma; h25.FillRandom('gaus', 10000); h25.SetLineColor(2). h15.Scale(.0005); h25.Scale(.02). h25.SetMaximum(10); h25.SetMinimum(.01). h25.Draw('hist'); h15.Draw('hist same'). gPad.SetLogy(1); gPad.Print('demo.pdf'). ### Setup; Root v6.26.10; Red Hat Enterprise Linux release 8.7 (Ootpa); Installed and compiled from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12394
https://github.com/root-project/root/issues/12394:153,Testability,Log,Log,153,"### Expected behavior; The problem occurs when two histograms that were created with different upper edge of the last bin are drawn in the same pad with Log y axis. I would expect that the edge of the last bin would be drawn as the minimum y value of the pad, instead it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. ### To Reproduce; python3 demo.py # produces demo.pdf; [demo.pdf](https://github.com/root-project/root/files/10851293/demo.pdf). # demo.py; from ROOT import *. gStyle.SetOptStat(0) # no statistics box; gStyle.SetOptTitle(0) # no title. #....make two histograms with different xmax; h15 = TH1F('h15','test histogram', 15*2, 0, 15); h25 = TH1F('h25','test histogram', 25*2, 0, 25). gaus = gROOT.GetFunction('gaus'); gaus.SetParameters(1, 0, 15) # Constant, Mean, Sigma; h15.FillRandom('gaus', 10000). gaus.SetParameters(1, 0, 25) # Constant, Mean, Sigma; h25.FillRandom('gaus', 10000); h25.SetLineColor(2). h15.Scale(.0005); h25.Scale(.02). h25.SetMaximum(10); h25.SetMinimum(.01). h25.Draw('hist'); h15.Draw('hist same'). gPad.SetLogy(1); gPad.Print('demo.pdf'). ### Setup; Root v6.26.10; Red Hat Enterprise Linux release 8.7 (Ootpa); Installed and compiled from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12394
https://github.com/root-project/root/issues/12394:667,Testability,test,test,667,"### Expected behavior; The problem occurs when two histograms that were created with different upper edge of the last bin are drawn in the same pad with Log y axis. I would expect that the edge of the last bin would be drawn as the minimum y value of the pad, instead it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. ### To Reproduce; python3 demo.py # produces demo.pdf; [demo.pdf](https://github.com/root-project/root/files/10851293/demo.pdf). # demo.py; from ROOT import *. gStyle.SetOptStat(0) # no statistics box; gStyle.SetOptTitle(0) # no title. #....make two histograms with different xmax; h15 = TH1F('h15','test histogram', 15*2, 0, 15); h25 = TH1F('h25','test histogram', 25*2, 0, 25). gaus = gROOT.GetFunction('gaus'); gaus.SetParameters(1, 0, 15) # Constant, Mean, Sigma; h15.FillRandom('gaus', 10000). gaus.SetParameters(1, 0, 25) # Constant, Mean, Sigma; h25.FillRandom('gaus', 10000); h25.SetLineColor(2). h15.Scale(.0005); h25.Scale(.02). h25.SetMaximum(10); h25.SetMinimum(.01). h25.Draw('hist'); h15.Draw('hist same'). gPad.SetLogy(1); gPad.Print('demo.pdf'). ### Setup; Root v6.26.10; Red Hat Enterprise Linux release 8.7 (Ootpa); Installed and compiled from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12394
https://github.com/root-project/root/issues/12394:716,Testability,test,test,716,"### Expected behavior; The problem occurs when two histograms that were created with different upper edge of the last bin are drawn in the same pad with Log y axis. I would expect that the edge of the last bin would be drawn as the minimum y value of the pad, instead it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. ### To Reproduce; python3 demo.py # produces demo.pdf; [demo.pdf](https://github.com/root-project/root/files/10851293/demo.pdf). # demo.py; from ROOT import *. gStyle.SetOptStat(0) # no statistics box; gStyle.SetOptTitle(0) # no title. #....make two histograms with different xmax; h15 = TH1F('h15','test histogram', 15*2, 0, 15); h25 = TH1F('h25','test histogram', 25*2, 0, 25). gaus = gROOT.GetFunction('gaus'); gaus.SetParameters(1, 0, 15) # Constant, Mean, Sigma; h15.FillRandom('gaus', 10000). gaus.SetParameters(1, 0, 25) # Constant, Mean, Sigma; h25.FillRandom('gaus', 10000); h25.SetLineColor(2). h15.Scale(.0005); h25.Scale(.02). h25.SetMaximum(10); h25.SetMinimum(.01). h25.Draw('hist'); h15.Draw('hist same'). gPad.SetLogy(1); gPad.Print('demo.pdf'). ### Setup; Root v6.26.10; Red Hat Enterprise Linux release 8.7 (Ootpa); Installed and compiled from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12394
https://github.com/root-project/root/pull/12395:219,Deployability,update,updated,219,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [ ] add support for all field structures in `GetColumnsForField`; - [ ] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12395
https://github.com/root-project/root/pull/12395:189,Testability,test,tested,189,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [ ] add support for all field structures in `GetColumnsForField`; - [ ] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12395
https://github.com/root-project/root/pull/12395:173,Usability,feedback,feedback,173,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [ ] add support for all field structures in `GetColumnsForField`; - [ ] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12395
https://github.com/root-project/root/pull/12396:219,Deployability,update,updated,219,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] add support for all field structures in `GetColumnsForField`; - [x] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12396
https://github.com/root-project/root/pull/12396:189,Testability,test,tested,189,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] add support for all field structures in `GetColumnsForField`; - [x] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12396
https://github.com/root-project/root/pull/12396:173,Usability,feedback,feedback,173,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] add support for all field structures in `GetColumnsForField`; - [x] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12396
https://github.com/root-project/root/pull/12397:59,Availability,error,error,59,When constructing in Python a derived class from Fitter an error occurred caused probably of a not understanding a typedef. See issue #12391. This PR fixes #12391,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12397
https://github.com/root-project/root/issues/12398:0,Usability,Simpl,Simple,0,"Simple reproducer at the ROOT prompt:. ```cpp; ~ root -l; root [0] ROOT::RVec<std::vector<float>> rv(10);; root [1] rv[ROOT::RVecI{1,1,0,0,0,0,0,0,0,0}][0].capacity(); ROOT_prompt_1:1:1: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; rv[ROOT::RVecI{1,1,0,0,0,0,0,0,0,0}][0].capacity(); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; (unsigned long) 18446720510731583839. *** Break *** segmentation violation; ```. The implementation of `RVecN RVecN::operator[](const RVecN<V, M> &conds) const` assumes that the type is trivially-constructible, using `reserve` + copy-assignment + manual resizing (which never properly constructs the new elements) rather than `reserve` + `push_back` (which would constructs the new elements in place). This seems to be also the root cause of the crash/hang reported at https://root-forum.cern.ch/t/root-snapshot-function-seems-to-be-blocked-when-using-vector-vector-float/53696 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12398
https://github.com/root-project/root/pull/12399:139,Deployability,update,updated,139,# This Pull request:. Contains bugfixes from assorted use-cases of HS3 JSON conversion. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12399
https://github.com/root-project/root/pull/12399:109,Testability,test,tested,109,# This Pull request:. Contains bugfixes from assorted use-cases of HS3 JSON conversion. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12399
https://github.com/root-project/root/pull/12401:183,Testability,test,testProblem,183,"Fix a rounding problem in FndFixBin. the attached code show the problem. This was mentioned in the issue: https://github.com/root-project/root/issues/11212. ### Reproducer; ```; void testProblem(){; int nb = 4;; float x2 = 0.005;; float x1 = 0.0;. auto h1 = new TH1F(""h1"" ,""h1"" ,nb ,x1 ,x2);; auto h2 = new TH1F(""h2"" ,""h2"" ,nb ,x1 ,x2);. double xr1 = h1->GetXaxis()->GetBinLowEdge(2);. h1->GetXaxis()->SetRangeUser(xr1, x2);. h2->SetBinContent(1 ,1000);; h2->SetBinContent(2 ,500);; h2->SetBinContent(3 ,300);; h2->SetBinContent(4 ,50);. h1->SetBinContent(1 ,1000);; h1->SetBinContent(2 ,500);; h1->SetBinContent(3 ,300);; h1->SetBinContent(4 ,50);; h1->SetLineColor(kRed);. auto c = new TCanvas;; c->SetLogx();; h1->Draw();; h2->Draw(""same""); //only 3 bins should be visible, the 2 histograms should overlap.; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12401
https://github.com/root-project/root/pull/12402:83,Deployability,install,installed,83,"# This Pull request:. When roofit is disabled, some roofit related files are still installed. ## Changes or fixes:. This PR makes the installation of those files conditional. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12402
https://github.com/root-project/root/pull/12402:134,Deployability,install,installation,134,"# This Pull request:. When roofit is disabled, some roofit related files are still installed. ## Changes or fixes:. This PR makes the installation of those files conditional. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12402
https://github.com/root-project/root/pull/12402:226,Deployability,update,updated,226,"# This Pull request:. When roofit is disabled, some roofit related files are still installed. ## Changes or fixes:. This PR makes the installation of those files conditional. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12402
https://github.com/root-project/root/pull/12402:196,Testability,test,tested,196,"# This Pull request:. When roofit is disabled, some roofit related files are still installed. ## Changes or fixes:. This PR makes the installation of those files conditional. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12402
https://github.com/root-project/root/pull/12403:95,Availability,failure,failures,95,"# This Pull request:. Then clad is disabled, some tests that use it are still run causing test failures. ## Changes or fixes:. This PR vetos thos tests.; (Also removed duplicates in minuit2 veto.). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12403
https://github.com/root-project/root/pull/12403:249,Deployability,update,updated,249,"# This Pull request:. Then clad is disabled, some tests that use it are still run causing test failures. ## Changes or fixes:. This PR vetos thos tests.; (Also removed duplicates in minuit2 veto.). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12403
https://github.com/root-project/root/pull/12403:50,Testability,test,tests,50,"# This Pull request:. Then clad is disabled, some tests that use it are still run causing test failures. ## Changes or fixes:. This PR vetos thos tests.; (Also removed duplicates in minuit2 veto.). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12403
https://github.com/root-project/root/pull/12403:90,Testability,test,test,90,"# This Pull request:. Then clad is disabled, some tests that use it are still run causing test failures. ## Changes or fixes:. This PR vetos thos tests.; (Also removed duplicates in minuit2 veto.). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12403
https://github.com/root-project/root/pull/12403:146,Testability,test,tests,146,"# This Pull request:. Then clad is disabled, some tests that use it are still run causing test failures. ## Changes or fixes:. This PR vetos thos tests.; (Also removed duplicates in minuit2 veto.). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12403
https://github.com/root-project/root/pull/12403:219,Testability,test,tested,219,"# This Pull request:. Then clad is disabled, some tests that use it are still run causing test failures. ## Changes or fixes:. This PR vetos thos tests.; (Also removed duplicates in minuit2 veto.). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12403
https://github.com/root-project/root/pull/12405:172,Deployability,patch,patch,172,"Davix interprets certain parameters that are passed in the anchor part of the URL (after the `#`). The anchor, however, is also used by `TChain` to pass the treename. This patch looks at the anchor and if it contains an equal sign (`=`), it assumes that it is a parameter list for Davix and not a treename. See also https://root-forum.cern.ch/t/problem-with-tchain-and-https-turls/53545/7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12405
https://github.com/root-project/root/issues/12406:419,Availability,error,errors,419,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12406
https://github.com/root-project/root/issues/12406:223,Energy Efficiency,reduce,reduced,223,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12406
https://github.com/root-project/root/issues/12406:726,Performance,load,load,726,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12406
https://github.com/root-project/root/issues/12406:393,Testability,test,test,393,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12406
https://github.com/root-project/root/issues/12406:642,Testability,Test,Test,642,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12406
https://github.com/root-project/root/issues/12406:655,Testability,Test,Test,655,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12406
https://github.com/root-project/root/issues/12406:668,Testability,Test,Test,668,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12406
https://github.com/root-project/root/issues/12406:681,Testability,Test,Test,681,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12406
https://github.com/root-project/root/issues/12406:694,Testability,Test,Test,694,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12406
https://github.com/root-project/root/pull/12407:304,Deployability,update,updated,304,# This Pull request:. Missing experimental add-on module ROOT.RDF.Experimental.Distributed (DistRDF) should not fail the loading of the rest of the ROOT.RDF namespace. Also addresses a mismatch in the minimum Python version check in the code vs. cmake. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes: https://bugzilla.redhat.com/show_bug.cgi?id=2173518,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12407
https://github.com/root-project/root/pull/12407:121,Performance,load,loading,121,# This Pull request:. Missing experimental add-on module ROOT.RDF.Experimental.Distributed (DistRDF) should not fail the loading of the rest of the ROOT.RDF namespace. Also addresses a mismatch in the minimum Python version check in the code vs. cmake. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes: https://bugzilla.redhat.com/show_bug.cgi?id=2173518,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12407
https://github.com/root-project/root/pull/12407:274,Testability,test,tested,274,# This Pull request:. Missing experimental add-on module ROOT.RDF.Experimental.Distributed (DistRDF) should not fail the loading of the rest of the ROOT.RDF namespace. Also addresses a mismatch in the minimum Python version check in the code vs. cmake. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes: https://bugzilla.redhat.com/show_bug.cgi?id=2173518,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12407
https://github.com/root-project/root/pull/12408:199,Deployability,update,updated,199,# This Pull request:. Recent changes introduced some weird alignment of text in the comments. ## Changes or fixes:. This PR restores the alignment. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12408
https://github.com/root-project/root/pull/12408:169,Testability,test,tested,169,# This Pull request:. Recent changes introduced some weird alignment of text in the comments. ## Changes or fixes:. This PR restores the alignment. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12408
https://github.com/root-project/root/issues/12409:246,Availability,error,error,246,"- [x ] Checked for duplicates. ### Describe the bug. ROOT 6.28.00 does not work correctly when $PWD is not accessible by the user. If I do:. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. it fails with:. ```bash; input_line_2:1:10: fatal error: cannot open file './cling/Interpreter/RuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; input_line_4:2:10: fatal error: cannot open file './TError.h': Permission denied; #include ""TError.h""; ^; input_line_5:1:10: fatal error: cannot open file './cling/Interpreter/DynamicLookupRuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ```. the same snippet works fine with 6.26.10. Notice things work fine with just the x bit set (i.e. chmod 100 . still works). ### Expected behavior. The standard root prompt without any error. ### To Reproduce. See above. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. ### Setup. ROOT 6.28.00, both el7 and ubuntu. ### Additional context. While this can look like a corner case, it reflects the way ALICE runs its online reconstruction jobs, so it's rather critical for us. I am in parallel trying to understand if the unaccessible cwd can be avoided, but this might have non trivial implications (and its for sure beyond my responsibilities).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12409
https://github.com/root-project/root/issues/12409:509,Availability,error,error,509,"- [x ] Checked for duplicates. ### Describe the bug. ROOT 6.28.00 does not work correctly when $PWD is not accessible by the user. If I do:. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. it fails with:. ```bash; input_line_2:1:10: fatal error: cannot open file './cling/Interpreter/RuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; input_line_4:2:10: fatal error: cannot open file './TError.h': Permission denied; #include ""TError.h""; ^; input_line_5:1:10: fatal error: cannot open file './cling/Interpreter/DynamicLookupRuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ```. the same snippet works fine with 6.26.10. Notice things work fine with just the x bit set (i.e. chmod 100 . still works). ### Expected behavior. The standard root prompt without any error. ### To Reproduce. See above. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. ### Setup. ROOT 6.28.00, both el7 and ubuntu. ### Additional context. While this can look like a corner case, it reflects the way ALICE runs its online reconstruction jobs, so it's rather critical for us. I am in parallel trying to understand if the unaccessible cwd can be avoided, but this might have non trivial implications (and its for sure beyond my responsibilities).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12409
https://github.com/root-project/root/issues/12409:615,Availability,error,error,615,"- [x ] Checked for duplicates. ### Describe the bug. ROOT 6.28.00 does not work correctly when $PWD is not accessible by the user. If I do:. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. it fails with:. ```bash; input_line_2:1:10: fatal error: cannot open file './cling/Interpreter/RuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; input_line_4:2:10: fatal error: cannot open file './TError.h': Permission denied; #include ""TError.h""; ^; input_line_5:1:10: fatal error: cannot open file './cling/Interpreter/DynamicLookupRuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ```. the same snippet works fine with 6.26.10. Notice things work fine with just the x bit set (i.e. chmod 100 . still works). ### Expected behavior. The standard root prompt without any error. ### To Reproduce. See above. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. ### Setup. ROOT 6.28.00, both el7 and ubuntu. ### Additional context. While this can look like a corner case, it reflects the way ALICE runs its online reconstruction jobs, so it's rather critical for us. I am in parallel trying to understand if the unaccessible cwd can be avoided, but this might have non trivial implications (and its for sure beyond my responsibilities).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12409
https://github.com/root-project/root/issues/12409:960,Availability,error,error,960,"- [x ] Checked for duplicates. ### Describe the bug. ROOT 6.28.00 does not work correctly when $PWD is not accessible by the user. If I do:. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. it fails with:. ```bash; input_line_2:1:10: fatal error: cannot open file './cling/Interpreter/RuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; input_line_4:2:10: fatal error: cannot open file './TError.h': Permission denied; #include ""TError.h""; ^; input_line_5:1:10: fatal error: cannot open file './cling/Interpreter/DynamicLookupRuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ```. the same snippet works fine with 6.26.10. Notice things work fine with just the x bit set (i.e. chmod 100 . still works). ### Expected behavior. The standard root prompt without any error. ### To Reproduce. See above. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. ### Setup. ROOT 6.28.00, both el7 and ubuntu. ### Additional context. While this can look like a corner case, it reflects the way ALICE runs its online reconstruction jobs, so it's rather critical for us. I am in parallel trying to understand if the unaccessible cwd can be avoided, but this might have non trivial implications (and its for sure beyond my responsibilities).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12409
https://github.com/root-project/root/issues/12409:1325,Safety,avoid,avoided,1325,"- [x ] Checked for duplicates. ### Describe the bug. ROOT 6.28.00 does not work correctly when $PWD is not accessible by the user. If I do:. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. it fails with:. ```bash; input_line_2:1:10: fatal error: cannot open file './cling/Interpreter/RuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; input_line_4:2:10: fatal error: cannot open file './TError.h': Permission denied; #include ""TError.h""; ^; input_line_5:1:10: fatal error: cannot open file './cling/Interpreter/DynamicLookupRuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ```. the same snippet works fine with 6.26.10. Notice things work fine with just the x bit set (i.e. chmod 100 . still works). ### Expected behavior. The standard root prompt without any error. ### To Reproduce. See above. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. ### Setup. ROOT 6.28.00, both el7 and ubuntu. ### Additional context. While this can look like a corner case, it reflects the way ALICE runs its online reconstruction jobs, so it's rather critical for us. I am in parallel trying to understand if the unaccessible cwd can be avoided, but this might have non trivial implications (and its for sure beyond my responsibilities).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12409
https://github.com/root-project/root/issues/12409:107,Security,access,accessible,107,"- [x ] Checked for duplicates. ### Describe the bug. ROOT 6.28.00 does not work correctly when $PWD is not accessible by the user. If I do:. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. it fails with:. ```bash; input_line_2:1:10: fatal error: cannot open file './cling/Interpreter/RuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; input_line_4:2:10: fatal error: cannot open file './TError.h': Permission denied; #include ""TError.h""; ^; input_line_5:1:10: fatal error: cannot open file './cling/Interpreter/DynamicLookupRuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ```. the same snippet works fine with 6.26.10. Notice things work fine with just the x bit set (i.e. chmod 100 . still works). ### Expected behavior. The standard root prompt without any error. ### To Reproduce. See above. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. ### Setup. ROOT 6.28.00, both el7 and ubuntu. ### Additional context. While this can look like a corner case, it reflects the way ALICE runs its online reconstruction jobs, so it's rather critical for us. I am in parallel trying to understand if the unaccessible cwd can be avoided, but this might have non trivial implications (and its for sure beyond my responsibilities).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12409
https://github.com/root-project/root/pull/12410:148,Deployability,update,updated,148,"## Changes or fixes:; added/modified MinInt, MaxInt, IntRndm.; added test of Integer interface. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12410
https://github.com/root-project/root/pull/12410:85,Integrability,interface,interface,85,"## Changes or fixes:; added/modified MinInt, MaxInt, IntRndm.; added test of Integer interface. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12410
https://github.com/root-project/root/pull/12410:69,Testability,test,test,69,"## Changes or fixes:; added/modified MinInt, MaxInt, IntRndm.; added test of Integer interface. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12410
https://github.com/root-project/root/pull/12410:118,Testability,test,tested,118,"## Changes or fixes:; added/modified MinInt, MaxInt, IntRndm.; added test of Integer interface. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12410
https://github.com/root-project/root/pull/12412:103,Modifiability,inherit,inherits,103,Silence the following kind of compiler and linker warnings on Windows:; ```; Warning C4250: 'class1' : inherits 'class2::member' via dominance; Warning LNK4197: export 'exportname' specified multiple times; using first specification; Warning LNK4217: symbol 'symbol' defined in 'filename_1.obj' is imported by 'filename_2.obj' in function 'function'; Warning LNK4286: symbol 'symbol' defined in 'filename_1.obj' is imported by 'filename_2.obj'; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12412
https://github.com/root-project/root/pull/12413:56,Availability,error,error,56,# This Pull request:. Fixes some bugs in HS3.; Improves error reporting in createHistogram.; adjust distributions names in HS3 output. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12413
https://github.com/root-project/root/pull/12413:208,Deployability,update,updated,208,# This Pull request:. Fixes some bugs in HS3.; Improves error reporting in createHistogram.; adjust distributions names in HS3 output. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12413
https://github.com/root-project/root/pull/12413:178,Testability,test,tested,178,# This Pull request:. Fixes some bugs in HS3.; Improves error reporting in createHistogram.; adjust distributions names in HS3 output. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12413
https://github.com/root-project/root/pull/12415:175,Testability,test,testProblem,175,"Fix https://github.com/root-project/root/issues/11212. The fix proposed in this PR was not correct: https://github.com/root-project/root/pull/12401. ### Reproducer; ```; void testProblem(){; int nb = 4;; float x2 = 0.005;; float x1 = 0.0;. auto h1 = new TH1F(""h1"" ,""h1"" ,nb ,x1 ,x2);; auto h2 = new TH1F(""h2"" ,""h2"" ,nb ,x1 ,x2);. double xr1 = h1->GetXaxis()->GetBinLowEdge(2);. h1->GetXaxis()->SetRangeUser(xr1, x2);. h2->SetBinContent(1 ,1000);; h2->SetBinContent(2 ,500);; h2->SetBinContent(3 ,300);; h2->SetBinContent(4 ,50);. h1->SetBinContent(1 ,1000);; h1->SetBinContent(2 ,500);; h1->SetBinContent(3 ,300);; h1->SetBinContent(4 ,50);; h1->SetLineColor(kRed);. auto c = new TCanvas;; c->SetLogx();; h1->Draw();; h2->Draw(""same""); //only 3 bins should be visible, the 2 histograms should overlap.; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12415
https://github.com/root-project/root/pull/12416:617,Integrability,message,message,617,"Another attempt to silence many `Warnings C4624` like for example:; ```; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(79,1): warning C4624: 'llvm::detail::copy_construction_triviality_helper<T>': destructor was implicitly defined as deleted [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::Smal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12416
https://github.com/root-project/root/pull/12416:1053,Integrability,message,message,1053,"m/Support/type_traits.h(79,1): warning C4624: 'llvm::detail::copy_construction_triviality_helper<T>': destructor was implicitly defined as deleted [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12416
https://github.com/root-project/root/pull/12416:1513,Integrability,message,message,1513,"14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\include\clang/Basic/Diagnostic.h(180): message : see reference to class template instantiation 'llvm::SmallVector<clang::FixItHint,6>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12416
https://github.com/root-project/root/pull/12416:1934,Integrability,message,message,1934,"14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\include\clang/Basic/Diagnostic.h(180): message : see reference to class template instantiation 'llvm::SmallVector<clang::FixItHint,6>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12416
https://github.com/root-project/root/pull/12416:2352,Integrability,message,message,2352,"14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\include\clang/Basic/Diagnostic.h(180): message : see reference to class template instantiation 'llvm::SmallVector<clang::FixItHint,6>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12416
https://github.com/root-project/root/pull/12418:42,Energy Efficiency,reduce,reduce,42,Addresses #12409. There are two parts:; - reduce the issue by having cling include *its* headers as sys headers; - teach clang to not issue diagnostics if a directory is inaccessible; [reported upstream](https://reviews.llvm.org/D65956#4167101),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12418
https://github.com/root-project/root/pull/12421:187,Deployability,update,updated,187,# This Pull request:. ## Changes or fixes:; This PR adds documentation to RInterface::Vary regarding the run-time not scaling linearly with the number of variations. ## Checklist:. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12421
https://github.com/root-project/root/pull/12422:250,Deployability,update,updated,250,# This Pull request:. ## Changes or fixes:; Adds a new overload for Take that allows a default value to fill the returned RVec if ; the absolute value of `n` is larger than the size of the vector. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12422
https://github.com/root-project/root/pull/12422:220,Testability,test,tested,220,# This Pull request:. ## Changes or fixes:; Adds a new overload for Take that allows a default value to fill the returned RVec if ; the absolute value of `n` is larger than the size of the vector. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12422
https://github.com/root-project/root/pull/12423:142,Deployability,update,updated,142,# This Pull request:. Use FILTER instead of REMOVE_ITEM since GLOB returns absolute paths. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12423
https://github.com/root-project/root/pull/12423:112,Testability,test,tested,112,# This Pull request:. Use FILTER instead of REMOVE_ITEM since GLOB returns absolute paths. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12423
https://github.com/root-project/root/issues/12426:57,Availability,failure,failures,57,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:123,Availability,failure,failures,123,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:2678,Availability,Error,Error,2678,"zeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:2773,Availability,error,error,2773,"at version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:4372,Availability,Failure,Failure,4372,"gistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running mai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:4576,Availability,Failure,Failure,4576,"loat; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWith",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:4858,Availability,down,down,4858," RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTup",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5043,Availability,Error,Error,5043,"Int32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5138,Availability,error,error,5138,"] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5232,Availability,error,error,5232,"mnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:7978,Availability,Error,Error,7978,"h this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (229 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:8200,Availability,Failure,Failure,8200,"omAccess (229 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:8306,Availability,Error,Error,8306,"omAccess (229 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:8401,Availability,error,error,8401,"c/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9165,Availability,Error,Error,9165,"ue of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9195,Availability,error,error,9195,"ue of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9291,Availability,Error,Error,9291," Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9500,Availability,Failure,Failure,9500,"00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9762,Availability,Error,Error,9762,"est/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9857,Availability,error,error,9857,"ile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:10872,Availability,Error,Error,10872,": Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:11075,Availability,Error,Error,11075," ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms);",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:11170,Availability,error,error,11170,"gletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:12220,Availability,Failure,Failure,12220,"le-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:646]\n"" (of type char const*); [ FAILED ] RNTuple.SerializeEnvelope (0 ms); [ RUN ] RNTuple.SerializeFrame; [ OK ] RNTuple.SerializeFrame (0 ms); [ RUN ] RNTuple.SerializeFeatureFlags; [ OK ] RNTuple.SerializeFeatureFlags (0 ms); [ RUN ] RNTuple.SerializeLocator; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:341: Failure; Failed; unsupported locator type should throw; [ FAILED ] RNTup",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:13155,Availability,Failure,Failure,13155,"/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:646]\n"" (of type char const*); [ FAILED ] RNTuple.SerializeEnvelope (0 ms); [ RUN ] RNTuple.SerializeFrame; [ OK ] RNTuple.SerializeFrame (0 ms); [ RUN ] RNTuple.SerializeFeatureFlags; [ OK ] RNTuple.SerializeFeatureFlags (0 ms); [ RUN ] RNTuple.SerializeLocator; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:341: Failure; Failed; unsupported locator type should throw; [ FAILED ] RNTuple.SerializeLocator (0 ms); [ RUN ] RNTuple.SerializeEnvelopeLink; [ OK ] RNTuple.SerializeEnvelopeLink (0 ms); [ RUN ] RNTuple.SerializeClusterSummary; [ OK ] RNTuple.SerializeClusterSummary (0 ms); [ RUN ] RNTuple.SerializeClusterGroup; [ OK ] RNTuple.SerializeClusterGroup (0 ms); [ RUN ] RNTuple.SerializeEmptyHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:14831,Availability,down,down,14831,", ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15052,Availability,Error,Error,15052,"TupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15147,Availability,error,error,15147,"al::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Exper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:19537,Availability,Failure,Failure,19537,"Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:280: Failure; Expected equality of these values:; 42; *fieldCast; Which is: 180388626432; [ FAILED ] RNTuple.Casting (56 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:23835,Availability,down,down,23835,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:24008,Availability,Error,Error,24008,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:24103,Availability,error,error,24103,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:1768,Deployability,release,release,1768,"led 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:6487,Deployability,release,release,6487,"...***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (5260 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (229 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:7218,Deployability,release,release,7218,"e real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (5260 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (229 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:7948,Deployability,release,release,7948,"h this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (229 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:13852,Deployability,release,release,13852,"ntuple/v7/src/RNTupleSerialize.cxx:646]\n"" (of type char const*); [ FAILED ] RNTuple.SerializeEnvelope (0 ms); [ RUN ] RNTuple.SerializeFrame; [ OK ] RNTuple.SerializeFrame (0 ms); [ RUN ] RNTuple.SerializeFeatureFlags; [ OK ] RNTuple.SerializeFeatureFlags (0 ms); [ RUN ] RNTuple.SerializeLocator; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:341: Failure; Failed; unsupported locator type should throw; [ FAILED ] RNTuple.SerializeLocator (0 ms); [ RUN ] RNTuple.SerializeEnvelopeLink; [ OK ] RNTuple.SerializeEnvelopeLink (0 ms); [ RUN ] RNTuple.SerializeClusterSummary; [ OK ] RNTuple.SerializeClusterSummary (0 ms); [ RUN ] RNTuple.SerializeClusterGroup; [ OK ] RNTuple.SerializeClusterGroup (0 ms); [ RUN ] RNTuple.SerializeEmptyHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (19",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:14264,Deployability,release,release,14264,"ator type should throw; [ FAILED ] RNTuple.SerializeLocator (0 ms); [ RUN ] RNTuple.SerializeEnvelopeLink; [ OK ] RNTuple.SerializeEnvelopeLink (0 ms); [ RUN ] RNTuple.SerializeClusterSummary; [ OK ] RNTuple.SerializeClusterSummary (0 ms); [ RUN ] RNTuple.SerializeClusterGroup; [ OK ] RNTuple.SerializeClusterGroup (0 ms); [ RUN ] RNTuple.SerializeEmptyHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:14669,Deployability,release,release,14669,"/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistration",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:16573,Deployability,release,release,16573," Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (23 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.StdPair (226 ms); [ RUN ] RNTuple.StdTuple; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:17297,Deployability,release,release,17297,"ot store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (23 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.StdPair (226 ms); [ RUN ] RNTuple.StdTuple; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.StdTuple (169 ms); [ RUN ] RNTuple.Int64_t; [ OK ] RNTuple.Int64_t (0 ms); [ RUN ] RNTuple.Char; [ OK ] RNTuple.Char (0 ms); [ RUN ] RNTuple.Int8_t; [ OK ] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:18020,Deployability,release,release,18020,"not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.StdPair (226 ms); [ RUN ] RNTuple.StdTuple; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.StdTuple (169 ms); [ RUN ] RNTuple.Int64_t; [ OK ] RNTuple.Int64_t (0 ms); [ RUN ] RNTuple.Char; [ OK ] RNTuple.Char (0 ms); [ RUN ] RNTuple.Int8_t; [ OK ] RNTuple.Int8_t (0 ms); [ RUN ] RNTuple.Int16_t; [ OK ] RNTuple.Int16_t (0 ms); [ RUN ] RNTuple.UInt16_t; [ OK ] RNTuple.UInt16_t (0 ms); [ RUN ] RNTuple.UnsupportedStdTypes; [ OK ] RNTuple.UnsupportedStdTypes (3 ms); [ RUN ] RNTuple.Casting; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:19097,Deployability,release,release,19097,"lease format version: RC 1; [ OK ] RNTuple.StdTuple (169 ms); [ RUN ] RNTuple.Int64_t; [ OK ] RNTuple.Int64_t (0 ms); [ RUN ] RNTuple.Char; [ OK ] RNTuple.Char (0 ms); [ RUN ] RNTuple.Int8_t; [ OK ] RNTuple.Int8_t (0 ms); [ RUN ] RNTuple.Int16_t; [ OK ] RNTuple.Int16_t (0 ms); [ RUN ] RNTuple.UInt16_t; [ OK ] RNTuple.UInt16_t (0 ms); [ RUN ] RNTuple.UnsupportedStdTypes; [ OK ] RNTuple.UnsupportedStdTypes (3 ms); [ RUN ] RNTuple.Casting; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:280: Failure; Expected equality of these values:; 42; *fieldCast; Which is: 180388626432; [ FAILED ] RNTuple.Casting (56 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:19430,Deployability,release,release,19430,"RUN ] RNTuple.UnsupportedStdTypes; [ OK ] RNTuple.UnsupportedStdTypes (3 ms); [ RUN ] RNTuple.Casting; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:280: Failure; Expected equality of these values:; 42; *fieldCast; Which is: 180388626432; [ FAILED ] RNTuple.Casting (56 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:20316,Deployability,release,release,20316,"in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:280: Failure; Expected equality of these values:; 42; *fieldCast; Which is: 180388626432; [ FAILED ] RNTuple.Casting (56 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClass (284 ms); [ RUN ] RNTuple.TClassMultipleInheritance; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:20649,Deployability,release,release,20649," values:; 42; *fieldCast; Which is: 180388626432; [ FAILED ] RNTuple.Casting (56 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClass (284 ms); [ RUN ] RNTuple.TClassMultipleInheritance; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassMultipleInheritance (195 ms); [ RUN ] RNTuple.TClassTemplatedBase; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:21388,Deployability,release,release,21388," Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClass (284 ms); [ RUN ] RNTuple.TClassMultipleInheritance; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassMultipleInheritance (195 ms); [ RUN ] RNTuple.TClassTemplatedBase; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:22140,Deployability,release,release,22140," version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassMultipleInheritance (195 ms); [ RUN ] RNTuple.TClassTemplatedBase; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:22890,Deployability,release,release,22890,"is version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:23627,Deployability,release,release,23627,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:2762,Integrability,message,message,2762,"at version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5127,Integrability,message,message,5127,"] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:8390,Integrability,message,message,8390,"c/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9846,Integrability,message,message,9846,"ile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:11159,Integrability,message,message,11159,"gletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15136,Integrability,message,message,15136,"al::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Exper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:24092,Integrability,message,message,24092,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5196,Modifiability,extend,extended,5196,"RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5377,Modifiability,extend,extended,5377,"e/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RRes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:2653,Safety,abort,aborting,2653,"zeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:2796,Safety,abort,aborted,2796,"at version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9737,Safety,abort,aborting,9737,"est/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9880,Safety,abort,aborted,9880,"ile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:12382,Security,access,access,12382,"ec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:646]\n"" (of type char const*); [ FAILED ] RNTuple.SerializeEnvelope (0 ms); [ RUN ] RNTuple.SerializeFrame; [ OK ] RNTuple.SerializeFrame (0 ms); [ RUN ] RNTuple.SerializeFeatureFlags; [ OK ] RNTuple.SerializeFeatureFlags (0 ms); [ RUN ] RNTuple.SerializeLocator; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:341: Failure; Failed; unsupported locator type should throw; [ FAILED ] RNTuple.SerializeLocator (0 ms); [ RUN ] RNTuple.SerializeEnvelopeLink; [ OK ] RNTuple.SerializeEnvelopeLink (0 ms); [ RUN ] RNTuple.SerializeClusterSummary; [ OK ] RNTuple.Seriali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:52,Testability,Test,Test,52,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:332,Testability,test,tests,332,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:504,Testability,test,tests,504,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:538,Testability,test,test-ntuple-basics,538,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:605,Testability,Test,Test,605,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:637,Testability,test,test-ntuple-basics,637,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:809,Testability,Test,Test,809,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:991,Testability,test,tests,991,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:1004,Testability,test,test,1004,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:1038,Testability,test,test,1038,"ibe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:1080,Testability,test,tests,1080,"dian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:2836,Testability,test,test-ntuple-endian,2836,"60 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnEle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:3117,Testability,Test,Test,3117,"e(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:3149,Testability,test,test-ntuple-endian,3149,"e(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:3320,Testability,Test,Test,3320,"::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:3501,Testability,test,tests,3501,"l data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:3514,Testability,test,test,3514,"l data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:3547,Testability,test,test,3547,"= nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:3588,Testability,test,tests,3588,"6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:4344,Testability,test,test,4344,"mote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:4548,Testability,test,test,4548,"est environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:4769,Testability,test,tests,4769," RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTup",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:4836,Testability,test,test,4836," RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTup",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:4879,Testability,test,tests,4879," RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTup",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:4892,Testability,test,test,4892," RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTup",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:4936,Testability,test,tests,4936,"nt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:4957,Testability,test,test,4957,"K ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5031,Testability,TEST,TEST,5031,"Int32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5184,Testability,test,test-ntuple-extended,5184,"RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5333,Testability,Test,Test,5333,"e/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RRes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5365,Testability,test,test-ntuple-extended,5365,"e/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RRes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5537,Testability,Test,Test,5537,"tuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5718,Testability,test,tests,5718," RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (5260 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5731,Testability,test,test,5731," RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (5260 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5764,Testability,test,test,5764,"] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (5260 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::stri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:5805,Testability,test,tests,5805,"; [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (5260 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOpt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:8170,Testability,test,test,8170,"Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (229 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:8449,Testability,test,test-ntuple-minifile,8449,"l::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:8597,Testability,Test,Test,8597,"ore real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:8629,Testability,test,test-ntuple-minifile,8629,"ore real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:8801,Testability,Test,Test,8801,"ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:8982,Testability,test,tests,8982," Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. He",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:8995,Testability,test,test,8995," Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. He",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9028,Testability,test,test,9028,"has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9069,Testability,test,tests,9069,"orrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9471,Testability,test,test,9471," printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:9920,Testability,test,test-ntuple-rdf,9920,"houtGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:10030,Testability,Test,Test,10030,"l test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:10062,Testability,test,test-ntuple-rdf,10062,"l test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:10234,Testability,Test,Test,10234,"le test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-seriali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:10415,Testability,test,test,10415,"e=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Runni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:10427,Testability,test,test,10427,"e=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Runni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:10460,Testability,test,test,10460,"ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:10501,Testability,test,test,10501,"alue of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:11218,Testability,test,test-ntuple-serialize,11218,"gletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:11305,Testability,Test,Test,11305,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:11337,Testability,test,test-ntuple-serialize,11337,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:11508,Testability,Test,Test,11508," RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, ui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:11690,Testability,test,tests,11690,"RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:11703,Testability,test,test,11703,"RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:11736,Testability,test,test,11736,"ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:11778,Testability,test,tests,11778,"Tuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:12189,Testability,test,test,12189," #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:646]\n"" (of type char const*); [ FAILED ] RNTuple.SerializeEnvelope (0 ms); [ RUN ] RNTuple.SerializeFrame; [ OK ] RNTuple.SerializeFrame (0 ms); [ RUN ] RNTuple.SerializeFeatureFlags; [ OK ] RNTuple.SerializeFeatureFlags (0 ms); [ RUN ] RNTuple.SerializeLocator; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:341: Failure; Failed; unsupported locator",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:13124,Testability,test,test,13124,"izeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:646]\n"" (of type char const*); [ FAILED ] RNTuple.SerializeEnvelope (0 ms); [ RUN ] RNTuple.SerializeFrame; [ OK ] RNTuple.SerializeFrame (0 ms); [ RUN ] RNTuple.SerializeFeatureFlags; [ OK ] RNTuple.SerializeFeatureFlags (0 ms); [ RUN ] RNTuple.SerializeLocator; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:341: Failure; Failed; unsupported locator type should throw; [ FAILED ] RNTuple.SerializeLocator (0 ms); [ RUN ] RNTuple.SerializeEnvelopeLink; [ OK ] RNTuple.SerializeEnvelopeLink (0 ms); [ RUN ] RNTuple.SerializeClusterSummary; [ OK ] RNTuple.SerializeClusterSummary (0 ms); [ RUN ] RNTuple.SerializeClusterGroup; [ OK ] RNTuple.SerializeClusterGroup (0 ms); [ RUN ] RNTuple.SerializeEmptyHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:14754,Testability,test,tests,14754,", ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:14809,Testability,test,test,14809,", ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:14853,Testability,test,tests,14853,", ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:14866,Testability,test,test,14866,", ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:14912,Testability,test,tests,14912,"rializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateFie",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:14933,Testability,test,tests,14933,"rializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15039,Testability,TEST,TESTS,15039,"TupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15193,Testability,test,test-ntuple-types,15193,"const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15294,Testability,Test,Test,15294,"n: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15326,Testability,test,test-ntuple-types,15326,"n: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15497,Testability,Test,Test,15497,"erimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15679,Testability,test,tests,15679,"ase format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (23 ms); [ RUN ] RNTuple.StdPair; Warning in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15692,Testability,test,test,15692,"ase format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (23 ms); [ RUN ] RNTuple.StdPair; Warning in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15725,Testability,test,test,15725,"ter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (23 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:15767,Testability,test,tests,15767,"0 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (23 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:19510,Testability,test,test,19510,"ld/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:280: Failure; Expected equality of these values:; 42; *fieldCast; Which is: 180388626432; [ FAILED ] RNTuple.Casting (56 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:23757,Testability,test,tests,23757,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:23813,Testability,test,test,23813,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:23857,Testability,test,tests,23857,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:23870,Testability,test,test,23870,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:23917,Testability,test,tests,23917,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:23938,Testability,test,test,23938,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12426:23996,Testability,TEST,TEST,23996,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12426
https://github.com/root-project/root/issues/12427:1131,Availability,Failure,Failure,1131," unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:2081,Availability,Failure,Failure,2081," of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3029,Availability,down,down,3029,".StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:9711,Availability,Error,ErrorHandler,9711,"te_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 1 (Thread 0xf73179c0 (LWP 117207) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf68e3e1a in __wait4_time64 () from /lib/libc.so.6; #2 0xf68e3c3a in waitpid () from /lib/libc.so.6; #3 0xf6862810 in do_system () from /lib/libc.so.6; #4 0xf70c9ebb in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x565f30c0) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #6 0xf6f77e71 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/base/src/TErrorDefaultHandler.cxx:177; #7 0xf70489cc in ErrorHandler (level=6000, location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"", ap=0xffde8958 ""\304\305\352\367R"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:12304,Availability,Error,Error,12304,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:12399,Availability,error,error,12399,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:1902,Deployability,release,release,1902,"strationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:2858,Deployability,release,release,2858,"al::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:4485,Deployability,release,release,4485,".....................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (9118 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (201 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:5216,Deployability,release,release,5216,"e real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (9118 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (201 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:5946,Deployability,release,release,5946," real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (201 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.LargeFile1 (34858 ms); [ RUN ] RNTuple.LargeFile2; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:6279,Deployability,release,release,6279,"ilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (201 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.LargeFile1 (34858 ms); [ RUN ] RNTuple.LargeFile2; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: fWritePage[otherIdx].IsEmpty() violated at line 82 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx'; aborting; Thread 6 (Thread 0xe26ffb4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:12388,Integrability,message,message,12388,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3265,Modifiability,extend,extended,3265,"/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3393,Modifiability,extend,extended,3393,"PageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:9245,Performance,optimiz,optimized,9245,"0xe300cb40 (LWP 117255) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 2 (Thread 0xe320db40 (LWP 117254) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 1 (Thread 0xf73179c0 (LWP 117207) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf68e3e1a in __wait4_time64 () from /lib/libc.so.6; #2 0xf68e3c3a in waitpid () from /lib/libc.so.6; #3 0xf6862810 in do_system () from /lib/libc.so.6; #4 0xf70c9ebb in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x565f30c0) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #6 0xf6f77e71 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/base/src/TErrorDefaultHandler.cxx:177; #7 0xf70489cc in ErrorHandler (level=6000, location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"", ap=0xffde8958 ""\304\305\352\367R"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:9386,Performance,optimiz,optimized,9386," 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 2 (Thread 0xe320db40 (LWP 117254) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 1 (Thread 0xf73179c0 (LWP 117207) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf68e3e1a in __wait4_time64 () from /lib/libc.so.6; #2 0xf68e3c3a in waitpid () from /lib/libc.so.6; #3 0xf6862810 in do_system () from /lib/libc.so.6; #4 0xf70c9ebb in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x565f30c0) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #6 0xf6f77e71 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/base/src/TErrorDefaultHandler.cxx:177; #7 0xf70489cc in ErrorHandler (level=6000, location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"", ap=0xffde8958 ""\304\305\352\367R"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:9521,Performance,optimiz,optimized,9521,"in clone3 () from /lib/libc.so.6; Thread 2 (Thread 0xe320db40 (LWP 117254) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 1 (Thread 0xf73179c0 (LWP 117207) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf68e3e1a in __wait4_time64 () from /lib/libc.so.6; #2 0xf68e3c3a in waitpid () from /lib/libc.so.6; #3 0xf6862810 in do_system () from /lib/libc.so.6; #4 0xf70c9ebb in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x565f30c0) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #6 0xf6f77e71 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/base/src/TErrorDefaultHandler.cxx:177; #7 0xf70489cc in ErrorHandler (level=6000, location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"", ap=0xffde8958 ""\304\305\352\367R"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:9549,Performance,optimiz,optimized,9549,"in clone3 () from /lib/libc.so.6; Thread 2 (Thread 0xe320db40 (LWP 117254) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 1 (Thread 0xf73179c0 (LWP 117207) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf68e3e1a in __wait4_time64 () from /lib/libc.so.6; #2 0xf68e3c3a in waitpid () from /lib/libc.so.6; #3 0xf6862810 in do_system () from /lib/libc.so.6; #4 0xf70c9ebb in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x565f30c0) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #6 0xf6f77e71 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/base/src/TErrorDefaultHandler.cxx:177; #7 0xf70489cc in ErrorHandler (level=6000, location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"", ap=0xffde8958 ""\304\305\352\367R"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:9575,Performance,optimiz,optimized,9575,"in clone3 () from /lib/libc.so.6; Thread 2 (Thread 0xe320db40 (LWP 117254) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 1 (Thread 0xf73179c0 (LWP 117207) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf68e3e1a in __wait4_time64 () from /lib/libc.so.6; #2 0xf68e3c3a in waitpid () from /lib/libc.so.6; #3 0xf6862810 in do_system () from /lib/libc.so.6; #4 0xf70c9ebb in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x565f30c0) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #6 0xf6f77e71 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/base/src/TErrorDefaultHandler.cxx:177; #7 0xf70489cc in ErrorHandler (level=6000, location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"", ap=0xffde8958 ""\304\305\352\367R"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:9596,Performance,optimiz,optimized,9596,"in clone3 () from /lib/libc.so.6; Thread 2 (Thread 0xe320db40 (LWP 117254) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 1 (Thread 0xf73179c0 (LWP 117207) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf68e3e1a in __wait4_time64 () from /lib/libc.so.6; #2 0xf68e3c3a in waitpid () from /lib/libc.so.6; #3 0xf6862810 in do_system () from /lib/libc.so.6; #4 0xf70c9ebb in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x565f30c0) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #6 0xf6f77e71 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/base/src/TErrorDefaultHandler.cxx:177; #7 0xf70489cc in ErrorHandler (level=6000, location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"", ap=0xffde8958 ""\304\305\352\367R"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:10677,Performance,optimiz,optimized,10677,"0/core/base/src/TErrorDefaultHandler.cxx:177; #7 0xf70489cc in ErrorHandler (level=6000, location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"", ap=0xffde8958 ""\304\305\352\367R"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] ()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:10877,Performance,optimiz,optimized,10877,"at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11032,Performance,optimiz,optimized,11032,"builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11054,Performance,optimiz,optimized,11054,"builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11269,Performance,optimiz,optimized,11269,"e/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:7167,Safety,abort,aborting,7167,"tal::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.LargeFile1 (34858 ms); [ RUN ] RNTuple.LargeFile2; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: fWritePage[otherIdx].IsEmpty() violated at line 82 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx'; aborting; Thread 6 (Thread 0xe26ffb40 (LWP 117258) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 5 (Thread 0xe2afeb40 (LWP 117257) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 4 (Thread 0xe2cffb40 (LWP 117256) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Threa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:12422,Safety,abort,aborted,12422,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:64,Testability,test,tests,64,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:126,Testability,test,tests,126,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:210,Testability,test,tests,210,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:384,Testability,Log,Logs,384,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:409,Testability,test,tests,409,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:438,Testability,test,test-ntuple-types,438,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:535,Testability,Test,Test,535,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:567,Testability,test,test-ntuple-types,567,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:739,Testability,Test,Test,739,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:921,Testability,test,tests,921,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:934,Testability,test,test,934,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:967,Testability,test,test,967,"- [x] Checked for duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:1009,Testability,test,tests,1009,"duplicates. ### Describe the bug. Two RNTuple tests fail on ix86 (Intel 32 bit). ### Expected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTuple; /builddir/buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:1104,Testability,test,test,1104,"xpected behavior. The tests should pass. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:2054,Testability,test,test,2054,"/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:2951,Testability,test,tests,2951,".StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3007,Testability,test,test,3007,".StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3051,Testability,test,tests,3051,".StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3064,Testability,test,test,3064,".StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3111,Testability,test,tests,3111," equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3132,Testability,test,tests,3132,"<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3220,Testability,TEST,TESTS,3220,"ich is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warnin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3253,Testability,test,test-ntuple-extended,3253,"/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3349,Testability,Test,Test,3349,"PageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3381,Testability,test,test-ntuple-extended,3381,"PageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3553,Testability,Test,Test,3553,"Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (9118 ms); [ RU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3716,Testability,test,tests,3716,"RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (9118 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3729,Testability,test,test,3729,"RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (9118 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3762,Testability,test,test,3762,"eserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (9118 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::stri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:3803,Testability,test,tests,3803,"xperimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (9118 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOpt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11360,Testability,Test,TestBody,11360,"e/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11440,Testability,test,test,11440,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11493,Testability,test,testing,11493,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11548,Testability,test,testing,11548,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11557,Testability,Test,Test,11557,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11569,Testability,test,testing,11569,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11578,Testability,Test,Test,11578,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11591,Testability,test,testing,11591,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11600,Testability,Test,Test,11600,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11697,Testability,test,testing,11697,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11706,Testability,Test,Test,11706,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11769,Testability,test,testing,11769,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11778,Testability,Test,TestInfo,11778,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11845,Testability,test,testing,11845,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11854,Testability,Test,TestSuite,11854,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:11922,Testability,test,testing,11922,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12427:12020,Testability,test,testing,12020,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12427
https://github.com/root-project/root/issues/12428:116,Availability,fault,fault,116,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:11348,Availability,Error,Error,11348,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:11443,Availability,error,error,11443,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:1738,Deployability,release,release,1738,"n.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.StdPair (237 ms); [ RUN ] RNTuple.StdTuple; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:2462,Deployability,release,release,2462,"ot store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.StdPair (237 ms); [ RUN ] RNTuple.StdTuple; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.StdTuple (202 ms); [ RUN ] RNTuple.Int64_t; [ OK ] RNTuple.Int64_t (0 ms); [ RUN ] RNTuple.Char; [ OK ] RNTuple.Char (0 ms); [ RUN ] RNTuple.Int8_t; [ OK ] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:3185,Deployability,release,release,3185,"not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.StdPair (237 ms); [ RUN ] RNTuple.StdTuple; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.StdTuple (202 ms); [ RUN ] RNTuple.Int64_t; [ OK ] RNTuple.Int64_t (0 ms); [ RUN ] RNTuple.Char; [ OK ] RNTuple.Char (0 ms); [ RUN ] RNTuple.Int8_t; [ OK ] RNTuple.Int8_t (0 ms); [ RUN ] RNTuple.Int16_t; [ OK ] RNTuple.Int16_t (0 ms); [ RUN ] RNTuple.UInt16_t; [ OK ] RNTuple.UInt16_t (0 ms); [ RUN ] RNTuple.UnsupportedStdTypes; [ OK ] RNTuple.UnsupportedStdTypes (3 ms); [ RUN ] RNTuple.Casting; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:4262,Deployability,release,release,4262,"lease format version: RC 1; [ OK ] RNTuple.StdTuple (202 ms); [ RUN ] RNTuple.Int64_t; [ OK ] RNTuple.Int64_t (0 ms); [ RUN ] RNTuple.Char; [ OK ] RNTuple.Char (0 ms); [ RUN ] RNTuple.Int8_t; [ OK ] RNTuple.Int8_t (0 ms); [ RUN ] RNTuple.Int16_t; [ OK ] RNTuple.Int16_t (0 ms); [ RUN ] RNTuple.UInt16_t; [ OK ] RNTuple.UInt16_t (0 ms); [ RUN ] RNTuple.UnsupportedStdTypes; [ OK ] RNTuple.UnsupportedStdTypes (3 ms); [ RUN ] RNTuple.Casting; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Casting (12 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimenta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:4595,Deployability,release,release,4595,"ms); [ RUN ] RNTuple.UnsupportedStdTypes; [ OK ] RNTuple.UnsupportedStdTypes (3 ms); [ RUN ] RNTuple.Casting; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Casting (12 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experiment",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:5315,Deployability,release,release,5315,"riptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Casting (12 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClass (119 ms); [ RUN ] RNTuple.TClassMultipleInheritance; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:5648,Deployability,release,release,5648,"scriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Casting (12 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClass (119 ms); [ RUN ] RNTuple.TClassMultipleInheritance; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassMultipleInheritance (87 ms); [ RUN ] RNTuple.TClassEBO; *** Break *** segmentation violation; ========================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:6387,Deployability,release,release,6387," Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClass (119 ms); [ RUN ] RNTuple.TClassMultipleInheritance; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassMultipleInheritance (87 ms); [ RUN ] RNTuple.TClassEBO; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3e5f0fbf63 in wait4 () from /lib64/libc.so.6; #1 0x00007f3e5f0701eb in do_system () from /lib64/libc.so.6; #2 0x00007f3e5f91a8d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:11432,Integrability,message,message,11432,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:9241,Modifiability,variab,variable,9241,"id (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:6894,Performance,optimiz,optimized,6894,"eSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassMultipleInheritance (87 ms); [ RUN ] RNTuple.TClassEBO; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3e5f0fbf63 in wait4 () from /lib64/libc.so.6; #1 0x00007f3e5f0701eb in do_system () from /lib64/libc.so.6; #2 0x00007f3e5f91a8d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:7445,Performance,optimiz,optimized,7445,"RUN ] RNTuple.TClassEBO; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3e5f0fbf63 in wait4 () from /lib64/libc.so.6; #1 0x00007f3e5f0701eb in do_system () from /lib64/libc.so.6; #2 0x00007f3e5f91a8d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:7959,Performance,optimiz,optimized,7959,"oot-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:9747,Performance,optimiz,optimized,9747,"bgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10259,Performance,optimiz,optimized,10259,"running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:77,Testability,test,test-ntuple-types,77,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:95,Testability,test,test,95,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:147,Testability,test,test,147,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:184,Testability,test,test,184,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:255,Testability,test,tests,255,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:436,Testability,Log,Log,436,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:456,Testability,test,test,456,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:476,Testability,Test,Test,476,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:508,Testability,test,test-ntuple-types,508,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:680,Testability,Test,Test,680,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:844,Testability,test,tests,844,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:857,Testability,test,test,857,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:890,Testability,test,test,890,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:932,Testability,test,tests,932,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:7783,Testability,Test,TestEBO,7783,"/libc.so.6; #1 0x00007f3e5f0701eb in do_system () from /lib64/libc.so.6; #2 0x00007f3e5f91a8d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:7943,Testability,Test,TestBody,7943,"oot-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8028,Testability,test,test,8028,"ace (this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8086,Testability,test,testing,8086,"07f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8141,Testability,test,testing,8141,"07f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8150,Testability,Test,Test,8150,"07f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8162,Testability,test,testing,8162,"07f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8171,Testability,Test,Test,8171,"07f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8184,Testability,test,testing,8184,"07f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8193,Testability,Test,Test,8193,"07f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8300,Testability,test,testing,8300," #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8309,Testability,Test,Test,8309," #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8382,Testability,test,testing,8382,"x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8391,Testability,Test,TestInfo,8391,"x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8468,Testability,test,testing,8468,"++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8477,Testability,Test,TestSuite,8477,"++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8555,Testability,test,testing,8555,"ld (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:8663,Testability,test,testing,8663,"ild/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10083,Testability,Test,TestEBO,10083,"t at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10243,Testability,Test,TestBody,10243,"running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10328,Testability,test,test,10328,"n/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10386,Testability,test,testing,10386,"ern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10441,Testability,test,testing,10441,"ern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10450,Testability,Test,Test,10450,"ern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10462,Testability,test,testing,10462,"ern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10471,Testability,Test,Test,10471,"ern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10484,Testability,test,testing,10484,"ern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10493,Testability,Test,Test,10493,"ern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10600,Testability,test,testing,10600,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10609,Testability,Test,Test,10609,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10682,Testability,test,testing,10682,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10691,Testability,Test,TestInfo,10691,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10768,Testability,test,testing,10768,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10777,Testability,Test,TestSuite,10777,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10855,Testability,test,testing,10855,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12428:10963,Testability,test,testing,10963,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12428
https://github.com/root-project/root/issues/12429:67,Availability,failure,failures,67,"- [x] Checked for duplicates. ### Describe the bug. PyROOT related failures on s390x. Endian issus. ### Expected behavior. PyROOT should work on big endian without glitches. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for s390x; 2. run unut tests. ### Setup. 1. ROOT version: 6.28.00; 2. Fedora Linux s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:3296,Availability,failure,failures,3296,"===; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.asser",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:3315,Availability,Error,Error,3315,"===; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.asser",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:3410,Availability,error,error,3410,":Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ---------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:4491,Availability,failure,failures,4491,"pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:4510,Availability,Error,Error,4510,"pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:4605,Availability,error,error,4605,"tl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:5645,Availability,Error,Error,5645,"s-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 and end must be greater than begin.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:5745,Availability,error,error,5745,"1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 and end must be greater than begin.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:6625,Availability,Error,Error,6625,"void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 and end must be greater than begin.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:6725,Availability,error,error,6725,"cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:6940,Availability,Error,Error,6940,".............***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:6989,Availability,Error,Error,6989,"ceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classificatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:7009,Availability,Error,Error,7009,"ne 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:7549,Availability,Error,Error,7549,"t_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:7649,Availability,error,error,7649,"ld/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:9340,Availability,error,error,9340,"al""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:9534,Availability,Error,Error,9534,"al""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:9634,Availability,error,error,9634,"ls/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *.........................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:9961,Availability,avail,available,9961,"oaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *............................................................................*; [ --- ]; *............................................................................*; *Br 28 :m_wwbb : m_wwbb/F *; *Entries : 10000 : Total Size= 40566 bytes File Size = 34410 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 1.16 *; *...............",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:10009,Availability,Down,Download,10009,"oaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *............................................................................*; [ --- ]; *............................................................................*; *Br 28 :m_wwbb : m_wwbb/F *; *Entries : 10000 : Total Size= 40566 bytes File Size = 34410 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 1.16 *; *...............",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:12090,Availability,error,error,12090,"o : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 10000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 10000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_Higgs_Classification.py"", line 141, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Backgr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:12284,Availability,Error,Error,12284,"o : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 10000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 10000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_Higgs_Classification.py"", line 141, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Backgr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:12384,Availability,error,error,12384,"/tmva/TMVA_Higgs_Classification.py"", line 141, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:14103,Availability,error,error,14103,"al-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:14297,Availability,Error,Error,14297,"al-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:14397,Availability,error,error,14397,"al-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:8127,Deployability,install,installed,8127,"ck (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:8218,Deployability,install,installed,8218,"ck (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:12701,Deployability,install,installed,12701,"s succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 over",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:3399,Integrability,message,message,3399,":Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ---------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:4594,Integrability,message,message,4594,"tl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:5734,Integrability,message,message,5734,"1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 and end must be greater than begin.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:6714,Integrability,message,message,6714,"cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:7101,Integrability,wrap,wrapping,7101,"ne 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:7228,Integrability,wrap,wrapping,7228,"arameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:7638,Integrability,message,message,7638,"ld/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:9623,Integrability,message,message,9623,"ls/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *.........................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:12373,Integrability,message,message,12373,"/tmva/TMVA_Higgs_Classification.py"", line 141, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:14386,Integrability,message,message,14386,"al-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:6125,Modifiability,Config,Config,6125,"l::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 and end must be greater than begin.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional func",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:7768,Modifiability,extend,extended,7768,"nceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:13230,Modifiability,variab,variables,13230,"ddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:9050,Performance,load,loader,9050,"al""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:9233,Performance,load,loader,9233,"al""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:10084,Performance,cache,cache,10084,"MethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *............................................................................*; [ --- ]; *............................................................................*; *Br 28 :m_wwbb : m_wwbb/F *; *Entries : 10000 : Total Size= 40566 bytes File Size = 34410 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 1.16 *; *............................................................................*; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:11800,Performance,load,loader,11800,"o : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 10000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 10000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_Higgs_Classification.py"", line 141, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Backgr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:11983,Performance,load,loader,11983,"o : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 10000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 10000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_Higgs_Classification.py"", line 141, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Backgr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:12784,Performance,multi-thread,multi-thread,12784,"s succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 over",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:13302,Performance,LOAD,LOADER,13302,"ddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:13813,Performance,load,loader,13813,"al-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:13996,Performance,load,loader,13996,"al-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:8486,Safety,abort,abort,8486,"ck (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:11271,Safety,abort,abort,11271,"*********************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *............................................................................*; [ --- ]; *............................................................................*; *Br 28 :m_wwbb : m_wwbb/F *; *Entries : 10000 : Total Size= 40566 bytes File Size = 34410 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 1.16 *; *............................................................................*; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 10000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 10000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_Higgs_Classification.py"", line 141, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:13092,Safety,abort,abort,13092,"theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:6811,Security,access,access,6811,"2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:7520,Security,access,access,7520,"t_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:271,Testability,test,tests,271,"- [x] Checked for duplicates. ### Describe the bug. PyROOT related failures on s390x. Endian issus. ### Expected behavior. PyROOT should work on big endian without glitches. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for s390x; 2. run unut tests. ### Setup. 1. ROOT version: 6.28.00; 2. Fedora Linux s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:419,Testability,test,tests,419,"- [x] Checked for duplicates. ### Describe the bug. PyROOT related failures on s390x. Endian issus. ### Expected behavior. PyROOT should work on big endian without glitches. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for s390x; 2. run unut tests. ### Setup. 1. ROOT version: 6.28.00; 2. Fedora Linux s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:560,Testability,Test,Test,560,"- [x] Checked for duplicates. ### Describe the bug. PyROOT related failures on s390x. Endian issus. ### Expected behavior. PyROOT should work on big endian without glitches. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for s390x; 2. run unut tests. ### Setup. 1. ROOT version: 6.28.00; 2. Fedora Linux s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:725,Testability,Test,Test,725,"- [x] Checked for duplicates. ### Describe the bug. PyROOT related failures on s390x. Endian issus. ### Expected behavior. PyROOT should work on big endian without glitches. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for s390x; 2. run unut tests. ### Setup. 1. ROOT version: 6.28.00; 2. Fedora Linux s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:840,Testability,Test,Test,840,"- [x] Checked for duplicates. ### Describe the bug. PyROOT related failures on s390x. Endian issus. ### Expected behavior. PyROOT should work on big endian without glitches. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for s390x; 2. run unut tests. ### Setup. 1. ROOT version: 6.28.00; 2. Fedora Linux s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:935,Testability,Test,Test,935,"- [x] Checked for duplicates. ### Describe the bug. PyROOT related failures on s390x. Endian issus. ### Expected behavior. PyROOT should work on big endian without glitches. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for s390x; 2. run unut tests. ### Setup. 1. ROOT version: 6.28.00; 2. Fedora Linux s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:1026,Testability,Test,Test,1026,"bug. PyROOT related failures on s390x. Endian issus. ### Expected behavior. PyROOT should work on big endian without glitches. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for s390x; 2. run unut tests. ### Setup. 1. ROOT version: 6.28.00; 2. Fedora Linux s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:1147,Testability,Test,Test,1147," without glitches. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for s390x; 2. run unut tests. ### Setup. 1. ROOT version: 6.28.00; 2. Fedora Linux s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:1239,Testability,Test,Test,1239,"0 for s390x; 2. run unut tests. ### Setup. 1. ROOT version: 6.28.00; 2. Fedora Linux s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:1335,Testability,Test,Test,1335," s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:1439,Testability,Test,Test,1439,"ittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:1534,Testability,Test,Test,1534,"0001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:1619,Testability,Test,Test,1619,"........................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:1720,Testability,Test,Test,1720,"doption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:1905,Testability,Test,Test,1905,"t_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:2121,Testability,test,test,2121,"tensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:2175,Testability,assert,assertEqual,2175," FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:2219,Testability,Assert,AssertionError,2219,"k; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:2381,Testability,Test,Test,2381," ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:2598,Testability,test,test,2598,".NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:2648,Testability,assert,assertEqual,2648,"... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:2685,Testability,Assert,AssertionError,2685," RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:2851,Testability,Test,Test,2851,": test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:3072,Testability,test,test,3072,"dir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:3124,Testability,assert,assertEqual,3124,"or.py"", line 42, in test_memoryLayout; self.assertEqual(root_obj.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; --------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:3161,Testability,Assert,AssertionError,3161,"t(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:3271,Testability,test,tests,3271,"t(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:3483,Testability,Test,Test,3483,"----------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:3645,Testability,Test,Test,3645,"ryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. Typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:3792,Testability,Test,Test,3792,"nsor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py .............................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:4006,Testability,Test,Test,4006,"n test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:4255,Testability,test,test,4255,"----------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:4313,Testability,assert,assertEqual,4313," at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:4352,Testability,Assert,AssertionError,4352,":; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:4466,Testability,test,tests,4466,":; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:4737,Testability,Test,Test,4737,"ctor.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 and end must be greater than begin.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:5887,Testability,Test,Test,5887,"LD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 and end must be greater than begin.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py .....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:6849,Testability,Test,Test,6849,"2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:7943,Testability,Test,Test,7943,"ion found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:9774,Testability,Test,Test,9774,"ion/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *............................................................................*; [ --- ]; *............................................................................*; *Br 28 :m_wwbb : m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:12522,Testability,Test,Test,12522,"zation/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12429:12827,Usability,Learn,Learning,12827,"theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12429
https://github.com/root-project/root/issues/12430:1298,Availability,Failure,Failure,1298,"9e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestPr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1518,Availability,recover,recovery,1518," Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2653,Availability,down,down,2653,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2864,Availability,Error,Error,2864,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2959,Availability,error,error,2959,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2948,Integrability,message,message,2948,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1518,Safety,recover,recovery,1518," Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1343,Security,hash,hashRooProduct,1343,"9e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestPr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:80,Testability,test,test-testRooProdPdf,80,"- [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:100,Testability,test,test,100,"- [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:165,Testability,log,log,165,"- [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:181,Testability,assert,assert,181,"- [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:401,Testability,test,test,401,"- [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:471,Testability,test,tests,471,"- [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:661,Testability,test,test,661,"- [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:682,Testability,Test,Test,682,"- [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:717,Testability,test,test-testRooProdPdf,717,"- [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:885,Testability,Test,Test,885,"- [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1066,Testability,test,tests,1066,"-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1079,Testability,test,test,1079,"-roofit-roofitcore-test-testRooProdPdf test fails on s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1113,Testability,test,test,1113,"s390x.; This is a big-endian architecture. See the log below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1154,Testability,test,tests,1154,"og below.; The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ O",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1196,Testability,Test,TestGetPartIntList,1196,"lues are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms);",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1269,Testability,test,test,1269,"issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1274,Testability,test,testRooProdPdf,1274,"issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198; d98679e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1421,Testability,Test,TestGetPartIntList,1421,"ot for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1469,Testability,Test,TestDepsAreCond,1469," Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1695,Testability,Test,TestDepsAreCond,1695,"t-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1808,Testability,test,tests,1808,".13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1861,Testability,test,tests,1861,".13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1883,Testability,Test,TestProdPdf,1883,".13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1915,Testability,Test,TestProdPdf,1915,".13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1965,Testability,Test,TestProdPdf,1965,"ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2024,Testability,Test,TestProdPdf,2024,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2074,Testability,Test,TestProdPdf,2074,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2132,Testability,Test,TestProdPdf,2132,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2182,Testability,Test,TestProdPdf,2182,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2241,Testability,Test,TestProdPdf,2241,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2291,Testability,Test,TestProdPdf,2291,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2349,Testability,Test,TestProdPdf,2349,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2399,Testability,Test,TestProdPdf,2399,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2458,Testability,Test,TestProdPdf,2458,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2508,Testability,Test,TestProdPdf,2508,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2562,Testability,test,tests,2562,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2584,Testability,Test,TestProdPdf,2584,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2631,Testability,test,test,2631,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2674,Testability,test,tests,2674,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2687,Testability,test,test,2687,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2733,Testability,test,tests,2733,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2754,Testability,test,test,2754,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2797,Testability,Test,TestGetPartIntList,2797,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2826,Testability,TEST,TEST,2826,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2852,Testability,TEST,TEST,2852,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12431:119,Availability,failure,failure,119,"- [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root for 6.28.00 on s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x; 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:; ~~~; 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\; ............***Failed 0.97 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C...; /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:903,Availability,Error,Error,903,"- [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root for 6.28.00 on s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x; 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:; ~~~; 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\; ............***Failed 0.97 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C...; /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:1003,Availability,error,error,1003,"- [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root for 6.28.00 on s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x; 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:; ~~~; 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\; ............***Failed 0.97 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C...; /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:992,Integrability,message,message,992,"- [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root for 6.28.00 on s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x; 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:; ~~~; 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\; ............***Failed 0.97 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C...; /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:1026,Safety,abort,aborted,1026,"- [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root for 6.28.00 on s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x; 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:; ~~~; 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\; ............***Failed 0.97 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C...; /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:228,Testability,test,tests,228,"- [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root for 6.28.00 on s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x; 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:; ~~~; 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\; ............***Failed 0.97 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C...; /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:419,Testability,test,test,419,"- [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root for 6.28.00 on s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x; 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:; ~~~; 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\; ............***Failed 0.97 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C...; /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:441,Testability,Test,Test,441,"- [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root for 6.28.00 on s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x; 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:; ~~~; 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\; ............***Failed 0.97 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C...; /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:857,Testability,Assert,Assertion,857,"- [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root for 6.28.00 on s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x; 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:; ~~~; 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\; ............***Failed 0.97 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C...; /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/pull/12437:32,Testability,log,logical,32,"1. Split geometry viewer on two logical parts: hierarchy and drawing; 2. Always show full geometry hierarchy; 3. Add color and material column to hierarchy view; 4. Allow to set top visible volume using context menu; 5. Let search volume by name, material, color; use `TRegexp` for search; 6. Fix cleanup of embed web window connection when main connection closed; 7. Correctly count faces for `TGeoShape` instance, use diagonal as importance measure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12437
https://github.com/root-project/root/issues/12438:1057,Availability,ERROR,ERROR,1057,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1067,Availability,Error,Error,1067,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1162,Availability,toler,tolerance,1162,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1194,Availability,ERROR,ERROR,1194,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1210,Availability,Error,Error,1210,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1317,Integrability,message,message,1317,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:528,Safety,timeout,timeout,528,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:124,Testability,test,testReport,124,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:397,Testability,TEST,TEST,397,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:737,Testability,test,testSimpleFile,737,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:802,Testability,TEST,TEST,802,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:923,Testability,test,testSimpleFile,923,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1027,Testability,TEST,TEST,1027,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1052,Testability,TEST,TEST,1052,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1077,Testability,test,testSimpleFile,1077,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1189,Testability,TEST,TEST,1189,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/pull/12439:417,Energy Efficiency,allocate,allocated,417,"Rather than reading from the file the value of kIsOnHeap, preserve the value that was; calculated at object creation time (i.e. in the current execution). For example, for; an embedded object (inside an object created on the heap or stack), the bit always; need to be off (i.e. it can never be explicitly deleted)# This Pull request:. When reading back the ""heap status"" is determine by how the; read-into object was allocated, so there is no need to record; that information. When reading back, the kNotDeleted is always on, (and should; always be on when writing :) ), so there is no need to record it. Recording '0' for both allow for (slightly) better compression. Fix https://github.com/root-project/root/issues/12438",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12439
https://github.com/root-project/root/pull/12440:24,Modifiability,variab,variable,24,Clang 15 warns that the variable v may be used uninitialized because it does not understand the pointer hackery to read individual bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12440
https://github.com/root-project/root/issues/12441:245,Deployability,update,updated,245,### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT.; ; ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/pull/12442:145,Modifiability,variab,variable,145,"The example for range-based iteration in `TList.cxx` uses a pattern that; can yield compiler warnings for some GCC versions:. ```; warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]; ```. To avoid spreading this pattern, this commit suggests to change the; example to explicitly use the `TObject *` type, which also makes the; example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:272,Safety,avoid,avoid,272,"The example for range-based iteration in `TList.cxx` uses a pattern that; can yield compiler warnings for some GCC versions:. ```; warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]; ```. To avoid spreading this pattern, this commit suggests to change the; example to explicitly use the `TObject *` type, which also makes the; example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:508,Safety,avoid,avoid,508,"The example for range-based iteration in `TList.cxx` uses a pattern that; can yield compiler warnings for some GCC versions:. ```; warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]; ```. To avoid spreading this pattern, this commit suggests to change the; example to explicitly use the `TObject *` type, which also makes the; example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:416,Usability,clear,clearer,416,"The example for range-based iteration in `TList.cxx` uses a pattern that; can yield compiler warnings for some GCC versions:. ```; warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]; ```. To avoid spreading this pattern, this commit suggests to change the; example to explicitly use the `TObject *` type, which also makes the; example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12447:844,Integrability,depend,dependend,844,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:134,Performance,perform,performance,134,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:424,Performance,cache,cache,424,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:871,Performance,cache,cache,871,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:386,Security,hash,hashing,386,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:524,Security,hash,hash,524,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:859,Security,hash,hashing,859,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:177,Testability,test,test,177,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:283,Testability,test,test,283,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:555,Testability,test,test,555,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:617,Testability,test,test,617,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:937,Testability,test,test,937,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:1127,Testability,test,test,1127,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12448:399,Deployability,patch,patch,399,"When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:; ```; {; gStyle->SetOptStat(0);; gStyle->SetOptTitle(0);. auto C = new TCanvas();; C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);; auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);; h15->Fill(12,1.);; h15->Fill(14,.5);; h15->SetLineWidth(3);. h25->Fill(1,1);; h25->Fill(6,2);; h25->Fill(11,3);; h25->Fill(16,2);; h25->Fill(23,1);; h25->SetLineColor(2);; h25->SetLineWidth(3);; h25->SetMinimum(.05);. C->cd(1);; h25->Draw(""hist"");; h15->Draw(""hist same"");; gPad->SetLogy(1);; gPad->SetGridx(1);; gPad->SetGridy(1);. C->cd(2);; h25->Draw(""hist"");; h15->Draw(""hist same"");; gPad->SetGridx(1);; gPad->SetGridy(1);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:104,Testability,Log,Log,104,"When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:; ```; {; gStyle->SetOptStat(0);; gStyle->SetOptTitle(0);. auto C = new TCanvas();; C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);; auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);; h15->Fill(12,1.);; h15->Fill(14,.5);; h15->SetLineWidth(3);. h25->Fill(1,1);; h25->Fill(6,2);; h25->Fill(11,3);; h25->Fill(16,2);; h25->Fill(23,1);; h25->SetLineColor(2);; h25->SetLineWidth(3);; h25->SetMinimum(.05);. C->cd(1);; h25->Draw(""hist"");; h15->Draw(""hist same"");; gPad->SetLogy(1);; gPad->SetGridx(1);; gPad->SetGridy(1);. C->cd(2);; h25->Draw(""hist"");; h15->Draw(""hist same"");; gPad->SetGridx(1);; gPad->SetGridy(1);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12449:46,Availability,error,errors,46,"Two substantive changes:; 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:345,Availability,error,errors,345,"Two substantive changes:; 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:862,Availability,rollback,rollback,862,"Two substantive changes:; 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2001,Availability,error,error,2001,"scribed by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2077,Availability,rollback,rollback,2077,"scribed by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2470,Availability,error,error,2470,"r.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3153,Availability,error,error,3153,"l attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocato",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3484,Availability,error,error,3484,"ng'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3872,Availability,error,error,3872," >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4188,Availability,error,error,4188,"ed object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4519,Availability,error,error,4519,"ed object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:376,Deployability,rolling,rolling,376,"Two substantive changes:; 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:862,Deployability,rollback,rollback,862,"Two substantive changes:; 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2077,Deployability,rollback,rollback,2077,"scribed by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:72,Integrability,wrap,wrapper,72,"Two substantive changes:; 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2007,Integrability,message,message,2007,"scribed by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2494,Modifiability,variab,variable,2494,"r.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2999,Modifiability,variab,variable,2999,"ul because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specializatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1186,Testability,test,test,1186,"pstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Decla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1198,Testability,test,test,1198,"ps://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1475,Testability,test,test,1475,", @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1551,Testability,test,test,1551,"echanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2457,Testability,test,test,2457," res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specializ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2644,Testability,test,test,2644," ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of functi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2980,Testability,test,test,2980,"cept Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1; helper call failed; Template method resolution failed:; Failed t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12451:29,Testability,test,test,29,Enable a previously disabled test to fix it if it still fails.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12451
https://github.com/root-project/root/issues/12452:2346,Availability,down,download,2346,"s for certain parameter range around `c1=-0.5` and `c2=-0.55`. ; These negative values are then handled differently in different versions of ROOT; ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png); ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. ; Is it possible to avoid the negative values in RooChebychev in the first place?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The code which produces the plots above:; ```; import ROOT; canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500); #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__; mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53); frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)); c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1); c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1); bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)); bkg.plotOn(frame); canvas.cd(); frame.Draw(); canvas.Draw(); canvas.Update(); canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'); input(); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2139,Deployability,Update,Update,2139,"s for certain parameter range around `c1=-0.5` and `c2=-0.55`. ; These negative values are then handled differently in different versions of ROOT; ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png); ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. ; Is it possible to avoid the negative values in RooChebychev in the first place?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The code which produces the plots above:; ```; import ROOT; canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500); #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__; mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53); frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)); c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1); c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1); bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)); bkg.plotOn(frame); canvas.cd(); frame.Draw(); canvas.Draw(); canvas.Update(); canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'); input(); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2328,Deployability,install,install,2328,"s for certain parameter range around `c1=-0.5` and `c2=-0.55`. ; These negative values are then handled differently in different versions of ROOT; ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png); ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. ; Is it possible to avoid the negative values in RooChebychev in the first place?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The code which produces the plots above:; ```; import ROOT; canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500); #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__; mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53); frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)); c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1); c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1); bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)); bkg.plotOn(frame); canvas.cd(); frame.Draw(); canvas.Draw(); canvas.Update(); canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'); input(); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:1164,Safety,avoid,avoid,1164,"ct %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. ; These negative values are then handled differently in different versions of ROOT; ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png); ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. ; Is it possible to avoid the negative values in RooChebychev in the first place?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The code which produces the plots above:; ```; import ROOT; canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500); #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__; mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53); frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)); c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1); c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1); bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)); bkg.plotOn(frame); canvas.cd(); frame.Draw(); canvas.Draw(); canvas.Update(); canvas.SaveAs(f'pdf/chebtest_{ROOT._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:392,Usability,clear,clear,392,"- [V ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. ; These negative values are then handled differently in different versions of ROOT; ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png); ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. ; Is it possible to avoid the negative values in RooChebychev in the first place?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The code which produces the plots above:; ```; import ROOT; canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500); #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__; mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53); frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)); c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1); c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1); bkg = ROOT.RooChe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:940,Usability,clear,clear,940,"- [V ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. ; These negative values are then handled differently in different versions of ROOT; ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png); ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. ; Is it possible to avoid the negative values in RooChebychev in the first place?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The code which produces the plots above:; ```; import ROOT; canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500); #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__; mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53); frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)); c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1); c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1); bkg = ROOT.RooChe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12453:786,Availability,ERROR,ERROR,786,"This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:; ```C++; void repro(); {; using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};; RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};; RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};; auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);; std::cout << data1.weightError() << std::endl;; data2.get(0);; std::cout << data2.weightError() << std::endl;; }; ```. The output will be:. ```; [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor.; 0.3; 0; ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:824,Availability,error,error,824,"This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:; ```C++; void repro(); {; using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};; RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};; RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};; auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);; std::cout << data1.weightError() << std::endl;; data2.get(0);; std::cout << data2.weightError() << std::endl;; }; ```. The output will be:. ```; [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor.; 0.3; 0; ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:919,Availability,error,errors,919,"This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:; ```C++; void repro(); {; using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};; RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};; RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};; auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);; std::cout << data1.weightError() << std::endl;; data2.get(0);; std::cout << data2.weightError() << std::endl;; }; ```. The output will be:. ```; [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor.; 0.3; 0; ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1043,Availability,error,error,1043,"This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:; ```C++; void repro(); {; using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};; RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};; RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};; auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);; std::cout << data1.weightError() << std::endl;; data2.get(0);; std::cout << data2.weightError() << std::endl;; }; ```. The output will be:. ```; [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor.; 0.3; 0; ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:999,Deployability,release,releases,999,"This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:; ```C++; void repro(); {; using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};; RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};; RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};; auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);; std::cout << data1.weightError() << std::endl;; data2.get(0);; std::cout << data2.weightError() << std::endl;; }; ```. The output will be:. ```; [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor.; 0.3; 0; ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1049,Integrability,message,message,1049,"This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:; ```C++; void repro(); {; using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};; RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};; RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};; auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);; std::cout << data1.weightError() << std::endl;; data2.get(0);; std::cout << data2.weightError() << std::endl;; }; ```. The output will be:. ```; [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor.; 0.3; 0; ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:886,Modifiability,variab,variable,886,"This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:; ```C++; void repro(); {; using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};; RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};; RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};; auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);; std::cout << data1.weightError() << std::endl;; data2.get(0);; std::cout << data2.weightError() << std::endl;; }; ```. The output will be:. ```; [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor.; 0.3; 0; ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/pull/12454:81,Testability,test,test,81,This reverts commit 8deb57c04a5ceea96533d095092fcd4f71d1df94 and fixes the Cling test `CodeUnloading/Macros.C` that was previously failing with complaints that the unloaded and then re-included `Macros.h` header had no lines 18 and 19.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12454
https://github.com/root-project/root/issues/12455:330,Availability,echo,echo,330,"Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:; * `CodeUnloading/AtExit.C` does not find the symbol `gChild`.; * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:10,Deployability,upgrade,upgrade,10,"Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:; * `CodeUnloading/AtExit.C` does not find the symbol `gChild`.; * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:507,Security,access,access,507,"Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:; * `CodeUnloading/AtExit.C` does not find the symbol `gChild`.; * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:43,Testability,test,tests,43,"Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:; * `CodeUnloading/AtExit.C` does not find the symbol `gChild`.; * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/pull/12456:188,Availability,Error,ErrorRecovery,188,"Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:10,Deployability,upgrade,upgrade,10,"Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:182,Testability,test,test,182,"Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/issues/12457:10,Deployability,upgrade,upgrade,10,"Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with; ```; cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed.; #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13; #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18; #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50); #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf); #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5); #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79); #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426); #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4); #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14; #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37; #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28; #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3; #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:877,Safety,abort,abort,877,"Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with; ```; cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed.; #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13; #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18; #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50); #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf); #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5); #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79); #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426); #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4); #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14; #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37; #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28; #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3; #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:40,Testability,test,test,40,"Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with; ```; cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed.; #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13; #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18; #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50); #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf); #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5); #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79); #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426); #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4); #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14; #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37; #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28; #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3; #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:258,Testability,Assert,Assertion,258,"Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with; ```; cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed.; #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13; #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18; #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50); #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf); #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5); #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79); #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426); #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4); #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14; #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37; #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28; #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3; #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7759,Testability,test,test,7759,"f, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9; #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9; #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20; #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48; #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9; #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0; #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12; #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85); #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e); PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.; Stack dump:; 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading; 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'; ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7824,Testability,test,test,7824,"f, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9; #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9; #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20; #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48; #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9; #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0; #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12; #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85); #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e); PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.; Stack dump:; 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading; 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'; ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7904,Testability,test,test,7904,"f, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9; #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9; #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20; #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48; #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9; #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0; #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12; #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85); #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e); PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.; Stack dump:; 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading; 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'; ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7994,Testability,assert,assertion,7994,"f, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9; #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9; #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20; #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48; #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9; #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0; #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12; #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85); #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e); PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.; Stack dump:; 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading; 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'; ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12458:393,Availability,error,error,393,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:496,Availability,error,error,496,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1061,Availability,error,error,1061,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1139,Availability,error,error,1139,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1213,Availability,error,error,1213,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1331,Availability,error,error,1331,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1420,Availability,error,error,1420,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1538,Availability,error,error,1538,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:768,Deployability,release,releases,768,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:850,Performance,load,load,850,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:882,Performance,load,load,882,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:910,Performance,load,load,910,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:947,Performance,load,load,947,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:977,Performance,load,load,977,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1016,Performance,load,load,1016,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1644,Performance,load,load,1644,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1753,Performance,load,load,1753,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/pull/12459:72,Availability,error,errors,72,"This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets.; 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them); 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:148,Availability,error,errors,148,"This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets.; 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them); 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:346,Modifiability,variab,variables,346,"This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets.; 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them); 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:126,Safety,Avoid,Avoids,126,"This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets.; 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them); 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:310,Safety,Avoid,Avoids,310,"This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets.; 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them); 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:224,Testability,test,test,224,"This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets.; 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them); 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:247,Testability,test,test-,247,"This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets.; 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them); 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/issues/12462:123,Availability,error,error,123,"I was trying to quickly check something in the ROOT prompt and just realized that I cannot use errno to check what kind of error some library function call gives, because ROOT somehow always brings errno's value to be 2 after the prompt:. ```; $ root.exe -l; root [0] #include <errno.h>; root [1] errno; (int) 2; root [2] errno = 0; errno; (int) 0; root [3] errno = 0; (int) 0; root [4] errno; (int) 2; root [5] .q; $ errno 2; ENOENT 2 No such file or directory; ```. Not sure this can even be fixed, but if `errno` is `ENOENT` after each prompt, it makes it useless to try to use it interactively. With strace I see the following:; ```; root [1] errno; newfstatat(AT_FDCWD, ""/home/amadio/input_line_9"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_9"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""/home/amadio/input_line_10"", 0x7ffe2d76cea0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_10"", 0x7ffe2d76d140, 0) = -1 ENOENT (No such file or directory); (int) 2; root [2] errno = 0; newfstatat(AT_FDCWD, ""/home/amadio/input_line_11"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_11"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory); (int) 0; root [3] errno; newfstatat(AT_FDCWD, ""/home/amadio/input_line_12"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_12"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory); (int) 2; root [4] ; ```; So ROOT is trying to open a file named `intput_line_N` in the home directory and the current directory. Why?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12462
https://github.com/root-project/root/pull/12463:887,Modifiability,config,configure,887,"1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets.; 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed; 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects.; 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes; 5. Let store geometry viewer settings in root macro, which may include geometry itself.; 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server; 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time; 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:100,Usability,clear,cleared,100,"1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets.; 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed; 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects.; 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes; 5. Let store geometry viewer settings in root macro, which may include geometry itself.; 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server; 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time; 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:206,Usability,Clear,ClearOnClose,206,"1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets.; 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed; 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects.; 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes; 5. Let store geometry viewer settings in root macro, which may include geometry itself.; 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server; 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time; 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:283,Usability,Clear,Clear,283,"1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets.; 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed; 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects.; 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes; 5. Let store geometry viewer settings in root macro, which may include geometry itself.; 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server; 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time; 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/issues/12465:69,Availability,failure,failure,69,"E.g. if we have Fedora36 with no-imt and Fedora37 with imt, we see a failure in 37, we want to confirm that Fedora 36 work (or not) with imt. Ideally `/build on Fedora36 with -Dimt-Off` (or whatever bot syntax)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12465
https://github.com/root-project/root/pull/12466:308,Availability,error,error,308,"After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type.; This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below.; ```; TGenCollectionProxy FATAL Size> Logic error - no proxy object set.; ```. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:365,Availability,error,error,365,"After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type.; This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below.; ```; TGenCollectionProxy FATAL Size> Logic error - no proxy object set.; ```. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:359,Testability,Log,Logic,359,"After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type.; This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below.; ```; TGenCollectionProxy FATAL Size> Logic error - no proxy object set.; ```. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:421,Testability,test,tested,421,"After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type.; This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below.; ```; TGenCollectionProxy FATAL Size> Logic error - no proxy object set.; ```. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12469:38,Availability,error,error,38,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:113,Availability,failure,failure,113,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:375,Availability,failure,failure,375,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:459,Availability,Failure,Failure,459,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:612,Availability,Failure,Failure,612,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:921,Availability,Error,Error,921,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1332,Availability,Error,Error,1332,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1484,Availability,Failure,Failure,1484,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1686,Availability,Error,Error,1686,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1795,Availability,Failure,Failure,1795,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1949,Availability,Error,Error,1949,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:44,Integrability,message,messages,44,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:146,Integrability,message,messages,146,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:224,Integrability,message,messages,224,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:340,Integrability,message,message,340,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:533,Integrability,message,messages,533,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:675,Integrability,message,message,675,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:735,Integrability,message,messages,735,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1266,Integrability,message,messages,1266,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1556,Integrability,message,message,1556,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1677,Integrability,message,message,1677,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1869,Integrability,message,message,1869,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1940,Integrability,message,message,1940,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:6,Testability,Test,TestSupport,6,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:65,Testability,test,tests,65,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:370,Testability,test,test,370,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:423,Testability,test,testsupport,423,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:439,Testability,Test,TestSupport,439,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:482,Testability,Test,TestSupport,482,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:576,Testability,test,testsupport,576,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:592,Testability,Test,TestSupport,592,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:635,Testability,Test,TestSupport,635,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1448,Testability,test,testsupport,1448,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1464,Testability,Test,TestSupport,1464,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1507,Testability,Test,TestSupport,1507,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1758,Testability,test,testsupport,1758,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1774,Testability,Test,TestSupport,1774,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1818,Testability,Test,TestSupport,1818,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12472:182,Deployability,update,updated,182,This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist; - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12472
https://github.com/root-project/root/pull/12472:152,Testability,test,tested,152,This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist; - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12472
https://github.com/root-project/root/pull/12473:29,Modifiability,variab,variable,29,This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```; In file included from /path/to/src/RPageStorageDaos.cxx:29:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]; 120 | auto seed = static_cast<uint32_t>(h >> 32);; ```. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:116,Modifiability,variab,variable,116,This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```; In file included from /path/to/src/RPageStorageDaos.cxx:29:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]; 120 | auto seed = static_cast<uint32_t>(h >> 32);; ```. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:76,Safety,avoid,avoid,76,This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```; In file included from /path/to/src/RPageStorageDaos.cxx:29:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]; 120 | auto seed = static_cast<uint32_t>(h >> 32);; ```. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:144,Security,hash,hashing,144,This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```; In file included from /path/to/src/RPageStorageDaos.cxx:29:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]; 120 | auto seed = static_cast<uint32_t>(h >> 32);; ```. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:220,Security,hash,hash,220,This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```; In file included from /path/to/src/RPageStorageDaos.cxx:29:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]; 120 | auto seed = static_cast<uint32_t>(h >> 32);; ```. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:641,Security,Hash,Hash,641,This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```; In file included from /path/to/src/RPageStorageDaos.cxx:29:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]; 120 | auto seed = static_cast<uint32_t>(h >> 32);; ```. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:877,Testability,test,tested,877,This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```; In file included from /path/to/src/RPageStorageDaos.cxx:29:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]; 120 | auto seed = static_cast<uint32_t>(h >> 32);; ```. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12475:234,Availability,down,down,234,"This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12475
https://github.com/root-project/root/pull/12475:319,Deployability,update,updated,319,"This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12475
https://github.com/root-project/root/pull/12475:289,Testability,test,tested,289,"This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12475
https://github.com/root-project/root/pull/12476:144,Availability,echo,echo,144,"# This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:; ```; $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -; ```; Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:; ```; $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -; <command-line>: warning: extra tokens at end of #undef directive; ```; Now it will only undefine VAR, but not define it. I.e. instead of; ```; #undef VAR; #define VAR 1; ```; you get; ```; #undef VAR,-DVAR=1; ```; which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:307,Availability,echo,echo,307,"# This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:; ```; $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -; ```; Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:; ```; $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -; <command-line>: warning: extra tokens at end of #undef directive; ```; Now it will only undefine VAR, but not define it. I.e. instead of; ```; #undef VAR; #define VAR 1; ```; you get; ```; #undef VAR,-DVAR=1; ```; which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:684,Deployability,update,updated,684,"# This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:; ```; $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -; ```; Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:; ```; $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -; <command-line>: warning: extra tokens at end of #undef directive; ```; Now it will only undefine VAR, but not define it. I.e. instead of; ```; #undef VAR; #define VAR 1; ```; you get; ```; #undef VAR,-DVAR=1; ```; which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:109,Modifiability,variab,variable,109,"# This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:; ```; $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -; ```; Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:; ```; $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -; <command-line>: warning: extra tokens at end of #undef directive; ```; Now it will only undefine VAR, but not define it. I.e. instead of; ```; #undef VAR; #define VAR 1; ```; you get; ```; #undef VAR,-DVAR=1; ```; which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:654,Testability,test,tested,654,"# This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:; ```; $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -; ```; Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:; ```; $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -; <command-line>: warning: extra tokens at end of #undef directive; ```; Now it will only undefine VAR, but not define it. I.e. instead of; ```; #undef VAR; #define VAR 1; ```; you get; ```; #undef VAR,-DVAR=1; ```; which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12478:132,Deployability,update,updated,132,# This Pull request:. ## Changes or fixes:; Nightly builds crashing immidiately. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12478
https://github.com/root-project/root/pull/12478:102,Testability,test,tested,102,# This Pull request:. ## Changes or fixes:; Nightly builds crashing immidiately. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12478
https://github.com/root-project/root/pull/12479:170,Availability,error,error,170,"It was not good to have this signature in RooAbsData, because the; implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but; the RooDataHist version instead took the sum of weights squared, which; is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in; different weight uncertainties depending on which data implementation; you use. This should not happen. It probably didn't happen to many; people, but I was affected by this when implementing; `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,; weightError)` from the virtual RooAbsData interface. The `add(row,; weight)` signature can stay, because this one is implemented; consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:312,Availability,error,error,312,"It was not good to have this signature in RooAbsData, because the; implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but; the RooDataHist version instead took the sum of weights squared, which; is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in; different weight uncertainties depending on which data implementation; you use. This should not happen. It probably didn't happen to many; people, but I was affected by this when implementing; `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,; weightError)` from the virtual RooAbsData interface. The `add(row,; weight)` signature can stay, because this one is implemented; consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:423,Integrability,depend,depending,423,"It was not good to have this signature in RooAbsData, because the; implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but; the RooDataHist version instead took the sum of weights squared, which; is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in; different weight uncertainties depending on which data implementation; you use. This should not happen. It probably didn't happen to many; people, but I was affected by this when implementing; `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,; weightError)` from the virtual RooAbsData interface. The `add(row,; weight)` signature can stay, because this one is implemented; consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:818,Integrability,interface,interface,818,"It was not good to have this signature in RooAbsData, because the; implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but; the RooDataHist version instead took the sum of weights squared, which; is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in; different weight uncertainties depending on which data implementation; you use. This should not happen. It probably didn't happen to many; people, but I was affected by this when implementing; `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,; weightError)` from the virtual RooAbsData interface. The `add(row,; weight)` signature can stay, because this one is implemented; consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12480:193,Integrability,depend,depends,193,"Both `Foo<double>` and `Foo<Double32_t>` have the same typeid.; Before this commit, TClass::GetClass(typeid(Foo<double>)) would return; whatever was registered *last*. This is not ""stable""; it depends on which; branch is accessed first, or which TClass::GetClass call happens first, or; which library is loaded first. Make this more reporducible by consistently preferring types will less; Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it; really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:304,Performance,load,loaded,304,"Both `Foo<double>` and `Foo<Double32_t>` have the same typeid.; Before this commit, TClass::GetClass(typeid(Foo<double>)) would return; whatever was registered *last*. This is not ""stable""; it depends on which; branch is accessed first, or which TClass::GetClass call happens first, or; which library is loaded first. Make this more reporducible by consistently preferring types will less; Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it; really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:221,Security,access,accessed,221,"Both `Foo<double>` and `Foo<Double32_t>` have the same typeid.; Before this commit, TClass::GetClass(typeid(Foo<double>)) would return; whatever was registered *last*. This is not ""stable""; it depends on which; branch is accessed first, or which TClass::GetClass call happens first, or; which library is loaded first. Make this more reporducible by consistently preferring types will less; Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it; really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/issues/12481:553,Availability,Error,Error,553,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory; Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to ; materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce; Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel).; Also run a. make all. command in order to compile and bind the c++ library. ### Setup; ROOT 6.28/00; Windows 11 - WSL2 Ubuntu 22.04.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:665,Availability,error,error,665,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory; Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to ; materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce; Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel).; Also run a. make all. command in order to compile and bind the c++ library. ### Setup; ROOT 6.28/00; Windows 11 - WSL2 Ubuntu 22.04.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:832,Availability,error,error,832,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory; Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to ; materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce; Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel).; Also run a. make all. command in order to compile and bind the c++ library. ### Setup; ROOT 6.28/00; Windows 11 - WSL2 Ubuntu 22.04.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:466,Performance,load,loadLibrary,466,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory; Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to ; materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce; Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel).; Also run a. make all. command in order to compile and bind the c++ library. ### Setup; ROOT 6.28/00; Windows 11 - WSL2 Ubuntu 22.04.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:593,Performance,load,load,593,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory; Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to ; materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce; Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel).; Also run a. make all. command in order to compile and bind the c++ library. ### Setup; ROOT 6.28/00; Windows 11 - WSL2 Ubuntu 22.04.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/pull/12482:61,Deployability,integrat,integration,61,"The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:333,Deployability,integrat,integration,333,"The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:61,Integrability,integrat,integration,61,"The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:333,Integrability,integrat,integration,333,"The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:118,Modifiability,variab,variable,118,"The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12484:301,Deployability,deploy,deployment,301,"1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` ; 2. Remove minified scripts - no real gain in performance, only extra step in deployment; 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. ; 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well; 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: ; 1. Fix more problems with `python3` - see attached image from my notebook; ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png); 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:269,Performance,perform,performance,269,"1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` ; 2. Remove minified scripts - no real gain in performance, only extra step in deployment; 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. ; 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well; 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: ; 1. Fix more problems with `python3` - see attached image from my notebook; ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png); 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:548,Performance,load,load,548,"1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` ; 2. Remove minified scripts - no real gain in performance, only extra step in deployment; 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. ; 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well; 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: ; 1. Fix more problems with `python3` - see attached image from my notebook; ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png); 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:58,Security,access,accessed,58,"1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` ; 2. Remove minified scripts - no real gain in performance, only extra step in deployment; 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. ; 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well; 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: ; 1. Fix more problems with `python3` - see attached image from my notebook; ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png); 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:820,Usability,usab,usable,820,"1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` ; 2. Remove minified scripts - no real gain in performance, only extra step in deployment; 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. ; 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well; 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: ; 1. Fix more problems with `python3` - see attached image from my notebook; ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png); 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12485:168,Usability,Learn,Learning,168,"# This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes.; Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12486:828,Deployability,update,updated,828,"This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12486
https://github.com/root-project/root/pull/12486:798,Testability,test,tested,798,"This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12486
https://github.com/root-project/root/pull/12488:409,Performance,load,loaded,409,Handle the case where a typedef as a dictionary entry and thus an autoload entry (rootmap case) and this typedef point to an instance a class template with a default paramter. In this case we do not have a (forward) declaration of the typedef in the rootmap file (because we can't have a forward declaration of the class template). In those case our only source of information is in the list of type which is loaded as part of the dictionary for the typedef. If in addition the dictionary for the target of the typedef is in another library we actually need to load that library based on the resolved name of the typedef). This fixes #12378,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12488
https://github.com/root-project/root/pull/12488:561,Performance,load,load,561,Handle the case where a typedef as a dictionary entry and thus an autoload entry (rootmap case) and this typedef point to an instance a class template with a default paramter. In this case we do not have a (forward) declaration of the typedef in the rootmap file (because we can't have a forward declaration of the class template). In those case our only source of information is in the list of type which is loaded as part of the dictionary for the typedef. If in addition the dictionary for the target of the typedef is in another library we actually need to load that library based on the resolved name of the typedef). This fixes #12378,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12488
https://github.com/root-project/root/pull/12490:142,Deployability,update,updated,142,# This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12490
https://github.com/root-project/root/pull/12490:22,Modifiability,Extend,Extends,22,# This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12490
https://github.com/root-project/root/pull/12490:112,Testability,test,tested,112,# This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12490
https://github.com/root-project/root/pull/12491:160,Deployability,update,updated,160,"# This Pull request:. ## Changes or fixes:; Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # ; Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:; ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:; ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:853,Safety,avoid,avoid,853,"# This Pull request:. ## Changes or fixes:; Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # ; Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:; ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:; ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:130,Testability,test,tested,130,"# This Pull request:. ## Changes or fixes:; Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # ; Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:; ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:; ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/issues/12492:191,Availability,error,error,191,"Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```; In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:; /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0); 2149 | AllocatorType, JSONSerializer, BinaryType>; | ^; ```; After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used; ```; cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src; ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please?; With best regards,; Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:355,Availability,error,error,355,"Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```; In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:; /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0); 2149 | AllocatorType, JSONSerializer, BinaryType>; | ^; ```; After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used; ```; cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src; ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please?; With best regards,; Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:526,Availability,error,errors,526,"Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```; In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:; /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0); 2149 | AllocatorType, JSONSerializer, BinaryType>; | ^; ```; After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used; ```; cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src; ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please?; With best regards,; Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:755,Deployability,install,install,755,"Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```; In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:; /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0); 2149 | AllocatorType, JSONSerializer, BinaryType>; | ^; ```; After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used; ```; cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src; ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please?; With best regards,; Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:839,Deployability,install,installed,839,"Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```; In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:; /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0); 2149 | AllocatorType, JSONSerializer, BinaryType>; | ^; ```; After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used; ```; cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src; ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please?; With best regards,; Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:947,Deployability,release,release,947,"Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```; In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:; /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0); 2149 | AllocatorType, JSONSerializer, BinaryType>; | ^; ```; After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used; ```; cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src; ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please?; With best regards,; Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12495:687,Testability,test,testtypedef,687,"With:; ```; using name_of_typedef = name_of_class;; ```; and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries); when doing:; ```; auto cl = TClass::GetClass(""name_of_typedef"");; ```; we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz); you can reproduce the problem:; ```; tar xfz typedef02.tgz; cd typedef02; cd run_withmodule; sh ../build.rootcling.module; root.exe -b -l -q ../testtypedef.C; ```; and you will get:. ```. Processing ../testtypedef.C...; The TClass for the typedef has IsLoaded: 0; ```; where the last line should not be printed. you can see the rootmap in action with:; ```; cd run_nomodule. sh ../build; root.exe -b -l -q ../testtypedef.C; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:745,Testability,test,testtypedef,745,"With:; ```; using name_of_typedef = name_of_class;; ```; and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries); when doing:; ```; auto cl = TClass::GetClass(""name_of_typedef"");; ```; we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz); you can reproduce the problem:; ```; tar xfz typedef02.tgz; cd typedef02; cd run_withmodule; sh ../build.rootcling.module; root.exe -b -l -q ../testtypedef.C; ```; and you will get:. ```. Processing ../testtypedef.C...; The TClass for the typedef has IsLoaded: 0; ```; where the last line should not be printed. you can see the rootmap in action with:; ```; cd run_nomodule. sh ../build; root.exe -b -l -q ../testtypedef.C; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:952,Testability,test,testtypedef,952,"With:; ```; using name_of_typedef = name_of_class;; ```; and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries); when doing:; ```; auto cl = TClass::GetClass(""name_of_typedef"");; ```; we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz); you can reproduce the problem:; ```; tar xfz typedef02.tgz; cd typedef02; cd run_withmodule; sh ../build.rootcling.module; root.exe -b -l -q ../testtypedef.C; ```; and you will get:. ```. Processing ../testtypedef.C...; The TClass for the typedef has IsLoaded: 0; ```; where the last line should not be printed. you can see the rootmap in action with:; ```; cd run_nomodule. sh ../build; root.exe -b -l -q ../testtypedef.C; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12496:1187,Availability,fault,faults-with-python-for-loops,1187,"### Describe the bug; Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior; Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well.; If not, exception still would be better. ### To Reproduce; ```python; import ROOT; # comment next line and everything works; ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():; df = ROOT.RDataFrame(10)\; .Define(""x"", ""rdfentry_"")\; .Define(""x2"", ""rdfentry_*rdfentry_""); ; histos = []; for var in vars:; h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var); histos.append(h); # event loop runs here; histos = [h.GetValue() for h in histos]; return histos. histos = get_histos(); for var, h in zip(vars, histos):; canvas = ROOT.TCanvas(""{}"".format(var)); h.Draw(); canvas.Update(); input(""Press something to get the next histogram""). ```; ### Setup; 1. ROOT version: 6.26/06; 2. OS: Centos 7; 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`; 4. Python: 3.9.10. ### Additional context; Initially submitted on forum:; https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:857,Deployability,Update,Update,857,"### Describe the bug; Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior; Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well.; If not, exception still would be better. ### To Reproduce; ```python; import ROOT; # comment next line and everything works; ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():; df = ROOT.RDataFrame(10)\; .Define(""x"", ""rdfentry_"")\; .Define(""x2"", ""rdfentry_*rdfentry_""); ; histos = []; for var in vars:; h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var); histos.append(h); # event loop runs here; histos = [h.GetValue() for h in histos]; return histos. histos = get_histos(); for var, h in zip(vars, histos):; canvas = ROOT.TCanvas(""{}"".format(var)); h.Draw(); canvas.Update(); input(""Press something to get the next histogram""). ```; ### Setup; 1. ROOT version: 6.26/06; 2. OS: Centos 7; 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`; 4. Python: 3.9.10. ### Additional context; Initially submitted on forum:; https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:211,Safety,avoid,avoided,211,"### Describe the bug; Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior; Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well.; If not, exception still would be better. ### To Reproduce; ```python; import ROOT; # comment next line and everything works; ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():; df = ROOT.RDataFrame(10)\; .Define(""x"", ""rdfentry_"")\; .Define(""x2"", ""rdfentry_*rdfentry_""); ; histos = []; for var in vars:; h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var); histos.append(h); # event loop runs here; histos = [h.GetValue() for h in histos]; return histos. histos = get_histos(); for var, h in zip(vars, histos):; canvas = ROOT.TCanvas(""{}"".format(var)); h.Draw(); canvas.Update(); input(""Press something to get the next histogram""). ```; ### Setup; 1. ROOT version: 6.26/06; 2. OS: Centos 7; 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`; 4. Python: 3.9.10. ### Additional context; Initially submitted on forum:; https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12497:247,Testability,log,logarithmic,247,"### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis.; Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce; ```cpp; void test() {; auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);; for(int i=0; i < 100000; i++){; double x = gRandom->Uniform(0., 5.);; double y = gRandom->Uniform(0., 5.);; h->Fill(x, y);; }. auto c = new TCanvas();; h->Draw(""colz"");; h->SetStats(0);; c->SetLogx();; // right-click on the histogram and SetShowProjectionY afterwards; }; ```. `$ root test.cpp`; EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:; `$ root --web=off test.cpp`. ### Setup; 1. ROOT version: 6.26/06; 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context; 1. Initially submited on forum:; https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:519,Testability,test,test,519,"### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis.; Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce; ```cpp; void test() {; auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);; for(int i=0; i < 100000; i++){; double x = gRandom->Uniform(0., 5.);; double y = gRandom->Uniform(0., 5.);; h->Fill(x, y);; }. auto c = new TCanvas();; h->Draw(""colz"");; h->SetStats(0);; c->SetLogx();; // right-click on the histogram and SetShowProjectionY afterwards; }; ```. `$ root test.cpp`; EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:; `$ root --web=off test.cpp`. ### Setup; 1. ROOT version: 6.26/06; 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context; 1. Initially submited on forum:; https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:879,Testability,test,test,879,"### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis.; Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce; ```cpp; void test() {; auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);; for(int i=0; i < 100000; i++){; double x = gRandom->Uniform(0., 5.);; double y = gRandom->Uniform(0., 5.);; h->Fill(x, y);; }. auto c = new TCanvas();; h->Draw(""colz"");; h->SetStats(0);; c->SetLogx();; // right-click on the histogram and SetShowProjectionY afterwards; }; ```. `$ root test.cpp`; EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:; `$ root --web=off test.cpp`. ### Setup; 1. ROOT version: 6.26/06; 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context; 1. Initially submited on forum:; https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:994,Testability,test,test,994,"### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis.; Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce; ```cpp; void test() {; auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);; for(int i=0; i < 100000; i++){; double x = gRandom->Uniform(0., 5.);; double y = gRandom->Uniform(0., 5.);; h->Fill(x, y);; }. auto c = new TCanvas();; h->Draw(""colz"");; h->SetStats(0);; c->SetLogx();; // right-click on the histogram and SetShowProjectionY afterwards; }; ```. `$ root test.cpp`; EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:; `$ root --web=off test.cpp`. ### Setup; 1. ROOT version: 6.26/06; 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context; 1. Initially submited on forum:; https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1275,Testability,log,logarithmic-axis,1275,"### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis.; Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce; ```cpp; void test() {; auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);; for(int i=0; i < 100000; i++){; double x = gRandom->Uniform(0., 5.);; double y = gRandom->Uniform(0., 5.);; h->Fill(x, y);; }. auto c = new TCanvas();; h->Draw(""colz"");; h->SetStats(0);; c->SetLogx();; // right-click on the histogram and SetShowProjectionY afterwards; }; ```. `$ root test.cpp`; EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:; `$ root --web=off test.cpp`. ### Setup; 1. ROOT version: 6.26/06; 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context; 1. Initially submited on forum:; https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/pull/12499:188,Deployability,upgrade,upgraded,188,This fixes #12498. TTime objects were not (anymore) split because TTime is still using the automatically generated but streamer-function based I/O. (The splitting stopped when `TTree` was upgraded to respect custom streamers).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12499
https://github.com/root-project/root/pull/12500:147,Deployability,toggle,toggle,147,1. Let change physical nodes visibility in hierarchy and in GL. Data stored in special structure on server side; 2. In hierarchy browser allows to toggle visibility via special checkbox; 3. In geometry GL drawing via context menu single node of several nodes can be hidden.; 4. Provide special browsing methods for TGeo classes in RBrowser; 5. Fully split `RGeomViewer` from `RGeomHierarchy` widget; 6. Provide in `web_cms.cxx` tutorial example how it can be used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12500
https://github.com/root-project/root/pull/12502:202,Integrability,rout,routines,202,"This is the first column with the delta+split encoding. Having now cast, split, and delta+split encoding and the byte swap on big-endian machines, it required some streamlining of the packing/unpacking routines in RColumnElement. Still missing and for a follow-up PR: (Split)Index64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12502
https://github.com/root-project/root/pull/12503:423,Availability,error,errors,423,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:487,Availability,error,errors,487,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1554,Deployability,release,released,1554,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:416,Testability,log,logged,416,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1259,Usability,simpl,simpler,1259,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1369,Usability,clear,clear,1369,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12504:238,Deployability,update,updated,238,# This Pull request:. Fixes some bugs to HS3 implementation; - round numbers for Barlow-Beeston reverse-engineering; - sort normalization factors; - harmonize names of shape systematics. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12504
https://github.com/root-project/root/pull/12504:208,Testability,test,tested,208,# This Pull request:. Fixes some bugs to HS3 implementation; - round numbers for Barlow-Beeston reverse-engineering; - sort normalization factors; - harmonize names of shape systematics. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12504
https://github.com/root-project/root/issues/12505:128,Testability,test,tests,128,"Currently, with the new CI, warnings are only visible in the diff or action view. We don't want `-Werror` as that would prevent tests from being run. Maybe add a new action that fails if there is a problem matcher match?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12505
https://github.com/root-project/root/issues/12509:100,Testability,test,test,100,"```c++; auto f = new TFile(""branchobject.root"", ""RECREATE"");; TTree *t = new TTree(""branchobject"", ""test tree for branchobject.cxx"");; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>> lv(1., 2., 3., 4.);; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>> lvd(11., 12., 13., 14.);; t->Branch(""lv32"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>>"", &lv);; t->Branch(""lvd"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>>"", &lvd);; t->Fill();; t->Write();; ```. yields; ```; $ root -l -b branchobject.root. branchobject->Print(); ******************************************************************************; *Tree :branchobject: test tree for branchobject.cxx *; *Entries : 1 : Total = 8657 bytes File Size = 2085 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Branch :lv32 *; *Entries : 1 : BranchElement (see below) *; *............................................................................*; *Br 0 :fCoordinates : *; *Entries : 1 : Total Size= 2996 bytes One basket in memory *; *Baskets : 0 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; *Br 1 :fCoordinates.fPt : Double32_t *; *Entries : 1 : Total Size= 628 bytes File Size = 95 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; *Br 2 :fCoordinates.fEta : Double32_t *; *Entries : 1 : Total Size= 633 bytes File Size = 96 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; *Br 3 :fCoordinates.fPhi : Double32_t *; *Entries : 1 : Total Size= 633 bytes File Size = 96 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; *Br 4 :fCoordinates.fM : Double32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12509
https://github.com/root-project/root/issues/12509:681,Testability,test,test,681,"```c++; auto f = new TFile(""branchobject.root"", ""RECREATE"");; TTree *t = new TTree(""branchobject"", ""test tree for branchobject.cxx"");; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>> lv(1., 2., 3., 4.);; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>> lvd(11., 12., 13., 14.);; t->Branch(""lv32"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>>"", &lv);; t->Branch(""lvd"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>>"", &lvd);; t->Fill();; t->Write();; ```. yields; ```; $ root -l -b branchobject.root. branchobject->Print(); ******************************************************************************; *Tree :branchobject: test tree for branchobject.cxx *; *Entries : 1 : Total = 8657 bytes File Size = 2085 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Branch :lv32 *; *Entries : 1 : BranchElement (see below) *; *............................................................................*; *Br 0 :fCoordinates : *; *Entries : 1 : Total Size= 2996 bytes One basket in memory *; *Baskets : 0 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; *Br 1 :fCoordinates.fPt : Double32_t *; *Entries : 1 : Total Size= 628 bytes File Size = 95 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; *Br 2 :fCoordinates.fEta : Double32_t *; *Entries : 1 : Total Size= 633 bytes File Size = 96 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; *Br 3 :fCoordinates.fPhi : Double32_t *; *Entries : 1 : Total Size= 633 bytes File Size = 96 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; *Br 4 :fCoordinates.fM : Double32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12509
https://github.com/root-project/root/issues/12510:932,Modifiability,variab,variable,932,"### Describe the bug; It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like; ```; hadd dummyFile01.root dummyFile0.root dummyFile1.root; ``` ; Everything is okay. While if you do like; ```; hadd dummyFile10.root dummyFile1.root dummyFile0.root; ```; And you open the merged `dummyFile10.root` to get entries like; ```; root [1] dummyTree->GetEntries(); (long long) 1000; ```; It looks okay. But if you show the first event, like; ```; root [1] dummyTree->Show(0); ======> EVENT:0; index = 0; dummyVariable = 2.13654e-306; ```; The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior; ```; root [1] dummyTree->Show(0); ======> EVENT:0; index = 0; dummyVariable = 0.261287; ```. ### Setup; 1. ROOT version: 6.26/06; 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12510
https://github.com/root-project/root/pull/12511:70,Testability,mock,mock,70,This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:90,Testability,test,test,90,This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12513:117,Deployability,configurat,configurations,117,"Redirect calls to:; * TGaxis::SetMaxDigits(); * TGaxis::GetMaxDigits(); * TGaxis::SetExponentOffset(). Let use these configurations also in TWebCanvas, which has access to; gStyle object. Small adjustment in TStyle class. Implement all these attributes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12513
https://github.com/root-project/root/pull/12513:117,Modifiability,config,configurations,117,"Redirect calls to:; * TGaxis::SetMaxDigits(); * TGaxis::GetMaxDigits(); * TGaxis::SetExponentOffset(). Let use these configurations also in TWebCanvas, which has access to; gStyle object. Small adjustment in TStyle class. Implement all these attributes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12513
https://github.com/root-project/root/pull/12513:162,Security,access,access,162,"Redirect calls to:; * TGaxis::SetMaxDigits(); * TGaxis::GetMaxDigits(); * TGaxis::SetExponentOffset(). Let use these configurations also in TWebCanvas, which has access to; gStyle object. Small adjustment in TStyle class. Implement all these attributes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12513
https://github.com/root-project/root/pull/12514:91,Availability,avail,available,91,As mentioned in the Python docs:; https://docs.python.org/3.11/whatsnew/3.11.html. Already available upstream in:; https://github.com/wlav/CPyCppyy/commit/a8f41df0618f40ecc9a2a0b5a51fd12ddf2e6673,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12514
https://github.com/root-project/root/pull/12516:16,Availability,failure,failures,16,"It causes build failures on GCC 12.2.1 / c++17 with. ```; [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; In file included from input_line_7:111:; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used; using clock_t = std::chrono::system_clock;; ^; /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible; struct system_clock; ^; In module 'std' imported from input_line_1:1:; /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used; _Tp __tmp = _GLIBCXX_MOVE(__a);; ^; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here; swap(fDate, other.fDate);; ^; /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable; struct time_point; ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:212,Availability,error,error,212,"It causes build failures on GCC 12.2.1 / c++17 with. ```; [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; In file included from input_line_7:111:; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used; using clock_t = std::chrono::system_clock;; ^; /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible; struct system_clock; ^; In module 'std' imported from input_line_1:1:; /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used; _Tp __tmp = _GLIBCXX_MOVE(__a);; ^; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here; swap(fDate, other.fDate);; ^; /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable; struct time_point; ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:546,Availability,error,error,546,"It causes build failures on GCC 12.2.1 / c++17 with. ```; [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; In file included from input_line_7:111:; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used; using clock_t = std::chrono::system_clock;; ^; /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible; struct system_clock; ^; In module 'std' imported from input_line_1:1:; /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used; _Tp __tmp = _GLIBCXX_MOVE(__a);; ^; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here; swap(fDate, other.fDate);; ^; /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable; struct time_point; ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:1161,Deployability,update,updated,1161,"It causes build failures on GCC 12.2.1 / c++17 with. ```; [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; In file included from input_line_7:111:; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used; using clock_t = std::chrono::system_clock;; ^; /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible; struct system_clock; ^; In module 'std' imported from input_line_1:1:; /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used; _Tp __tmp = _GLIBCXX_MOVE(__a);; ^; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here; swap(fDate, other.fDate);; ^; /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable; struct time_point; ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:1131,Testability,test,tested,1131,"It causes build failures on GCC 12.2.1 / c++17 with. ```; [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; In file included from input_line_7:111:; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used; using clock_t = std::chrono::system_clock;; ^; /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible; struct system_clock; ^; In module 'std' imported from input_line_1:1:; /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used; _Tp __tmp = _GLIBCXX_MOVE(__a);; ^; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here; swap(fDate, other.fDate);; ^; /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable; struct time_point; ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12517:30,Deployability,install,installing,30,This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12517
https://github.com/root-project/root/pull/12517:185,Deployability,update,updated,185,This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12517
https://github.com/root-project/root/pull/12517:155,Testability,test,tested,155,This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12517
https://github.com/root-project/root/pull/12518:188,Deployability,update,updated,188,# This Pull request:. Fixes more bugs with the HS3 implementation. ## Changes or fixes:. Shape systematics are finally treated properly. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12518
https://github.com/root-project/root/pull/12518:158,Testability,test,tested,158,# This Pull request:. Fixes more bugs with the HS3 implementation. ## Changes or fixes:. Shape systematics are finally treated properly. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12518
https://github.com/root-project/root/pull/12519:34,Availability,failure,failures,34,This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/issues/12520:1956,Availability,down,download,1956,"o the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Columns of type `double` with values read from the csv file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the following macro with `root`; ```; {; std::ofstream outfile;; outfile.open(""./toydata.csv"");; outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";; outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);; auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});; auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});; auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;; df1.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;; df2.Display()->Print();; std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;; df3.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;; df4.Display()->Print();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; *ROOT Version:* 6.28/00; *Operating system:* macosx 10.15.7; *ROOT obtained from:* conda-forge. ### Additional context; <!--; Add any other context about the problem here.; -->; First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:1938,Deployability,install,install,1938,"o the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Columns of type `double` with values read from the csv file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the following macro with `root`; ```; {; std::ofstream outfile;; outfile.open(""./toydata.csv"");; outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";; outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);; auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});; auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});; auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;; df1.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;; df2.Display()->Print();; std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;; df3.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;; df4.Display()->Print();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; *ROOT Version:* 6.28/00; *Operating system:* macosx 10.15.7; *ROOT obtained from:* conda-forge. ### Additional context; <!--; Add any other context about the problem here.; -->; First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Columns of type `double` with values read from the csv file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the following macro with `root`; ```; {; std::ofstream outfile;; outfile.open(""./toydata.csv"");; outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";; outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);; auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});; auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});; auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;; df1.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;; df2.Display()->Print();; std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;; df3.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;; df4.Display()->Print();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; *ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:597,Usability,clear,clear,597,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Columns of type `double` with values read from the csv file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the following macro with `root`; ```; {; std::ofstream outfile;; outfile.open(""./toydata.csv"");; outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";; outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);; auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});; auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});; auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;; df1.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;; df2.Display()->Print();; std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;; df3.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;; df4.Display()->Print();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; *ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/pull/12521:47,Integrability,interface,interfaces,47,"After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:162,Integrability,interface,interface,162,"After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:348,Integrability,wrap,wraps,348,"After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:184,Modifiability,evolve,evolve,184,"After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12522:65,Modifiability,config,config,65,Makes it easier to understand what's enabled etc when no `cmake` config happens.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12522
https://github.com/root-project/root/pull/12523:30,Availability,error,errors,30,"Fix the following compilation errors with `-std:c++20` on Windows:; ```; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::uni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:143,Availability,error,error,143,"Fix the following compilation errors with `-std:c++20` on Windows:; ```; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::uni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6113,Availability,error,error,6113,"Gen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:247,Deployability,release,release,247,"Fix the following compilation errors with `-std:c++20` on Windows:; ```; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::uni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:770,Deployability,release,release,770,"Fix the following compilation errors with `-std:c++20` on Windows:; ```; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::uni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1387,Deployability,release,release,1387,"imilar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2108,Deployability,release,release,2108,":\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::un",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2397,Deployability,release,release,2397,"ers\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3010,Deployability,release,release,3010,"lvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3378,Deployability,release,release,3378,"ase\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3653,Deployability,release,release,3653,"at<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3918,Deployability,release,release,3918,"efault_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4174,Deployability,release,release,4174,"ools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4538,Deployability,release,release,4538," cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4813,Deployability,release,release,4813,"\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5078,Deployability,release,release,5078,"tchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5334,Deployability,release,release,5334,"VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5681,Deployability,release,release,5681,"proj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5955,Deployability,release,release,5955,"bleGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6217,Deployability,release,release,6217,"Gen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6764,Deployability,release,release,6764,"Instr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7405,Deployability,release,release,7405,"t\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Glob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8158,Deployability,release,release,8158,"2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8447,Deployability,release,release,8447,"nterpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9083,Deployability,release,release,9083,"::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9451,Deployability,release,release,9451,"c\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9726,Deployability,release,release,9726,"r<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9991,Deployability,release,release,9991,"ult_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10247,Deployability,release,release,10247,"ools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10611,Deployability,release,release,10611," cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10886,Deployability,release,release,10886,"\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11151,Deployability,release,release,11151,"tchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11407,Deployability,release,release,11407,"lease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11762,Deployability,release,release,11762,"lease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:12036,Deployability,release,release,12036,"lease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:395,Integrability,message,message,395,"Fix the following compilation errors with `-std:c++20` on Windows:; ```; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::uni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:965,Integrability,message,message,965,"imilar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1340,Integrability,depend,dependent,1340,"imilar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1545,Integrability,message,message,1545,":\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::un",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2266,Integrability,message,message,2266,"ers\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2592,Integrability,message,message,2592,"lvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2963,Integrability,depend,dependent,2963,"lvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3205,Integrability,message,message,3205,"g.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3536,Integrability,message,message,3536,"at<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3811,Integrability,message,message,3811,"efault_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4076,Integrability,message,message,4076,"ools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4369,Integrability,message,message,4369,"ableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4696,Integrability,message,message,4696,"\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4971,Integrability,message,message,4971,"tchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5236,Integrability,message,message,5236,"VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5492,Integrability,message,message,5492,"proj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5839,Integrability,message,message,5839,"bleGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6365,Integrability,message,message,6365,"Instr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6959,Integrability,message,message,6959,"t\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Glob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7358,Integrability,depend,dependent,7358,"t\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Glob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7563,Integrability,message,message,7563,"2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8316,Integrability,message,message,8316,"nterpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8642,Integrability,message,message,8642,"::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9036,Integrability,depend,dependent,9036,"::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9278,Integrability,message,message,9278," No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9609,Integrability,message,message,9609,"r<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9884,Integrability,message,message,9884,"ult_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10149,Integrability,message,message,10149,"ools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10442,Integrability,message,message,10442,"ableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10769,Integrability,message,message,10769,"\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11044,Integrability,message,message,11044,"tchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11309,Integrability,message,message,11309,"lease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11565,Integrability,message,message,11565,"lease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11920,Integrability,message,message,11920,"lease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12525:372,Testability,test,tests,372,"In the following code (from `TFormula.cxx`):; ```; map< std::pair<TString,Int_t>, pair<TString,TString> > functions;; pair<TString, Int_t> key = make_pair(funName, dim);; if (functions.find(key) == functions.end()) {; ```; `functions.find(key)` always returns `functions.end()`. Adding the spaceship operator `<=>` in TString fixes the issue. This fixes also many failing tests with `std:c++20`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/issues/12527:666,Availability,error,error,666,"On macOS, `-Dcocoa=Off` will cause the build to fail with; ```; [ 77%] Linking CXX shared library ../lib/libCore.so; Undefined symbols for architecture arm64:; ""TMacOSXSystem::TMacOSXSystem()"", referenced from:; ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o; ""typeinfo for TMacOSXSystem"", referenced from:; ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o; ld: symbol(s) not found for architecture arm64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libCore.so] Error 1; make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:770,Availability,Error,Error,770,"On macOS, `-Dcocoa=Off` will cause the build to fail with; ```; [ 77%] Linking CXX shared library ../lib/libCore.so; Undefined symbols for architecture arm64:; ""TMacOSXSystem::TMacOSXSystem()"", referenced from:; ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o; ""typeinfo for TMacOSXSystem"", referenced from:; ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o; ld: symbol(s) not found for architecture arm64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libCore.so] Error 1; make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:823,Availability,Error,Error,823,"On macOS, `-Dcocoa=Off` will cause the build to fail with; ```; [ 77%] Linking CXX shared library ../lib/libCore.so; Undefined symbols for architecture arm64:; ""TMacOSXSystem::TMacOSXSystem()"", referenced from:; ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o; ""typeinfo for TMacOSXSystem"", referenced from:; ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o; ld: symbol(s) not found for architecture arm64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libCore.so] Error 1; make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:848,Availability,Error,Error,848,"On macOS, `-Dcocoa=Off` will cause the build to fail with; ```; [ 77%] Linking CXX shared library ../lib/libCore.so; Undefined symbols for architecture arm64:; ""TMacOSXSystem::TMacOSXSystem()"", referenced from:; ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o; ""typeinfo for TMacOSXSystem"", referenced from:; ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o; ld: symbol(s) not found for architecture arm64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libCore.so] Error 1; make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/pull/12530:13,Testability,test,test,13,...and add a test. This fixes https://github.com/root-project/root/issues/12520.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12530
https://github.com/root-project/root/pull/12531:168,Performance,load,loading,168,"When some column types were specified explicitly by the user, RCsvDS forgot to add that type to fColTypesList, which in turn caused RCsvDS::SetEntry to skip the proper loading of some column data. This fixes #12520.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12531
https://github.com/root-project/root/pull/12532:406,Availability,error,error,406,"This fixes #12358. When unloading a 'compiled' TClass, TClass sets the state of the TClass to the most information possible. This usually means setting the ClassInfo if the interpreter information is still known about the class. In the case of `std::tuple` is order to do that we need to generate code that depends on other types (that may also be unloaded), so skip that steps (which lead to 'compilation error' from the interpreter in the report cases (and a crash due to a couple of others issues solved also in this PR).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12532
https://github.com/root-project/root/pull/12532:307,Integrability,depend,depends,307,"This fixes #12358. When unloading a 'compiled' TClass, TClass sets the state of the TClass to the most information possible. This usually means setting the ClassInfo if the interpreter information is still known about the class. In the case of `std::tuple` is order to do that we need to generate code that depends on other types (that may also be unloaded), so skip that steps (which lead to 'compilation error' from the interpreter in the report cases (and a crash due to a couple of others issues solved also in this PR).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12532
https://github.com/root-project/root/issues/12535:458,Availability,down,download,458,"This issue is made as a follow-up of the discussion in: https://root-forum.cern.ch/t/tgraph2d-interpolate-returns-0/54172. The Interpolate() method on TGraph2D sometimes returns 0.0 on a perfectly interpolatable coordinates.; For example, this is how my graph looks like drawn with “colz” option:; <img src=""https://user-images.githubusercontent.com/67898371/227203785-b6fd576d-7757-496f-807e-4375156e2def.png"" width=""500"">. To reproduce the problem, please download the file attached in the above root forum post and execute:; ```; root yield_graphs.root; graph_yield_nom->Interpolate(750, 500) // this returns a non-zero value; graph_yield_nom->Interpolate(760, 500) // this returns a non-zero value; graph_yield_nom->Interpolate(770, 500) // this returns zero; graph_yield_nom->Interpolate(780, 500) // this returns zero; graph_yield_nom->Interpolate(790, 500) // this returns a non-zero value; graph_yield_nom->Interpolate(800, 500) // this returns zero; ```. The coordinates that return zero are within interpolation range as shown by the plot. So they should have returned non-zero values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12535
https://github.com/root-project/root/pull/12536:98,Integrability,depend,dependencies,98,"In working in #8709, several RooFit issues were found. They often concern cmake and misconfigured dependencies, but also a few code things.; Here, I collected them in a branch to facilitate reviewing #8709 later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12536
https://github.com/root-project/root/issues/12537:203,Availability,error,error,203,"When opening files reconstructed with the SHiP framework, trying to open the second cycle of the cbmsim tree results in a segmentation violation and (depending on ROOT version? not always) the following error:. `Error in <TBufferFile::CheckByteCount>: object of class TClonesArray read too few bytes: 66 instead of 7071`. A small reproducer file:. https://cernbox.cern.ch/s/MSDo7DAuFOuUlMc. Tried with ROOT versions 6.26/06, 6.26/02, from the SHiP software stack and from conda, both using `rootbrowse` and `root`. I assume ROOT doesn't like how this file is created. Accessing all branches using (py)ROOT seems to work fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:212,Availability,Error,Error,212,"When opening files reconstructed with the SHiP framework, trying to open the second cycle of the cbmsim tree results in a segmentation violation and (depending on ROOT version? not always) the following error:. `Error in <TBufferFile::CheckByteCount>: object of class TClonesArray read too few bytes: 66 instead of 7071`. A small reproducer file:. https://cernbox.cern.ch/s/MSDo7DAuFOuUlMc. Tried with ROOT versions 6.26/06, 6.26/02, from the SHiP software stack and from conda, both using `rootbrowse` and `root`. I assume ROOT doesn't like how this file is created. Accessing all branches using (py)ROOT seems to work fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:150,Integrability,depend,depending,150,"When opening files reconstructed with the SHiP framework, trying to open the second cycle of the cbmsim tree results in a segmentation violation and (depending on ROOT version? not always) the following error:. `Error in <TBufferFile::CheckByteCount>: object of class TClonesArray read too few bytes: 66 instead of 7071`. A small reproducer file:. https://cernbox.cern.ch/s/MSDo7DAuFOuUlMc. Tried with ROOT versions 6.26/06, 6.26/02, from the SHiP software stack and from conda, both using `rootbrowse` and `root`. I assume ROOT doesn't like how this file is created. Accessing all branches using (py)ROOT seems to work fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/issues/12537:568,Security,Access,Accessing,568,"When opening files reconstructed with the SHiP framework, trying to open the second cycle of the cbmsim tree results in a segmentation violation and (depending on ROOT version? not always) the following error:. `Error in <TBufferFile::CheckByteCount>: object of class TClonesArray read too few bytes: 66 instead of 7071`. A small reproducer file:. https://cernbox.cern.ch/s/MSDo7DAuFOuUlMc. Tried with ROOT versions 6.26/06, 6.26/02, from the SHiP software stack and from conda, both using `rootbrowse` and `root`. I assume ROOT doesn't like how this file is created. Accessing all branches using (py)ROOT seems to work fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12537
https://github.com/root-project/root/pull/12539:377,Deployability,update,updated,377,"resolves #12268; resolves #12267. [skip-ci]. I did big changes to the python script so bundling macOS and windows to a single PR makes thing easier. ## Main changes:; - Adds macOS 13 builds (ARM64); - Adds Windows 10 builds (x64, x86). ## Minor fixes:; - Disable running script as root; - Use non-root user inside containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12539
https://github.com/root-project/root/pull/12539:347,Testability,test,tested,347,"resolves #12268; resolves #12267. [skip-ci]. I did big changes to the python script so bundling macOS and windows to a single PR makes thing easier. ## Main changes:; - Adds macOS 13 builds (ARM64); - Adds Windows 10 builds (x64, x86). ## Minor fixes:; - Disable running script as root; - Use non-root user inside containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12539
https://github.com/root-project/root/issues/12540:1604,Availability,Down,Downloaded,1604,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Exception is throwing std::length_error with message vector too long. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int; main(int argc, char* argv[]); {; std::uint32_t v0 = 0;; std::uint32_t v1 = 0;. TFile file(""sbx.root"", ""RECREATE"");; TTree tree(""tree-name"", ""tree-title"");; tree.Branch(""v0"", &v0);; tree.Branch(""v1"", &v1);. for (std::size_t i = 0; i < 10; ++i); {; v0 = i;; v1 = i * 2;; tree.Fill();; }. tree.Scan();; tree.Write();. try; {; ROOT::RDataFrame df(tree);; }; catch (std::length_error& ex); {; std::cout << ex.what() << std::endl;; std::cout << std::endl;; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version 6.26.10 and 6.29.01; 2. Operating system Windows Visual Studio 2022 64-bit x64 ; 3. How you obtained ROOT Downloaded exe installer; -->; ROOT version 6.26.10 and 6.29.01; Operating system Windows Visual Studio 2022 64-bit x64 ; How you obtained ROOT Downloaded exe installer. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:1748,Availability,Down,Downloaded,1748,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Exception is throwing std::length_error with message vector too long. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int; main(int argc, char* argv[]); {; std::uint32_t v0 = 0;; std::uint32_t v1 = 0;. TFile file(""sbx.root"", ""RECREATE"");; TTree tree(""tree-name"", ""tree-title"");; tree.Branch(""v0"", &v0);; tree.Branch(""v1"", &v1);. for (std::size_t i = 0; i < 10; ++i); {; v0 = i;; v1 = i * 2;; tree.Fill();; }. tree.Scan();; tree.Write();. try; {; ROOT::RDataFrame df(tree);; }; catch (std::length_error& ex); {; std::cout << ex.what() << std::endl;; std::cout << std::endl;; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version 6.26.10 and 6.29.01; 2. Operating system Windows Visual Studio 2022 64-bit x64 ; 3. How you obtained ROOT Downloaded exe installer; -->; ROOT version 6.26.10 and 6.29.01; Operating system Windows Visual Studio 2022 64-bit x64 ; How you obtained ROOT Downloaded exe installer. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:1619,Deployability,install,installer,1619,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Exception is throwing std::length_error with message vector too long. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int; main(int argc, char* argv[]); {; std::uint32_t v0 = 0;; std::uint32_t v1 = 0;. TFile file(""sbx.root"", ""RECREATE"");; TTree tree(""tree-name"", ""tree-title"");; tree.Branch(""v0"", &v0);; tree.Branch(""v1"", &v1);. for (std::size_t i = 0; i < 10; ++i); {; v0 = i;; v1 = i * 2;; tree.Fill();; }. tree.Scan();; tree.Write();. try; {; ROOT::RDataFrame df(tree);; }; catch (std::length_error& ex); {; std::cout << ex.what() << std::endl;; std::cout << std::endl;; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version 6.26.10 and 6.29.01; 2. Operating system Windows Visual Studio 2022 64-bit x64 ; 3. How you obtained ROOT Downloaded exe installer; -->; ROOT version 6.26.10 and 6.29.01; Operating system Windows Visual Studio 2022 64-bit x64 ; How you obtained ROOT Downloaded exe installer. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:1763,Deployability,install,installer,1763,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Exception is throwing std::length_error with message vector too long. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int; main(int argc, char* argv[]); {; std::uint32_t v0 = 0;; std::uint32_t v1 = 0;. TFile file(""sbx.root"", ""RECREATE"");; TTree tree(""tree-name"", ""tree-title"");; tree.Branch(""v0"", &v0);; tree.Branch(""v1"", &v1);. for (std::size_t i = 0; i < 10; ++i); {; v0 = i;; v1 = i * 2;; tree.Fill();; }. tree.Scan();; tree.Write();. try; {; ROOT::RDataFrame df(tree);; }; catch (std::length_error& ex); {; std::cout << ex.what() << std::endl;; std::cout << std::endl;; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version 6.26.10 and 6.29.01; 2. Operating system Windows Visual Studio 2022 64-bit x64 ; 3. How you obtained ROOT Downloaded exe installer; -->; ROOT version 6.26.10 and 6.29.01; Operating system Windows Visual Studio 2022 64-bit x64 ; How you obtained ROOT Downloaded exe installer. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:503,Integrability,message,message,503,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Exception is throwing std::length_error with message vector too long. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int; main(int argc, char* argv[]); {; std::uint32_t v0 = 0;; std::uint32_t v1 = 0;. TFile file(""sbx.root"", ""RECREATE"");; TTree tree(""tree-name"", ""tree-title"");; tree.Branch(""v0"", &v0);; tree.Branch(""v1"", &v1);. for (std::size_t i = 0; i < 10; ++i); {; v0 = i;; v1 = i * 2;; tree.Fill();; }. tree.Scan();; tree.Write();. try; {; ROOT::RDataFrame df(tree);; }; catch (std::length_error& ex); {; std::cout << ex.what() << std::endl;; std::cout << std::endl;; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version 6.26.10 and 6.29.01; 2. Operating system Windows Visual Studio 2022 64-bit x64 ; 3. How you obtained ROOT Downloaded exe installer; -->; ROOT version 6.26.10 and 6.29.01; Operating system Windows Visual Studio 2022 64-bit x64 ; How you obtained ROOT Downloaded exe installer. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:391,Usability,clear,clear,391,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Exception is throwing std::length_error with message vector too long. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int; main(int argc, char* argv[]); {; std::uint32_t v0 = 0;; std::uint32_t v1 = 0;. TFile file(""sbx.root"", ""RECREATE"");; TTree tree(""tree-name"", ""tree-title"");; tree.Branch(""v0"", &v0);; tree.Branch(""v1"", &v1);. for (std::size_t i = 0; i < 10; ++i); {; v0 = i;; v1 = i * 2;; tree.Fill();; }. tree.Scan();; tree.Write();. try; {; ROOT::RDataFrame df(tree);; }; catch (std::length_error& ex); {; std::cout << ex.what() << std::endl;; std::cout << std::endl;; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version 6.26.10 and 6.29.01; 2. Operating system Windows Visual Studio 2022 64-bit x64 ; 3. How you obtained ROOT Downloaded exe installer; -->; ROOT version 6.26.10 and 6.29.01; Operating system Windows Visual Studio 2022 64-bit x64 ; How you obtained ROOT Downloaded exe installer. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/issues/12540:559,Usability,clear,clear,559,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Exception is throwing std::length_error with message vector too long. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int; main(int argc, char* argv[]); {; std::uint32_t v0 = 0;; std::uint32_t v1 = 0;. TFile file(""sbx.root"", ""RECREATE"");; TTree tree(""tree-name"", ""tree-title"");; tree.Branch(""v0"", &v0);; tree.Branch(""v1"", &v1);. for (std::size_t i = 0; i < 10; ++i); {; v0 = i;; v1 = i * 2;; tree.Fill();; }. tree.Scan();; tree.Write();. try; {; ROOT::RDataFrame df(tree);; }; catch (std::length_error& ex); {; std::cout << ex.what() << std::endl;; std::cout << std::endl;; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version 6.26.10 and 6.29.01; 2. Operating system Windows Visual Studio 2022 64-bit x64 ; 3. How you obtained ROOT Downloaded exe installer; -->; ROOT version 6.26.10 and 6.29.01; Operating system Windows Visual Studio 2022 64-bit x64 ; How you obtained ROOT Downloaded exe installer. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12540
https://github.com/root-project/root/pull/12542:370,Deployability,update,updated,370,"This pull request fixes a misuse of the `TVirtualCollectionProxy` iterator interface. Specifically the `Next()` and `DeleteTwoIterators()` functions take a pointer to the iterator itself (not a pointer-to-pointer). The misuse was most likely due to the lack of proper documentation on the `TVirtualCollectionProxy` class. The documentation for this class should be thus updated in a follow-up PR. The issue was originally introduced in https://github.com/root-project/root/pull/12380 and first noticed by @Nowakus on March 13, when trying to write a `xAOD::DataVector<T>` into RNTuple. This PR should fix the observed misbehavior. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12542
https://github.com/root-project/root/pull/12542:75,Integrability,interface,interface,75,"This pull request fixes a misuse of the `TVirtualCollectionProxy` iterator interface. Specifically the `Next()` and `DeleteTwoIterators()` functions take a pointer to the iterator itself (not a pointer-to-pointer). The misuse was most likely due to the lack of proper documentation on the `TVirtualCollectionProxy` class. The documentation for this class should be thus updated in a follow-up PR. The issue was originally introduced in https://github.com/root-project/root/pull/12380 and first noticed by @Nowakus on March 13, when trying to write a `xAOD::DataVector<T>` into RNTuple. This PR should fix the observed misbehavior. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12542
https://github.com/root-project/root/pull/12542:652,Testability,test,tested,652,"This pull request fixes a misuse of the `TVirtualCollectionProxy` iterator interface. Specifically the `Next()` and `DeleteTwoIterators()` functions take a pointer to the iterator itself (not a pointer-to-pointer). The misuse was most likely due to the lack of proper documentation on the `TVirtualCollectionProxy` class. The documentation for this class should be thus updated in a follow-up PR. The issue was originally introduced in https://github.com/root-project/root/pull/12380 and first noticed by @Nowakus on March 13, when trying to write a `xAOD::DataVector<T>` into RNTuple. This PR should fix the observed misbehavior. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12542
https://github.com/root-project/root/pull/12543:102,Modifiability,variab,variables,102,"This new class implements scatter plots like in mathplotlib. A TScatter is a TGraph able to draw four variables on a single plot. The two first; variables are the x and y position of the markers and the 3rd is mapped on the current; color map and the 4th on the marker size. <img width=""692"" alt=""Screenshot 2023-03-24 at 16 27 38"" src=""https://user-images.githubusercontent.com/4697738/227569572-f69961a7-2194-41e3-b695-86617e6d2083.png"">",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12543
https://github.com/root-project/root/pull/12543:145,Modifiability,variab,variables,145,"This new class implements scatter plots like in mathplotlib. A TScatter is a TGraph able to draw four variables on a single plot. The two first; variables are the x and y position of the markers and the 3rd is mapped on the current; color map and the 4th on the marker size. <img width=""692"" alt=""Screenshot 2023-03-24 at 16 27 38"" src=""https://user-images.githubusercontent.com/4697738/227569572-f69961a7-2194-41e3-b695-86617e6d2083.png"">",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12543
https://github.com/root-project/root/pull/12544:41,Deployability,release,release,41,"Its Python 3.11 needs the upcoming Spark release, see https://github.com/apache/spark/pull/38987",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12544
https://github.com/root-project/root/pull/12545:412,Testability,test,test,412,"Fix Delaunay 2D interpolation when the interpolated points are on at tringle's edges.; ; This is often the case when interpolating points laying in a grid, see https://root-forum.cern.ch/t/tgraph2d-interpolate-returns-0/54172 (linked also from the issue report). . Before a crude hack was present, which could not work if the edge is horizontal. ; ; Clean up also the class code and improve comments. Add also a test for the interpolation on points on the edges. This PR fixes #12535",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12545
https://github.com/root-project/root/issues/12547:234,Integrability,depend,dependency,234,"The fact that TRandom3::Rndm() etc. are not marked final is a sensible hit in performance for applications that call it in an event loop (because the compiler does not dare de-virtualize the call, so you always have a cache miss/data dependency when you encounter the call).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12547
https://github.com/root-project/root/issues/12547:78,Performance,perform,performance,78,"The fact that TRandom3::Rndm() etc. are not marked final is a sensible hit in performance for applications that call it in an event loop (because the compiler does not dare de-virtualize the call, so you always have a cache miss/data dependency when you encounter the call).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12547
https://github.com/root-project/root/issues/12547:218,Performance,cache,cache,218,"The fact that TRandom3::Rndm() etc. are not marked final is a sensible hit in performance for applications that call it in an event loop (because the compiler does not dare de-virtualize the call, so you always have a cache miss/data dependency when you encounter the call).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12547
https://github.com/root-project/root/issues/12548:245,Integrability,depend,dependency,245,"Some boost histogram utility functions have trouble being called from PyROOT. I've traced this back to what looks like a name normalization problem. Unfortunately I did not manage to put together a standalone example without the boost histogram dependency. Consider the following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include <iostream>; #include <boost/histogram.hpp>. int test() {; auto ns = TClass::GetClass(""boost::histogram"");; auto meth = ns->GetMethodWithPrototype(""make_histogram"", ""boost::histogram::axis::regular<>&&"");. std::cout << ""meth->GetReturnTypeName(): "" << meth->GetReturnTypeName() << std::endl;; std::cout << ""meth->GetReturnTypeNormalizedName(): "" << meth->GetReturnTypeNormalizedName() << std::endl;. auto cl = TClass::GetClass(meth->GetReturnTypeNormalizedName().c_str());; std::cout << ""cl: "" << cl << std::endl;. return 0;; }; ```. output:; ```; meth->GetReturnTypeName(): boost::histogram::histogram<tuple<boost::histogram::axis::regular<double,boost::use_default,boost::use_default,boost::use_default> >,boost::histogram::unlimited_storage<allocator<char> > >; meth->GetReturnTypeNormalizedName(): boost::histogram::histogram<tuple<regular<double,use_default,use_default,use_default> >,unlimited_storage<allocator<char> > >; cl: 0; (int) 0; ```. So note that the normalized return type is missing the ```boost::histogram``` namespace for the template arguments of the std::tuple. (and then obviously trying to lookup the type again fails). This prevents properly calling this function and other similar ones from PyROOT because the normalized return type is used e.g. here https://github.com/root-project/root/blob/4483b01b7f4bad47332f98d773dbd9b8c7f36b9d/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1515",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12548
https://github.com/root-project/root/issues/12548:280,Testability,test,test,280,"Some boost histogram utility functions have trouble being called from PyROOT. I've traced this back to what looks like a name normalization problem. Unfortunately I did not manage to put together a standalone example without the boost histogram dependency. Consider the following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include <iostream>; #include <boost/histogram.hpp>. int test() {; auto ns = TClass::GetClass(""boost::histogram"");; auto meth = ns->GetMethodWithPrototype(""make_histogram"", ""boost::histogram::axis::regular<>&&"");. std::cout << ""meth->GetReturnTypeName(): "" << meth->GetReturnTypeName() << std::endl;; std::cout << ""meth->GetReturnTypeNormalizedName(): "" << meth->GetReturnTypeNormalizedName() << std::endl;. auto cl = TClass::GetClass(meth->GetReturnTypeNormalizedName().c_str());; std::cout << ""cl: "" << cl << std::endl;. return 0;; }; ```. output:; ```; meth->GetReturnTypeName(): boost::histogram::histogram<tuple<boost::histogram::axis::regular<double,boost::use_default,boost::use_default,boost::use_default> >,boost::histogram::unlimited_storage<allocator<char> > >; meth->GetReturnTypeNormalizedName(): boost::histogram::histogram<tuple<regular<double,use_default,use_default,use_default> >,unlimited_storage<allocator<char> > >; cl: 0; (int) 0; ```. So note that the normalized return type is missing the ```boost::histogram``` namespace for the template arguments of the std::tuple. (and then obviously trying to lookup the type again fails). This prevents properly calling this function and other similar ones from PyROOT because the normalized return type is used e.g. here https://github.com/root-project/root/blob/4483b01b7f4bad47332f98d773dbd9b8c7f36b9d/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1515",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12548
https://github.com/root-project/root/issues/12548:292,Testability,test,test,292,"Some boost histogram utility functions have trouble being called from PyROOT. I've traced this back to what looks like a name normalization problem. Unfortunately I did not manage to put together a standalone example without the boost histogram dependency. Consider the following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include <iostream>; #include <boost/histogram.hpp>. int test() {; auto ns = TClass::GetClass(""boost::histogram"");; auto meth = ns->GetMethodWithPrototype(""make_histogram"", ""boost::histogram::axis::regular<>&&"");. std::cout << ""meth->GetReturnTypeName(): "" << meth->GetReturnTypeName() << std::endl;; std::cout << ""meth->GetReturnTypeNormalizedName(): "" << meth->GetReturnTypeNormalizedName() << std::endl;. auto cl = TClass::GetClass(meth->GetReturnTypeNormalizedName().c_str());; std::cout << ""cl: "" << cl << std::endl;. return 0;; }; ```. output:; ```; meth->GetReturnTypeName(): boost::histogram::histogram<tuple<boost::histogram::axis::regular<double,boost::use_default,boost::use_default,boost::use_default> >,boost::histogram::unlimited_storage<allocator<char> > >; meth->GetReturnTypeNormalizedName(): boost::histogram::histogram<tuple<regular<double,use_default,use_default,use_default> >,unlimited_storage<allocator<char> > >; cl: 0; (int) 0; ```. So note that the normalized return type is missing the ```boost::histogram``` namespace for the template arguments of the std::tuple. (and then obviously trying to lookup the type again fails). This prevents properly calling this function and other similar ones from PyROOT because the normalized return type is used e.g. here https://github.com/root-project/root/blob/4483b01b7f4bad47332f98d773dbd9b8c7f36b9d/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1515",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12548
https://github.com/root-project/root/issues/12548:435,Testability,test,test,435,"Some boost histogram utility functions have trouble being called from PyROOT. I've traced this back to what looks like a name normalization problem. Unfortunately I did not manage to put together a standalone example without the boost histogram dependency. Consider the following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include <iostream>; #include <boost/histogram.hpp>. int test() {; auto ns = TClass::GetClass(""boost::histogram"");; auto meth = ns->GetMethodWithPrototype(""make_histogram"", ""boost::histogram::axis::regular<>&&"");. std::cout << ""meth->GetReturnTypeName(): "" << meth->GetReturnTypeName() << std::endl;; std::cout << ""meth->GetReturnTypeNormalizedName(): "" << meth->GetReturnTypeNormalizedName() << std::endl;. auto cl = TClass::GetClass(meth->GetReturnTypeNormalizedName().c_str());; std::cout << ""cl: "" << cl << std::endl;. return 0;; }; ```. output:; ```; meth->GetReturnTypeName(): boost::histogram::histogram<tuple<boost::histogram::axis::regular<double,boost::use_default,boost::use_default,boost::use_default> >,boost::histogram::unlimited_storage<allocator<char> > >; meth->GetReturnTypeNormalizedName(): boost::histogram::histogram<tuple<regular<double,use_default,use_default,use_default> >,unlimited_storage<allocator<char> > >; cl: 0; (int) 0; ```. So note that the normalized return type is missing the ```boost::histogram``` namespace for the template arguments of the std::tuple. (and then obviously trying to lookup the type again fails). This prevents properly calling this function and other similar ones from PyROOT because the normalized return type is used e.g. here https://github.com/root-project/root/blob/4483b01b7f4bad47332f98d773dbd9b8c7f36b9d/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1515",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12548
https://github.com/root-project/root/issues/12549:990,Availability,error,error,990," following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::Exec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:1283,Availability,Error,Error,1283,"ude ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecWithArgsAndReturn(address, args, ret)>: Called with no wrapper, not implemented!; res = 7.31217e-322; (int) 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:1982,Availability,Error,Error,1982,"ude ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecWithArgsAndReturn(address, args, ret)>: Called with no wrapper, not implemented!; res = 7.31217e-322; (int) 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:795,Integrability,wrap,wrapper,795,"Consider the following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:2067,Integrability,wrap,wrapper,2067,"ude ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecWithArgsAndReturn(address, args, ret)>: Called with no wrapper, not implemented!; res = 7.31217e-322; (int) 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:1441,Security,secur,security,1441,"ude ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecWithArgsAndReturn(address, args, ret)>: Called with no wrapper, not implemented!; res = 7.31217e-322; (int) 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:23,Testability,test,test,23,"Consider the following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:35,Testability,test,test,35,"Consider the following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:326,Testability,test,test,326,"Consider the following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/issues/12549:976,Testability,test,test,976,"Consider the following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12549
https://github.com/root-project/root/pull/12551:505,Deployability,update,updated,505,"# This Pull request:. While looking at the documentation for split branches, I noticed a direct contradiction in the user guide:. > As of ROOT 4.01/00, only `std::vector` of objects can be split.; > Support for splitting the other type of STL containers will be; > introduced in the near future. vs. > All STL containers are supported. ## Changes or fixes:. As now all STL containers are supported, I remove the bullet discussion the ROOT 4.01/00 state. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:475,Testability,test,tested,475,"# This Pull request:. While looking at the documentation for split branches, I noticed a direct contradiction in the user guide:. > As of ROOT 4.01/00, only `std::vector` of objects can be split.; > Support for splitting the other type of STL containers will be; > introduced in the near future. vs. > All STL containers are supported. ## Changes or fixes:. As now all STL containers are supported, I remove the bullet discussion the ROOT 4.01/00 state. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/pull/12551:122,Usability,guid,guide,122,"# This Pull request:. While looking at the documentation for split branches, I noticed a direct contradiction in the user guide:. > As of ROOT 4.01/00, only `std::vector` of objects can be split.; > Support for splitting the other type of STL containers will be; > introduced in the near future. vs. > All STL containers are supported. ## Changes or fixes:. As now all STL containers are supported, I remove the bullet discussion the ROOT 4.01/00 state. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12551
https://github.com/root-project/root/issues/12552:379,Integrability,depend,depends,379,"As report by @scott-snyder in https://github.com/root-project/root/pull/11263. Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see ATR-25049). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.). See also https://github.com/root-project/root/pull/11263#issuecomment-1231069071",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12552
https://github.com/root-project/root/issues/12552:113,Performance,race condition,race condition,113,"As report by @scott-snyder in https://github.com/root-project/root/pull/11263. Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see ATR-25049). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.). See also https://github.com/root-project/root/pull/11263#issuecomment-1231069071",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12552
https://github.com/root-project/root/issues/12552:474,Performance,load,loaded,474,"As report by @scott-snyder in https://github.com/root-project/root/pull/11263. Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see ATR-25049). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.). See also https://github.com/root-project/root/pull/11263#issuecomment-1231069071",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12552
https://github.com/root-project/root/issues/12552:675,Performance,load,load,675,"As report by @scott-snyder in https://github.com/root-project/root/pull/11263. Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see ATR-25049). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.). See also https://github.com/root-project/root/pull/11263#issuecomment-1231069071",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12552
https://github.com/root-project/root/issues/12552:856,Performance,load,loaded,856,"As report by @scott-snyder in https://github.com/root-project/root/pull/11263. Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see ATR-25049). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.). See also https://github.com/root-project/root/pull/11263#issuecomment-1231069071",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12552
https://github.com/root-project/root/issues/12552:930,Performance,load,loading,930,"As report by @scott-snyder in https://github.com/root-project/root/pull/11263. Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see ATR-25049). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.). See also https://github.com/root-project/root/pull/11263#issuecomment-1231069071",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12552
https://github.com/root-project/root/pull/12554:331,Safety,avoid,avoid,331,"* fix invalid memory access in RooFuncWrapper by getting observables and parameters of the original function, and not the one that is compiled for a normalization set, which is temporary. What matters are the names of the parameters and observables, and they are the same anyway. * new `CodeSquashContext::buildCall()` function to avoid code duplication. * add support for `RooExponential`, including unit test. Followup to #12529.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12554
https://github.com/root-project/root/pull/12554:21,Security,access,access,21,"* fix invalid memory access in RooFuncWrapper by getting observables and parameters of the original function, and not the one that is compiled for a normalization set, which is temporary. What matters are the names of the parameters and observables, and they are the same anyway. * new `CodeSquashContext::buildCall()` function to avoid code duplication. * add support for `RooExponential`, including unit test. Followup to #12529.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12554
https://github.com/root-project/root/pull/12554:406,Testability,test,test,406,"* fix invalid memory access in RooFuncWrapper by getting observables and parameters of the original function, and not the one that is compiled for a normalization set, which is temporary. What matters are the names of the parameters and observables, and they are the same anyway. * new `CodeSquashContext::buildCall()` function to avoid code duplication. * add support for `RooExponential`, including unit test. Followup to #12529.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12554
https://github.com/root-project/root/pull/12555:136,Performance,cache,cached,136,"This address one of the issue noted in https://sft.its.cern.ch/jira/browse/ROOT-2869. Instead of resetting`fNfill` (i.e. forgetting all cached data) right after taking an action (actual putting the data into the histogram), we now reset it at the beginning of the entry processing if we took action during the previous processing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12555
https://github.com/root-project/root/pull/12556:41,Modifiability,variab,variable,41,"It doesn't make sense to have the weight variable in the set of observables. This causes problems in various places, e.g.:. * this dummy `weightVar` is polluting the JSON file when exporting the workspace. * it is a nuisance for normalization because it will also appear in the normalization sets. This commit suggests to not add some dummy weight variable to the workspace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12556
https://github.com/root-project/root/pull/12556:348,Modifiability,variab,variable,348,"It doesn't make sense to have the weight variable in the set of observables. This causes problems in various places, e.g.:. * this dummy `weightVar` is polluting the JSON file when exporting the workspace. * it is a nuisance for normalization because it will also appear in the normalization sets. This commit suggests to not add some dummy weight variable to the workspace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12556
https://github.com/root-project/root/pull/12558:263,Deployability,update,update,263,1. Special handler of `TAttText` in jsroot; 2. Dedicated fragment in `TWebCanvas` GED; 3. Let select `TGaxis` object on canvas; 4. Support `TGaxis` in GED; 5. Fix - background color in geo painter; 6. Fix - correct placing of `TLegend` header; 7. Fix - correctly update TH1 drawing when fSumw2 changes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12558
https://github.com/root-project/root/issues/12559:347,Availability,error,error,347,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:372,Availability,Error,Error,372,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:977,Availability,Error,Error,977,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:1039,Availability,Error,Error,1039,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:1083,Availability,Error,Error,1083,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:1128,Availability,Error,Error,1128,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:1215,Availability,Error,Error,1215,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:1312,Availability,Error,Error,1312,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:1409,Availability,Error,Error,1409,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:1506,Availability,Error,Error,1506,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:1603,Availability,Error,Error,1603,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/issues/12559:530,Security,secur,security,530,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12559
https://github.com/root-project/root/pull/12561:27,Availability,failure,failures,27,"Recently, I am seeing test failures in local builds depending on the build directory, or rather the length of its name / path. I bisected this to commit https://github.com/root-project/root/commit/46ba2eefd00371b024ae239626c7600cd3259885 (""Enable a few modules for Windows"") which introduced a check to filter dependencies without cxxmodule. There are (at least) two problems with this check: First, we add the `cpp_module` which is equal to the `library_target_name` and not the pcm file name. This results in currently no module dependencies being passed to `rootcling` at all because the condition is never true!. This could be fixed by checking `dep IN_LIST local_modules_idx_deps`. However, that still doesn't work because `local_modules_idx_deps` does not contain all modules from the start but is constructed on-the-fly. This is particularly a problem for `libCore` whose dictionary is only created after the other libraries located below `core/` are processed, for example `Imt`. The problem is that `libImt` depends on `Core`, but at the time `ROOT_GENERATE_DICTIONARY` is called for `Imt`, it doesn't know yet about the dictionary of `Core`. Finally, I'm not sure if completely omitting the dependency for a target with `NO_CXXMODULE` in case of `runtime_cxxmodules` is correct. Based on the code around, I would expect to fall back to `*_rdict.pcm` in that case. Note: This change will probably break the (partial) support for modules on Windows, but for the the reasons spelled out above, I don't see an easy fix given the current situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:52,Integrability,depend,depending,52,"Recently, I am seeing test failures in local builds depending on the build directory, or rather the length of its name / path. I bisected this to commit https://github.com/root-project/root/commit/46ba2eefd00371b024ae239626c7600cd3259885 (""Enable a few modules for Windows"") which introduced a check to filter dependencies without cxxmodule. There are (at least) two problems with this check: First, we add the `cpp_module` which is equal to the `library_target_name` and not the pcm file name. This results in currently no module dependencies being passed to `rootcling` at all because the condition is never true!. This could be fixed by checking `dep IN_LIST local_modules_idx_deps`. However, that still doesn't work because `local_modules_idx_deps` does not contain all modules from the start but is constructed on-the-fly. This is particularly a problem for `libCore` whose dictionary is only created after the other libraries located below `core/` are processed, for example `Imt`. The problem is that `libImt` depends on `Core`, but at the time `ROOT_GENERATE_DICTIONARY` is called for `Imt`, it doesn't know yet about the dictionary of `Core`. Finally, I'm not sure if completely omitting the dependency for a target with `NO_CXXMODULE` in case of `runtime_cxxmodules` is correct. Based on the code around, I would expect to fall back to `*_rdict.pcm` in that case. Note: This change will probably break the (partial) support for modules on Windows, but for the the reasons spelled out above, I don't see an easy fix given the current situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:310,Integrability,depend,dependencies,310,"Recently, I am seeing test failures in local builds depending on the build directory, or rather the length of its name / path. I bisected this to commit https://github.com/root-project/root/commit/46ba2eefd00371b024ae239626c7600cd3259885 (""Enable a few modules for Windows"") which introduced a check to filter dependencies without cxxmodule. There are (at least) two problems with this check: First, we add the `cpp_module` which is equal to the `library_target_name` and not the pcm file name. This results in currently no module dependencies being passed to `rootcling` at all because the condition is never true!. This could be fixed by checking `dep IN_LIST local_modules_idx_deps`. However, that still doesn't work because `local_modules_idx_deps` does not contain all modules from the start but is constructed on-the-fly. This is particularly a problem for `libCore` whose dictionary is only created after the other libraries located below `core/` are processed, for example `Imt`. The problem is that `libImt` depends on `Core`, but at the time `ROOT_GENERATE_DICTIONARY` is called for `Imt`, it doesn't know yet about the dictionary of `Core`. Finally, I'm not sure if completely omitting the dependency for a target with `NO_CXXMODULE` in case of `runtime_cxxmodules` is correct. Based on the code around, I would expect to fall back to `*_rdict.pcm` in that case. Note: This change will probably break the (partial) support for modules on Windows, but for the the reasons spelled out above, I don't see an easy fix given the current situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:531,Integrability,depend,dependencies,531,"Recently, I am seeing test failures in local builds depending on the build directory, or rather the length of its name / path. I bisected this to commit https://github.com/root-project/root/commit/46ba2eefd00371b024ae239626c7600cd3259885 (""Enable a few modules for Windows"") which introduced a check to filter dependencies without cxxmodule. There are (at least) two problems with this check: First, we add the `cpp_module` which is equal to the `library_target_name` and not the pcm file name. This results in currently no module dependencies being passed to `rootcling` at all because the condition is never true!. This could be fixed by checking `dep IN_LIST local_modules_idx_deps`. However, that still doesn't work because `local_modules_idx_deps` does not contain all modules from the start but is constructed on-the-fly. This is particularly a problem for `libCore` whose dictionary is only created after the other libraries located below `core/` are processed, for example `Imt`. The problem is that `libImt` depends on `Core`, but at the time `ROOT_GENERATE_DICTIONARY` is called for `Imt`, it doesn't know yet about the dictionary of `Core`. Finally, I'm not sure if completely omitting the dependency for a target with `NO_CXXMODULE` in case of `runtime_cxxmodules` is correct. Based on the code around, I would expect to fall back to `*_rdict.pcm` in that case. Note: This change will probably break the (partial) support for modules on Windows, but for the the reasons spelled out above, I don't see an easy fix given the current situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:1017,Integrability,depend,depends,1017,"Recently, I am seeing test failures in local builds depending on the build directory, or rather the length of its name / path. I bisected this to commit https://github.com/root-project/root/commit/46ba2eefd00371b024ae239626c7600cd3259885 (""Enable a few modules for Windows"") which introduced a check to filter dependencies without cxxmodule. There are (at least) two problems with this check: First, we add the `cpp_module` which is equal to the `library_target_name` and not the pcm file name. This results in currently no module dependencies being passed to `rootcling` at all because the condition is never true!. This could be fixed by checking `dep IN_LIST local_modules_idx_deps`. However, that still doesn't work because `local_modules_idx_deps` does not contain all modules from the start but is constructed on-the-fly. This is particularly a problem for `libCore` whose dictionary is only created after the other libraries located below `core/` are processed, for example `Imt`. The problem is that `libImt` depends on `Core`, but at the time `ROOT_GENERATE_DICTIONARY` is called for `Imt`, it doesn't know yet about the dictionary of `Core`. Finally, I'm not sure if completely omitting the dependency for a target with `NO_CXXMODULE` in case of `runtime_cxxmodules` is correct. Based on the code around, I would expect to fall back to `*_rdict.pcm` in that case. Note: This change will probably break the (partial) support for modules on Windows, but for the the reasons spelled out above, I don't see an easy fix given the current situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:1201,Integrability,depend,dependency,1201,"Recently, I am seeing test failures in local builds depending on the build directory, or rather the length of its name / path. I bisected this to commit https://github.com/root-project/root/commit/46ba2eefd00371b024ae239626c7600cd3259885 (""Enable a few modules for Windows"") which introduced a check to filter dependencies without cxxmodule. There are (at least) two problems with this check: First, we add the `cpp_module` which is equal to the `library_target_name` and not the pcm file name. This results in currently no module dependencies being passed to `rootcling` at all because the condition is never true!. This could be fixed by checking `dep IN_LIST local_modules_idx_deps`. However, that still doesn't work because `local_modules_idx_deps` does not contain all modules from the start but is constructed on-the-fly. This is particularly a problem for `libCore` whose dictionary is only created after the other libraries located below `core/` are processed, for example `Imt`. The problem is that `libImt` depends on `Core`, but at the time `ROOT_GENERATE_DICTIONARY` is called for `Imt`, it doesn't know yet about the dictionary of `Core`. Finally, I'm not sure if completely omitting the dependency for a target with `NO_CXXMODULE` in case of `runtime_cxxmodules` is correct. Based on the code around, I would expect to fall back to `*_rdict.pcm` in that case. Note: This change will probably break the (partial) support for modules on Windows, but for the the reasons spelled out above, I don't see an easy fix given the current situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12561:22,Testability,test,test,22,"Recently, I am seeing test failures in local builds depending on the build directory, or rather the length of its name / path. I bisected this to commit https://github.com/root-project/root/commit/46ba2eefd00371b024ae239626c7600cd3259885 (""Enable a few modules for Windows"") which introduced a check to filter dependencies without cxxmodule. There are (at least) two problems with this check: First, we add the `cpp_module` which is equal to the `library_target_name` and not the pcm file name. This results in currently no module dependencies being passed to `rootcling` at all because the condition is never true!. This could be fixed by checking `dep IN_LIST local_modules_idx_deps`. However, that still doesn't work because `local_modules_idx_deps` does not contain all modules from the start but is constructed on-the-fly. This is particularly a problem for `libCore` whose dictionary is only created after the other libraries located below `core/` are processed, for example `Imt`. The problem is that `libImt` depends on `Core`, but at the time `ROOT_GENERATE_DICTIONARY` is called for `Imt`, it doesn't know yet about the dictionary of `Core`. Finally, I'm not sure if completely omitting the dependency for a target with `NO_CXXMODULE` in case of `runtime_cxxmodules` is correct. Based on the code around, I would expect to fall back to `*_rdict.pcm` in that case. Note: This change will probably break the (partial) support for modules on Windows, but for the the reasons spelled out above, I don't see an easy fix given the current situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12561
https://github.com/root-project/root/pull/12562:147,Deployability,update,updated,147,dedent does not work because {log} is not indented. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12562
https://github.com/root-project/root/pull/12562:30,Testability,log,log,30,dedent does not work because {log} is not indented. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12562
https://github.com/root-project/root/pull/12562:117,Testability,test,tested,117,dedent does not work because {log} is not indented. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12562
https://github.com/root-project/root/pull/12563:7,Deployability,release,release,7,"Bugfix release, tagged in JSROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12563
https://github.com/root-project/root/pull/12565:169,Deployability,update,updated,169,This PR removes the `RResult` wrapper from the public `RNTupleImporter` interface; private methods are still wrapped. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:30,Integrability,wrap,wrapper,30,This PR removes the `RResult` wrapper from the public `RNTupleImporter` interface; private methods are still wrapped. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:72,Integrability,interface,interface,72,This PR removes the `RResult` wrapper from the public `RNTupleImporter` interface; private methods are still wrapped. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:109,Integrability,wrap,wrapped,109,This PR removes the `RResult` wrapper from the public `RNTupleImporter` interface; private methods are still wrapped. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12565:139,Testability,test,tested,139,This PR removes the `RResult` wrapper from the public `RNTupleImporter` interface; private methods are still wrapped. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12565
https://github.com/root-project/root/pull/12566:445,Deployability,update,updated,445,"# This Pull request:. ## Changes or fixes:; Adds XY projection capabilities simultaneously for a standard TCanvas with a TH2. (This is needed for users in some applications where they do not use the new TWebCanvas, which was kindly implemented by @linev, but the traditional one). ![image](https://user-images.githubusercontent.com/10653970/228327012-83f2f1a0-b07b-46c1-a71c-4ba602ec3d6d.png). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10660",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12566
https://github.com/root-project/root/pull/12566:415,Testability,test,tested,415,"# This Pull request:. ## Changes or fixes:; Adds XY projection capabilities simultaneously for a standard TCanvas with a TH2. (This is needed for users in some applications where they do not use the new TWebCanvas, which was kindly implemented by @linev, but the traditional one). ![image](https://user-images.githubusercontent.com/10653970/228327012-83f2f1a0-b07b-46c1-a71c-4ba602ec3d6d.png). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10660",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12566
https://github.com/root-project/root/pull/12568:385,Availability,error,error,385,"When unloading a 'compiled' TClass, TClass sets the state of the TClass to the most information possible. This usually means setting the ClassInfo if the interpreter information is still known about the class. In the case of std::tuple is order to do that we need to generate code that depends on other types (that may also be unloaded), so skip that steps (which lead to 'compilation error' from the interpreter in the report cases (and a crash due to a couple of others issues solved also in this PR).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12568
https://github.com/root-project/root/pull/12568:286,Integrability,depend,depends,286,"When unloading a 'compiled' TClass, TClass sets the state of the TClass to the most information possible. This usually means setting the ClassInfo if the interpreter information is still known about the class. In the case of std::tuple is order to do that we need to generate code that depends on other types (that may also be unloaded), so skip that steps (which lead to 'compilation error' from the interpreter in the report cases (and a crash due to a couple of others issues solved also in this PR).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12568
https://github.com/root-project/root/issues/12569:1428,Deployability,install,install,1428,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; For dates before Jan 1st, 1970, `TTimeStamp` sometimes gives incorrect results when it’s initialized with date and time, whether using the unsigned date and time constructor, or the explicit year, month, day, hours, minutes, and seconds constructor.; There are no problems if `TTimeStamp` is initialized from a `time_t`. ### Expected behavior; `TTimeStamp(19600822, 0u, 0u, true, 0).AsString(""s"")` returns `""1960-08-23 00:00:00""` instead of `""1960-08-22 00:00:00""`.; Similarly for `TTimeStamp(1960, 8, 22, 0, 0, 0)`.; Casting it to `time_t` yields `-295315200`, which is indeed the Unix time for `""1960-08-23 00:00:00""`.; `TTimeStamp(-295401600, 0).AsString(""s"")` returns correctly `""1960-08-22 00:00:00""`. ### To Reproduce; See code and various tests on the [ROOT forum](https://root-forum.cern.ch/t/bug-in-ttimestamp-days-are-skipped-when-using-date-and-time-constructor/54201/1). ### Setup; ROOT Version: 6.26/02, heads/latest-stable@c8d49336; Platform: Ubuntu 22.04.2; Compiler: linuxx8664gcc; Compiled with `cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_BUILD_TYPE='RelWithDebInfo' -Dbuiltin_vc='ON' -Dcudnn='OFF' -Dcfitsio='ON' -Dgviz='ON' -Dqt5_web='ON' -Dunuran='ON' -Dvc='ON' -Dveccore='ON' ../git`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12569
https://github.com/root-project/root/issues/12569:1129,Testability,test,tests,1129,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; For dates before Jan 1st, 1970, `TTimeStamp` sometimes gives incorrect results when it’s initialized with date and time, whether using the unsigned date and time constructor, or the explicit year, month, day, hours, minutes, and seconds constructor.; There are no problems if `TTimeStamp` is initialized from a `time_t`. ### Expected behavior; `TTimeStamp(19600822, 0u, 0u, true, 0).AsString(""s"")` returns `""1960-08-23 00:00:00""` instead of `""1960-08-22 00:00:00""`.; Similarly for `TTimeStamp(1960, 8, 22, 0, 0, 0)`.; Casting it to `time_t` yields `-295315200`, which is indeed the Unix time for `""1960-08-23 00:00:00""`.; `TTimeStamp(-295401600, 0).AsString(""s"")` returns correctly `""1960-08-22 00:00:00""`. ### To Reproduce; See code and various tests on the [ROOT forum](https://root-forum.cern.ch/t/bug-in-ttimestamp-days-are-skipped-when-using-date-and-time-constructor/54201/1). ### Setup; ROOT Version: 6.26/02, heads/latest-stable@c8d49336; Platform: Ubuntu 22.04.2; Compiler: linuxx8664gcc; Compiled with `cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_BUILD_TYPE='RelWithDebInfo' -Dbuiltin_vc='ON' -Dcudnn='OFF' -Dcfitsio='ON' -Dgviz='ON' -Dqt5_web='ON' -Dunuran='ON' -Dvc='ON' -Dveccore='ON' ../git`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12569
https://github.com/root-project/root/pull/12572:359,Deployability,update,updated,359,"# This Pull request:; Adds experimental support for histogramming on GPU with CUDA. ; `[skip-ci]`. ## Changes or fixes:; - N-dimensional histograms with fixed and variable sized bins can be filled on the GPU; - Histogram statistics (sum of weights, sum of square of weights, etc.) can be calculated on GPU . ## Checklist:; - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12572
https://github.com/root-project/root/pull/12572:163,Modifiability,variab,variable,163,"# This Pull request:; Adds experimental support for histogramming on GPU with CUDA. ; `[skip-ci]`. ## Changes or fixes:; - N-dimensional histograms with fixed and variable sized bins can be filled on the GPU; - Histogram statistics (sum of weights, sum of square of weights, etc.) can be calculated on GPU . ## Checklist:; - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12572
https://github.com/root-project/root/pull/12572:329,Testability,test,tested,329,"# This Pull request:; Adds experimental support for histogramming on GPU with CUDA. ; `[skip-ci]`. ## Changes or fixes:; - N-dimensional histograms with fixed and variable sized bins can be filled on the GPU; - Histogram statistics (sum of weights, sum of square of weights, etc.) can be calculated on GPU . ## Checklist:; - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12572
https://github.com/root-project/root/pull/12574:224,Performance,load,load,224,"This PR adds a new `Create` factory method to the `RNTupleInspector` that takes the name and source path of the `RNTuple` to be inspected as its arguments. This removes the need for the user to open the relevant `TFile` and load the `RNTuple` manually, which can be useful in case one is only interested in inspecting an `RNTuple`. Additionally, a check is added to the existing `Create(RNTuple *sourceNTuple)` method to make sure the pointer that was passed does not refer to null.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12574
https://github.com/root-project/root/pull/12575:30,Energy Efficiency,Power,Powershell,30,This prevent having up to 400 Powershell instances when building ROOT (every time `root-config --has-whatever` is called),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12575
https://github.com/root-project/root/pull/12575:88,Modifiability,config,config,88,This prevent having up to 400 Powershell instances when building ROOT (every time `root-config --has-whatever` is called),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12575
https://github.com/root-project/root/pull/12576:89,Testability,test,test,89,This commit adds support for using RooNllVarNew in code-squashing/AD. It also adds a new test that uses code-squashing and AD based derivatives to minimize a simple model.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12576
https://github.com/root-project/root/pull/12576:158,Usability,simpl,simple,158,This commit adds support for using RooNllVarNew in code-squashing/AD. It also adds a new test that uses code-squashing and AD based derivatives to minimize a simple model.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12576
https://github.com/root-project/root/pull/12578:917,Deployability,configurat,configuration,917,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/pull/12578:11,Integrability,depend,dependency,11,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/pull/12578:114,Integrability,depend,depends,114,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/pull/12578:189,Integrability,interface,interfaces,189,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/pull/12578:431,Integrability,depend,dependency,431,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/pull/12578:582,Integrability,depend,dependency,582,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/pull/12578:984,Integrability,depend,depends,984,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/pull/12578:1147,Integrability,depend,dependency,1147,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/pull/12578:917,Modifiability,config,configuration,917,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/pull/12578:487,Safety,avoid,avoided,487,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/pull/12578:569,Safety,avoid,avoiding,569,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/pull/12578:1134,Safety,avoid,avoiding,1134,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12578
https://github.com/root-project/root/issues/12579:1184,Availability,down,download,1184,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `ROOT` and latest` cppyy 3.0.1` cannot be used in the same virtual environment. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Please, consider back porting the feature needed from `cppyy 3.0.1`:; https://github.com/wlav/CPyCppyy/commit/6c7ca2547347b7bea8e49c7f2337fa9fb0455186. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12579
https://github.com/root-project/root/issues/12579:1166,Deployability,install,install,1166,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `ROOT` and latest` cppyy 3.0.1` cannot be used in the same virtual environment. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Please, consider back porting the feature needed from `cppyy 3.0.1`:; https://github.com/wlav/CPyCppyy/commit/6c7ca2547347b7bea8e49c7f2337fa9fb0455186. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12579
https://github.com/root-project/root/issues/12579:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `ROOT` and latest` cppyy 3.0.1` cannot be used in the same virtual environment. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Please, consider back porting the feature needed from `cppyy 3.0.1`:; https://github.com/wlav/CPyCppyy/commit/6c7ca2547347b7bea8e49c7f2337fa9fb0455186. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12579
https://github.com/root-project/root/issues/12579:569,Usability,clear,clear,569,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `ROOT` and latest` cppyy 3.0.1` cannot be used in the same virtual environment. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Please, consider back porting the feature needed from `cppyy 3.0.1`:; https://github.com/wlav/CPyCppyy/commit/6c7ca2547347b7bea8e49c7f2337fa9fb0455186. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12579
https://github.com/root-project/root/pull/12580:272,Deployability,update,updated,272,# This Pull request:. back-ports support __cast_cpp__ to implicitly convert python objects to proxies. ## Changes or fixes:. cherry-picked https://github.com/wlav/CPyCppyy/commit/6c7ca2547347b7bea8e49c7f2337fa9fb0455186. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #12579,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12580:242,Testability,test,tested,242,# This Pull request:. back-ports support __cast_cpp__ to implicitly convert python objects to proxies. ## Changes or fixes:. cherry-picked https://github.com/wlav/CPyCppyy/commit/6c7ca2547347b7bea8e49c7f2337fa9fb0455186. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #12579,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12580
https://github.com/root-project/root/pull/12581:77,Availability,avail,available,77,"I know there's ""add debug output"" - but this is something we'll want to have available anyway, without having to re-run. I'm not dumping `env` because that can trigger the log grepper (not too concerned by tokens - GH is doing a good job at hiding those).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12581
https://github.com/root-project/root/pull/12581:172,Testability,log,log,172,"I know there's ""add debug output"" - but this is something we'll want to have available anyway, without having to re-run. I'm not dumping `env` because that can trigger the log grepper (not too concerned by tokens - GH is doing a good job at hiding those).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12581
https://github.com/root-project/root/pull/12582:107,Availability,down,download,107,# This Pull request:. ## Changes or fixes:. ### Push event behavior. Builds triggered by push events never download previous artifacts and always do clean builds. ### Artifact uploads. Use different heuristics to decide when to upload artifacts. #### Old; - Check if connection to s3 was possible. #### New; - Never upload on pull request; - Never upload incremental builds. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). <details><summary></summary>; <p>; [skip-ci]; </p>; </details>,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12582
https://github.com/root-project/root/pull/12582:426,Deployability,update,updated,426,# This Pull request:. ## Changes or fixes:. ### Push event behavior. Builds triggered by push events never download previous artifacts and always do clean builds. ### Artifact uploads. Use different heuristics to decide when to upload artifacts. #### Old; - Check if connection to s3 was possible. #### New; - Never upload on pull request; - Never upload incremental builds. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). <details><summary></summary>; <p>; [skip-ci]; </p>; </details>,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12582
https://github.com/root-project/root/pull/12582:396,Testability,test,tested,396,# This Pull request:. ## Changes or fixes:. ### Push event behavior. Builds triggered by push events never download previous artifacts and always do clean builds. ### Artifact uploads. Use different heuristics to decide when to upload artifacts. #### Old; - Check if connection to s3 was possible. #### New; - Never upload on pull request; - Never upload incremental builds. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). <details><summary></summary>; <p>; [skip-ci]; </p>; </details>,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12582
https://github.com/root-project/root/pull/12587:479,Deployability,update,updated,479,"Add a few clarifications to the description of the `std::variant<T1, T2, ..., Tn>` type in the RNTuple Reference Specifications document. Currently, the dispatch tag is `== 0` _iif_ the variant was in the invalid state when the entry was filled. This condition is also expected to happen after the late model extension PRs are merged, given that late-added fields of type `std::variant<Ts...>` are in an invalid state for entries for which there is no data. ## Checklist:; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12587
https://github.com/root-project/root/pull/12588:70,Modifiability,variab,variable,70,"As noted in commit 538396a869 some weeks ago, Clang 15 warns that the variable v may be used uninitialized because it does not understand the pointer hackery to read individual bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12588
https://github.com/root-project/root/issues/12589:430,Performance,perform,performed,430,As reported in https://root-forum.cern.ch/t/tmva-read-image-data-for-application-of-a-cnn-model/54181/15 ; and shown in this notebook example; https://cernbox.cern.ch/s/U7p6sgH7QN4GRlX. A CNN model that is trained on GPU and containing a BNORM layer produces wring results (all 0 or 1) when is evaluated (e.g. using RReader) on CPU. ; The evaluation that is done in the Classification macro (in `Factory::EvcaluateAllMethods`) is performed on GPU. ; This happens only when the model contains the BNORM layer.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12589
https://github.com/root-project/root/pull/12590:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/11942; 2. https://github.com/root-project/root/pull/9539; The final commit with the code modernization (others have already been backported in #11960); 3. https://github.com/root-project/root/pull/11963; 4. https://github.com/root-project/root/pull/12015; 5. https://github.com/root-project/root/pull/12022; Only the last one about throwing the exception in `RooAbsArg::redirectServers (the other commits have been backported already in #12057 and #12092); 6. https://github.com/root-project/root/pull/12180; 7. https://github.com/root-project/root/pull/12223; 8. https://github.com/root-project/root/pull/12232; 9. https://github.com/root-project/root/pull/12219; Except for the first and last commit that relate to the RooFit AD work; 10. https://github.com/root-project/root/pull/12304; 11. https://github.com/root-project/root/pull/12442; Only the first two commits that were not already backported; 12. https://github.com/root-project/root/pull/12447. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12590
https://github.com/root-project/root/issues/12591:243,Integrability,depend,dependencies,243,"Commit 46ba2eefd00371b024ae239626c7600cd3259885 (https://github.com/root-project/root/pull/12082) enabled a few modules for Windows, but added `NO_CXXMODULE` to a couple others that don't work yet. This requires support for figuring out which dependencies have modules and which ones don't. Unfortunately, this support had some flaws and had to be reverted in commit 2d7373d47ef2acc53f4eed004082fee83caab6a3 (https://github.com/root-project/root/pull/12561) - see the summary and commit messages for more details. To summarize, the core of the problem is that the build system expected a dependency to have a module if it had been registered beforehand. This is incompatible with how we build `libCore` and some other fundamental libraries. We likely have to implement it the other way around, ie keep track of which targets will produce a module. This may be enough and work for the use cases we have on Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12591
https://github.com/root-project/root/issues/12591:487,Integrability,message,messages,487,"Commit 46ba2eefd00371b024ae239626c7600cd3259885 (https://github.com/root-project/root/pull/12082) enabled a few modules for Windows, but added `NO_CXXMODULE` to a couple others that don't work yet. This requires support for figuring out which dependencies have modules and which ones don't. Unfortunately, this support had some flaws and had to be reverted in commit 2d7373d47ef2acc53f4eed004082fee83caab6a3 (https://github.com/root-project/root/pull/12561) - see the summary and commit messages for more details. To summarize, the core of the problem is that the build system expected a dependency to have a module if it had been registered beforehand. This is incompatible with how we build `libCore` and some other fundamental libraries. We likely have to implement it the other way around, ie keep track of which targets will produce a module. This may be enough and work for the use cases we have on Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12591
https://github.com/root-project/root/issues/12591:588,Integrability,depend,dependency,588,"Commit 46ba2eefd00371b024ae239626c7600cd3259885 (https://github.com/root-project/root/pull/12082) enabled a few modules for Windows, but added `NO_CXXMODULE` to a couple others that don't work yet. This requires support for figuring out which dependencies have modules and which ones don't. Unfortunately, this support had some flaws and had to be reverted in commit 2d7373d47ef2acc53f4eed004082fee83caab6a3 (https://github.com/root-project/root/pull/12561) - see the summary and commit messages for more details. To summarize, the core of the problem is that the build system expected a dependency to have a module if it had been registered beforehand. This is incompatible with how we build `libCore` and some other fundamental libraries. We likely have to implement it the other way around, ie keep track of which targets will produce a module. This may be enough and work for the use cases we have on Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12591
https://github.com/root-project/root/issues/12592:57,Availability,error,error,57,The formula showing the calculations of the TProfile bin error are not correct if the weights are different than 1. ; In https://root.cern/doc/master/classTProfile.html . See https://root-forum.cern.ch/t/errors-in-weighted-tprofiles/54299,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12592
https://github.com/root-project/root/issues/12592:204,Availability,error,errors-in-weighted-tprofiles,204,The formula showing the calculations of the TProfile bin error are not correct if the weights are different than 1. ; In https://root.cern/doc/master/classTProfile.html . See https://root-forum.cern.ch/t/errors-in-weighted-tprofiles/54299,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12592
https://github.com/root-project/root/pull/12593:13,Deployability,release,release,13,"We only have release builds for incrementals, i.e. only release builds use artifacts, so there is no point in building debug artifacts.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12593
https://github.com/root-project/root/pull/12593:56,Deployability,release,release,56,"We only have release builds for incrementals, i.e. only release builds use artifacts, so there is no point in building debug artifacts.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12593
https://github.com/root-project/root/pull/12594:107,Testability,test,test,107,This PR achieves several things in the RooFit HS3 format:. * JSON -> WS -> JSON closure in the HistFactory test (the JSON is now invariant); * Fix export of RooDataSets with only one entry; * Automatically export RooDataSets that represents binned datasets to the same format at binned datasets; * Also export special `Lumi` parameter from HistFactory; * Achieve exactly the same fit results with the same parameters when exporting HistFactory workspace to JSON and importing it back,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12594
https://github.com/root-project/root/pull/12595:113,Integrability,depend,depending,113,"The implementations of the virtual `RooAbsL::getParameters()` either returned an owning of a non-owning pointer, depending on the implementation class. RooSubsidiaryL returned a non-owning pointer, and the default implementation an owning pointer. The caller code of course doesn't know what to do with this, resulting in memory leaks. To fix this problem, the interface is suggested to return `std::unique_ptr<RooArgSet>`. Changing this interface now is okay because it has not been adopted by the users yet (it's from the new test statistic classes introduced in ROOT 6.26).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12595
https://github.com/root-project/root/pull/12595:361,Integrability,interface,interface,361,"The implementations of the virtual `RooAbsL::getParameters()` either returned an owning of a non-owning pointer, depending on the implementation class. RooSubsidiaryL returned a non-owning pointer, and the default implementation an owning pointer. The caller code of course doesn't know what to do with this, resulting in memory leaks. To fix this problem, the interface is suggested to return `std::unique_ptr<RooArgSet>`. Changing this interface now is okay because it has not been adopted by the users yet (it's from the new test statistic classes introduced in ROOT 6.26).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12595
https://github.com/root-project/root/pull/12595:438,Integrability,interface,interface,438,"The implementations of the virtual `RooAbsL::getParameters()` either returned an owning of a non-owning pointer, depending on the implementation class. RooSubsidiaryL returned a non-owning pointer, and the default implementation an owning pointer. The caller code of course doesn't know what to do with this, resulting in memory leaks. To fix this problem, the interface is suggested to return `std::unique_ptr<RooArgSet>`. Changing this interface now is okay because it has not been adopted by the users yet (it's from the new test statistic classes introduced in ROOT 6.26).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12595
https://github.com/root-project/root/pull/12595:528,Testability,test,test,528,"The implementations of the virtual `RooAbsL::getParameters()` either returned an owning of a non-owning pointer, depending on the implementation class. RooSubsidiaryL returned a non-owning pointer, and the default implementation an owning pointer. The caller code of course doesn't know what to do with this, resulting in memory leaks. To fix this problem, the interface is suggested to return `std::unique_ptr<RooArgSet>`. Changing this interface now is okay because it has not been adopted by the users yet (it's from the new test statistic classes introduced in ROOT 6.26).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12595
https://github.com/root-project/root/issues/12597:240,Testability,test,test,240,"First reported at https://root-forum.cern.ch/t/rdataframe-unexpected-behavior-with-define/54329 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>. int main() {; ROOT::RDataFrame df(100);; auto df2 = df.Define(""test"", [] { return ROOT::RVec<bool>(1u, true); });. auto disp = df2.Display({""test""}, 3);; disp->Print();; }; ```; should print. ```; +-----+------+; | Row | test |; +-----+------+; | 0 | true |; +-----+------+; | 1 | true |; +-----+------+; | 2 | true |; +-----+------+; ```; but instead prints. ```; +-----+------+; | Row | test |; +-----+------+; | 0 | true |; +-----+------+; | 1 | true |; | | true |; +-----+------+; | 2 | true |; | | true |; | | true |; +-----+------+; ```. (the value of each entry is appended to the collection representation instead of substituting it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12597
https://github.com/root-project/root/issues/12597:318,Testability,test,test,318,"First reported at https://root-forum.cern.ch/t/rdataframe-unexpected-behavior-with-define/54329 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>. int main() {; ROOT::RDataFrame df(100);; auto df2 = df.Define(""test"", [] { return ROOT::RVec<bool>(1u, true); });. auto disp = df2.Display({""test""}, 3);; disp->Print();; }; ```; should print. ```; +-----+------+; | Row | test |; +-----+------+; | 0 | true |; +-----+------+; | 1 | true |; +-----+------+; | 2 | true |; +-----+------+; ```; but instead prints. ```; +-----+------+; | Row | test |; +-----+------+; | 0 | true |; +-----+------+; | 1 | true |; | | true |; +-----+------+; | 2 | true |; | | true |; | | true |; +-----+------+; ```. (the value of each entry is appended to the collection representation instead of substituting it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12597
https://github.com/root-project/root/issues/12597:398,Testability,test,test,398,"First reported at https://root-forum.cern.ch/t/rdataframe-unexpected-behavior-with-define/54329 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>. int main() {; ROOT::RDataFrame df(100);; auto df2 = df.Define(""test"", [] { return ROOT::RVec<bool>(1u, true); });. auto disp = df2.Display({""test""}, 3);; disp->Print();; }; ```; should print. ```; +-----+------+; | Row | test |; +-----+------+; | 0 | true |; +-----+------+; | 1 | true |; +-----+------+; | 2 | true |; +-----+------+; ```; but instead prints. ```; +-----+------+; | Row | test |; +-----+------+; | 0 | true |; +-----+------+; | 1 | true |; | | true |; +-----+------+; | 2 | true |; | | true |; | | true |; +-----+------+; ```. (the value of each entry is appended to the collection representation instead of substituting it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12597
https://github.com/root-project/root/issues/12597:566,Testability,test,test,566,"First reported at https://root-forum.cern.ch/t/rdataframe-unexpected-behavior-with-define/54329 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>. int main() {; ROOT::RDataFrame df(100);; auto df2 = df.Define(""test"", [] { return ROOT::RVec<bool>(1u, true); });. auto disp = df2.Display({""test""}, 3);; disp->Print();; }; ```; should print. ```; +-----+------+; | Row | test |; +-----+------+; | 0 | true |; +-----+------+; | 1 | true |; +-----+------+; | 2 | true |; +-----+------+; ```; but instead prints. ```; +-----+------+; | Row | test |; +-----+------+; | 0 | true |; +-----+------+; | 1 | true |; | | true |; +-----+------+; | 2 | true |; | | true |; | | true |; +-----+------+; ```. (the value of each entry is appended to the collection representation instead of substituting it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12597
https://github.com/root-project/root/pull/12602:250,Integrability,depend,dependencies,250,"On Windows, we currently cannot generate all modules due to crashes, so some dictionaries are generated with the option `NO_CXXMODULE`. This information needs to be propagated and taken into account when those dictionaries are, in turn, specified as dependencies. This re-implements the logic reverted in commit 2d7373d47e (see the message for details) and closes #12591.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:332,Integrability,message,message,332,"On Windows, we currently cannot generate all modules due to crashes, so some dictionaries are generated with the option `NO_CXXMODULE`. This information needs to be propagated and taken into account when those dictionaries are, in turn, specified as dependencies. This re-implements the logic reverted in commit 2d7373d47e (see the message for details) and closes #12591.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12602:287,Testability,log,logic,287,"On Windows, we currently cannot generate all modules due to crashes, so some dictionaries are generated with the option `NO_CXXMODULE`. This information needs to be propagated and taken into account when those dictionaries are, in turn, specified as dependencies. This re-implements the logic reverted in commit 2d7373d47e (see the message for details) and closes #12591.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12602
https://github.com/root-project/root/pull/12607:12,Modifiability,variab,variable,12,Fixes wrong variable being used to specify branch for windows nightlies; ```diff; --platform windows10; --incremental false; - --base_ref ${{ github.base_ref }}; + --base_ref ${{ github.ref_name }}; --repository ${{ github.server_url }}/${{ github.repository }}; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12607
https://github.com/root-project/root/pull/12608:249,Modifiability,variab,variables,249,"Two changes: . 1. Removes the deprecated `RooFit::Format(const char* option, int)` command argument; 2. Remove deprecated `RooAbsPdf::paramOn()` overload that take a formatting string directly; 3. Make it possible to use parameter titles instead of variables in `RooAbsPdf::paramOn()`, closing the followng JIRA ticket:; https://sft.its.cern.ch/jira/browse/ROOT-6039. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12608
https://github.com/root-project/root/issues/12610:249,Modifiability,variab,variables,249,"*Original request by Marc Escalier in [ROOT-2753](https://sft.its.cern.ch/jira/browse/ROOT-2753), which got quite a few comments. Ported now to GitHub to make the request more visible.*. Hello,; one can create a RooDataSet with a given selection on variables by doing :; ```C++; RooRealVar myvariable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable,""condition on myvariable""); ```; for which ""condition on the variable"" could be for example : ""myvariable < 10""; this works well if myvariable is a float for example; but in the case where myvariable is a vector (i mean a array) of float or anything else :; (myvector_variable[0], myvector_myvariable[1], etc...), how to do to make a selection on the first (or any index) element of the vector, with a condition on the element of the vector ?; it seems this is not implemented in roofit ?; i mean, if i do this :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable,""myvector_variable[0]<10""); ```; it crashes; if i do :; ```C++; RooRealVar myvector_variable(""myvector_variable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable[0],""myvector_variable[0] < 10""); ```; it is ""forbidden"" by the root/roofit program; by the way, it crashes also if i do :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable); ```; (if myvariable is a vector and not a simple variable); thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12610
https://github.com/root-project/root/issues/12610:444,Modifiability,variab,variable,444,"*Original request by Marc Escalier in [ROOT-2753](https://sft.its.cern.ch/jira/browse/ROOT-2753), which got quite a few comments. Ported now to GitHub to make the request more visible.*. Hello,; one can create a RooDataSet with a given selection on variables by doing :; ```C++; RooRealVar myvariable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable,""condition on myvariable""); ```; for which ""condition on the variable"" could be for example : ""myvariable < 10""; this works well if myvariable is a float for example; but in the case where myvariable is a vector (i mean a array) of float or anything else :; (myvector_variable[0], myvector_myvariable[1], etc...), how to do to make a selection on the first (or any index) element of the vector, with a condition on the element of the vector ?; it seems this is not implemented in roofit ?; i mean, if i do this :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable,""myvector_variable[0]<10""); ```; it crashes; if i do :; ```C++; RooRealVar myvector_variable(""myvector_variable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable[0],""myvector_variable[0] < 10""); ```; it is ""forbidden"" by the root/roofit program; by the way, it crashes also if i do :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable); ```; (if myvariable is a vector and not a simple variable); thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12610
https://github.com/root-project/root/issues/12610:1505,Modifiability,variab,variable,1505,"*Original request by Marc Escalier in [ROOT-2753](https://sft.its.cern.ch/jira/browse/ROOT-2753), which got quite a few comments. Ported now to GitHub to make the request more visible.*. Hello,; one can create a RooDataSet with a given selection on variables by doing :; ```C++; RooRealVar myvariable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable,""condition on myvariable""); ```; for which ""condition on the variable"" could be for example : ""myvariable < 10""; this works well if myvariable is a float for example; but in the case where myvariable is a vector (i mean a array) of float or anything else :; (myvector_variable[0], myvector_myvariable[1], etc...), how to do to make a selection on the first (or any index) element of the vector, with a condition on the element of the vector ?; it seems this is not implemented in roofit ?; i mean, if i do this :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable,""myvector_variable[0]<10""); ```; it crashes; if i do :; ```C++; RooRealVar myvector_variable(""myvector_variable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable[0],""myvector_variable[0] < 10""); ```; it is ""forbidden"" by the root/roofit program; by the way, it crashes also if i do :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable); ```; (if myvariable is a vector and not a simple variable); thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12610
https://github.com/root-project/root/issues/12610:1498,Usability,simpl,simple,1498,"*Original request by Marc Escalier in [ROOT-2753](https://sft.its.cern.ch/jira/browse/ROOT-2753), which got quite a few comments. Ported now to GitHub to make the request more visible.*. Hello,; one can create a RooDataSet with a given selection on variables by doing :; ```C++; RooRealVar myvariable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable,""condition on myvariable""); ```; for which ""condition on the variable"" could be for example : ""myvariable < 10""; this works well if myvariable is a float for example; but in the case where myvariable is a vector (i mean a array) of float or anything else :; (myvector_variable[0], myvector_myvariable[1], etc...), how to do to make a selection on the first (or any index) element of the vector, with a condition on the element of the vector ?; it seems this is not implemented in roofit ?; i mean, if i do this :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable,""myvector_variable[0]<10""); ```; it crashes; if i do :; ```C++; RooRealVar myvector_variable(""myvector_variable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable[0],""myvector_variable[0] < 10""); ```; it is ""forbidden"" by the root/roofit program; by the way, it crashes also if i do :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable); ```; (if myvariable is a vector and not a simple variable); thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12610
https://github.com/root-project/root/pull/12612:235,Availability,failure,failures,235,"Instead of guessing the number of parameters for the model represented by RooFuncWrapper, we now introduce a parameter size function that can be used to declare gradient output arrays of the right size. Possibly fixes some of the ASAN failures @hahnjo reported earlier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12612
https://github.com/root-project/root/pull/12613:135,Modifiability,variab,variables,135,"This commit provides the possibility to pass system library search paths as well as some compiler include paths to ROOT as environment variables.; This has the advantage that ROOT will spawn less sub-processes and we can do the setup only once, instead of doing it for every single executable that is linked to ROOT. The commit does not change any default behaviour! Rather, expert-users may use the new feature by moving the initialization of the search paths to say software environment loading. In ALICE, we do something like. ```; export ROOT_LDSYSPATH=$(LD_DEBUG=libs LD_PRELOAD=DOESNOTEXIST ls /tmp/DOESNOTEXIST 2>&1 | grep -m 1 ""system search path"" | sed 's/.*=//g' | awk '//{print $1}'). export ROOT_CPPSYSINCL=$(LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n '/^.include/,${/^ \/.*++/{p}}' | tr '\n' ':' | tr ' ' ':'); ```. speeding up the initialization of our executables at runtime and doing less syscalls that create short-lived processes, for instance calling the compiler. The effect from this operation can be seen by counting the `execve` syscalls in a small example:. ```; strace -e execve -f root.exe -q -e ""double x=1;"" # ---> 14 calls. export ROOT_LDSYSPATH=...; export ROOT_CPPSYSINCL=...; strace -e execve -f root.exe -q -e ""double x=1;"" # ---> 6 calls; ```. This gain can accumulate to significant savings when used in a multi-process environment such as ALICE is using.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12613:489,Performance,load,loading,489,"This commit provides the possibility to pass system library search paths as well as some compiler include paths to ROOT as environment variables.; This has the advantage that ROOT will spawn less sub-processes and we can do the setup only once, instead of doing it for every single executable that is linked to ROOT. The commit does not change any default behaviour! Rather, expert-users may use the new feature by moving the initialization of the search paths to say software environment loading. In ALICE, we do something like. ```; export ROOT_LDSYSPATH=$(LD_DEBUG=libs LD_PRELOAD=DOESNOTEXIST ls /tmp/DOESNOTEXIST 2>&1 | grep -m 1 ""system search path"" | sed 's/.*=//g' | awk '//{print $1}'). export ROOT_CPPSYSINCL=$(LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n '/^.include/,${/^ \/.*++/{p}}' | tr '\n' ':' | tr ' ' ':'); ```. speeding up the initialization of our executables at runtime and doing less syscalls that create short-lived processes, for instance calling the compiler. The effect from this operation can be seen by counting the `execve` syscalls in a small example:. ```; strace -e execve -f root.exe -q -e ""double x=1;"" # ---> 14 calls. export ROOT_LDSYSPATH=...; export ROOT_CPPSYSINCL=...; strace -e execve -f root.exe -q -e ""double x=1;"" # ---> 6 calls; ```. This gain can accumulate to significant savings when used in a multi-process environment such as ALICE is using.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12613
https://github.com/root-project/root/pull/12614:378,Integrability,wrap,wraps,378,"This commit introduces an alias for raw pointers for indicating that the return type of a RooFit function is an owning pointer that must be deleted by the caller. For RooFit developers, it can be very useful to make this an alias to `std::unique_ptr<T>`, in order to check that your code has no memory problems. Changing this alias is equivalent to forcing all code immediately wraps the result of functions returning a `RooFit::OwningPtr<T>` in a `std::unique_ptr<T>`. The two fundamental RooFit functions `RooAbsArg::getVariables()` and `RooAbsArg::getParameters()` are also migrated to this new alias, and I tried to recompile ROOT locally using the `std::unique_ptr<T>` alias. This commit includes also the necessary changes to make ROOT compile with both raw and smart pointer alias, always wrapping the result of these functions in `std::unique_ptr<RooArgSet>`. There are many benefits of this alias, and my ultimate goal here is to eventually make PyROOT aware of it to always take ownership of the referenced objects. But it's also a great tool for developers to check that there are no memory issues in RooFit code. Now that this PR sets the first examples of how to use this alias, I can make further migrations also a good warm-up projects for new contributors such as students.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12614
https://github.com/root-project/root/pull/12614:796,Integrability,wrap,wrapping,796,"This commit introduces an alias for raw pointers for indicating that the return type of a RooFit function is an owning pointer that must be deleted by the caller. For RooFit developers, it can be very useful to make this an alias to `std::unique_ptr<T>`, in order to check that your code has no memory problems. Changing this alias is equivalent to forcing all code immediately wraps the result of functions returning a `RooFit::OwningPtr<T>` in a `std::unique_ptr<T>`. The two fundamental RooFit functions `RooAbsArg::getVariables()` and `RooAbsArg::getParameters()` are also migrated to this new alias, and I tried to recompile ROOT locally using the `std::unique_ptr<T>` alias. This commit includes also the necessary changes to make ROOT compile with both raw and smart pointer alias, always wrapping the result of these functions in `std::unique_ptr<RooArgSet>`. There are many benefits of this alias, and my ultimate goal here is to eventually make PyROOT aware of it to always take ownership of the referenced objects. But it's also a great tool for developers to check that there are no memory issues in RooFit code. Now that this PR sets the first examples of how to use this alias, I can make further migrations also a good warm-up projects for new contributors such as students.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12614
https://github.com/root-project/root/pull/12615:12,Integrability,wrap,wrapper,12,"Fix the GSL wrapper of the function generating random numbers according to a ND Gaussian. Do not create gsl_matrix and vector but use a view. Also since the GSL function requires the Cholesky factorized L matrix of the covariance, have an interface to provide the factorized matrix to gain time. This will fix the old JIRA issue [ROOT-767](https://sft.its.cern.ch/jira/browse/ROOT-767)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12615
https://github.com/root-project/root/pull/12615:239,Integrability,interface,interface,239,"Fix the GSL wrapper of the function generating random numbers according to a ND Gaussian. Do not create gsl_matrix and vector but use a view. Also since the GSL function requires the Cholesky factorized L matrix of the covariance, have an interface to provide the factorized matrix to gain time. This will fix the old JIRA issue [ROOT-767](https://sft.its.cern.ch/jira/browse/ROOT-767)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12615
https://github.com/root-project/root/pull/12617:309,Availability,failure,failure,309,I observed these building on macOS 13.2.1 and XCode 14.2. - Construction of `std::span` from vector iterators directly fails to compile due to not finding a conversion. This can be worked around by passing in a pointer and a size.; - Warning about C++20 preferring symmetric equality operators (this is not a failure (yet)).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12617
https://github.com/root-project/root/pull/12618:86,Deployability,patch,patches,86,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12227; 2. https://github.com/root-project/root/pull/12016; Only the commits 1, 2, 5, 6, 8 that don't change the definition of `RooNumber::infinity()`; 3. https://github.com/root-project/root/pull/12328; 4. https://github.com/root-project/root/pull/12330; 5. https://github.com/root-project/root/pull/12207. Related to https://github.com/root-project/root/issues/12319.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12618
https://github.com/root-project/root/pull/12620:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12392; 2. https://github.com/root-project/root/pull/12340; 3. https://github.com/root-project/root/pull/12399; 4. https://github.com/root-project/root/pull/12413; Except for commits 5 and 6 that are unrelated to RooFitHS3; 6. https://github.com/root-project/root/pull/12467; 7. https://github.com/root-project/root/pull/12471; 8. https://github.com/root-project/root/pull/12470; 9. https://github.com/root-project/root/pull/12487; 10. https://github.com/root-project/root/pull/12490; 11. https://github.com/root-project/root/pull/12504. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12620
https://github.com/root-project/root/issues/12621:62,Performance,multi-thread,multi-thread,62,"Measurements by @sciaba show that, at high thread counts, RDF multi-thread event loops on remote data suffer a scaling breakdown because of some throttling mechanisms in xrootd. Working around the throttling is possible, but it's unclear whether it's the right thing:tm: to do in all cases. Namely: ; - setting XRD_PARALLELEVTLOOP as in https://github.com/root-project/root/issues/7709; - faking different clients for each thread or each file, e.g. by using URLs like `root://client1@eoscms.cern.ch//eos/myfile.root`, works around connection multiplexing. The degradation is severe enough that I labeled it a bug (preliminary benchmarks showed a speed-up of more than one order of magnitude for high thread counts in the same application with/without the workarounds above).; Multi-process event loops such as those of distributed RDF should not be affected. A link to the exact findings can be added to this issue when they are public, for now this is a reminder that there is a problem to be looked at. EDIT:; For completeness, [this other PR](https://github.com/root-project/root/pull/11631) by @bendavid addresses orthogonal thread contention issues in remote file access with ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:1169,Security,access,access,1169,"Measurements by @sciaba show that, at high thread counts, RDF multi-thread event loops on remote data suffer a scaling breakdown because of some throttling mechanisms in xrootd. Working around the throttling is possible, but it's unclear whether it's the right thing:tm: to do in all cases. Namely: ; - setting XRD_PARALLELEVTLOOP as in https://github.com/root-project/root/issues/7709; - faking different clients for each thread or each file, e.g. by using URLs like `root://client1@eoscms.cern.ch//eos/myfile.root`, works around connection multiplexing. The degradation is severe enough that I labeled it a bug (preliminary benchmarks showed a speed-up of more than one order of magnitude for high thread counts in the same application with/without the workarounds above).; Multi-process event loops such as those of distributed RDF should not be affected. A link to the exact findings can be added to this issue when they are public, for now this is a reminder that there is a problem to be looked at. EDIT:; For completeness, [this other PR](https://github.com/root-project/root/pull/11631) by @bendavid addresses orthogonal thread contention issues in remote file access with ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12621:626,Testability,benchmark,benchmarks,626,"Measurements by @sciaba show that, at high thread counts, RDF multi-thread event loops on remote data suffer a scaling breakdown because of some throttling mechanisms in xrootd. Working around the throttling is possible, but it's unclear whether it's the right thing:tm: to do in all cases. Namely: ; - setting XRD_PARALLELEVTLOOP as in https://github.com/root-project/root/issues/7709; - faking different clients for each thread or each file, e.g. by using URLs like `root://client1@eoscms.cern.ch//eos/myfile.root`, works around connection multiplexing. The degradation is severe enough that I labeled it a bug (preliminary benchmarks showed a speed-up of more than one order of magnitude for high thread counts in the same application with/without the workarounds above).; Multi-process event loops such as those of distributed RDF should not be affected. A link to the exact findings can be added to this issue when they are public, for now this is a reminder that there is a problem to be looked at. EDIT:; For completeness, [this other PR](https://github.com/root-project/root/pull/11631) by @bendavid addresses orthogonal thread contention issues in remote file access with ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12621
https://github.com/root-project/root/issues/12622:84,Usability,learn,learning,84,"It seems (at least in the `TTreeDraw` case that the `TTreeCache` does return to the learning phase after the completion of a run:; ```; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x556fa2b6a770; root [1] ntuple->SetCacheSize(100000000);; root [2] ntuple->Draw(""py""); root [4] ntuple->GetReadCache(ntuple->GetDirectory()->GetFile())->GetCachedBranches()->ls();; OBJ: TObjArray TObjArray An array of objects : 0; OBJ: TBranch py py : 0 at: 0x556fa7555e70. root [5] ntuple->Draw(""px""); root [6] ntuple->GetReadCache(ntuple->GetDirectory()->GetFile())->GetCachedBranches()->ls();; OBJ: TObjArray TObjArray An array of objects : 0; OBJ: TBranch py py : 0 at: 0x556fa7555e70; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12622
https://github.com/root-project/root/pull/12624:277,Deployability,update,updated,277,# This Pull request:. Addresses an infelicity in the definition of the `gDirectory` macro. ## Changes or fixes:. The leading `ROOT` namespace qualification in the macro definition is prefixed with the global namespace (`::`). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #12623.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12624
https://github.com/root-project/root/pull/12624:247,Testability,test,tested,247,# This Pull request:. Addresses an infelicity in the definition of the `gDirectory` macro. ## Changes or fixes:. The leading `ROOT` namespace qualification in the macro definition is prefixed with the global namespace (`::`). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #12623.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12624
https://github.com/root-project/root/pull/12626:296,Availability,error,errors,296,"isysroot influences where clang will pick up libc++. Without this, and with; Xcode 14.3, cling will use libc++ from Xcode (or the command line tools) rather; than stdc++ from the macOS SDK, as clang would normally use. Passing the isysroot; (which point to the SDK) fixes this. This solves build errors such as:; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:309:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:1: error: cannot template a using declaration; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:21: error: C++ requires a type specifier for all declarations; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:68: error: use of undeclared identifier '_Val'; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:73: error: expected '(' for function-style cast or type construction; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12626
https://github.com/root-project/root/pull/12626:717,Availability,error,error,717,"isysroot influences where clang will pick up libc++. Without this, and with; Xcode 14.3, cling will use libc++ from Xcode (or the command line tools) rather; than stdc++ from the macOS SDK, as clang would normally use. Passing the isysroot; (which point to the SDK) fixes this. This solves build errors such as:; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:309:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:1: error: cannot template a using declaration; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:21: error: C++ requires a type specifier for all declarations; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:68: error: use of undeclared identifier '_Val'; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:73: error: expected '(' for function-style cast or type construction; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12626
https://github.com/root-project/root/pull/12626:964,Availability,error,error,964,"isysroot influences where clang will pick up libc++. Without this, and with; Xcode 14.3, cling will use libc++ from Xcode (or the command line tools) rather; than stdc++ from the macOS SDK, as clang would normally use. Passing the isysroot; (which point to the SDK) fixes this. This solves build errors such as:; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:309:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:1: error: cannot template a using declaration; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:21: error: C++ requires a type specifier for all declarations; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:68: error: use of undeclared identifier '_Val'; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:73: error: expected '(' for function-style cast or type construction; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12626
https://github.com/root-project/root/pull/12626:1226,Availability,error,error,1226,"isysroot influences where clang will pick up libc++. Without this, and with; Xcode 14.3, cling will use libc++ from Xcode (or the command line tools) rather; than stdc++ from the macOS SDK, as clang would normally use. Passing the isysroot; (which point to the SDK) fixes this. This solves build errors such as:; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:309:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:1: error: cannot template a using declaration; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:21: error: C++ requires a type specifier for all declarations; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:68: error: use of undeclared identifier '_Val'; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:73: error: expected '(' for function-style cast or type construction; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12626
https://github.com/root-project/root/pull/12626:1473,Availability,error,error,1473,"isysroot influences where clang will pick up libc++. Without this, and with; Xcode 14.3, cling will use libc++ from Xcode (or the command line tools) rather; than stdc++ from the macOS SDK, as clang would normally use. Passing the isysroot; (which point to the SDK) fixes this. This solves build errors such as:; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:309:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:1: error: cannot template a using declaration; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:21: error: C++ requires a type specifier for all declarations; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:68: error: use of undeclared identifier '_Val'; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:73: error: expected '(' for function-style cast or type construction; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12626
https://github.com/root-project/root/pull/12629:53,Availability,Failure,Failures,53,"It is needed for C++11 support of #include <chrono>. Failures:; ```; Processing /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/root/tutorials/multicore/mt201_parallelHistoFill.C...; In file included from input_line_10:1:; /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/root/tutorials/multicore/mt201_parallelHistoFill.C:55:51: error: no member named 'duration' in namespace 'std::chrono'; std::this_thread::sleep_for(std::chrono::duration<double, std::nano>(500));; ~~~~~~~~~~~~~^; ```. and. ```; root [11] #include <bits/chrono.h>; /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/etc/cling/std.modulemap:432:10: error: module 'std.bits/chrono.h' requires feature 'cplusplus17'; module ""bits/chrono.h"" [optional] {; ^; ROOT_prompt_11:1:10: note: submodule of top-level module 'std' implicitly imported here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:371,Availability,error,error,371,"It is needed for C++11 support of #include <chrono>. Failures:; ```; Processing /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/root/tutorials/multicore/mt201_parallelHistoFill.C...; In file included from input_line_10:1:; /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/root/tutorials/multicore/mt201_parallelHistoFill.C:55:51: error: no member named 'duration' in namespace 'std::chrono'; std::this_thread::sleep_for(std::chrono::duration<double, std::nano>(500));; ~~~~~~~~~~~~~^; ```. and. ```; root [11] #include <bits/chrono.h>; /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/etc/cling/std.modulemap:432:10: error: module 'std.bits/chrono.h' requires feature 'cplusplus17'; module ""bits/chrono.h"" [optional] {; ^; ROOT_prompt_11:1:10: note: submodule of top-level module 'std' implicitly imported here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12629:684,Availability,error,error,684,"It is needed for C++11 support of #include <chrono>. Failures:; ```; Processing /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/root/tutorials/multicore/mt201_parallelHistoFill.C...; In file included from input_line_10:1:; /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/root/tutorials/multicore/mt201_parallelHistoFill.C:55:51: error: no member named 'duration' in namespace 'std::chrono'; std::this_thread::sleep_for(std::chrono::duration<double, std::nano>(500));; ~~~~~~~~~~~~~^; ```. and. ```; root [11] #include <bits/chrono.h>; /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/etc/cling/std.modulemap:432:10: error: module 'std.bits/chrono.h' requires feature 'cplusplus17'; module ""bits/chrono.h"" [optional] {; ^; ROOT_prompt_11:1:10: note: submodule of top-level module 'std' implicitly imported here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12629
https://github.com/root-project/root/pull/12630:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 0. https://github.com/root-project/root/pull/12459; 1. https://github.com/root-project/root/pull/12518; 2. https://github.com/root-project/root/pull/12556; 3. https://github.com/root-project/root/pull/12578; 4. https://github.com/root-project/root/pull/12577; 5. https://github.com/root-project/root/pull/12595; 6. https://github.com/root-project/root/pull/12608; Only the second commit that does not remove deprecated functionality; 7. https://github.com/root-project/root/pull/12594. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12630
https://github.com/root-project/root/issues/12631:383,Availability,Down,Downloading,383,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/issues/12631:503,Availability,error,error,503,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/issues/12631:795,Availability,Error,Error,795,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/issues/12631:951,Deployability,install,installation,951,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/issues/12631:980,Deployability,install,installation,980,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/issues/12631:1167,Deployability,install,install,1167,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/issues/12631:1296,Deployability,install,install,1296,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/issues/12631:1320,Deployability,install,install,1320,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/issues/12631:1465,Deployability,install,install,1465,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/issues/12631:714,Integrability,wrap,wrapper,714,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/issues/12631:855,Integrability,message,message,855,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/issues/12631:904,Modifiability,variab,variable,904,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12631
https://github.com/root-project/root/pull/12633:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12633
https://github.com/root-project/root/pull/12633:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12633
https://github.com/root-project/root/pull/12634:24,Deployability,Update,Updates,24,# This Pull request:; * Updates RenderCore with functionality to draw text in world and projected coordinates; * Draw axis to with value of bounding box dimension; * Add control in REveView editor to enable axis guildes and change background; * Remove dat.gui; * Add rendering of REveBox and ReveBoxProjected. ![Untitled](https://user-images.githubusercontent.com/2516492/230965004-57511034-c77b-46f6-b0fc-71f4011a6ae7.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12634
https://github.com/root-project/root/issues/12635:1013,Availability,avail,available,1013,"lain what you would like to see improved; Installing a user-side cppyy (no virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TRO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:1160,Availability,avail,available,1160,"ve a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TROOT' object has no attribute 'SetBatch'. Did you mean: 'GetPath'?; ```. ### Setup; 1.; ```; root-config --version; 6.26/10; ```. 2. Fedora 37. 3. dnf install. 1st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:1577,Availability,error,error,1577,"ional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TROOT' object has no attribute 'SetBatch'. Did you mean: 'GetPath'?; ```. ### Setup; 1.; ```; root-config --version; 6.26/10; ```. 2. Fedora 37. 3. dnf install. 1st posted in root-forum: https://root-forum.cern.ch/t/cppyy-user-side-breaks-root/54393",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:49,Deployability,Install,Installing,49,"### Explain what you would like to see improved; Installing a user-side cppyy (no virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:178,Deployability,install,installed,178,"### Explain what you would like to see improved; Installing a user-side cppyy (no virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:232,Deployability,install,installation,232,"### Explain what you would like to see improved; Installing a user-side cppyy (no virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:1633,Deployability,install,install,1633,"ional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TROOT' object has no attribute 'SetBatch'. Did you mean: 'GetPath'?; ```. ### Setup; 1.; ```; root-config --version; 6.26/10; ```. 2. Fedora 37. 3. dnf install. 1st posted in root-forum: https://root-forum.cern.ch/t/cppyy-user-side-breaks-root/54393",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:2156,Deployability,install,install,2156,"ional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TROOT' object has no attribute 'SetBatch'. Did you mean: 'GetPath'?; ```. ### Setup; 1.; ```; root-config --version; 6.26/10; ```. 2. Fedora 37. 3. dnf install. 1st posted in root-forum: https://root-forum.cern.ch/t/cppyy-user-side-breaks-root/54393",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:2103,Modifiability,config,config,2103,"ional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TROOT' object has no attribute 'SetBatch'. Did you mean: 'GetPath'?; ```. ### Setup; 1.; ```; root-config --version; 6.26/10; ```. 2. Fedora 37. 3. dnf install. 1st posted in root-forum: https://root-forum.cern.ch/t/cppyy-user-side-breaks-root/54393",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:964,Performance,load,loader,964,"### Explain what you would like to see improved; Installing a user-side cppyy (no virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:1109,Performance,perform,performance,1109,"virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TROOT' object has no attribute 'SetBatch'. Did you mean: 'GetPath'?; ```. ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:1192,Performance,perform,performance,1192,"ve a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TROOT' object has no attribute 'SetBatch'. Did you mean: 'GetPath'?; ```. ### Setup; 1.; ```; root-config --version; 6.26/10; ```. 2. Fedora 37. 3. dnf install. 1st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/issues/12635:658,Usability,usab,usable,658,"### Explain what you would like to see improved; Installing a user-side cppyy (no virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12635
https://github.com/root-project/root/pull/12636:310,Deployability,update,updated,310,"# This Pull request:. Fixes various minor bugs in the HS3 implementation. ## Changes or fixes:. - avoid TH1 as intermediary objects; - flag overloads correctly; - add a ""type"" field to dataset exports; - add ""parameter_name"" field to histfactory PDF exports. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12636
https://github.com/root-project/root/pull/12636:98,Safety,avoid,avoid,98,"# This Pull request:. Fixes various minor bugs in the HS3 implementation. ## Changes or fixes:. - avoid TH1 as intermediary objects; - flag overloads correctly; - add a ""type"" field to dataset exports; - add ""parameter_name"" field to histfactory PDF exports. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12636
https://github.com/root-project/root/pull/12636:280,Testability,test,tested,280,"# This Pull request:. Fixes various minor bugs in the HS3 implementation. ## Changes or fixes:. - avoid TH1 as intermediary objects; - flag overloads correctly; - add a ""type"" field to dataset exports; - add ""parameter_name"" field to histfactory PDF exports. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12636
https://github.com/root-project/root/pull/12637:54,Modifiability,config,configured,54,This pull request fixes failing tests for ROOT builds configured with `-Dimt=OFF`. Those tests incorrectly assumed that multi-threading support is just there after a call to `ROOT::EnableImplictMT()`. ## Checklist:; - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12637
https://github.com/root-project/root/pull/12637:120,Performance,multi-thread,multi-threading,120,This pull request fixes failing tests for ROOT builds configured with `-Dimt=OFF`. Those tests incorrectly assumed that multi-threading support is just there after a call to `ROOT::EnableImplictMT()`. ## Checklist:; - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12637
https://github.com/root-project/root/pull/12637:32,Testability,test,tests,32,This pull request fixes failing tests for ROOT builds configured with `-Dimt=OFF`. Those tests incorrectly assumed that multi-threading support is just there after a call to `ROOT::EnableImplictMT()`. ## Checklist:; - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12637
https://github.com/root-project/root/pull/12637:89,Testability,test,tests,89,This pull request fixes failing tests for ROOT builds configured with `-Dimt=OFF`. Those tests incorrectly assumed that multi-threading support is just there after a call to `ROOT::EnableImplictMT()`. ## Checklist:; - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12637
https://github.com/root-project/root/pull/12637:222,Testability,test,tested,222,This pull request fixes failing tests for ROOT builds configured with `-Dimt=OFF`. Those tests incorrectly assumed that multi-threading support is just there after a call to `ROOT::EnableImplictMT()`. ## Checklist:; - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12637
https://github.com/root-project/root/pull/12638:258,Deployability,release,release,258,"Many users expect to use `Clone()` to copy RooWorkspaces, but so far this resulted in corrupt workspaces because the `Clone()` function was not overridden. This is an important fix that needs to be backported at least to 6.28 and 6.26, better yet every ROOT release used in production.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12638
https://github.com/root-project/root/issues/12639:153,Availability,error,errors,153,"Up until now, weights were ignored when computing kernel width in RooKeysPdf. . This was worked on for 6.28, but negative weights are causing evaluation errors (some weights can go negative, like sWeights). . It would be good if negative weights were allowed and cases, where they are not allowed, would throw exceptions rather than computation be attempted. Relevant forum post:; https://root-forum.cern.ch/t/roofit-keyspdf-fails-in-6-28-works-in-6-26/54440",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12639
https://github.com/root-project/root/issues/12644:640,Availability,error,error,640,"Env: Macos 13.3.1, xcode 14.3. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xxhash builtin_zeromq cefweb clad cocoa dataframe davix exceptions fortran gdml http imt libcxx mlp minuit2 minuit2_mpi minuit2_omp mpi opengl pyroot qt5web roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore XML. The error is following:. [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from ./include/Rtypes.h:195:; In file included from <module-includes>:4:; ./include/TClassEdit.h:29:10: fatal error: 'cxxabi.h' file not found; #include <cxxabi.h>; ^~~~~~~~~~; In file included from input_line_3:2:; ./include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; #include ""TIsAProxy.h""; ~~~~~~~~^~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12644
https://github.com/root-project/root/issues/12644:1165,Availability,error,error,1165,"Env: Macos 13.3.1, xcode 14.3. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xxhash builtin_zeromq cefweb clad cocoa dataframe davix exceptions fortran gdml http imt libcxx mlp minuit2 minuit2_mpi minuit2_omp mpi opengl pyroot qt5web roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore XML. The error is following:. [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from ./include/Rtypes.h:195:; In file included from <module-includes>:4:; ./include/TClassEdit.h:29:10: fatal error: 'cxxabi.h' file not found; #include <cxxabi.h>; ^~~~~~~~~~; In file included from input_line_3:2:; ./include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; #include ""TIsAProxy.h""; ~~~~~~~~^~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12644
https://github.com/root-project/root/issues/12644:1304,Availability,error,error,1304,"Env: Macos 13.3.1, xcode 14.3. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xxhash builtin_zeromq cefweb clad cocoa dataframe davix exceptions fortran gdml http imt libcxx mlp minuit2 minuit2_mpi minuit2_omp mpi opengl pyroot qt5web roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore XML. The error is following:. [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from ./include/Rtypes.h:195:; In file included from <module-includes>:4:; ./include/TClassEdit.h:29:10: fatal error: 'cxxabi.h' file not found; #include <cxxabi.h>; ^~~~~~~~~~; In file included from input_line_3:2:; ./include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; #include ""TIsAProxy.h""; ~~~~~~~~^~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12644
https://github.com/root-project/root/issues/12644:1414,Availability,Error,Error,1414,"Env: Macos 13.3.1, xcode 14.3. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xxhash builtin_zeromq cefweb clad cocoa dataframe davix exceptions fortran gdml http imt libcxx mlp minuit2 minuit2_mpi minuit2_omp mpi opengl pyroot qt5web roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore XML. The error is following:. [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from ./include/Rtypes.h:195:; In file included from <module-includes>:4:; ./include/TClassEdit.h:29:10: fatal error: 'cxxabi.h' file not found; #include <cxxabi.h>; ^~~~~~~~~~; In file included from input_line_3:2:; ./include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; #include ""TIsAProxy.h""; ~~~~~~~~^~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12644
https://github.com/root-project/root/issues/12644:1421,Availability,Error,Error,1421,"Env: Macos 13.3.1, xcode 14.3. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xxhash builtin_zeromq cefweb clad cocoa dataframe davix exceptions fortran gdml http imt libcxx mlp minuit2 minuit2_mpi minuit2_omp mpi opengl pyroot qt5web roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore XML. The error is following:. [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from ./include/Rtypes.h:195:; In file included from <module-includes>:4:; ./include/TClassEdit.h:29:10: fatal error: 'cxxabi.h' file not found; #include <cxxabi.h>; ^~~~~~~~~~; In file included from input_line_3:2:; ./include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; #include ""TIsAProxy.h""; ~~~~~~~~^~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12644
https://github.com/root-project/root/issues/12644:1504,Availability,Error,Error,1504,"Env: Macos 13.3.1, xcode 14.3. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xxhash builtin_zeromq cefweb clad cocoa dataframe davix exceptions fortran gdml http imt libcxx mlp minuit2 minuit2_mpi minuit2_omp mpi opengl pyroot qt5web roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore XML. The error is following:. [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from ./include/Rtypes.h:195:; In file included from <module-includes>:4:; ./include/TClassEdit.h:29:10: fatal error: 'cxxabi.h' file not found; #include <cxxabi.h>; ^~~~~~~~~~; In file included from input_line_3:2:; ./include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; #include ""TIsAProxy.h""; ~~~~~~~~^~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12644
https://github.com/root-project/root/issues/12644:1560,Availability,Error,Error,1560,"Env: Macos 13.3.1, xcode 14.3. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xxhash builtin_zeromq cefweb clad cocoa dataframe davix exceptions fortran gdml http imt libcxx mlp minuit2 minuit2_mpi minuit2_omp mpi opengl pyroot qt5web roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore XML. The error is following:. [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from ./include/Rtypes.h:195:; In file included from <module-includes>:4:; ./include/TClassEdit.h:29:10: fatal error: 'cxxabi.h' file not found; #include <cxxabi.h>; ^~~~~~~~~~; In file included from input_line_3:2:; ./include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; #include ""TIsAProxy.h""; ~~~~~~~~^~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12644
https://github.com/root-project/root/issues/12644:1427,Performance,load,loading,1427,"Env: Macos 13.3.1, xcode 14.3. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xxhash builtin_zeromq cefweb clad cocoa dataframe davix exceptions fortran gdml http imt libcxx mlp minuit2 minuit2_mpi minuit2_omp mpi opengl pyroot qt5web roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore XML. The error is following:. [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from ./include/Rtypes.h:195:; In file included from <module-includes>:4:; ./include/TClassEdit.h:29:10: fatal error: 'cxxabi.h' file not found; #include <cxxabi.h>; ^~~~~~~~~~; In file included from input_line_3:2:; ./include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; #include ""TIsAProxy.h""; ~~~~~~~~^~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12644
https://github.com/root-project/root/issues/12645:3361,Availability,down,download,3361,"sults, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.setRange('limited', 0.2, 0.8); x.setRange('full', 0, 1). a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fitTo(dt, Range = 'limited', PrintLevel = -1). a.fixAddCoefRange('full'); a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fixAddCoefRange('limited'); a.fitTo(dt, Range = 'limited', PrintLevel = -1). ```; Compare 6.26 with master. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26 from LCG 102b; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12645
https://github.com/root-project/root/issues/12645:2642,Deployability,Integrat,Integration,2642,"sults, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.setRange('limited', 0.2, 0.8); x.setRange('full', 0, 1). a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fitTo(dt, Range = 'limited', PrintLevel = -1). a.fixAddCoefRange('full'); a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fixAddCoefRange('limited'); a.fitTo(dt, Range = 'limited', PrintLevel = -1). ```; Compare 6.26 with master. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26 from LCG 102b; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12645
https://github.com/root-project/root/issues/12645:3343,Deployability,install,install,3343,"sults, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.setRange('limited', 0.2, 0.8); x.setRange('full', 0, 1). a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fitTo(dt, Range = 'limited', PrintLevel = -1). a.fixAddCoefRange('full'); a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fixAddCoefRange('limited'); a.fitTo(dt, Range = 'limited', PrintLevel = -1). ```; Compare 6.26 with master. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26 from LCG 102b; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12645
https://github.com/root-project/root/issues/12645:2642,Integrability,Integrat,Integration,2642,"sults, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.setRange('limited', 0.2, 0.8); x.setRange('full', 0, 1). a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fitTo(dt, Range = 'limited', PrintLevel = -1). a.fixAddCoefRange('full'); a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fixAddCoefRange('limited'); a.fitTo(dt, Range = 'limited', PrintLevel = -1). ```; Compare 6.26 with master. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26 from LCG 102b; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12645
https://github.com/root-project/root/issues/12645:1480,Performance,perform,performed,1480,"normalization range. When passing a range name to the `RooAbsPdf::fitTo` call, this is visible because new integrals will be created over the fit range, to fix the definition of the coefficients. I will refer to these integrals as coefnorm integrals.; In ROOT 6.28, coefnorm integrals for ranged fits of `RooAddPdf`s were changed. This, however, added several integrals that with the old method would not be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12645
https://github.com/root-project/root/issues/12645:1340,Safety,avoid,avoid,1340,"r"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In a `RooAddPdf`, the coefficients are tied to the normalization range. When passing a range name to the `RooAbsPdf::fitTo` call, this is visible because new integrals will be created over the fit range, to fix the definition of the coefficients. I will refer to these integrals as coefnorm integrals.; In ROOT 6.28, coefnorm integrals for ranged fits of `RooAddPdf`s were changed. This, however, added several integrals that with the old method would not be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12645
https://github.com/root-project/root/issues/12645:1473,Testability,test,test,1473,"normalization range. When passing a range name to the `RooAbsPdf::fitTo` call, this is visible because new integrals will be created over the fit range, to fix the definition of the coefficients. I will refer to these integrals as coefnorm integrals.; In ROOT 6.28, coefnorm integrals for ranged fits of `RooAddPdf`s were changed. This, however, added several integrals that with the old method would not be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12645
https://github.com/root-project/root/issues/12645:2517,Testability,log,logs,2517,"m to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.setRange('limited', 0.2, 0.8); x.setRange('full', 0, 1). a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fitTo(dt, Range = 'limited', PrintLevel = -1). a.fixAddCoefRange('full'); a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fixAddCoefRange('limited'); a.fitTo(dt, Range = 'limited', PrintLevel = -1). ```; Compare 6.26 with master. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26 from LCG 102b; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12645
https://github.com/root-project/root/issues/12645:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In a `RooAddPdf`, the coefficients are tied to the normalization range. When passing a range name to the `RooAbsPdf::fitTo` call, this is visible because new integrals will be created over the fit range, to fix the definition of the coefficients. I will refer to these integrals as coefnorm integrals.; In ROOT 6.28, coefnorm integrals for ranged fits of `RooAddPdf`s were changed. This, however, added several integrals that with the old method would not be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12645
https://github.com/root-project/root/issues/12645:1900,Usability,clear,clear,1900,"be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12645
https://github.com/root-project/root/issues/12645:2473,Usability,simpl,simple,2473,"m to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.setRange('limited', 0.2, 0.8); x.setRange('full', 0, 1). a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fitTo(dt, Range = 'limited', PrintLevel = -1). a.fixAddCoefRange('full'); a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fixAddCoefRange('limited'); a.fitTo(dt, Range = 'limited', PrintLevel = -1). ```; Compare 6.26 with master. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26 from LCG 102b; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12645
https://github.com/root-project/root/issues/12646:2528,Availability,down,download,2528,"o correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integral works); # but not in the y projection; # if the pdf supported 2D integrals, there would be no numerical integrals at all; integral = D2.createIntegral({y}, NormSet = {x,y}); print('Projection is', integral, flush = True). # numerical integral over y2 in the 2D normalization (expected, like above); # numerical integral in the y projection (unwanted); frame = x.frame(); dt.plotOn(frame); D2.plotOn(frame); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:605,Deployability,integrat,integrate,605,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:802,Deployability,integrat,integration,802,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:844,Deployability,integrat,integrate,844,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:1034,Deployability,integrat,integration,1034,"ease search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integral works); # but not in the y project",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:1638,Deployability,integrat,integrate,1638," to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integral works); # but not in the y projection; # if the pdf supported 2D integrals, there would be no numerical integrals at all; integral = D2.createIntegral({y}, NormSet = {x,y}); print('Projection is', integral, flush = True). # numerical integral over y2 in the 2D normalization (expected, like above); # numerical integral in the y projection (unwanted); frame = x.frame(); dt.plotOn(frame); D2.plotOn(frame); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:2510,Deployability,install,install,2510,"o correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integral works); # but not in the y projection; # if the pdf supported 2D integrals, there would be no numerical integrals at all; integral = D2.createIntegral({y}, NormSet = {x,y}); print('Projection is', integral, flush = True). # numerical integral over y2 in the 2D normalization (expected, like above); # numerical integral in the y projection (unwanted); frame = x.frame(); dt.plotOn(frame); D2.plotOn(frame); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:605,Integrability,integrat,integrate,605,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:802,Integrability,integrat,integration,802,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:844,Integrability,integrat,integrate,844,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:1034,Integrability,integrat,integration,1034,"ease search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integral works); # but not in the y project",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:1638,Integrability,integrat,integrate,1638," to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integral works); # but not in the y projection; # if the pdf supported 2D integrals, there would be no numerical integrals at all; integral = D2.createIntegral({y}, NormSet = {x,y}); print('Projection is', integral, flush = True). # numerical integral over y2 in the 2D normalization (expected, like above); # numerical integral in the y projection (unwanted); frame = x.frame(); dt.plotOn(frame); D2.plotOn(frame); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:639,Modifiability,variab,variable,639,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:814,Modifiability,variab,variable,814,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/issues/12646:935,Usability,clear,clear,935,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12646
https://github.com/root-project/root/pull/12647:147,Deployability,update,updated,147,# This Pull request:. ## Changes or fixes:; use aliasName to lookup existing objects on import. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12647
https://github.com/root-project/root/pull/12647:117,Testability,test,tested,117,# This Pull request:. ## Changes or fixes:; use aliasName to lookup existing objects on import. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12647
https://github.com/root-project/root/pull/12650:428,Availability,repair,repairs,428,"On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```. This repairs the performance of a simple `TTree::Draw` of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example. This fixes #12649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12650
https://github.com/root-project/root/pull/12650:515,Availability,down,down,515,"On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```. This repairs the performance of a simple `TTree::Draw` of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example. This fixes #12649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12650
https://github.com/root-project/root/pull/12650:440,Performance,perform,performance,440,"On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```. This repairs the performance of a simple `TTree::Draw` of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example. This fixes #12649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12650
https://github.com/root-project/root/pull/12650:527,Performance,perform,performance,527,"On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```. This repairs the performance of a simple `TTree::Draw` of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example. This fixes #12649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12650
https://github.com/root-project/root/pull/12650:596,Performance,perform,performance,596,"On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```. This repairs the performance of a simple `TTree::Draw` of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example. This fixes #12649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12650
https://github.com/root-project/root/pull/12650:457,Usability,simpl,simple,457,"On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```. This repairs the performance of a simple `TTree::Draw` of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example. This fixes #12649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12650
https://github.com/root-project/root/pull/12651:481,Availability,repair,repairs,481,"See https://github.com/root-project/root/pull/12650. On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```; This repairs the performance of a simple TTree::Draw of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12651
https://github.com/root-project/root/pull/12651:566,Availability,down,down,566,"See https://github.com/root-project/root/pull/12650. On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```; This repairs the performance of a simple TTree::Draw of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12651
https://github.com/root-project/root/pull/12651:493,Performance,perform,performance,493,"See https://github.com/root-project/root/pull/12650. On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```; This repairs the performance of a simple TTree::Draw of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12651
https://github.com/root-project/root/pull/12651:578,Performance,perform,performance,578,"See https://github.com/root-project/root/pull/12650. On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```; This repairs the performance of a simple TTree::Draw of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12651
https://github.com/root-project/root/pull/12651:647,Performance,perform,performance,647,"See https://github.com/root-project/root/pull/12650. On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```; This repairs the performance of a simple TTree::Draw of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12651
https://github.com/root-project/root/pull/12651:510,Usability,simpl,simple,510,"See https://github.com/root-project/root/pull/12650. On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```; This repairs the performance of a simple TTree::Draw of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12651
https://github.com/root-project/root/issues/12652:2330,Availability,down,download,2330,"eous` are flattened into a single `RooSimultaneous` with a `RooSuperCategory` as index. ; When plotting a `RooSimultaneous`, if the index category is derived its servers are searched inside the `ProjWData` set, and if not found the plot becomes a slice in the categories.; However, the only server of a `RooSuperCategory` is the internal `RooMultiCategory`, so in case of a nested `RooSimultaneous` the plot is always a slice.; This is basically https://github.com/root-project/root/issues/12020, except during plots and not generation. The solution is probably the same. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Categories are summed over and not sliced. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0, 'c12': 1}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.1)); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u, 'c12': g}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); c1.setIndex(0); for i in range(50):; proto.add({c1, c2}); c1.setIndex(1); for i in range(50):; proto.add({c1, c2}); ; frame = x.frame(); s2.plotOn(frame, ProjWData = ({c1, c2}, proto)) # only gauss; c1.setIndex(0); s2.plotOn(frame, ProjWData = ({c1, c2}, proto)) # only uniform; frame.Draw(); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12652
https://github.com/root-project/root/issues/12652:2312,Deployability,install,install,2312,"eous` are flattened into a single `RooSimultaneous` with a `RooSuperCategory` as index. ; When plotting a `RooSimultaneous`, if the index category is derived its servers are searched inside the `ProjWData` set, and if not found the plot becomes a slice in the categories.; However, the only server of a `RooSuperCategory` is the internal `RooMultiCategory`, so in case of a nested `RooSimultaneous` the plot is always a slice.; This is basically https://github.com/root-project/root/issues/12020, except during plots and not generation. The solution is probably the same. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Categories are summed over and not sliced. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0, 'c12': 1}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.1)); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u, 'c12': g}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); c1.setIndex(0); for i in range(50):; proto.add({c1, c2}); c1.setIndex(1); for i in range(50):; proto.add({c1, c2}); ; frame = x.frame(); s2.plotOn(frame, ProjWData = ({c1, c2}, proto)) # only gauss; c1.setIndex(0); s2.plotOn(frame, ProjWData = ({c1, c2}, proto)) # only uniform; frame.Draw(); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12652
https://github.com/root-project/root/issues/12652:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Nested `RooSimultaneous` are flattened into a single `RooSimultaneous` with a `RooSuperCategory` as index. ; When plotting a `RooSimultaneous`, if the index category is derived its servers are searched inside the `ProjWData` set, and if not found the plot becomes a slice in the categories.; However, the only server of a `RooSuperCategory` is the internal `RooMultiCategory`, so in case of a nested `RooSimultaneous` the plot is always a slice.; This is basically https://github.com/root-project/root/issues/12020, except during plots and not generation. The solution is probably the same. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Categories are summed over and not sliced. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0, 'c12': 1}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.1)); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u, 'c12': g}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); c1.setIndex(0); for i in range(50):; proto.add({c1, c2}); c1.setIndex(1); for i i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12652
https://github.com/root-project/root/issues/12652:1080,Usability,clear,clear,1080,"ct/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Nested `RooSimultaneous` are flattened into a single `RooSimultaneous` with a `RooSuperCategory` as index. ; When plotting a `RooSimultaneous`, if the index category is derived its servers are searched inside the `ProjWData` set, and if not found the plot becomes a slice in the categories.; However, the only server of a `RooSuperCategory` is the internal `RooMultiCategory`, so in case of a nested `RooSimultaneous` the plot is always a slice.; This is basically https://github.com/root-project/root/issues/12020, except during plots and not generation. The solution is probably the same. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Categories are summed over and not sliced. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0, 'c12': 1}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.1)); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u, 'c12': g}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); c1.setIndex(0); for i in range(50):; proto.add({c1, c2}); c1.setIndex(1); for i in range(50):; proto.add({c1, c2}); ; frame = x.frame(); s2.plotOn(frame, ProjWData = ({c1, c2}",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12652
https://github.com/root-project/root/issues/12653:1349,Availability,down,download,1349,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. My PyROOT scripts uses `RooMomentMorphND` and I am using LCG dev3 nightly build ( ROOT version 6.29/01); Staring this morning it fails to get RooMomentMorphND, reporting . ```. AttributeError: Failed to get attribute RooMomentMorphND from ROOT. ```; . ### Expected behavior. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. LCG dev3 nightly slot at cvmfs . ```; import ROOT ; print ( ROOT.RooMomentMorphND); ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. LCG dev3 nightly slot at cvmfs ( ROOT version 6.29/01). <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12653
https://github.com/root-project/root/issues/12653:1331,Deployability,install,install,1331,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. My PyROOT scripts uses `RooMomentMorphND` and I am using LCG dev3 nightly build ( ROOT version 6.29/01); Staring this morning it fails to get RooMomentMorphND, reporting . ```. AttributeError: Failed to get attribute RooMomentMorphND from ROOT. ```; . ### Expected behavior. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. LCG dev3 nightly slot at cvmfs . ```; import ROOT ; print ( ROOT.RooMomentMorphND); ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. LCG dev3 nightly slot at cvmfs ( ROOT version 6.29/01). <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12653
https://github.com/root-project/root/issues/12653:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. My PyROOT scripts uses `RooMomentMorphND` and I am using LCG dev3 nightly build ( ROOT version 6.29/01); Staring this morning it fails to get RooMomentMorphND, reporting . ```. AttributeError: Failed to get attribute RooMomentMorphND from ROOT. ```; . ### Expected behavior. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. LCG dev3 nightly slot at cvmfs . ```; import ROOT ; print ( ROOT.RooMomentMorphND); ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. LCG dev3 nightly slot at cvmfs ( ROOT version 6.29/01). <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12653
https://github.com/root-project/root/issues/12653:741,Usability,clear,clear,741,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. My PyROOT scripts uses `RooMomentMorphND` and I am using LCG dev3 nightly build ( ROOT version 6.29/01); Staring this morning it fails to get RooMomentMorphND, reporting . ```. AttributeError: Failed to get attribute RooMomentMorphND from ROOT. ```; . ### Expected behavior. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. LCG dev3 nightly slot at cvmfs . ```; import ROOT ; print ( ROOT.RooMomentMorphND); ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. LCG dev3 nightly slot at cvmfs ( ROOT version 6.29/01). <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12653
https://github.com/root-project/root/pull/12654:1002,Deployability,patch,patch,1002,"Make `FilteringDiagConsumer` also ignore -Wunused-result. Whether or not such diagnostic is filtered depends on `CompilationOptions::IgnorePromptDiags`. In particular, `IgnorePromptDiags` should _only_ be enabled for code parsed via `Interpreter::EvaluateInternal()`. Thus, as of this commit `IgnorePromptDiags` defaults to 0 in `makeDefaultCompilationOpts()`. The observable effect of this change is ignoring `-Wunused-result` for wrapped code, e.g.; ```c++; [[nodiscard]] int f() { return 0; }. // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; void g() { f(); }. f(); // but this should not; ```. Alternatively, as discussed with @Axel-Naumann, we could insert `#pragma clang diagnositc ...` directives in [`Interpreter::WrapInput()`](https://github.com/root-project/root/blob/master/interpreter/cling/lib/Interpreter/Interpreter.cpp#L1130), but I see that as much less elegant. ## Checklist:; - [X] tested changes locally; - [X] the patch passes cling tests. This PR fixes #11562.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12654
https://github.com/root-project/root/pull/12654:101,Integrability,depend,depends,101,"Make `FilteringDiagConsumer` also ignore -Wunused-result. Whether or not such diagnostic is filtered depends on `CompilationOptions::IgnorePromptDiags`. In particular, `IgnorePromptDiags` should _only_ be enabled for code parsed via `Interpreter::EvaluateInternal()`. Thus, as of this commit `IgnorePromptDiags` defaults to 0 in `makeDefaultCompilationOpts()`. The observable effect of this change is ignoring `-Wunused-result` for wrapped code, e.g.; ```c++; [[nodiscard]] int f() { return 0; }. // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; void g() { f(); }. f(); // but this should not; ```. Alternatively, as discussed with @Axel-Naumann, we could insert `#pragma clang diagnositc ...` directives in [`Interpreter::WrapInput()`](https://github.com/root-project/root/blob/master/interpreter/cling/lib/Interpreter/Interpreter.cpp#L1130), but I see that as much less elegant. ## Checklist:; - [X] tested changes locally; - [X] the patch passes cling tests. This PR fixes #11562.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12654
https://github.com/root-project/root/pull/12654:432,Integrability,wrap,wrapped,432,"Make `FilteringDiagConsumer` also ignore -Wunused-result. Whether or not such diagnostic is filtered depends on `CompilationOptions::IgnorePromptDiags`. In particular, `IgnorePromptDiags` should _only_ be enabled for code parsed via `Interpreter::EvaluateInternal()`. Thus, as of this commit `IgnorePromptDiags` defaults to 0 in `makeDefaultCompilationOpts()`. The observable effect of this change is ignoring `-Wunused-result` for wrapped code, e.g.; ```c++; [[nodiscard]] int f() { return 0; }. // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; void g() { f(); }. f(); // but this should not; ```. Alternatively, as discussed with @Axel-Naumann, we could insert `#pragma clang diagnositc ...` directives in [`Interpreter::WrapInput()`](https://github.com/root-project/root/blob/master/interpreter/cling/lib/Interpreter/Interpreter.cpp#L1130), but I see that as much less elegant. ## Checklist:; - [X] tested changes locally; - [X] the patch passes cling tests. This PR fixes #11562.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12654
https://github.com/root-project/root/pull/12654:789,Integrability,Wrap,WrapInput,789,"Make `FilteringDiagConsumer` also ignore -Wunused-result. Whether or not such diagnostic is filtered depends on `CompilationOptions::IgnorePromptDiags`. In particular, `IgnorePromptDiags` should _only_ be enabled for code parsed via `Interpreter::EvaluateInternal()`. Thus, as of this commit `IgnorePromptDiags` defaults to 0 in `makeDefaultCompilationOpts()`. The observable effect of this change is ignoring `-Wunused-result` for wrapped code, e.g.; ```c++; [[nodiscard]] int f() { return 0; }. // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; void g() { f(); }. f(); // but this should not; ```. Alternatively, as discussed with @Axel-Naumann, we could insert `#pragma clang diagnositc ...` directives in [`Interpreter::WrapInput()`](https://github.com/root-project/root/blob/master/interpreter/cling/lib/Interpreter/Interpreter.cpp#L1130), but I see that as much less elegant. ## Checklist:; - [X] tested changes locally; - [X] the patch passes cling tests. This PR fixes #11562.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12654
https://github.com/root-project/root/pull/12654:968,Testability,test,tested,968,"Make `FilteringDiagConsumer` also ignore -Wunused-result. Whether or not such diagnostic is filtered depends on `CompilationOptions::IgnorePromptDiags`. In particular, `IgnorePromptDiags` should _only_ be enabled for code parsed via `Interpreter::EvaluateInternal()`. Thus, as of this commit `IgnorePromptDiags` defaults to 0 in `makeDefaultCompilationOpts()`. The observable effect of this change is ignoring `-Wunused-result` for wrapped code, e.g.; ```c++; [[nodiscard]] int f() { return 0; }. // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; void g() { f(); }. f(); // but this should not; ```. Alternatively, as discussed with @Axel-Naumann, we could insert `#pragma clang diagnositc ...` directives in [`Interpreter::WrapInput()`](https://github.com/root-project/root/blob/master/interpreter/cling/lib/Interpreter/Interpreter.cpp#L1130), but I see that as much less elegant. ## Checklist:; - [X] tested changes locally; - [X] the patch passes cling tests. This PR fixes #11562.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12654
https://github.com/root-project/root/pull/12654:1021,Testability,test,tests,1021,"Make `FilteringDiagConsumer` also ignore -Wunused-result. Whether or not such diagnostic is filtered depends on `CompilationOptions::IgnorePromptDiags`. In particular, `IgnorePromptDiags` should _only_ be enabled for code parsed via `Interpreter::EvaluateInternal()`. Thus, as of this commit `IgnorePromptDiags` defaults to 0 in `makeDefaultCompilationOpts()`. The observable effect of this change is ignoring `-Wunused-result` for wrapped code, e.g.; ```c++; [[nodiscard]] int f() { return 0; }. // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; void g() { f(); }. f(); // but this should not; ```. Alternatively, as discussed with @Axel-Naumann, we could insert `#pragma clang diagnositc ...` directives in [`Interpreter::WrapInput()`](https://github.com/root-project/root/blob/master/interpreter/cling/lib/Interpreter/Interpreter.cpp#L1130), but I see that as much less elegant. ## Checklist:; - [X] tested changes locally; - [X] the patch passes cling tests. This PR fixes #11562.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12654
https://github.com/root-project/root/pull/12656:36,Performance,perform,performance,36,"It's important the the AD code path performance that the analytic integrals in the generated RooFit code don't end up in the NLL loop bodies. This PR generalizes some implementation details of the BatchMode to figure out which observables are scalar, and if they are, write them outside of the loop body. Furthermore, some code from the BatchMode is reused to fill also the vector observables for the generated code. When benchmarking the minimization of the model in `testRooFuncWrapper`, the situation looks now very good for RooFit code-gen that is as fast as the BatchMode here, even if it has not caching and no vectorization. Also, the AD mode is faster than vanilla RooFit, even if the number of parameters is not very high. ```txt; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; NllReferenceMinimization/0/10/iterations:100 0.488 ms 0.487 ms 100; NllReferenceMinimization/0/100/iterations:100 0.382 ms 0.381 ms 100; NllReferenceMinimization/0/1000/iterations:100 3.63 ms 3.62 ms 100; NllReferenceMinimization/0/10000/iterations:100 39.6 ms 39.6 ms 100; NllBatchModeMinimization/1/10/iterations:100 0.090 ms 0.090 ms 100; NllBatchModeMinimization/1/100/iterations:100 0.163 ms 0.163 ms 100; NllBatchModeMinimization/1/1000/iterations:100 0.882 ms 0.881 ms 100; NllBatchModeMinimization/1/10000/iterations:100 8.64 ms 8.64 ms 100; NllCodeSquash_NumDiff/2/10/iterations:100 0.053 ms 0.053 ms 100; NllCodeSquash_NumDiff/2/100/iterations:100 0.124 ms 0.124 ms 100; NllCodeSquash_NumDiff/2/1000/iterations:100 0.887 ms 0.886 ms 100; NllCodeSquash_NumDiff/2/10000/iterations:100 10.1 ms 10.1 ms 100; NllCodeSquash_AD/3/10/iterations:100 0.057 ms 0.057 ms 100; NllCodeSquash_AD/3/100/iterations:100 0.186 ms 0.186 ms 100; NllCodeSquash_AD/3/1000/iterations:100 1.44 ms 1.44 ms 100; NllCodeSquash_AD/3/10000/iterations:100 17.4 ms 17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12656
https://github.com/root-project/root/pull/12656:422,Testability,benchmark,benchmarking,422,"It's important the the AD code path performance that the analytic integrals in the generated RooFit code don't end up in the NLL loop bodies. This PR generalizes some implementation details of the BatchMode to figure out which observables are scalar, and if they are, write them outside of the loop body. Furthermore, some code from the BatchMode is reused to fill also the vector observables for the generated code. When benchmarking the minimization of the model in `testRooFuncWrapper`, the situation looks now very good for RooFit code-gen that is as fast as the BatchMode here, even if it has not caching and no vectorization. Also, the AD mode is faster than vanilla RooFit, even if the number of parameters is not very high. ```txt; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; NllReferenceMinimization/0/10/iterations:100 0.488 ms 0.487 ms 100; NllReferenceMinimization/0/100/iterations:100 0.382 ms 0.381 ms 100; NllReferenceMinimization/0/1000/iterations:100 3.63 ms 3.62 ms 100; NllReferenceMinimization/0/10000/iterations:100 39.6 ms 39.6 ms 100; NllBatchModeMinimization/1/10/iterations:100 0.090 ms 0.090 ms 100; NllBatchModeMinimization/1/100/iterations:100 0.163 ms 0.163 ms 100; NllBatchModeMinimization/1/1000/iterations:100 0.882 ms 0.881 ms 100; NllBatchModeMinimization/1/10000/iterations:100 8.64 ms 8.64 ms 100; NllCodeSquash_NumDiff/2/10/iterations:100 0.053 ms 0.053 ms 100; NllCodeSquash_NumDiff/2/100/iterations:100 0.124 ms 0.124 ms 100; NllCodeSquash_NumDiff/2/1000/iterations:100 0.887 ms 0.886 ms 100; NllCodeSquash_NumDiff/2/10000/iterations:100 10.1 ms 10.1 ms 100; NllCodeSquash_AD/3/10/iterations:100 0.057 ms 0.057 ms 100; NllCodeSquash_AD/3/100/iterations:100 0.186 ms 0.186 ms 100; NllCodeSquash_AD/3/1000/iterations:100 1.44 ms 1.44 ms 100; NllCodeSquash_AD/3/10000/iterations:100 17.4 ms 17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12656
https://github.com/root-project/root/pull/12656:469,Testability,test,testRooFuncWrapper,469,"It's important the the AD code path performance that the analytic integrals in the generated RooFit code don't end up in the NLL loop bodies. This PR generalizes some implementation details of the BatchMode to figure out which observables are scalar, and if they are, write them outside of the loop body. Furthermore, some code from the BatchMode is reused to fill also the vector observables for the generated code. When benchmarking the minimization of the model in `testRooFuncWrapper`, the situation looks now very good for RooFit code-gen that is as fast as the BatchMode here, even if it has not caching and no vectorization. Also, the AD mode is faster than vanilla RooFit, even if the number of parameters is not very high. ```txt; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; NllReferenceMinimization/0/10/iterations:100 0.488 ms 0.487 ms 100; NllReferenceMinimization/0/100/iterations:100 0.382 ms 0.381 ms 100; NllReferenceMinimization/0/1000/iterations:100 3.63 ms 3.62 ms 100; NllReferenceMinimization/0/10000/iterations:100 39.6 ms 39.6 ms 100; NllBatchModeMinimization/1/10/iterations:100 0.090 ms 0.090 ms 100; NllBatchModeMinimization/1/100/iterations:100 0.163 ms 0.163 ms 100; NllBatchModeMinimization/1/1000/iterations:100 0.882 ms 0.881 ms 100; NllBatchModeMinimization/1/10000/iterations:100 8.64 ms 8.64 ms 100; NllCodeSquash_NumDiff/2/10/iterations:100 0.053 ms 0.053 ms 100; NllCodeSquash_NumDiff/2/100/iterations:100 0.124 ms 0.124 ms 100; NllCodeSquash_NumDiff/2/1000/iterations:100 0.887 ms 0.886 ms 100; NllCodeSquash_NumDiff/2/10000/iterations:100 10.1 ms 10.1 ms 100; NllCodeSquash_AD/3/10/iterations:100 0.057 ms 0.057 ms 100; NllCodeSquash_AD/3/100/iterations:100 0.186 ms 0.186 ms 100; NllCodeSquash_AD/3/1000/iterations:100 1.44 ms 1.44 ms 100; NllCodeSquash_AD/3/10000/iterations:100 17.4 ms 17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12656
https://github.com/root-project/root/pull/12656:832,Testability,Benchmark,Benchmark,832,"It's important the the AD code path performance that the analytic integrals in the generated RooFit code don't end up in the NLL loop bodies. This PR generalizes some implementation details of the BatchMode to figure out which observables are scalar, and if they are, write them outside of the loop body. Furthermore, some code from the BatchMode is reused to fill also the vector observables for the generated code. When benchmarking the minimization of the model in `testRooFuncWrapper`, the situation looks now very good for RooFit code-gen that is as fast as the BatchMode here, even if it has not caching and no vectorization. Also, the AD mode is faster than vanilla RooFit, even if the number of parameters is not very high. ```txt; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; NllReferenceMinimization/0/10/iterations:100 0.488 ms 0.487 ms 100; NllReferenceMinimization/0/100/iterations:100 0.382 ms 0.381 ms 100; NllReferenceMinimization/0/1000/iterations:100 3.63 ms 3.62 ms 100; NllReferenceMinimization/0/10000/iterations:100 39.6 ms 39.6 ms 100; NllBatchModeMinimization/1/10/iterations:100 0.090 ms 0.090 ms 100; NllBatchModeMinimization/1/100/iterations:100 0.163 ms 0.163 ms 100; NllBatchModeMinimization/1/1000/iterations:100 0.882 ms 0.881 ms 100; NllBatchModeMinimization/1/10000/iterations:100 8.64 ms 8.64 ms 100; NllCodeSquash_NumDiff/2/10/iterations:100 0.053 ms 0.053 ms 100; NllCodeSquash_NumDiff/2/100/iterations:100 0.124 ms 0.124 ms 100; NllCodeSquash_NumDiff/2/1000/iterations:100 0.887 ms 0.886 ms 100; NllCodeSquash_NumDiff/2/10000/iterations:100 10.1 ms 10.1 ms 100; NllCodeSquash_AD/3/10/iterations:100 0.057 ms 0.057 ms 100; NllCodeSquash_AD/3/100/iterations:100 0.186 ms 0.186 ms 100; NllCodeSquash_AD/3/1000/iterations:100 1.44 ms 1.44 ms 100; NllCodeSquash_AD/3/10000/iterations:100 17.4 ms 17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12656
https://github.com/root-project/root/pull/12657:321,Testability,log,logic,321,"On Windows, the type `ROOT::Experimental::ClusterSize_t` is resolved to the underlying type `ROOT::Experimental::RClusterSize`. `ROOT::Experimental::ClusterSize_t` is already in its canonical form and `typedef` resolution should not be attempted. TL;DR, if the type is resolved to `ROOT::Experimental::RClusterSize`, the logic in `RFieldBase::Create()` falls back to creating a `RClassField` instance, which is obviously not intended. This fixes the `ntuple_packing` test on Windows. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12657
https://github.com/root-project/root/pull/12657:467,Testability,test,test,467,"On Windows, the type `ROOT::Experimental::ClusterSize_t` is resolved to the underlying type `ROOT::Experimental::RClusterSize`. `ROOT::Experimental::ClusterSize_t` is already in its canonical form and `typedef` resolution should not be attempted. TL;DR, if the type is resolved to `ROOT::Experimental::RClusterSize`, the logic in `RFieldBase::Create()` falls back to creating a `RClassField` instance, which is obviously not intended. This fixes the `ntuple_packing` test on Windows. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12657
https://github.com/root-project/root/pull/12657:505,Testability,test,tested,505,"On Windows, the type `ROOT::Experimental::ClusterSize_t` is resolved to the underlying type `ROOT::Experimental::RClusterSize`. `ROOT::Experimental::ClusterSize_t` is already in its canonical form and `typedef` resolution should not be attempted. TL;DR, if the type is resolved to `ROOT::Experimental::RClusterSize`, the logic in `RFieldBase::Create()` falls back to creating a `RClassField` instance, which is obviously not intended. This fixes the `ntuple_packing` test on Windows. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12657
https://github.com/root-project/root/pull/12658:88,Modifiability,extend,extended,88,This is a suggestion for two improvements to the class:. 1. The projected pdf should be extended if the pdf it is projecting is also extended.; 2. The projection should respect the normalization range if one is given. Submitting this PR to solicit feedback on these proposals,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12658
https://github.com/root-project/root/pull/12658:133,Modifiability,extend,extended,133,This is a suggestion for two improvements to the class:. 1. The projected pdf should be extended if the pdf it is projecting is also extended.; 2. The projection should respect the normalization range if one is given. Submitting this PR to solicit feedback on these proposals,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12658
https://github.com/root-project/root/pull/12658:248,Usability,feedback,feedback,248,This is a suggestion for two improvements to the class:. 1. The projected pdf should be extended if the pdf it is projecting is also extended.; 2. The projection should respect the normalization range if one is given. Submitting this PR to solicit feedback on these proposals,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12658
https://github.com/root-project/root/issues/12659:580,Availability,error,error,580,"Dear all,. after . git clone https://github.com/root-project/root.git; cd root; git checkout -b v6-28-02 v6-28-02; mkdir root_build; cd root_build; cmake ../root; cmake --build -j4. I get:; ...; [ 75%] Built target rootcling_stage1; [ 75%] Generating G__Core.cxx, ../lib/Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:4:; In file included from /usr/include/c++/13/bitset:52:; In file included from /usr/include/c++/13/string:47:; /usr/include/c++/13/bits/stl_iterator_base_funcs.h:81:5: error: redefinition of '__distance'; __distance(_InputIterator __first, _InputIterator __last,; ^; /usr/include/c++/13/bits/stl_iterator_base_funcs.h:81:5: note: previous definition is here; __distance(_InputIterator __first, _InputIterator __last,; ^; ... This is under opensuse Tumbleweed with latest updates. The default compiler is gcc-13. . It looks similar to an previous issue with gcc-12: https://github.com/root-project/root/issues/10478. The last time I built root (v6.26.10 in December 2022) I had no problems but I don't know what the gcc version was back then. ; Could you please have a look?; Thanks & Cheers,; --Sven",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12659
https://github.com/root-project/root/issues/12659:883,Deployability,update,updates,883,"Dear all,. after . git clone https://github.com/root-project/root.git; cd root; git checkout -b v6-28-02 v6-28-02; mkdir root_build; cd root_build; cmake ../root; cmake --build -j4. I get:; ...; [ 75%] Built target rootcling_stage1; [ 75%] Generating G__Core.cxx, ../lib/Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:4:; In file included from /usr/include/c++/13/bitset:52:; In file included from /usr/include/c++/13/string:47:; /usr/include/c++/13/bits/stl_iterator_base_funcs.h:81:5: error: redefinition of '__distance'; __distance(_InputIterator __first, _InputIterator __last,; ^; /usr/include/c++/13/bits/stl_iterator_base_funcs.h:81:5: note: previous definition is here; __distance(_InputIterator __first, _InputIterator __last,; ^; ... This is under opensuse Tumbleweed with latest updates. The default compiler is gcc-13. . It looks similar to an previous issue with gcc-12: https://github.com/root-project/root/issues/10478. The last time I built root (v6.26.10 in December 2022) I had no problems but I don't know what the gcc version was back then. ; Could you please have a look?; Thanks & Cheers,; --Sven",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12659
https://github.com/root-project/root/pull/12660:47,Performance,cache,cache,47,"For some of the args created in the RooProdPdf cache, the ownership; model was wrong. They were attempted to be added to a list that is; actually not owning, but they should be added to the owning container of; the cache. This fixes an issue with 6.28 reported on the forum:; https://root-forum.cern.ch/t/plot-normalization-after-rooaddpdf-fixaddcoefrange/54480",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12660
https://github.com/root-project/root/pull/12660:215,Performance,cache,cache,215,"For some of the args created in the RooProdPdf cache, the ownership; model was wrong. They were attempted to be added to a list that is; actually not owning, but they should be added to the owning container of; the cache. This fixes an issue with 6.28 reported on the forum:; https://root-forum.cern.ch/t/plot-normalization-after-rooaddpdf-fixaddcoefrange/54480",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12660
https://github.com/root-project/root/issues/12661:145,Availability,error,error,145,As seen in https://root-forum.cern.ch/t/ttreereaderarray-with-enum-type/54283:; ```; TTreeReaderArray<someEnum> test_someEnum ...; ```; leads to error like; ```; Error in <TTreeReaderArrayBase::CreateProxy()>: The template argument type T of T accessing branch test_struct.e1 (which contains data of type Int_t) is not known to ROOT. You will need to create a dictionary for it.; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12661
https://github.com/root-project/root/issues/12661:162,Availability,Error,Error,162,As seen in https://root-forum.cern.ch/t/ttreereaderarray-with-enum-type/54283:; ```; TTreeReaderArray<someEnum> test_someEnum ...; ```; leads to error like; ```; Error in <TTreeReaderArrayBase::CreateProxy()>: The template argument type T of T accessing branch test_struct.e1 (which contains data of type Int_t) is not known to ROOT. You will need to create a dictionary for it.; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12661
https://github.com/root-project/root/issues/12661:244,Security,access,accessing,244,As seen in https://root-forum.cern.ch/t/ttreereaderarray-with-enum-type/54283:; ```; TTreeReaderArray<someEnum> test_someEnum ...; ```; leads to error like; ```; Error in <TTreeReaderArrayBase::CreateProxy()>: The template argument type T of T accessing branch test_struct.e1 (which contains data of type Int_t) is not known to ROOT. You will need to create a dictionary for it.; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12661
https://github.com/root-project/root/pull/12663:125,Deployability,update,updated,125,…est-time-in-case-annotation. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12663
https://github.com/root-project/root/pull/12663:95,Testability,test,tested,95,…est-time-in-case-annotation. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12663
https://github.com/root-project/root/pull/12664:314,Availability,mask,mask,314,"Adds a nullable field as a base class for unique pointer support. A follow-up PR will add `std::optional` support using the same base class. The nullable field is usually stored like a collection that can have zero or one element per entry. Optionally, nullable fields can be stored in ""dense mode"", with a bitmap mask and default-constructed values for the null entries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12664
https://github.com/root-project/root/pull/12665:424,Security,Validat,Validation,424,"Add support for 64bit split and unsplit column types. It also makes them the default for index columns. When compressed, the difference to 32bit on-disk offsets is [almost none](https://docs.google.com/spreadsheets/d/1M7DR5obCOG0aTx_5zTLBjXJZb1uXWkHXPBcUpDIkSEc/edit?usp=sharing). 64bit on-disk index columns are the missing piece for supporting large events/clusters (>512MB). In memory, offsets are already 64bit, always. Validation of large events is for a follow-up PR. Uncompressed, 64bit index columns may still hurt, so there is an option to use 32bit columns instead. In this case, the attempt to write large clusters will fail/throw.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12665
https://github.com/root-project/root/pull/12667:0,Usability,Simpl,Simplifies,0,Simplifies `RNTuple::Show` and fixes the ntpl005 tutorial. Show now uses unconditionally the model bound to the reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12667
https://github.com/root-project/root/pull/12669:409,Performance,load,loaded,409,Handle the case where a typedef as a dictionary entry and thus an autoload entry (rootmap case) and this typedef point to an instance a class template with a default paramter. In this case we do not have a (forward) declaration of the typedef in the rootmap file (because we can't have a forward declaration of the class template). In those case our only source of information is in the list of type which is loaded as part of the dictionary for the typedef. If in addition the dictionary for the target of the typedef is in another library we actually need to load that library based on the resolved name of the typedef). This fixes #12378,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12669
https://github.com/root-project/root/pull/12669:561,Performance,load,load,561,Handle the case where a typedef as a dictionary entry and thus an autoload entry (rootmap case) and this typedef point to an instance a class template with a default paramter. In this case we do not have a (forward) declaration of the typedef in the rootmap file (because we can't have a forward declaration of the class template). In those case our only source of information is in the list of type which is loaded as part of the dictionary for the typedef. If in addition the dictionary for the target of the typedef is in another library we actually need to load that library based on the resolved name of the typedef). This fixes #12378,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12669
https://github.com/root-project/root/pull/12671:298,Performance,perform,performs,298,"This is a low-level function to reset the buffer for which this RVec is acting as a view. Before this commit, the only way to reset the pointed-to address of a non-owning RVec was to construct a new RVec and swap it with the old one, which is much more expensive than the two assignments ResetView performs. It is immediately useful for RDF bulk processing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12671
https://github.com/root-project/root/issues/12673:6661,Availability,error,error,6661,"&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 \""ROOT_prompt_2\""\nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; #29 0x00007f174bca2557 in TCling::ProcessLine (this=0x55fecde8e9d0, line=<optimized out>, error=0x7ffd9df7f60c) at /usr/include/c++/12.2.1/bits/unique_ptr.h:191; #30 0x00007f1751c052e5 in TRint::ProcessLineNr (this=this; entry=0x55fecde5ddd0, filestem=filestem; entry=0x7f1751c163f8 ""ROOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; entry=0x0) at ../core/rint/src/TRint.cxx:801; #31 0x00007f1751c056ba in TRint::HandleTermInput (this=0x55fecde5ddd0) at ../core/rint/src/TRint.cxx:648; #32 0x00007f175195d0b5 in TUnixSystem::CheckDescriptors (this=this; entry=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:1306; #33 0x00007f17519604b8 in TUnixSystem::DispatchOneEvent (this=0x55fecde2a420, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1061; #34 0x00007f175187fa88 in TSystem::InnerLoop (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:406; #35 TSystem::Run (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:356; #36 0x00007f17518098cb in TApplication::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:6900,Availability,error,error,6900,"terpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 \""ROOT_prompt_2\""\nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; #29 0x00007f174bca2557 in TCling::ProcessLine (this=0x55fecde8e9d0, line=<optimized out>, error=0x7ffd9df7f60c) at /usr/include/c++/12.2.1/bits/unique_ptr.h:191; #30 0x00007f1751c052e5 in TRint::ProcessLineNr (this=this; entry=0x55fecde5ddd0, filestem=filestem; entry=0x7f1751c163f8 ""ROOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; entry=0x0) at ../core/rint/src/TRint.cxx:801; #31 0x00007f1751c056ba in TRint::HandleTermInput (this=0x55fecde5ddd0) at ../core/rint/src/TRint.cxx:648; #32 0x00007f175195d0b5 in TUnixSystem::CheckDescriptors (this=this; entry=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:1306; #33 0x00007f17519604b8 in TUnixSystem::DispatchOneEvent (this=0x55fecde2a420, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1061; #34 0x00007f175187fa88 in TSystem::InnerLoop (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:406; #35 TSystem::Run (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:356; #36 0x00007f17518098cb in TApplication::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/base/src/TApplication.cxx:1677; #37 0x00007f1751c07062 in TRint::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/rint/src/TRint.cxx:501; #38 0x000055fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:6922,Availability,error,error,6922,"terpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 \""ROOT_prompt_2\""\nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; #29 0x00007f174bca2557 in TCling::ProcessLine (this=0x55fecde8e9d0, line=<optimized out>, error=0x7ffd9df7f60c) at /usr/include/c++/12.2.1/bits/unique_ptr.h:191; #30 0x00007f1751c052e5 in TRint::ProcessLineNr (this=this; entry=0x55fecde5ddd0, filestem=filestem; entry=0x7f1751c163f8 ""ROOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; entry=0x0) at ../core/rint/src/TRint.cxx:801; #31 0x00007f1751c056ba in TRint::HandleTermInput (this=0x55fecde5ddd0) at ../core/rint/src/TRint.cxx:648; #32 0x00007f175195d0b5 in TUnixSystem::CheckDescriptors (this=this; entry=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:1306; #33 0x00007f17519604b8 in TUnixSystem::DispatchOneEvent (this=0x55fecde2a420, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1061; #34 0x00007f175187fa88 in TSystem::InnerLoop (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:406; #35 TSystem::Run (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:356; #36 0x00007f17518098cb in TApplication::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/base/src/TApplication.cxx:1677; #37 0x00007f1751c07062 in TRint::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/rint/src/TRint.cxx:501; #38 0x000055fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:2364,Deployability,install,install,2364," (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f1751960d69 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f17519606f4 in TUnixSystem::DispatchSignals (this=0x55fecde2a420, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #11 0x00007f174c94bf1c in clang::MultiplexExternalSemaSource::LookupUnqualified(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:2566,Deployability,install,install,2566,"em::StackTrace (this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f17519606f4 in TUnixSystem::DispatchSignals (this=0x55fecde2a420, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #11 0x00007f174c94bf1c in clang::MultiplexExternalSemaSource::LookupUnqualified(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:2846,Deployability,install,install,2846,"ndler called>; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #11 0x00007f174c94bf1c in clang::MultiplexExternalSemaSource::LookupUnqualified(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:3025,Deployability,install,install,3025,"..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #11 0x00007f174c94bf1c in clang::MultiplexExternalSemaSource::LookupUnqualified(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:3326,Deployability,install,install,3326,"00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #11 0x00007f174c94bf1c in clang::MultiplexExternalSemaSource::LookupUnqualified(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:3577,Deployability,install,install,3577,"ng::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:3736,Deployability,install,install,3736,"&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:3931,Deployability,install,install,3931,"lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:4186,Deployability,install,install,4186,"ng::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:4432,Deployability,install,install,4432,"all/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::Incremen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:4695,Deployability,install,install,4695,") () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Valu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:4906,Deployability,install,install,4906,"entBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:5096,Deployability,install,install,5096,"lang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:5264,Deployability,install,install,5264,"Cling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:5460,Deployability,install,install,5460,"me/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:5775,Deployability,install,install,5775,"from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 \""ROOT_prompt_2\""\nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; #29 0x00007f174bca2557 in TCling::ProcessLine (this=0x55fecde8e9d0, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:6045,Deployability,install,install,6045,"#22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 \""ROOT_prompt_2\""\nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; #29 0x00007f174bca2557 in TCling::ProcessLine (this=0x55fecde8e9d0, line=<optimized out>, error=0x7ffd9df7f60c) at /usr/include/c++/12.2.1/bits/unique_ptr.h:191; #30 0x00007f1751c052e5 in TRint::ProcessLineNr (this=this; entry=0x55fecde5ddd0, filestem=filestem; entry=0x7f1751c163f8 ""ROOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:6264,Deployability,install,install,6264,"rseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 \""ROOT_prompt_2\""\nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; #29 0x00007f174bca2557 in TCling::ProcessLine (this=0x55fecde8e9d0, line=<optimized out>, error=0x7ffd9df7f60c) at /usr/include/c++/12.2.1/bits/unique_ptr.h:191; #30 0x00007f1751c052e5 in TRint::ProcessLineNr (this=this; entry=0x55fecde5ddd0, filestem=filestem; entry=0x7f1751c163f8 ""ROOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; entry=0x0) at ../core/rint/src/TRint.cxx:801; #31 0x00007f1751c056ba in TRint::HandleTermInput (this=0x55fecde5ddd0) at ../core/rint/src/TRint.cxx:648; #32 0x00007f175195d0b5 in TUnixSystem::CheckDescriptors (this=this; entry=0x55fecde2a420) at ..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:9205,Deployability,install,install,9205,"ng information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #11 0x00007f174c94bf1c in clang::MultiplexExternalSemaSource::LookupUnqualified(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:9407,Deployability,install,install,9407,"n ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #11 0x00007f174c94bf1c in clang::MultiplexExternalSemaSource::LookupUnqualified(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:9687,Deployability,install,install,9687,"=============; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #11 0x00007f174c94bf1c in clang::MultiplexExternalSemaSource::LookupUnqualified(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:9866,Deployability,install,install,9866,"..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #11 0x00007f174c94bf1c in clang::MultiplexExternalSemaSource::LookupUnqualified(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:10167,Deployability,install,install,10167,"00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #11 0x00007f174c94bf1c in clang::MultiplexExternalSemaSource::LookupUnqualified(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:10418,Deployability,install,install,10418,"ng::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #12 0x00007f174cb36a92 in clang::Sema::ClassifyName(clang::Scope*, clang::CXXScopeSpec&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:10577,Deployability,install,install,10577,"&, clang::IdentifierInfo*&, clang::SourceLocation, clang::Token const&, clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:10772,Deployability,install,install,10772,"lib/libCling.so; #13 0x00007f174c7d02fe in clang::Parser::TryAnnotateName(clang::CorrectionCandidateCallback*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #14 0x00007f174c79f729 in clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:11027,Deployability,install,install,11027,"ng::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributesWithRange&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:11273,Deployability,install,install,11273,"all/lib/libCling.so; #15 0x00007f174c79fab4 in clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::Incremen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:11536,Deployability,install,install,11536,") () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Valu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:11747,Deployability,install,install,11747,"entBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:11937,Deployability,install,install,11937,"lang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:12105,Deployability,install,install,12105,"Cling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:12301,Deployability,install,install,12301,"me/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:12616,Deployability,install,install,12616,"0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 ""ROOT_prompt_2""nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; ===========================================================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:12886,Deployability,install,install,12886,"0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 ""ROOT_prompt_2""nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; ===========================================================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:13105,Deployability,install,install,13105,"0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 ""ROOT_prompt_2""nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; ===========================================================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:8185,Modifiability,variab,variable,8185,"kDescriptors (this=this; entry=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:1306; #33 0x00007f17519604b8 in TUnixSystem::DispatchOneEvent (this=0x55fecde2a420, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1061; #34 0x00007f175187fa88 in TSystem::InnerLoop (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:406; #35 TSystem::Run (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:356; #36 0x00007f17518098cb in TApplication::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/base/src/TApplication.cxx:1677; #37 0x00007f1751c07062 in TRint::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/rint/src/TRint.cxx:501; #38 0x000055feccf191cf in main (argc=<optimized out>, argv=0x7ffd9df81ae8) at ../main/src/rmain.cxx:84; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupRes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:1149,Performance,optimiz,optimized,1149,"(""Events"")` (which works). This particular file was produced with `RNTupleImporter`, but I guess/hope it does not matter. . ```; $ root -l data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple; root [0]; Attaching file data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple as _file0...; (TFile *) 0x55fecfbb7140; root [1] _file0->ls(); TFile**		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; TFile*		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; KEY: ROOT::Experimental::RNTuple	Events;1	object title; root [2] Events<Enter>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f17510ea707 in __GI___wait4 (pid=109605, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f17510ea6cb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0) at waitpid.c:38; #2 0x00007f17510627fb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f1751960d69 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f17519606f4 in TUnixSystem::DispatchSignals (this=0x55fecde2a420, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:1291,Performance,optimiz,optimized,1291,"es not matter. . ```; $ root -l data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple; root [0]; Attaching file data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple as _file0...; (TFile *) 0x55fecfbb7140; root [1] _file0->ls(); TFile**		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; TFile*		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; KEY: ROOT::Experimental::RNTuple	Events;1	object title; root [2] Events<Enter>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f17510ea707 in __GI___wait4 (pid=109605, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f17510ea6cb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0) at waitpid.c:38; #2 0x00007f17510627fb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f1751960d69 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f17519606f4 in TUnixSystem::DispatchSignals (this=0x55fecde2a420, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::Loo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:1395,Performance,optimiz,optimized,1395,"ta/Run2012BC_DoubleMuParked_Muons.zstd.ntuple as _file0...; (TFile *) 0x55fecfbb7140; root [1] _file0->ls(); TFile**		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; TFile*		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; KEY: ROOT::Experimental::RNTuple	Events;1	object title; root [2] Events<Enter>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f17510ea707 in __GI___wait4 (pid=109605, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f17510ea6cb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0) at waitpid.c:38; #2 0x00007f17510627fb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f1751960d69 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f17519606f4 in TUnixSystem::DispatchSignals (this=0x55fecde2a420, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:6645,Performance,optimiz,optimized,6645,"&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 \""ROOT_prompt_2\""\nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; #29 0x00007f174bca2557 in TCling::ProcessLine (this=0x55fecde8e9d0, line=<optimized out>, error=0x7ffd9df7f60c) at /usr/include/c++/12.2.1/bits/unique_ptr.h:191; #30 0x00007f1751c052e5 in TRint::ProcessLineNr (this=this; entry=0x55fecde5ddd0, filestem=filestem; entry=0x7f1751c163f8 ""ROOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; entry=0x0) at ../core/rint/src/TRint.cxx:801; #31 0x00007f1751c056ba in TRint::HandleTermInput (this=0x55fecde5ddd0) at ../core/rint/src/TRint.cxx:648; #32 0x00007f175195d0b5 in TUnixSystem::CheckDescriptors (this=this; entry=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:1306; #33 0x00007f17519604b8 in TUnixSystem::DispatchOneEvent (this=0x55fecde2a420, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1061; #34 0x00007f175187fa88 in TSystem::InnerLoop (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:406; #35 TSystem::Run (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:356; #36 0x00007f17518098cb in TApplication::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:7304,Performance,optimiz,optimized,7304,"/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 \""ROOT_prompt_2\""\nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; #29 0x00007f174bca2557 in TCling::ProcessLine (this=0x55fecde8e9d0, line=<optimized out>, error=0x7ffd9df7f60c) at /usr/include/c++/12.2.1/bits/unique_ptr.h:191; #30 0x00007f1751c052e5 in TRint::ProcessLineNr (this=this; entry=0x55fecde5ddd0, filestem=filestem; entry=0x7f1751c163f8 ""ROOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; entry=0x0) at ../core/rint/src/TRint.cxx:801; #31 0x00007f1751c056ba in TRint::HandleTermInput (this=0x55fecde5ddd0) at ../core/rint/src/TRint.cxx:648; #32 0x00007f175195d0b5 in TUnixSystem::CheckDescriptors (this=this; entry=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:1306; #33 0x00007f17519604b8 in TUnixSystem::DispatchOneEvent (this=0x55fecde2a420, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1061; #34 0x00007f175187fa88 in TSystem::InnerLoop (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:406; #35 TSystem::Run (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:356; #36 0x00007f17518098cb in TApplication::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/base/src/TApplication.cxx:1677; #37 0x00007f1751c07062 in TRint::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/rint/src/TRint.cxx:501; #38 0x000055feccf191cf in main (argc=<optimized out>, argv=0x7ffd9df81ae8) at ../main/src/rmain.cxx:84; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:7859,Performance,optimiz,optimized,7859,"OOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; entry=0x0) at ../core/rint/src/TRint.cxx:801; #31 0x00007f1751c056ba in TRint::HandleTermInput (this=0x55fecde5ddd0) at ../core/rint/src/TRint.cxx:648; #32 0x00007f175195d0b5 in TUnixSystem::CheckDescriptors (this=this; entry=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:1306; #33 0x00007f17519604b8 in TUnixSystem::DispatchOneEvent (this=0x55fecde2a420, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1061; #34 0x00007f175187fa88 in TSystem::InnerLoop (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:406; #35 TSystem::Run (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:356; #36 0x00007f17518098cb in TApplication::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/base/src/TApplication.cxx:1677; #37 0x00007f1751c07062 in TRint::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/rint/src/TRint.cxx:501; #38 0x000055feccf191cf in main (argc=<optimized out>, argv=0x7ffd9df81ae8) at ../main/src/rmain.cxx:84; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:4602,Security,Access,AccessSpecifier,4602,"/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/issues/12673:11443,Security,Access,AccessSpecifier,11443,"/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #16 0x00007f174c7a7902 in clang::Parser::ParseCompoundStatementBody(bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #17 0x00007f174c7a9bcc in clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #18 0x00007f174c7d5ac5 in clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::LateParsedAttrList*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #19 0x00007f174c70dd20 in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #20 0x00007f174c7d1e54 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #21 0x00007f174c7d8830 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #22 0x00007f174c7d9900 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #23 0x00007f174be0d87a in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #24 0x00007f174be0e9b0 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #25 0x00007f174bd71127 in cling::Interpreter::EvaluateI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12673
https://github.com/root-project/root/pull/12675:502,Energy Efficiency,reduce,reduces,502,"The existing implementation in RooBatchCompute for polynomials was not; adequate, because it couldn't deal with coefficients that are different; for each event. This PR is re-implementing the support for RooPolynomial, and also; re-uses the same code for the `RooPolyVar`, which is identical to the; `RooPolynomial` apart from the base class. Also, this PR is removing the old `RooAbsReal::evaluateSpan()` family of functions that was used for the BatchMode before ROOT 6.26. Furthermore, this PR also reduces the use of the `RunContext` class that was connected to the old BatchMode implementation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12675
https://github.com/root-project/root/pull/12676:171,Deployability,update,updated,171,"This pull request completes the implementation of late model extension landed in https://github.com/root-project/root/pull/12376. In particular, it allows the model to be updated at any time, even if entries have been already filled. To do so, a new flag is added to the column description, `kFlagDeferredColumn`, which indicates that the index of the first on-disk element in the column is not zero (i.e., the column was added at a later point during write). If the flag is set, an additional 64bit integer ($firstElementIndex$) specifies the global index of the first stored element.; Compliant implementations should yield synthetic data pages made up of `0x00` bytes when trying to read back elements in the range $[0, firstElementIndex-1]$. This ensures zero-initialized values for fields of any supported C++ type, including `std::variant<Ts...>` and collections such as `std::vector<T>`. ## Changes or fixes:; - Allow for including the index of the first element in a column in the column description. This introduces the column flag `kFlagDeferredColumn` which specifies that the column has no on-disk data for elements preceding the given element index.; - `RPageSink::UpdateSchema()` now takes an additional argument (firstEntry) that specifies the first entry that stores an on-disk value for the fields in the changeset. The entry index is translated to column element index by `EntryToColumnElementIndex()`.; - `RPage::MakePageZero()`: this function returns a page that is comprised of `0x00` bytes only.; - Introduce locator type `kTypePageZero`. This locator type represents unmaterialized (i.e., in-memory only) zero pages for deferred columns.; - Add `RPageRange::ExtendToFitColumnRange()`: this function extends a RPageRange to fit the given RColumnRange, i.e. prepend as many synthetic `RPageInfo`s as needed to cover the entire range. `RPageInfo`s are constructed to contain as many elements given a page size limit in bytes; the locator for the referenced pages is `kPageZero`.; T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12676
https://github.com/root-project/root/pull/12676:1178,Deployability,Update,UpdateSchema,1178,"ew flag is added to the column description, `kFlagDeferredColumn`, which indicates that the index of the first on-disk element in the column is not zero (i.e., the column was added at a later point during write). If the flag is set, an additional 64bit integer ($firstElementIndex$) specifies the global index of the first stored element.; Compliant implementations should yield synthetic data pages made up of `0x00` bytes when trying to read back elements in the range $[0, firstElementIndex-1]$. This ensures zero-initialized values for fields of any supported C++ type, including `std::variant<Ts...>` and collections such as `std::vector<T>`. ## Changes or fixes:; - Allow for including the index of the first element in a column in the column description. This introduces the column flag `kFlagDeferredColumn` which specifies that the column has no on-disk data for elements preceding the given element index.; - `RPageSink::UpdateSchema()` now takes an additional argument (firstEntry) that specifies the first entry that stores an on-disk value for the fields in the changeset. The entry index is translated to column element index by `EntryToColumnElementIndex()`.; - `RPage::MakePageZero()`: this function returns a page that is comprised of `0x00` bytes only.; - Introduce locator type `kTypePageZero`. This locator type represents unmaterialized (i.e., in-memory only) zero pages for deferred columns.; - Add `RPageRange::ExtendToFitColumnRange()`: this function extends a RPageRange to fit the given RColumnRange, i.e. prepend as many synthetic `RPageInfo`s as needed to cover the entire range. `RPageInfo`s are constructed to contain as many elements given a page size limit in bytes; the locator for the referenced pages is `kPageZero`.; This function is used to make up `RPageRange`s for clusters that contain deferred columns.; - Add `RClusterDescriptorBuilder::AddDeferredColumnRanges()`, which makes up `RColumnRange` and `RPageRange`s that make sense for deferred columns that are",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12676
https://github.com/root-project/root/pull/12676:2486,Deployability,update,updated,2486," any supported C++ type, including `std::variant<Ts...>` and collections such as `std::vector<T>`. ## Changes or fixes:; - Allow for including the index of the first element in a column in the column description. This introduces the column flag `kFlagDeferredColumn` which specifies that the column has no on-disk data for elements preceding the given element index.; - `RPageSink::UpdateSchema()` now takes an additional argument (firstEntry) that specifies the first entry that stores an on-disk value for the fields in the changeset. The entry index is translated to column element index by `EntryToColumnElementIndex()`.; - `RPage::MakePageZero()`: this function returns a page that is comprised of `0x00` bytes only.; - Introduce locator type `kTypePageZero`. This locator type represents unmaterialized (i.e., in-memory only) zero pages for deferred columns.; - Add `RPageRange::ExtendToFitColumnRange()`: this function extends a RPageRange to fit the given RColumnRange, i.e. prepend as many synthetic `RPageInfo`s as needed to cover the entire range. `RPageInfo`s are constructed to contain as many elements given a page size limit in bytes; the locator for the referenced pages is `kPageZero`.; This function is used to make up `RPageRange`s for clusters that contain deferred columns.; - Add `RClusterDescriptorBuilder::AddDeferredColumnRanges()`, which makes up `RColumnRange` and `RPageRange`s that make sense for deferred columns that are otherwise missing in a cluster.; - RPageStorageFile: add ability to populate the zero page from `kTypePageZero` locators.; - RVariantField: allow reading values with dispatch `tag == 0`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] RPageStorageDaos: populate the zero page from `kTypePageZero` locators. (for a follow-up PR?); - [x] Possible optimization: `UnsealPage()` should be a no-op for zero pages; this is to be handled in PR https://github.com/root-project/root/pull/12279. This PR fixes #10020.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12676
https://github.com/root-project/root/pull/12676:1681,Modifiability,Extend,ExtendToFitColumnRange,1681,"$[0, firstElementIndex-1]$. This ensures zero-initialized values for fields of any supported C++ type, including `std::variant<Ts...>` and collections such as `std::vector<T>`. ## Changes or fixes:; - Allow for including the index of the first element in a column in the column description. This introduces the column flag `kFlagDeferredColumn` which specifies that the column has no on-disk data for elements preceding the given element index.; - `RPageSink::UpdateSchema()` now takes an additional argument (firstEntry) that specifies the first entry that stores an on-disk value for the fields in the changeset. The entry index is translated to column element index by `EntryToColumnElementIndex()`.; - `RPage::MakePageZero()`: this function returns a page that is comprised of `0x00` bytes only.; - Introduce locator type `kTypePageZero`. This locator type represents unmaterialized (i.e., in-memory only) zero pages for deferred columns.; - Add `RPageRange::ExtendToFitColumnRange()`: this function extends a RPageRange to fit the given RColumnRange, i.e. prepend as many synthetic `RPageInfo`s as needed to cover the entire range. `RPageInfo`s are constructed to contain as many elements given a page size limit in bytes; the locator for the referenced pages is `kPageZero`.; This function is used to make up `RPageRange`s for clusters that contain deferred columns.; - Add `RClusterDescriptorBuilder::AddDeferredColumnRanges()`, which makes up `RColumnRange` and `RPageRange`s that make sense for deferred columns that are otherwise missing in a cluster.; - RPageStorageFile: add ability to populate the zero page from `kTypePageZero` locators.; - RVariantField: allow reading values with dispatch `tag == 0`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] RPageStorageDaos: populate the zero page from `kTypePageZero` locators. (for a follow-up PR?); - [x] Possible optimization: `UnsealPage()` should be a no-op for zero pages; this is to be handle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12676
https://github.com/root-project/root/pull/12676:1722,Modifiability,extend,extends,1722,"$[0, firstElementIndex-1]$. This ensures zero-initialized values for fields of any supported C++ type, including `std::variant<Ts...>` and collections such as `std::vector<T>`. ## Changes or fixes:; - Allow for including the index of the first element in a column in the column description. This introduces the column flag `kFlagDeferredColumn` which specifies that the column has no on-disk data for elements preceding the given element index.; - `RPageSink::UpdateSchema()` now takes an additional argument (firstEntry) that specifies the first entry that stores an on-disk value for the fields in the changeset. The entry index is translated to column element index by `EntryToColumnElementIndex()`.; - `RPage::MakePageZero()`: this function returns a page that is comprised of `0x00` bytes only.; - Introduce locator type `kTypePageZero`. This locator type represents unmaterialized (i.e., in-memory only) zero pages for deferred columns.; - Add `RPageRange::ExtendToFitColumnRange()`: this function extends a RPageRange to fit the given RColumnRange, i.e. prepend as many synthetic `RPageInfo`s as needed to cover the entire range. `RPageInfo`s are constructed to contain as many elements given a page size limit in bytes; the locator for the referenced pages is `kPageZero`.; This function is used to make up `RPageRange`s for clusters that contain deferred columns.; - Add `RClusterDescriptorBuilder::AddDeferredColumnRanges()`, which makes up `RColumnRange` and `RPageRange`s that make sense for deferred columns that are otherwise missing in a cluster.; - RPageStorageFile: add ability to populate the zero page from `kTypePageZero` locators.; - RVariantField: allow reading values with dispatch `tag == 0`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] RPageStorageDaos: populate the zero page from `kTypePageZero` locators. (for a follow-up PR?); - [x] Possible optimization: `UnsealPage()` should be a no-op for zero pages; this is to be handle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12676
https://github.com/root-project/root/pull/12676:2635,Performance,optimiz,optimization,2635," any supported C++ type, including `std::variant<Ts...>` and collections such as `std::vector<T>`. ## Changes or fixes:; - Allow for including the index of the first element in a column in the column description. This introduces the column flag `kFlagDeferredColumn` which specifies that the column has no on-disk data for elements preceding the given element index.; - `RPageSink::UpdateSchema()` now takes an additional argument (firstEntry) that specifies the first entry that stores an on-disk value for the fields in the changeset. The entry index is translated to column element index by `EntryToColumnElementIndex()`.; - `RPage::MakePageZero()`: this function returns a page that is comprised of `0x00` bytes only.; - Introduce locator type `kTypePageZero`. This locator type represents unmaterialized (i.e., in-memory only) zero pages for deferred columns.; - Add `RPageRange::ExtendToFitColumnRange()`: this function extends a RPageRange to fit the given RColumnRange, i.e. prepend as many synthetic `RPageInfo`s as needed to cover the entire range. `RPageInfo`s are constructed to contain as many elements given a page size limit in bytes; the locator for the referenced pages is `kPageZero`.; This function is used to make up `RPageRange`s for clusters that contain deferred columns.; - Add `RClusterDescriptorBuilder::AddDeferredColumnRanges()`, which makes up `RColumnRange` and `RPageRange`s that make sense for deferred columns that are otherwise missing in a cluster.; - RPageStorageFile: add ability to populate the zero page from `kTypePageZero` locators.; - RVariantField: allow reading values with dispatch `tag == 0`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] RPageStorageDaos: populate the zero page from `kTypePageZero` locators. (for a follow-up PR?); - [x] Possible optimization: `UnsealPage()` should be a no-op for zero pages; this is to be handled in PR https://github.com/root-project/root/pull/12279. This PR fixes #10020.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12676
https://github.com/root-project/root/pull/12676:2456,Testability,test,tested,2456," any supported C++ type, including `std::variant<Ts...>` and collections such as `std::vector<T>`. ## Changes or fixes:; - Allow for including the index of the first element in a column in the column description. This introduces the column flag `kFlagDeferredColumn` which specifies that the column has no on-disk data for elements preceding the given element index.; - `RPageSink::UpdateSchema()` now takes an additional argument (firstEntry) that specifies the first entry that stores an on-disk value for the fields in the changeset. The entry index is translated to column element index by `EntryToColumnElementIndex()`.; - `RPage::MakePageZero()`: this function returns a page that is comprised of `0x00` bytes only.; - Introduce locator type `kTypePageZero`. This locator type represents unmaterialized (i.e., in-memory only) zero pages for deferred columns.; - Add `RPageRange::ExtendToFitColumnRange()`: this function extends a RPageRange to fit the given RColumnRange, i.e. prepend as many synthetic `RPageInfo`s as needed to cover the entire range. `RPageInfo`s are constructed to contain as many elements given a page size limit in bytes; the locator for the referenced pages is `kPageZero`.; This function is used to make up `RPageRange`s for clusters that contain deferred columns.; - Add `RClusterDescriptorBuilder::AddDeferredColumnRanges()`, which makes up `RColumnRange` and `RPageRange`s that make sense for deferred columns that are otherwise missing in a cluster.; - RPageStorageFile: add ability to populate the zero page from `kTypePageZero` locators.; - RVariantField: allow reading values with dispatch `tag == 0`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] RPageStorageDaos: populate the zero page from `kTypePageZero` locators. (for a follow-up PR?); - [x] Possible optimization: `UnsealPage()` should be a no-op for zero pages; this is to be handled in PR https://github.com/root-project/root/pull/12279. This PR fixes #10020.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12676
https://github.com/root-project/root/pull/12677:116,Availability,error,errors,116,"So far, the pdf normalization could not be done in RooBatchCompute,; because it requires the tracking of evaluation errors. This could not be implemented in the current batchcompure library,; because information could not flow back from the compute functions to; the calling object. This is now made possible by taking the `ExtraArgs`; array by reference, meaning it can also be used as an output parameter; by the compute function to return for example the number of evaluation; errors. This change greatly helps to speed up the BatchMode, expecially on the; GPU because the normalization can now be done on the device. To be able to also do the NaN-packing on the GPU device, the `RooNaNPacker` helper class was moved to `batchcompute`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12677
https://github.com/root-project/root/pull/12677:480,Availability,error,errors,480,"So far, the pdf normalization could not be done in RooBatchCompute,; because it requires the tracking of evaluation errors. This could not be implemented in the current batchcompure library,; because information could not flow back from the compute functions to; the calling object. This is now made possible by taking the `ExtraArgs`; array by reference, meaning it can also be used as an output parameter; by the compute function to return for example the number of evaluation; errors. This change greatly helps to speed up the BatchMode, expecially on the; GPU because the normalization can now be done on the device. To be able to also do the NaN-packing on the GPU device, the `RooNaNPacker` helper class was moved to `batchcompute`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12677
https://github.com/root-project/root/pull/12678:210,Deployability,update,updated,210,# This Pull request:. back port to allow `__cast_cpp__ `to return tuple for an implicit temporary if a temporary can be accepted by C++. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12678
https://github.com/root-project/root/pull/12678:180,Testability,test,tested,180,# This Pull request:. back port to allow `__cast_cpp__ `to return tuple for an implicit temporary if a temporary can be accepted by C++. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12678
https://github.com/root-project/root/issues/12680:781,Security,access,access,781,"### Describe the bug; 1) The TTree::Scan() can't properly display a vector<vector<vector<>>>. It always shows a single element of value 0.; 2) The TBrowser shows such vectors as having 0 elements.; 3) 1D and 2D vectors work OK. ### Expected behaviour; 1) TTree::Scan() showing all the elements of the 3D vector like for 2D and 1D vector; 2) TBrowser being able to show all the values and proper number of elements of the 3D vector, like for 2D and 1D vectors. ### To Reproduce; Please run the attached macro or store a 3D vector in a TTree.; [ttree_vector_bug.zip](https://github.com/root-project/root/files/11268478/ttree_vector_bug.zip). ### Setup; self-compiled ROOT 6.28.00, Fedora 37. ### Additional context; This bug is quite important for 2 reasons:; 1) For users trying to access the TTree with TBrowser the vector seems empty and they think they have the wrong data files; 2) There is no easy way to check the vector contents with Scan() quickly not working, which makes debugging experiment much harder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12680
https://github.com/root-project/root/pull/12681:4424,Availability,error,error,4424,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:86,Deployability,patch,patches,86,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12640; 2. https://github.com/root-project/root/pull/12638; 3. https://github.com/root-project/root/pull/12636; 4. https://github.com/root-project/root/pull/12614; 5. https://github.com/root-project/root/pull/12643; 6. https://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:754,Deployability,patch,patches,754,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12640; 2. https://github.com/root-project/root/pull/12638; 3. https://github.com/root-project/root/pull/12636; 4. https://github.com/root-project/root/pull/12614; 5. https://github.com/root-project/root/pull/12643; 6. https://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:2779,Deployability,integrat,integration,2779,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:2316,Integrability,depend,dependency,2316,"ize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:2364,Integrability,interface,interface,2364,"F] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add inti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:2779,Integrability,integrat,integration,2779,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:3102,Integrability,interface,interface,3102,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:3387,Integrability,interface,interface,3387," dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:4363,Integrability,wrap,wrapper,4363,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:3567,Modifiability,inherit,inheritance,3567,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:1300,Performance,Optimiz,Optimize,1300,"s://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:1870,Safety,Avoid,Avoid,1870,"ar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:1673,Testability,test,testRooFuncWrapper,1673,"s://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:2131,Testability,test,test,2131,"tor; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:2639,Testability,mock,mock,2639," output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:2659,Testability,test,test,2659," output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:3142,Testability,test,testRooDataHist,3142,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:3199,Testability,test,test,3199,"er declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:3504,Testability,test,tests,3504,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:3518,Testability,Test,TestStatistics,3518,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:4037,Testability,Test,Test,4037,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12681:4081,Testability,test,testRooFuncWrapper,4081,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12681
https://github.com/root-project/root/pull/12682:13,Modifiability,variab,variable,13,"* Fix unused variable warning in `TMPWorkerExecutor` by moving variable in the only code branch where it's actually used. * Fix some warnings about deprecated enum arithmetics by using `constexpr static int` instead of `enum`. * Fix warnings about the deprecation of `volatile` in C++ by not using it. With these changes, I can compile RooFit again without seeing warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12682
https://github.com/root-project/root/pull/12682:63,Modifiability,variab,variable,63,"* Fix unused variable warning in `TMPWorkerExecutor` by moving variable in the only code branch where it's actually used. * Fix some warnings about deprecated enum arithmetics by using `constexpr static int` instead of `enum`. * Fix warnings about the deprecation of `volatile` in C++ by not using it. With these changes, I can compile RooFit again without seeing warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12682
https://github.com/root-project/root/issues/12684:177,Availability,error,error,177,"As seen (and worked around) in https://github.com/root-project/root/pull/12503 reading a file containing a class containing a `std::unique_ptr<std::vector<double>>` leads to an error like:; ```; TStreamerInfo::BuildOld: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; ```; This is technically due to the fact that `TStreamerInfo::Build` calculates (incorrectly) the data member type to be `kAnyp` while `BuildOld` calculates (correctly) it to be `kSTLp`. Reproducer:. ```; // MyClass.h. #ifndef MyClass_h; #define MyClass_h. #include <memory>; #include <vector>. class MyClass; {; public:; std::unique_ptr<std::vector<int>> _vec;; ClassDef(MyClass, 1);; };. #endif; ```; ```; // readMyClass.C. void readMyClass(); {; TFile f(""f.root"", ""read"");; auto obj = f.Get<MyClass>(""obj"");. for(int x : *obj->_vec) {; std::cout << x << std::endl;; }; }; ```; ```; // writeMyClass.C. void writeMyClass(); {; MyClass obj;; obj._vec = std::make_unique<std::vector<int>>();; obj._vec->push_back(1);; obj._vec->push_back(2);; obj._vec->push_back(3);. TFile f(""f.root"", ""recreate"");; f.WriteObject(&obj, ""obj"");; }; ```; ```; root.exe -l -q -e '.L MyClass.h+' -e '.x writeMyClass.C'; root.exe -l -q -e '.L MyClass.h+' -e '.x readMyClass.C'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12684
https://github.com/root-project/root/pull/12687:339,Modifiability,variab,variable,339,"There was a bad interaction between commit 8a67cf611c changing the signature of `compute()` to take a non-const reference, requiring an lvalue, and commit aa47d71aae introducing a new call to that same function with a temporary argument. Fix it in the same way as other call sites were changed in commit 8a67cf611c, by introducing a local variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12687
https://github.com/root-project/root/pull/12688:72,Deployability,release,released,72,"New version v2.7.0 of EnricoMi/publish-unit-test-result-action was just released ([change log](https://github.com/EnricoMi/publish-unit-test-result-action/releases/tag/v2.7.0)), it adds test times to case annotations:; https://github.com/EnricoMi/publish-unit-test-result-action/issues/431. Thanks @EnricoMi!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12688
https://github.com/root-project/root/pull/12688:155,Deployability,release,releases,155,"New version v2.7.0 of EnricoMi/publish-unit-test-result-action was just released ([change log](https://github.com/EnricoMi/publish-unit-test-result-action/releases/tag/v2.7.0)), it adds test times to case annotations:; https://github.com/EnricoMi/publish-unit-test-result-action/issues/431. Thanks @EnricoMi!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12688
https://github.com/root-project/root/pull/12688:44,Testability,test,test-result-action,44,"New version v2.7.0 of EnricoMi/publish-unit-test-result-action was just released ([change log](https://github.com/EnricoMi/publish-unit-test-result-action/releases/tag/v2.7.0)), it adds test times to case annotations:; https://github.com/EnricoMi/publish-unit-test-result-action/issues/431. Thanks @EnricoMi!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12688
https://github.com/root-project/root/pull/12688:90,Testability,log,log,90,"New version v2.7.0 of EnricoMi/publish-unit-test-result-action was just released ([change log](https://github.com/EnricoMi/publish-unit-test-result-action/releases/tag/v2.7.0)), it adds test times to case annotations:; https://github.com/EnricoMi/publish-unit-test-result-action/issues/431. Thanks @EnricoMi!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12688
https://github.com/root-project/root/pull/12688:136,Testability,test,test-result-action,136,"New version v2.7.0 of EnricoMi/publish-unit-test-result-action was just released ([change log](https://github.com/EnricoMi/publish-unit-test-result-action/releases/tag/v2.7.0)), it adds test times to case annotations:; https://github.com/EnricoMi/publish-unit-test-result-action/issues/431. Thanks @EnricoMi!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12688
https://github.com/root-project/root/pull/12688:186,Testability,test,test,186,"New version v2.7.0 of EnricoMi/publish-unit-test-result-action was just released ([change log](https://github.com/EnricoMi/publish-unit-test-result-action/releases/tag/v2.7.0)), it adds test times to case annotations:; https://github.com/EnricoMi/publish-unit-test-result-action/issues/431. Thanks @EnricoMi!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12688
https://github.com/root-project/root/pull/12688:260,Testability,test,test-result-action,260,"New version v2.7.0 of EnricoMi/publish-unit-test-result-action was just released ([change log](https://github.com/EnricoMi/publish-unit-test-result-action/releases/tag/v2.7.0)), it adds test times to case annotations:; https://github.com/EnricoMi/publish-unit-test-result-action/issues/431. Thanks @EnricoMi!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12688
https://github.com/root-project/root/pull/12689:157,Availability,error,errors,157,"Clang complains:; ```; warning: 'RNTupleModelChangeset' defined as a struct here but previously declared as a class; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12689
https://github.com/root-project/root/pull/12691:4424,Availability,error,error,4424,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:86,Deployability,patch,patches,86,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12640; 2. https://github.com/root-project/root/pull/12638; 3. https://github.com/root-project/root/pull/12636; 4. https://github.com/root-project/root/pull/12614; 5. https://github.com/root-project/root/pull/12643; 6. https://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:754,Deployability,patch,patches,754,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12640; 2. https://github.com/root-project/root/pull/12638; 3. https://github.com/root-project/root/pull/12636; 4. https://github.com/root-project/root/pull/12614; 5. https://github.com/root-project/root/pull/12643; 6. https://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:2779,Deployability,integrat,integration,2779,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:2316,Integrability,depend,dependency,2316,"ize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:2364,Integrability,interface,interface,2364,"F] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add inti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:2779,Integrability,integrat,integration,2779,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:3102,Integrability,interface,interface,3102,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:3387,Integrability,interface,interface,3387," dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:4363,Integrability,wrap,wrapper,4363,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:3567,Modifiability,inherit,inheritance,3567,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:1300,Performance,Optimiz,Optimize,1300,"s://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:1870,Safety,Avoid,Avoid,1870,"ar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:1673,Testability,test,testRooFuncWrapper,1673,"s://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:2131,Testability,test,test,2131,"tor; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:2639,Testability,mock,mock,2639," output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:2659,Testability,test,test,2659," output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:3142,Testability,test,testRooDataHist,3142,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:3199,Testability,test,test,3199,"er declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:3504,Testability,test,tests,3504,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:3518,Testability,Test,TestStatistics,3518,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:4037,Testability,Test,Test,4037,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12691:4081,Testability,test,testRooFuncWrapper,4081,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12691
https://github.com/root-project/root/pull/12695:476,Availability,error,error,476,"Address: https://github.com/root-project/root/pull/12650#issuecomment-1517450219. From @hahnjo:. Hi @pcanal, our AddressSanitizer build reports a heap-buffer-overflow: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roottest.root.tree/stl/roottest_root_tree_stl_make/. I bisected this to commit https://github.com/root-project/root/commit/2fa93de2a51e248a56418d8c6488b043746d0925; the error message says ""0x60700022d458 is located 8 bytes to the left of 80-byte region"". However, the stack trace points to the loop immediately after the added condition to perform the binary search. Could you take a look, please? What does TMath::BinarySearch return in case the element is not found?. Answer: yep it was missing the error handling (return value of -1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12695
https://github.com/root-project/root/pull/12695:808,Availability,error,error,808,"Address: https://github.com/root-project/root/pull/12650#issuecomment-1517450219. From @hahnjo:. Hi @pcanal, our AddressSanitizer build reports a heap-buffer-overflow: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roottest.root.tree/stl/roottest_root_tree_stl_make/. I bisected this to commit https://github.com/root-project/root/commit/2fa93de2a51e248a56418d8c6488b043746d0925; the error message says ""0x60700022d458 is located 8 bytes to the left of 80-byte region"". However, the stack trace points to the loop immediately after the added condition to perform the binary search. Could you take a look, please? What does TMath::BinarySearch return in case the element is not found?. Answer: yep it was missing the error handling (return value of -1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12695
https://github.com/root-project/root/pull/12695:482,Integrability,message,message,482,"Address: https://github.com/root-project/root/pull/12650#issuecomment-1517450219. From @hahnjo:. Hi @pcanal, our AddressSanitizer build reports a heap-buffer-overflow: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roottest.root.tree/stl/roottest_root_tree_stl_make/. I bisected this to commit https://github.com/root-project/root/commit/2fa93de2a51e248a56418d8c6488b043746d0925; the error message says ""0x60700022d458 is located 8 bytes to the left of 80-byte region"". However, the stack trace points to the loop immediately after the added condition to perform the binary search. Could you take a look, please? What does TMath::BinarySearch return in case the element is not found?. Answer: yep it was missing the error handling (return value of -1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12695
https://github.com/root-project/root/pull/12695:647,Performance,perform,perform,647,"Address: https://github.com/root-project/root/pull/12650#issuecomment-1517450219. From @hahnjo:. Hi @pcanal, our AddressSanitizer build reports a heap-buffer-overflow: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roottest.root.tree/stl/roottest_root_tree_stl_make/. I bisected this to commit https://github.com/root-project/root/commit/2fa93de2a51e248a56418d8c6488b043746d0925; the error message says ""0x60700022d458 is located 8 bytes to the left of 80-byte region"". However, the stack trace points to the loop immediately after the added condition to perform the binary search. Could you take a look, please? What does TMath::BinarySearch return in case the element is not found?. Answer: yep it was missing the error handling (return value of -1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12695
https://github.com/root-project/root/pull/12695:284,Testability,test,testReport,284,"Address: https://github.com/root-project/root/pull/12650#issuecomment-1517450219. From @hahnjo:. Hi @pcanal, our AddressSanitizer build reports a heap-buffer-overflow: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roottest.root.tree/stl/roottest_root_tree_stl_make/. I bisected this to commit https://github.com/root-project/root/commit/2fa93de2a51e248a56418d8c6488b043746d0925; the error message says ""0x60700022d458 is located 8 bytes to the left of 80-byte region"". However, the stack trace points to the loop immediately after the added condition to perform the binary search. Could you take a look, please? What does TMath::BinarySearch return in case the element is not found?. Answer: yep it was missing the error handling (return value of -1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12695
https://github.com/root-project/root/pull/12696:136,Availability,error,error,136,"The `roobatchcompute` library dynamically loads the most performant implementation library that the CPU supports. However, it throws an error if the library was already loaded. Indeed, in most usecases it's correct that the implementation library is not loaded before the RooBatchCompute main library is initialized, but if a RooFit script is executed via; `gInterpreter->LoadMacro(""Macro_Name.cxx++"")`, the library is already loaded the second time the macro is launched like this. Hence, it's better is the `batchcompute` library throws no exception if the implementation is already loaded. This fixes a problem reported on the forum:; https://root-forum.cern.ch/t/roofit-computation-library-libroobatchcompute-avx2-was-loaded-before-roofit-initialisation-began/54580",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12696
https://github.com/root-project/root/pull/12696:42,Performance,load,loads,42,"The `roobatchcompute` library dynamically loads the most performant implementation library that the CPU supports. However, it throws an error if the library was already loaded. Indeed, in most usecases it's correct that the implementation library is not loaded before the RooBatchCompute main library is initialized, but if a RooFit script is executed via; `gInterpreter->LoadMacro(""Macro_Name.cxx++"")`, the library is already loaded the second time the macro is launched like this. Hence, it's better is the `batchcompute` library throws no exception if the implementation is already loaded. This fixes a problem reported on the forum:; https://root-forum.cern.ch/t/roofit-computation-library-libroobatchcompute-avx2-was-loaded-before-roofit-initialisation-began/54580",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12696
https://github.com/root-project/root/pull/12696:57,Performance,perform,performant,57,"The `roobatchcompute` library dynamically loads the most performant implementation library that the CPU supports. However, it throws an error if the library was already loaded. Indeed, in most usecases it's correct that the implementation library is not loaded before the RooBatchCompute main library is initialized, but if a RooFit script is executed via; `gInterpreter->LoadMacro(""Macro_Name.cxx++"")`, the library is already loaded the second time the macro is launched like this. Hence, it's better is the `batchcompute` library throws no exception if the implementation is already loaded. This fixes a problem reported on the forum:; https://root-forum.cern.ch/t/roofit-computation-library-libroobatchcompute-avx2-was-loaded-before-roofit-initialisation-began/54580",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12696
https://github.com/root-project/root/pull/12696:169,Performance,load,loaded,169,"The `roobatchcompute` library dynamically loads the most performant implementation library that the CPU supports. However, it throws an error if the library was already loaded. Indeed, in most usecases it's correct that the implementation library is not loaded before the RooBatchCompute main library is initialized, but if a RooFit script is executed via; `gInterpreter->LoadMacro(""Macro_Name.cxx++"")`, the library is already loaded the second time the macro is launched like this. Hence, it's better is the `batchcompute` library throws no exception if the implementation is already loaded. This fixes a problem reported on the forum:; https://root-forum.cern.ch/t/roofit-computation-library-libroobatchcompute-avx2-was-loaded-before-roofit-initialisation-began/54580",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12696
https://github.com/root-project/root/pull/12696:254,Performance,load,loaded,254,"The `roobatchcompute` library dynamically loads the most performant implementation library that the CPU supports. However, it throws an error if the library was already loaded. Indeed, in most usecases it's correct that the implementation library is not loaded before the RooBatchCompute main library is initialized, but if a RooFit script is executed via; `gInterpreter->LoadMacro(""Macro_Name.cxx++"")`, the library is already loaded the second time the macro is launched like this. Hence, it's better is the `batchcompute` library throws no exception if the implementation is already loaded. This fixes a problem reported on the forum:; https://root-forum.cern.ch/t/roofit-computation-library-libroobatchcompute-avx2-was-loaded-before-roofit-initialisation-began/54580",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12696
https://github.com/root-project/root/pull/12696:372,Performance,Load,LoadMacro,372,"The `roobatchcompute` library dynamically loads the most performant implementation library that the CPU supports. However, it throws an error if the library was already loaded. Indeed, in most usecases it's correct that the implementation library is not loaded before the RooBatchCompute main library is initialized, but if a RooFit script is executed via; `gInterpreter->LoadMacro(""Macro_Name.cxx++"")`, the library is already loaded the second time the macro is launched like this. Hence, it's better is the `batchcompute` library throws no exception if the implementation is already loaded. This fixes a problem reported on the forum:; https://root-forum.cern.ch/t/roofit-computation-library-libroobatchcompute-avx2-was-loaded-before-roofit-initialisation-began/54580",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12696
https://github.com/root-project/root/pull/12696:427,Performance,load,loaded,427,"The `roobatchcompute` library dynamically loads the most performant implementation library that the CPU supports. However, it throws an error if the library was already loaded. Indeed, in most usecases it's correct that the implementation library is not loaded before the RooBatchCompute main library is initialized, but if a RooFit script is executed via; `gInterpreter->LoadMacro(""Macro_Name.cxx++"")`, the library is already loaded the second time the macro is launched like this. Hence, it's better is the `batchcompute` library throws no exception if the implementation is already loaded. This fixes a problem reported on the forum:; https://root-forum.cern.ch/t/roofit-computation-library-libroobatchcompute-avx2-was-loaded-before-roofit-initialisation-began/54580",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12696
https://github.com/root-project/root/pull/12696:585,Performance,load,loaded,585,"The `roobatchcompute` library dynamically loads the most performant implementation library that the CPU supports. However, it throws an error if the library was already loaded. Indeed, in most usecases it's correct that the implementation library is not loaded before the RooBatchCompute main library is initialized, but if a RooFit script is executed via; `gInterpreter->LoadMacro(""Macro_Name.cxx++"")`, the library is already loaded the second time the macro is launched like this. Hence, it's better is the `batchcompute` library throws no exception if the implementation is already loaded. This fixes a problem reported on the forum:; https://root-forum.cern.ch/t/roofit-computation-library-libroobatchcompute-avx2-was-loaded-before-roofit-initialisation-began/54580",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12696
https://github.com/root-project/root/pull/12696:722,Performance,load,loaded-before-roofit-initialisation-began,722,"The `roobatchcompute` library dynamically loads the most performant implementation library that the CPU supports. However, it throws an error if the library was already loaded. Indeed, in most usecases it's correct that the implementation library is not loaded before the RooBatchCompute main library is initialized, but if a RooFit script is executed via; `gInterpreter->LoadMacro(""Macro_Name.cxx++"")`, the library is already loaded the second time the macro is launched like this. Hence, it's better is the `batchcompute` library throws no exception if the implementation is already loaded. This fixes a problem reported on the forum:; https://root-forum.cern.ch/t/roofit-computation-library-libroobatchcompute-avx2-was-loaded-before-roofit-initialisation-began/54580",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12696
https://github.com/root-project/root/pull/12697:331,Availability,error,error,331,"Constructing a `std::span<T>` from a pair of `std::vector<T>::iterator` fails in Apple clang with libc++. Revert to the pointer/pointer constructor, which should work in both GCC/clang and libstdc++/libc++. See also: https://stackoverflow.com/questions/72935737/stdspan-on-apple-clang-cant-be-constructed. This fixes the following error seen in the nighlies for cxx20 builds.; ```; std::span<const DescriptorId_t> fieldList{onDiskFields.begin() + fieldListOffset, onDiskFields.end()};; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:405:41: note: candidate constructor not viable: no known conversion from 'std::__wrap_iter<const unsigned long long *>' to 'std::span<const unsigned long long, 18446744073709551615>::pointer' (aka 'const unsigned long long *') for 1st argument; _LIBCPP_INLINE_VISIBILITY constexpr span(pointer __ptr, size_type __count) : __data{__ptr}, __size{__count} {}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:406:41: note: candidate constructor not viable: no known conversion from 'std::__wrap_iter<const unsigned long long *>' to 'std::span<const unsigned long long, 18446744073709551615>::pointer' (aka 'const unsigned long long *') for 1st argument; _LIBCPP_INLINE_VISIBILITY constexpr span(pointer __f, pointer __l) : __data{__f}, __size{static_cast<size_t>(distance(__f, __l))} {}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:424:19: note: candidate template ignored: requirement '__is_span_compatible_container<std::__wrap_iter<const unsigned long long *>, const unsigned long long, void>::value' was not satisfied [with _Container = std::__wrap_iter<const unsigned long long *>]; constexpr span( _Container& __c,; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:430:19: note: candidate template ignored: requirement '__is_span_compatible_container<const std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12697
https://github.com/root-project/root/pull/12697:3865,Testability,test,tested,3865,"clude/c++/v1/span:430:19: note: candidate template ignored: requirement '__is_span_compatible_container<const std::__wrap_iter<const unsigned long long *>, const unsigned long long, void>::value' was not satisfied [with _Container = std::__wrap_iter<const unsigned long long *>]; constexpr span(const _Container& __c,; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:437:19: note: candidate template ignored: could not match 'span' against '__wrap_iter'; constexpr span(const span<_OtherElementType, _OtherExtent>& __other,; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:402:15: note: candidate constructor not viable: requires 1 argument, but 2 were provided; constexpr span (const span&) noexcept = default;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:410:15: note: candidate constructor template not viable: requires single argument '__arr', but 2 arguments were provided; constexpr span(element_type (&__arr)[_Sz]) noexcept : __data{__arr}, __size{_Sz} {}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:415:15: note: candidate constructor template not viable: requires single argument '__arr', but 2 arguments were provided; constexpr span(array<_OtherElementType, _Sz>& __arr) noexcept : __data{__arr.data()}, __size{_Sz} {}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:420:15: note: candidate constructor template not viable: requires single argument '__arr', but 2 arguments were provided; constexpr span(const array<_OtherElementType, _Sz>& __arr) noexcept : __data{__arr.data()}, __size{_Sz} {}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:400:41: note: candidate constructor not viable: requires 0 arguments, but 2 were provided; _LIBCPP_INLINE_VISIBILITY constexpr span() noexcept : __data{nullptr}, __size{0} {}; ```. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12697
https://github.com/root-project/root/pull/12699:89,Deployability,integrat,integration,89,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12699:216,Deployability,integrat,integration,216,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12699:301,Deployability,integrat,integration,301,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12699:488,Deployability,integrat,integration,488,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12699:89,Integrability,integrat,integration,89,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12699:216,Integrability,integrat,integration,216,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12699:301,Integrability,integrat,integration,301,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12699:488,Integrability,integrat,integration,488,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12699:101,Modifiability,variab,variables,101,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12699:228,Modifiability,variab,variables,228,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12699:313,Modifiability,variab,variables,313,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12699:500,Modifiability,variab,variables,500,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12699
https://github.com/root-project/root/pull/12700:22,Deployability,Update,Updates,22,# This Pull request:; Updates the TGeoHype reference documentation.; ## Changes or fixes:; The definition of stin/stout were incorrect; https://root-forum.cern.ch/t/tgeohype-reference-documentation/54605/2. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12700
https://github.com/root-project/root/pull/12700:258,Deployability,update,updated,258,# This Pull request:; Updates the TGeoHype reference documentation.; ## Changes or fixes:; The definition of stin/stout were incorrect; https://root-forum.cern.ch/t/tgeohype-reference-documentation/54605/2. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12700
https://github.com/root-project/root/pull/12700:228,Testability,test,tested,228,# This Pull request:; Updates the TGeoHype reference documentation.; ## Changes or fixes:; The definition of stin/stout were incorrect; https://root-forum.cern.ch/t/tgeohype-reference-documentation/54605/2. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12700
https://github.com/root-project/root/issues/12701:1470,Availability,down,download,1470,"- [x] Checked for duplicates. ### Describe the bug; Alma Linux 9 by default does not have `io_uring` support, even though its kernel version is recent enough (5.14). ROOT only checks if `io_uring` is present by checking if the `liburing` package is present (in [cmake/modules/Findliburing.cmake](https://github.com/root-project/root/blob/master/cmake/modules/Findliburing.cmake)), but not if `io_uring` is actually supported. ### Expected behavior; ~ROOT should not be able to build with the `uring` option if it is not supported by the kernel~ ; The presence of `io_uring` should be detected at runtime and a warning could be shown if ROOT was build with `uring` even though `io_uring` is not present. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; On a AL9 instance with `liburing` installed (`dnf install liburing`), run; ```; grep -i uring /boot/config-$(uname -r); ```; to verify that `io_uring` is indeed not supported. The output should be; ```; # CONFIG_IO_URING is not set; ```. Build and install ROOT with `-During=on`. Run; ```; root-config --has-uring; ```; to confirm ROOT was in fact built with this option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: master (but most likely every ROOT version that supports the `uring` option); OS: Alma Linux 9. ### Additional context; <!--; Add any other context about the problem here.; -->; A similar issue was opened (and subsequently fixed) in the ZFS repository: https://github.com/openzfs/zfs/issues/13648",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12701
https://github.com/root-project/root/issues/12701:1020,Deployability,install,installed,1020,"- [x] Checked for duplicates. ### Describe the bug; Alma Linux 9 by default does not have `io_uring` support, even though its kernel version is recent enough (5.14). ROOT only checks if `io_uring` is present by checking if the `liburing` package is present (in [cmake/modules/Findliburing.cmake](https://github.com/root-project/root/blob/master/cmake/modules/Findliburing.cmake)), but not if `io_uring` is actually supported. ### Expected behavior; ~ROOT should not be able to build with the `uring` option if it is not supported by the kernel~ ; The presence of `io_uring` should be detected at runtime and a warning could be shown if ROOT was build with `uring` even though `io_uring` is not present. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; On a AL9 instance with `liburing` installed (`dnf install liburing`), run; ```; grep -i uring /boot/config-$(uname -r); ```; to verify that `io_uring` is indeed not supported. The output should be; ```; # CONFIG_IO_URING is not set; ```. Build and install ROOT with `-During=on`. Run; ```; root-config --has-uring; ```; to confirm ROOT was in fact built with this option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: master (but most likely every ROOT version that supports the `uring` option); OS: Alma Linux 9. ### Additional context; <!--; Add any other context about the problem here.; -->; A similar issue was opened (and subsequently fixed) in the ZFS repository: https://github.com/openzfs/zfs/issues/13648",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12701
https://github.com/root-project/root/issues/12701:1036,Deployability,install,install,1036,"- [x] Checked for duplicates. ### Describe the bug; Alma Linux 9 by default does not have `io_uring` support, even though its kernel version is recent enough (5.14). ROOT only checks if `io_uring` is present by checking if the `liburing` package is present (in [cmake/modules/Findliburing.cmake](https://github.com/root-project/root/blob/master/cmake/modules/Findliburing.cmake)), but not if `io_uring` is actually supported. ### Expected behavior; ~ROOT should not be able to build with the `uring` option if it is not supported by the kernel~ ; The presence of `io_uring` should be detected at runtime and a warning could be shown if ROOT was build with `uring` even though `io_uring` is not present. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; On a AL9 instance with `liburing` installed (`dnf install liburing`), run; ```; grep -i uring /boot/config-$(uname -r); ```; to verify that `io_uring` is indeed not supported. The output should be; ```; # CONFIG_IO_URING is not set; ```. Build and install ROOT with `-During=on`. Run; ```; root-config --has-uring; ```; to confirm ROOT was in fact built with this option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: master (but most likely every ROOT version that supports the `uring` option); OS: Alma Linux 9. ### Additional context; <!--; Add any other context about the problem here.; -->; A similar issue was opened (and subsequently fixed) in the ZFS repository: https://github.com/openzfs/zfs/issues/13648",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12701
https://github.com/root-project/root/issues/12701:1234,Deployability,install,install,1234,"- [x] Checked for duplicates. ### Describe the bug; Alma Linux 9 by default does not have `io_uring` support, even though its kernel version is recent enough (5.14). ROOT only checks if `io_uring` is present by checking if the `liburing` package is present (in [cmake/modules/Findliburing.cmake](https://github.com/root-project/root/blob/master/cmake/modules/Findliburing.cmake)), but not if `io_uring` is actually supported. ### Expected behavior; ~ROOT should not be able to build with the `uring` option if it is not supported by the kernel~ ; The presence of `io_uring` should be detected at runtime and a warning could be shown if ROOT was build with `uring` even though `io_uring` is not present. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; On a AL9 instance with `liburing` installed (`dnf install liburing`), run; ```; grep -i uring /boot/config-$(uname -r); ```; to verify that `io_uring` is indeed not supported. The output should be; ```; # CONFIG_IO_URING is not set; ```. Build and install ROOT with `-During=on`. Run; ```; root-config --has-uring; ```; to confirm ROOT was in fact built with this option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: master (but most likely every ROOT version that supports the `uring` option); OS: Alma Linux 9. ### Additional context; <!--; Add any other context about the problem here.; -->; A similar issue was opened (and subsequently fixed) in the ZFS repository: https://github.com/openzfs/zfs/issues/13648",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12701
https://github.com/root-project/root/issues/12701:1452,Deployability,install,install,1452,"- [x] Checked for duplicates. ### Describe the bug; Alma Linux 9 by default does not have `io_uring` support, even though its kernel version is recent enough (5.14). ROOT only checks if `io_uring` is present by checking if the `liburing` package is present (in [cmake/modules/Findliburing.cmake](https://github.com/root-project/root/blob/master/cmake/modules/Findliburing.cmake)), but not if `io_uring` is actually supported. ### Expected behavior; ~ROOT should not be able to build with the `uring` option if it is not supported by the kernel~ ; The presence of `io_uring` should be detected at runtime and a warning could be shown if ROOT was build with `uring` even though `io_uring` is not present. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; On a AL9 instance with `liburing` installed (`dnf install liburing`), run; ```; grep -i uring /boot/config-$(uname -r); ```; to verify that `io_uring` is indeed not supported. The output should be; ```; # CONFIG_IO_URING is not set; ```. Build and install ROOT with `-During=on`. Run; ```; root-config --has-uring; ```; to confirm ROOT was in fact built with this option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: master (but most likely every ROOT version that supports the `uring` option); OS: Alma Linux 9. ### Additional context; <!--; Add any other context about the problem here.; -->; A similar issue was opened (and subsequently fixed) in the ZFS repository: https://github.com/openzfs/zfs/issues/13648",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12701
https://github.com/root-project/root/issues/12701:1086,Modifiability,config,config,1086,"- [x] Checked for duplicates. ### Describe the bug; Alma Linux 9 by default does not have `io_uring` support, even though its kernel version is recent enough (5.14). ROOT only checks if `io_uring` is present by checking if the `liburing` package is present (in [cmake/modules/Findliburing.cmake](https://github.com/root-project/root/blob/master/cmake/modules/Findliburing.cmake)), but not if `io_uring` is actually supported. ### Expected behavior; ~ROOT should not be able to build with the `uring` option if it is not supported by the kernel~ ; The presence of `io_uring` should be detected at runtime and a warning could be shown if ROOT was build with `uring` even though `io_uring` is not present. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; On a AL9 instance with `liburing` installed (`dnf install liburing`), run; ```; grep -i uring /boot/config-$(uname -r); ```; to verify that `io_uring` is indeed not supported. The output should be; ```; # CONFIG_IO_URING is not set; ```. Build and install ROOT with `-During=on`. Run; ```; root-config --has-uring; ```; to confirm ROOT was in fact built with this option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: master (but most likely every ROOT version that supports the `uring` option); OS: Alma Linux 9. ### Additional context; <!--; Add any other context about the problem here.; -->; A similar issue was opened (and subsequently fixed) in the ZFS repository: https://github.com/openzfs/zfs/issues/13648",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12701
https://github.com/root-project/root/issues/12701:1281,Modifiability,config,config,1281,"- [x] Checked for duplicates. ### Describe the bug; Alma Linux 9 by default does not have `io_uring` support, even though its kernel version is recent enough (5.14). ROOT only checks if `io_uring` is present by checking if the `liburing` package is present (in [cmake/modules/Findliburing.cmake](https://github.com/root-project/root/blob/master/cmake/modules/Findliburing.cmake)), but not if `io_uring` is actually supported. ### Expected behavior; ~ROOT should not be able to build with the `uring` option if it is not supported by the kernel~ ; The presence of `io_uring` should be detected at runtime and a warning could be shown if ROOT was build with `uring` even though `io_uring` is not present. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; On a AL9 instance with `liburing` installed (`dnf install liburing`), run; ```; grep -i uring /boot/config-$(uname -r); ```; to verify that `io_uring` is indeed not supported. The output should be; ```; # CONFIG_IO_URING is not set; ```. Build and install ROOT with `-During=on`. Run; ```; root-config --has-uring; ```; to confirm ROOT was in fact built with this option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: master (but most likely every ROOT version that supports the `uring` option); OS: Alma Linux 9. ### Additional context; <!--; Add any other context about the problem here.; -->; A similar issue was opened (and subsequently fixed) in the ZFS repository: https://github.com/openzfs/zfs/issues/13648",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12701
https://github.com/root-project/root/issues/12701:584,Safety,detect,detected,584,"- [x] Checked for duplicates. ### Describe the bug; Alma Linux 9 by default does not have `io_uring` support, even though its kernel version is recent enough (5.14). ROOT only checks if `io_uring` is present by checking if the `liburing` package is present (in [cmake/modules/Findliburing.cmake](https://github.com/root-project/root/blob/master/cmake/modules/Findliburing.cmake)), but not if `io_uring` is actually supported. ### Expected behavior; ~ROOT should not be able to build with the `uring` option if it is not supported by the kernel~ ; The presence of `io_uring` should be detected at runtime and a warning could be shown if ROOT was build with `uring` even though `io_uring` is not present. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; On a AL9 instance with `liburing` installed (`dnf install liburing`), run; ```; grep -i uring /boot/config-$(uname -r); ```; to verify that `io_uring` is indeed not supported. The output should be; ```; # CONFIG_IO_URING is not set; ```. Build and install ROOT with `-During=on`. Run; ```; root-config --has-uring; ```; to confirm ROOT was in fact built with this option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: master (but most likely every ROOT version that supports the `uring` option); OS: Alma Linux 9. ### Additional context; <!--; Add any other context about the problem here.; -->; A similar issue was opened (and subsequently fixed) in the ZFS repository: https://github.com/openzfs/zfs/issues/13648",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12701
https://github.com/root-project/root/pull/12702:189,Security,validat,validated,189,"This fixes the JIRA ticket ROOT-4188:; https://sft.its.cern.ch/jira/browse/ROOT-4188. The solution to the problem was already written in the linked JIRA ticket by @lmoneta. This fix can be validated with this macro:; ```c++; void repro(); {; RooRealVar x{""x"", """", 0.0005, 0.001};; RooRealVar gamma{""gamma"", """", 0.5};; RooRealVar beta{""beta"", """", 2};; RooRealVar mu{""mu"", """", 0};. RooGamma pdf{""pdf"", """", x, gamma, beta, mu};. std::unique_ptr<RooDataSet> data{pdf.generate(x, 1000000)};. auto frame = x.frame(RooFit::Title(""RooGamma(x, 0.5, 2, 0)""));. TCanvas c1;. data->plotOn(frame);; pdf.plotOn(frame);; frame->Draw();. c1.SaveAs(""plot.png"");; }; ```. Result before this PR:; ![plot](https://user-images.githubusercontent.com/6578603/234061105-3fff0cc9-d040-4b55-93bd-20a34f48da55.png). And with this PR:; ![plot_new](https://user-images.githubusercontent.com/6578603/234061143-66e64f5c-eb81-489d-8ccd-c0e2a188dbff.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12702
https://github.com/root-project/root/pull/12703:101,Integrability,depend,depends,101,"Make `FilteringDiagConsumer` also ignore -Wunused-result. Whether or not such diagnostic is filtered depends on `CompilationOptions::IgnorePromptDiags`. In particular, `IgnorePromptDiags` should _only_ be enabled for code parsed via `Interpreter::EvaluateInternal()`. Thus, as of this commit `IgnorePromptDiags` defaults to 0 in `makeDefaultCompilationOpts()`. The observable effect of this change is ignoring `-Wunused-result` for wrapped code, e.g.; ```c++; [[nodiscard]] int f() { return 0; }. // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; void g() { f(); }. f(); // but this should not; ```. This PR is a backport of #12654.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12703
https://github.com/root-project/root/pull/12703:432,Integrability,wrap,wrapped,432,"Make `FilteringDiagConsumer` also ignore -Wunused-result. Whether or not such diagnostic is filtered depends on `CompilationOptions::IgnorePromptDiags`. In particular, `IgnorePromptDiags` should _only_ be enabled for code parsed via `Interpreter::EvaluateInternal()`. Thus, as of this commit `IgnorePromptDiags` defaults to 0 in `makeDefaultCompilationOpts()`. The observable effect of this change is ignoring `-Wunused-result` for wrapped code, e.g.; ```c++; [[nodiscard]] int f() { return 0; }. // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; void g() { f(); }. f(); // but this should not; ```. This PR is a backport of #12654.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12703
https://github.com/root-project/root/issues/12704:12,Availability,error,error,12,"There is an error here that was introduced in `dc65afe`:. https://github.com/root-project/root/blob/6abb8e90d9bea276269f375a67855c4065813343/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx#L760-L762. This error should only be thrown when the number of observables is not 1, 2 or 3, but currently fires if the number is equal to 3. See the change from `dc65afe` here where the mistake is evident:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. The conditional should be; `if (fObsNameVec.empty() || fObsNameVec.size() > 3)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12704
https://github.com/root-project/root/issues/12704:212,Availability,error,error,212,"There is an error here that was introduced in `dc65afe`:. https://github.com/root-project/root/blob/6abb8e90d9bea276269f375a67855c4065813343/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx#L760-L762. This error should only be thrown when the number of observables is not 1, 2 or 3, but currently fires if the number is equal to 3. See the change from `dc65afe` here where the mistake is evident:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. The conditional should be; `if (fObsNameVec.empty() || fObsNameVec.size() > 3)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12704
https://github.com/root-project/root/pull/12705:164,Deployability,update,updated,164,## Changes or fixes:; Fix shared library output name if the generator is not `Visual Studio` but e.g. `Ninja`. ## Checklist:; - [x] tested changes locally; - [x] ~~updated the docs (if necessary)~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12705
https://github.com/root-project/root/pull/12705:132,Testability,test,tested,132,## Changes or fixes:; Fix shared library output name if the generator is not `Visual Studio` but e.g. `Ninja`. ## Checklist:; - [x] tested changes locally; - [x] ~~updated the docs (if necessary)~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12705
https://github.com/root-project/root/pull/12707:12,Availability,error,error,12,"There is an error here that was introduced in `dc65afe`:. https://github.com/root-project/root/blob/6abb8e90d9bea276269f375a67855c4065813343/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx#L760-L762. This error should only be thrown when the number of observables is not 1, 2 or 3, but currently fires if the number is equal to 3. See the change from `dc65afe` here where the mistake is evident:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. The conditional should be; `if (fObsNameVec.empty() || fObsNameVec.size() > 3)`. This needs to be backported to ROOT 6.26 and 6.28 to make it into the next patch releases. Thanks to @CoffeeIntoScience for reporting this bug!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12707
https://github.com/root-project/root/pull/12707:212,Availability,error,error,212,"There is an error here that was introduced in `dc65afe`:. https://github.com/root-project/root/blob/6abb8e90d9bea276269f375a67855c4065813343/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx#L760-L762. This error should only be thrown when the number of observables is not 1, 2 or 3, but currently fires if the number is equal to 3. See the change from `dc65afe` here where the mistake is evident:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. The conditional should be; `if (fObsNameVec.empty() || fObsNameVec.size() > 3)`. This needs to be backported to ROOT 6.26 and 6.28 to make it into the next patch releases. Thanks to @CoffeeIntoScience for reporting this bug!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12707
https://github.com/root-project/root/pull/12707:727,Deployability,patch,patch,727,"There is an error here that was introduced in `dc65afe`:. https://github.com/root-project/root/blob/6abb8e90d9bea276269f375a67855c4065813343/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx#L760-L762. This error should only be thrown when the number of observables is not 1, 2 or 3, but currently fires if the number is equal to 3. See the change from `dc65afe` here where the mistake is evident:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. The conditional should be; `if (fObsNameVec.empty() || fObsNameVec.size() > 3)`. This needs to be backported to ROOT 6.26 and 6.28 to make it into the next patch releases. Thanks to @CoffeeIntoScience for reporting this bug!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12707
https://github.com/root-project/root/pull/12707:733,Deployability,release,releases,733,"There is an error here that was introduced in `dc65afe`:. https://github.com/root-project/root/blob/6abb8e90d9bea276269f375a67855c4065813343/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx#L760-L762. This error should only be thrown when the number of observables is not 1, 2 or 3, but currently fires if the number is equal to 3. See the change from `dc65afe` here where the mistake is evident:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. The conditional should be; `if (fObsNameVec.empty() || fObsNameVec.size() > 3)`. This needs to be backported to ROOT 6.26 and 6.28 to make it into the next patch releases. Thanks to @CoffeeIntoScience for reporting this bug!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12707
https://github.com/root-project/root/pull/12708:914,Availability,error,error,914," 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:4832,Availability,error,error,4832,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:86,Deployability,patch,patches,86,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12682; 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:546,Deployability,patch,patches,546,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12682; 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:751,Deployability,Update,Update,751,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12682; 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:3187,Deployability,integrat,integration,3187,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:2724,Integrability,depend,dependency,2724,"ize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:2772,Integrability,interface,interface,2772,"F] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add inti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:3187,Integrability,integrat,integration,3187,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:3510,Integrability,interface,interface,3510,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:3795,Integrability,interface,interface,3795," dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:4771,Integrability,wrap,wrapper,4771,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:3975,Modifiability,inherit,inheritance,3975,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:1708,Performance,Optimiz,Optimize,1708,"test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:2278,Safety,Avoid,Avoid,2278,"ar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:770,Testability,test,test,770,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12682; 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:779,Testability,test,testNaNPacker,779,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12682; 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:847,Testability,test,testNaNPacker,847,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12682; 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:920,Testability,log,logging,920," 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:2081,Testability,test,testRooFuncWrapper,2081,"test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:2539,Testability,test,test,2539,"tor; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:3047,Testability,mock,mock,3047," output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:3067,Testability,test,test,3067," output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:3550,Testability,test,testRooDataHist,3550,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:3607,Testability,test,test,3607,"er declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:3912,Testability,test,tests,3912,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:3926,Testability,Test,TestStatistics,3926,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:4445,Testability,Test,Test,4445,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12708:4489,Testability,test,testRooFuncWrapper,4489,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12708
https://github.com/root-project/root/pull/12709:105,Deployability,patch,patches,105,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12696; 2. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12709
https://github.com/root-project/root/issues/12710:282,Availability,error,error,282,"GetClonedTree();; ```; This works well for smaller datasets, but for my huge dataset I get the following error:; ```; Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:295,Availability,Error,Error,295,"GetClonedTree();; ```; This works well for smaller datasets, but for my huge dataset I get the following error:; ```; Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:379,Availability,Error,Error,379,"GetClonedTree();; ```; This works well for smaller datasets, but for my huge dataset I get the following error:; ```; Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:463,Availability,Error,Error,463,"GetClonedTree();; ```; This works well for smaller datasets, but for my huge dataset I get the following error:; ```; Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:807,Availability,Error,Error,807,"GetClonedTree();; ```; This works well for smaller datasets, but for my huge dataset I get the following error:; ```; Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:993,Availability,Error,Error,993,"GetClonedTree();; ```; This works well for smaller datasets, but for my huge dataset I get the following error:; ```; Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:1175,Availability,Error,Error,1175,"etClonedTree();; ```; This works well for smaller datasets, but for my huge dataset I get the following error:; ```; Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCoun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:1468,Availability,Error,Error,1468," (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer().",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:1652,Availability,Error,Error,1652," (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer().",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:1956,Availability,Error,Error,1956," (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer().",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:2142,Availability,Error,Error,2142," (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer().",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:2697,Availability,failure,failures,2697,"t of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer(). *** Break *** segmentation violation; root.exe(60607,0x102138580) malloc: Incorrect checksum for freed object 0x15c1e1a00: probably modified after being freed.; Corrupt value: 0x0; root.exe(60607,0x102138580) malloc: *** set a breakpoint in malloc_error_break to debug; ```. ### Expected behavior. The tree should be written to file without failures. ### To Reproduce. I have prepared a rather minimal example: https://cernbox.cern.ch/s/jhiOyKZJN89I3Hq ; It is based on the [RooFit example](https://root.cern/doc/master/rs301__splot_8C.html) because my actual use case is saving the result of the sPlot into a TTree, but the sPlot is not the issue here. . ### Setup. 1. ROOT version: 6.28/02; 2. Operating system: MacOS (but the same happens on lxplus); 3. How you obtained ROOT: macports (but the same happens on lxplus). ### Additional context. I would be glad to learn if there is a more efficient way of saving RooDataSet into a TTree. I tried to find if there is a RooDataSet conversion to RDataFrame but found only the inverse operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:3247,Energy Efficiency,efficient,efficient,3247,"t of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer(). *** Break *** segmentation violation; root.exe(60607,0x102138580) malloc: Incorrect checksum for freed object 0x15c1e1a00: probably modified after being freed.; Corrupt value: 0x0; root.exe(60607,0x102138580) malloc: *** set a breakpoint in malloc_error_break to debug; ```. ### Expected behavior. The tree should be written to file without failures. ### To Reproduce. I have prepared a rather minimal example: https://cernbox.cern.ch/s/jhiOyKZJN89I3Hq ; It is based on the [RooFit example](https://root.cern/doc/master/rs301__splot_8C.html) because my actual use case is saving the result of the sPlot into a TTree, but the sPlot is not the issue here. . ### Setup. 1. ROOT version: 6.28/02; 2. Operating system: MacOS (but the same happens on lxplus); 3. How you obtained ROOT: macports (but the same happens on lxplus). ### Additional context. I would be glad to learn if there is a more efficient way of saving RooDataSet into a TTree. I tried to find if there is a RooDataSet conversion to RDataFrame but found only the inverse operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:2440,Security,checksum,checksum,2440,"t of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer(). *** Break *** segmentation violation; root.exe(60607,0x102138580) malloc: Incorrect checksum for freed object 0x15c1e1a00: probably modified after being freed.; Corrupt value: 0x0; root.exe(60607,0x102138580) malloc: *** set a breakpoint in malloc_error_break to debug; ```. ### Expected behavior. The tree should be written to file without failures. ### To Reproduce. I have prepared a rather minimal example: https://cernbox.cern.ch/s/jhiOyKZJN89I3Hq ; It is based on the [RooFit example](https://root.cern/doc/master/rs301__splot_8C.html) because my actual use case is saving the result of the sPlot into a TTree, but the sPlot is not the issue here. . ### Setup. 1. ROOT version: 6.28/02; 2. Operating system: MacOS (but the same happens on lxplus); 3. How you obtained ROOT: macports (but the same happens on lxplus). ### Additional context. I would be glad to learn if there is a more efficient way of saving RooDataSet into a TTree. I tried to find if there is a RooDataSet conversion to RDataFrame but found only the inverse operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12710:3222,Usability,learn,learn,3222,"t of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer(). *** Break *** segmentation violation; root.exe(60607,0x102138580) malloc: Incorrect checksum for freed object 0x15c1e1a00: probably modified after being freed.; Corrupt value: 0x0; root.exe(60607,0x102138580) malloc: *** set a breakpoint in malloc_error_break to debug; ```. ### Expected behavior. The tree should be written to file without failures. ### To Reproduce. I have prepared a rather minimal example: https://cernbox.cern.ch/s/jhiOyKZJN89I3Hq ; It is based on the [RooFit example](https://root.cern/doc/master/rs301__splot_8C.html) because my actual use case is saving the result of the sPlot into a TTree, but the sPlot is not the issue here. . ### Setup. 1. ROOT version: 6.28/02; 2. Operating system: MacOS (but the same happens on lxplus); 3. How you obtained ROOT: macports (but the same happens on lxplus). ### Additional context. I would be glad to learn if there is a more efficient way of saving RooDataSet into a TTree. I tried to find if there is a RooDataSet conversion to RDataFrame but found only the inverse operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12710
https://github.com/root-project/root/issues/12715:663,Availability,ERROR,ERROR,663,"As reported at https://github.com/root-project/roottest/pull/946#issuecomment-1519645135 and can be seen in the test; `roottest-root-meta-race-12552-exec_dlopenrace-auto`. The relevant output is below and the problem is a (real) quirk of the test. It linked to the repeated unload and loading of the same library in parallel. During the unloading and loading cycle the TClass object representing the user classes (from that library) are created and deleted and it seems that the pointer value is captured and used outside the main lock (and this is done concurrently we the deletion). This needs to be fixed but is unlikely to happen in the wild. ```; ==1544443==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000617c20 at pc 0x7f8857c557ae bp 0x7f88265b3e60 sp 0x7f88265b3e50; READ of size 4 at 0x616000617c20 thread T1; #0 0x7f8857c557ad in TClass::Size() const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8; #1 0x7f8851923388 in TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:1605:25; #2 0x7f8851cc28c1 in TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1364:11; #3 0x7f8851cc28c1 in int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short)), &(TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int))>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1407:10; #4 0x7f8851931ee7 in TStreamerInfoActions::TConfigu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:22299,Availability,Error,Error,22299,night/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/rint/src/TRint.cxx:461:22; #19 0x514b4a in main /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/main/src/rmain.cxx:84:12; #20 0x7f885647ed84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f92f9985bf742e6e1ea71e6851f27783568e23d4). SUMMARY: AddressSanitizer: heap-use-after-free /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8 in TClass::Size() const; Shadow bytes around the buggy address:; 0x0c2c800baf30: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa; 0x0c2c800baf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800baf50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; =>0x0c2c800baf80: fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf90: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==1544443==ABORTING. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 1 but expected 0. Standard Output. -- TEST COMMAND --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:11443,Energy Efficiency,allocate,allocated,11443,"td::allocator<char> >, int> > > const&, char const**, bool) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/src/TROOT.cxx:2557:15; #10 0x7f8823177c7c in (anonymous namespace)::TriggerDictionaryInitialization_libHist_Impl() /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/hist/hist/G__Hist.cxx:15989:7; #11 0x7f8822d01f29 in (anonymous namespace)::DictInit::DictInit() /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/hist/hist/G__Hist.cxx:15997:7; #12 0x7f8822d01f29 in __cxx_global_var_init.284 /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/hist/hist/G__Hist.cxx:15999:5; #13 0x7f8822d01f29 in _GLOBAL__sub_I_G__Hist.cxx /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/hist/hist/G__Hist.cxx; #14 0x7f88584a3059 in call_init.part.0 /usr/src/debug/glibc-2.28-220.el8.x86_64/elf/dl-init.c:72:3. previously allocated by thread T1 here:; #0 0x511128 in operator new(unsigned long) (/home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/bin/root.exe+0x511128) (BuildId: 38590f4d5d08c122d0e0d8161ece8eeec84b2e5e); #1 0x7f8857aacabe in TStorage::ObjectAlloc(unsigned long) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/src/TStorage.cxx:292:19; #2 0x7f8857c82ee9 in TObject::operator new(unsigned long) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/TObject.h:181:46; #3 0x7f8857c82ee9 in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5877:11; #4 0x7f8857cb19f9 in ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/Rtypes.h:179:17; #5 0x7f885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:22405,Integrability,message,message,22405,night/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/rint/src/TRint.cxx:461:22; #19 0x514b4a in main /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/main/src/rmain.cxx:84:12; #20 0x7f885647ed84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f92f9985bf742e6e1ea71e6851f27783568e23d4). SUMMARY: AddressSanitizer: heap-use-after-free /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8 in TClass::Size() const; Shadow bytes around the buggy address:; 0x0c2c800baf30: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa; 0x0c2c800baf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800baf50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; =>0x0c2c800baf80: fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf90: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==1544443==ABORTING. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 1 but expected 0. Standard Output. -- TEST COMMAND --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:285,Performance,load,loading,285,"As reported at https://github.com/root-project/roottest/pull/946#issuecomment-1519645135 and can be seen in the test; `roottest-root-meta-race-12552-exec_dlopenrace-auto`. The relevant output is below and the problem is a (real) quirk of the test. It linked to the repeated unload and loading of the same library in parallel. During the unloading and loading cycle the TClass object representing the user classes (from that library) are created and deleted and it seems that the pointer value is captured and used outside the main lock (and this is done concurrently we the deletion). This needs to be fixed but is unlikely to happen in the wild. ```; ==1544443==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000617c20 at pc 0x7f8857c557ae bp 0x7f88265b3e60 sp 0x7f88265b3e50; READ of size 4 at 0x616000617c20 thread T1; #0 0x7f8857c557ad in TClass::Size() const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8; #1 0x7f8851923388 in TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:1605:25; #2 0x7f8851cc28c1 in TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1364:11; #3 0x7f8851cc28c1 in int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short)), &(TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int))>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1407:10; #4 0x7f8851931ee7 in TStreamerInfoActions::TConfigu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:351,Performance,load,loading,351,"As reported at https://github.com/root-project/roottest/pull/946#issuecomment-1519645135 and can be seen in the test; `roottest-root-meta-race-12552-exec_dlopenrace-auto`. The relevant output is below and the problem is a (real) quirk of the test. It linked to the repeated unload and loading of the same library in parallel. During the unloading and loading cycle the TClass object representing the user classes (from that library) are created and deleted and it seems that the pointer value is captured and used outside the main lock (and this is done concurrently we the deletion). This needs to be fixed but is unlikely to happen in the wild. ```; ==1544443==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000617c20 at pc 0x7f8857c557ae bp 0x7f88265b3e60 sp 0x7f88265b3e50; READ of size 4 at 0x616000617c20 thread T1; #0 0x7f8857c557ad in TClass::Size() const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8; #1 0x7f8851923388 in TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:1605:25; #2 0x7f8851cc28c1 in TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1364:11; #3 0x7f8851cc28c1 in int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short)), &(TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int))>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1407:10; #4 0x7f8851931ee7 in TStreamerInfoActions::TConfigu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:554,Performance,concurren,concurrently,554,"As reported at https://github.com/root-project/roottest/pull/946#issuecomment-1519645135 and can be seen in the test; `roottest-root-meta-race-12552-exec_dlopenrace-auto`. The relevant output is below and the problem is a (real) quirk of the test. It linked to the repeated unload and loading of the same library in parallel. During the unloading and loading cycle the TClass object representing the user classes (from that library) are created and deleted and it seems that the pointer value is captured and used outside the main lock (and this is done concurrently we the deletion). This needs to be fixed but is unlikely to happen in the wild. ```; ==1544443==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000617c20 at pc 0x7f8857c557ae bp 0x7f88265b3e60 sp 0x7f88265b3e50; READ of size 4 at 0x616000617c20 thread T1; #0 0x7f8857c557ad in TClass::Size() const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8; #1 0x7f8851923388 in TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:1605:25; #2 0x7f8851cc28c1 in TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1364:11; #3 0x7f8851cc28c1 in int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short)), &(TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int))>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1407:10; #4 0x7f8851931ee7 in TStreamerInfoActions::TConfigu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:3799,Performance,Load,LoadPCMImpl,3799,"8/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:2473:14; #9 0x7f8857bc179d in TObjArray::Streamer(TBuffer&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/cont/src/TObjArray.cxx:468:29; #10 0x7f8851b7c3bd in TClass::Streamer(void*, TBuffer&, TClass const*) const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/inc/TClass.h:610:7; #11 0x7f8851b7c3bd in TKey::ReadObjectAny(TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TKey.cxx:1108:11; #12 0x7f8851a61884 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TDirectoryFile.cxx:1111:25; #13 0x7f88400d8d51 in void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/TDirectory.h:214:18; #14 0x7f88400d8d51 in TCling::LoadPCMImpl(TFile&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1769:12; #15 0x7f88400dbc28 in TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1874:4; #16 0x7f88400e2139 in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:2299:7; #17 0x7f8857aa5a33 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_trai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:3958,Performance,Load,LoadPCM,3958,"src/TObjArray.cxx:468:29; #10 0x7f8851b7c3bd in TClass::Streamer(void*, TBuffer&, TClass const*) const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/inc/TClass.h:610:7; #11 0x7f8851b7c3bd in TKey::ReadObjectAny(TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TKey.cxx:1108:11; #12 0x7f8851a61884 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TDirectoryFile.cxx:1111:25; #13 0x7f88400d8d51 in void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/TDirectory.h:214:18; #14 0x7f88400d8d51 in TCling::LoadPCMImpl(TFile&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1769:12; #15 0x7f88400dbc28 in TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1874:4; #16 0x7f88400e2139 in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:2299:7; #17 0x7f8857aa5a33 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) /home/sft",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:15243,Performance,Load,LoadPCMImpl,15243,"/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:2473:14; #15 0x7f8857bc179d in TObjArray::Streamer(TBuffer&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/cont/src/TObjArray.cxx:468:29; #16 0x7f8851b7c3bd in TClass::Streamer(void*, TBuffer&, TClass const*) const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/inc/TClass.h:610:7; #17 0x7f8851b7c3bd in TKey::ReadObjectAny(TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TKey.cxx:1108:11; #18 0x7f8851a61884 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TDirectoryFile.cxx:1111:25; #19 0x7f88400d8d51 in void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/TDirectory.h:214:18; #20 0x7f88400d8d51 in TCling::LoadPCMImpl(TFile&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1769:12; #21 0x7f88400dbc28 in TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1874:4; #22 0x7f88400e2139 in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:2299:7; #23 0x7f8857aa5a33 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_trai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:15402,Performance,Load,LoadPCM,15402,"src/TObjArray.cxx:468:29; #16 0x7f8851b7c3bd in TClass::Streamer(void*, TBuffer&, TClass const*) const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/inc/TClass.h:610:7; #17 0x7f8851b7c3bd in TKey::ReadObjectAny(TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TKey.cxx:1108:11; #18 0x7f8851a61884 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TDirectoryFile.cxx:1111:25; #19 0x7f88400d8d51 in void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/TDirectory.h:214:18; #20 0x7f88400d8d51 in TCling::LoadPCMImpl(TFile&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1769:12; #21 0x7f88400dbc28 in TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1874:4; #22 0x7f88400e2139 in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:2299:7; #23 0x7f8857aa5a33 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) /home/sft",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:22260,Safety,ABORT,ABORTING,22260,night/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/rint/src/TRint.cxx:461:22; #19 0x514b4a in main /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/main/src/rmain.cxx:84:12; #20 0x7f885647ed84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f92f9985bf742e6e1ea71e6851f27783568e23d4). SUMMARY: AddressSanitizer: heap-use-after-free /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8 in TClass::Size() const; Shadow bytes around the buggy address:; 0x0c2c800baf30: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa; 0x0c2c800baf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800baf50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; =>0x0c2c800baf80: fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf90: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==1544443==ABORTING. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 1 but expected 0. Standard Output. -- TEST COMMAND --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:112,Testability,test,test,112,"As reported at https://github.com/root-project/roottest/pull/946#issuecomment-1519645135 and can be seen in the test; `roottest-root-meta-race-12552-exec_dlopenrace-auto`. The relevant output is below and the problem is a (real) quirk of the test. It linked to the repeated unload and loading of the same library in parallel. During the unloading and loading cycle the TClass object representing the user classes (from that library) are created and deleted and it seems that the pointer value is captured and used outside the main lock (and this is done concurrently we the deletion). This needs to be fixed but is unlikely to happen in the wild. ```; ==1544443==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000617c20 at pc 0x7f8857c557ae bp 0x7f88265b3e60 sp 0x7f88265b3e50; READ of size 4 at 0x616000617c20 thread T1; #0 0x7f8857c557ad in TClass::Size() const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8; #1 0x7f8851923388 in TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:1605:25; #2 0x7f8851cc28c1 in TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1364:11; #3 0x7f8851cc28c1 in int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short)), &(TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int))>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1407:10; #4 0x7f8851931ee7 in TStreamerInfoActions::TConfigu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:242,Testability,test,test,242,"As reported at https://github.com/root-project/roottest/pull/946#issuecomment-1519645135 and can be seen in the test; `roottest-root-meta-race-12552-exec_dlopenrace-auto`. The relevant output is below and the problem is a (real) quirk of the test. It linked to the repeated unload and loading of the same library in parallel. During the unloading and loading cycle the TClass object representing the user classes (from that library) are created and deleted and it seems that the pointer value is captured and used outside the main lock (and this is done concurrently we the deletion). This needs to be fixed but is unlikely to happen in the wild. ```; ==1544443==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000617c20 at pc 0x7f8857c557ae bp 0x7f88265b3e60 sp 0x7f88265b3e50; READ of size 4 at 0x616000617c20 thread T1; #0 0x7f8857c557ad in TClass::Size() const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8; #1 0x7f8851923388 in TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:1605:25; #2 0x7f8851cc28c1 in TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1364:11; #3 0x7f8851cc28c1 in int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short)), &(TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int))>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1407:10; #4 0x7f8851931ee7 in TStreamerInfoActions::TConfigu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:22277,Testability,TEST,TEST,22277,night/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/rint/src/TRint.cxx:461:22; #19 0x514b4a in main /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/main/src/rmain.cxx:84:12; #20 0x7f885647ed84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f92f9985bf742e6e1ea71e6851f27783568e23d4). SUMMARY: AddressSanitizer: heap-use-after-free /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8 in TClass::Size() const; Shadow bytes around the buggy address:; 0x0c2c800baf30: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa; 0x0c2c800baf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800baf50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; =>0x0c2c800baf80: fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf90: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==1544443==ABORTING. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 1 but expected 0. Standard Output. -- TEST COMMAND --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/issues/12715:22468,Testability,TEST,TEST,22468,night/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/rint/src/TRint.cxx:461:22; #19 0x514b4a in main /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/main/src/rmain.cxx:84:12; #20 0x7f885647ed84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f92f9985bf742e6e1ea71e6851f27783568e23d4). SUMMARY: AddressSanitizer: heap-use-after-free /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8 in TClass::Size() const; Shadow bytes around the buggy address:; 0x0c2c800baf30: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa; 0x0c2c800baf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800baf50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; =>0x0c2c800baf80: fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf90: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==1544443==ABORTING. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 1 but expected 0. Standard Output. -- TEST COMMAND --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12715
https://github.com/root-project/root/pull/12716:288,Modifiability,polymorphi,polymorphically,288,1. Introduce new `EvalBackend()` command argument that will supersede `BatchMode()`; 2. Improve documentation of `RooAbsPdf::fitTo()` and `createNLL()`; 3. Make it clear what functions need to be overload when one wants to customize the behavior of `RooAbsPdf::fitTo()` and `createNLL()` polymorphically; 4. Add documentation for the new `EvalBackend()` command argument. More detail in the commit descriptions. This is how the new documentation on the evaluation backends will look like in the doxygen (I fixed the word-order-typo in the first sentence after taking the screenshot...):. ![eval_backend](https://github.com/root-project/root/assets/6578603/f23ef6e1-2cd2-4291-b5f5-da731e5883fd),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12716
https://github.com/root-project/root/pull/12716:164,Usability,clear,clear,164,1. Introduce new `EvalBackend()` command argument that will supersede `BatchMode()`; 2. Improve documentation of `RooAbsPdf::fitTo()` and `createNLL()`; 3. Make it clear what functions need to be overload when one wants to customize the behavior of `RooAbsPdf::fitTo()` and `createNLL()` polymorphically; 4. Add documentation for the new `EvalBackend()` command argument. More detail in the commit descriptions. This is how the new documentation on the evaluation backends will look like in the doxygen (I fixed the word-order-typo in the first sentence after taking the screenshot...):. ![eval_backend](https://github.com/root-project/root/assets/6578603/f23ef6e1-2cd2-4291-b5f5-da731e5883fd),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12716
https://github.com/root-project/root/pull/12719:333,Modifiability,extend,extend,333,"The same is done already in `stressRooStats`. Instead of manually propagating the BatchMode flag to all calls of `createNLL()` and `fitTo()`, it is easier and safer to just override the default, because then it can't be forgotten to add it in one of the calls. In particular, this is done now because it will make it much easier the extend the possible `stressRooFit` options to also use the codegen plus AD backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12719
https://github.com/root-project/root/pull/12719:159,Safety,safe,safer,159,"The same is done already in `stressRooStats`. Instead of manually propagating the BatchMode flag to all calls of `createNLL()` and `fitTo()`, it is easier and safer to just override the default, because then it can't be forgotten to add it in one of the calls. In particular, this is done now because it will make it much easier the extend the possible `stressRooFit` options to also use the codegen plus AD backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12719
https://github.com/root-project/root/issues/12721:407,Deployability,install,installed,407,"### Describe the bug; After updating ROOT from 6.26.06 to 6.28.02 TBrowser doesn't open. ### Expected behavior; After opening ROOT and issuing ```TBrowser b``` command the TBrowser window was supposed to open. ### To Reproduce; 1. Open ROOT; 2. Type ```TBrowser b```; 3. Nothing happens (there was supposed to open TBrowser window). ### Setup; ROOT version: 6.28.02; Operating system: Nobara Linux 37; ROOT installed by ```sudo dnf install root```. ### Additional context; ROOT launched locally, not by ssh or anything like that; Already checked if somehow is in batch mode (```gROOT->IsBatch()``` returns false)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12721
https://github.com/root-project/root/issues/12721:432,Deployability,install,install,432,"### Describe the bug; After updating ROOT from 6.26.06 to 6.28.02 TBrowser doesn't open. ### Expected behavior; After opening ROOT and issuing ```TBrowser b``` command the TBrowser window was supposed to open. ### To Reproduce; 1. Open ROOT; 2. Type ```TBrowser b```; 3. Nothing happens (there was supposed to open TBrowser window). ### Setup; ROOT version: 6.28.02; Operating system: Nobara Linux 37; ROOT installed by ```sudo dnf install root```. ### Additional context; ROOT launched locally, not by ssh or anything like that; Already checked if somehow is in batch mode (```gROOT->IsBatch()``` returns false)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12721
https://github.com/root-project/root/pull/12722:657,Availability,error,error,657,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:4575,Availability,error,error,4575,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:86,Deployability,patch,patches,86,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:289,Deployability,patch,patches,289,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:494,Deployability,Update,Update,494,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:2930,Deployability,integrat,integration,2930,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:2467,Integrability,depend,dependency,2467,"ize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:2515,Integrability,interface,interface,2515,"F] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add inti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:2930,Integrability,integrat,integration,2930,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:3253,Integrability,interface,interface,3253,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:3538,Integrability,interface,interface,3538," dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:4514,Integrability,wrap,wrapper,4514,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:3718,Modifiability,inherit,inheritance,3718,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:1451,Performance,Optimiz,Optimize,1451,"test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:2021,Safety,Avoid,Avoid,2021,"ar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:513,Testability,test,test,513,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:522,Testability,test,testNaNPacker,522,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:590,Testability,test,testNaNPacker,590,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:663,Testability,log,logging,663,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:1824,Testability,test,testRooFuncWrapper,1824,"test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:2282,Testability,test,test,2282,"tor; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:2790,Testability,mock,mock,2790," output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:2810,Testability,test,test,2810," output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:3293,Testability,test,testRooDataHist,3293,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:3350,Testability,test,test,3350,"er declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:3655,Testability,test,tests,3655,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:3669,Testability,Test,TestStatistics,3669,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:4188,Testability,Test,Test,4188,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12722:4232,Testability,test,testRooFuncWrapper,4232,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12722
https://github.com/root-project/root/pull/12723:4454,Availability,error,error,4454,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:86,Deployability,patch,patches,86,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `aa270ad60b`) are the ones that are not in `v6-28-00-patches` (as of `44db6e0`). ```txt; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:289,Deployability,patch,patches,289,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `aa270ad60b`) are the ones that are not in `v6-28-00-patches` (as of `44db6e0`). ```txt; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:2809,Deployability,integrat,integration,2809,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:2346,Integrability,depend,dependency,2346,"RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:2394,Integrability,interface,interface,2394,"ementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add inti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:2809,Integrability,integrat,integration,2809,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:3132,Integrability,interface,interface,3132,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:3417,Integrability,interface,interface,3417," dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:4393,Integrability,wrap,wrapper,4393,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:544,Modifiability,variab,variable,544,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `aa270ad60b`) are the ones that are not in `v6-28-00-patches` (as of `44db6e0`). ```txt; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:3597,Modifiability,inherit,inheritance,3597,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:1390,Performance,Optimiz,Optimize,1390,"eration support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:1900,Safety,Avoid,Avoid,1900,"eSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:503,Testability,test,testRooFuncWrapper,503,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `aa270ad60b`) are the ones that are not in `v6-28-00-patches` (as of `44db6e0`). ```txt; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:1703,Testability,test,testRooFuncWrapper,1703,"eration support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:2161,Testability,test,test,2161,"euse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:2669,Testability,mock,mock,2669," output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:2689,Testability,test,test,2689," output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:3172,Testability,test,testRooDataHist,3172,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:3229,Testability,test,test,3229,"er declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:3534,Testability,test,tests,3534,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:3548,Testability,Test,TestStatistics,3548,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:4067,Testability,Test,Test,4067,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12723:4111,Testability,test,testRooFuncWrapper,4111,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12723
https://github.com/root-project/root/pull/12725:4,Testability,assert,assertion,4,"the assertion seems bogus - the param value is not the coordinate in the paramHistFunc, so just get rid of that assert",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12725
https://github.com/root-project/root/pull/12725:112,Testability,assert,assert,112,"the assertion seems bogus - the param value is not the coordinate in the paramHistFunc, so just get rid of that assert",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12725
https://github.com/root-project/root/pull/12726:87,Deployability,update,update,87,"Factor out the URL - it's unconventional to have two URLs, and it's reasonable to just update the version number as part of the URL. Remove patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12726
https://github.com/root-project/root/pull/12726:140,Deployability,patch,patches,140,"Factor out the URL - it's unconventional to have two URLs, and it's reasonable to just update the version number as part of the URL. Remove patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12726
https://github.com/root-project/root/pull/12728:358,Availability,Error,Error,358,fix https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173434/testReport/projectroot/test/test_stressgraphics_interpreted/. The relevant part of the output is:; ```; Test 28: TGraph 3 (Fitting and log scales)......................... OK; PDF output......................................... 28 FAILED; Result = 16465; Reference = 16889; Error = 424 (was 400); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12728
https://github.com/root-project/root/pull/12728:84,Testability,test,testReport,84,fix https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173434/testReport/projectroot/test/test_stressgraphics_interpreted/. The relevant part of the output is:; ```; Test 28: TGraph 3 (Fitting and log scales)......................... OK; PDF output......................................... 28 FAILED; Result = 16465; Reference = 16889; Error = 424 (was 400); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12728
https://github.com/root-project/root/pull/12728:107,Testability,test,test,107,fix https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173434/testReport/projectroot/test/test_stressgraphics_interpreted/. The relevant part of the output is:; ```; Test 28: TGraph 3 (Fitting and log scales)......................... OK; PDF output......................................... 28 FAILED; Result = 16465; Reference = 16889; Error = 424 (was 400); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12728
https://github.com/root-project/root/pull/12728:188,Testability,Test,Test,188,fix https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173434/testReport/projectroot/test/test_stressgraphics_interpreted/. The relevant part of the output is:; ```; Test 28: TGraph 3 (Fitting and log scales)......................... OK; PDF output......................................... 28 FAILED; Result = 16465; Reference = 16889; Error = 424 (was 400); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12728
https://github.com/root-project/root/pull/12728:219,Testability,log,log,219,fix https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173434/testReport/projectroot/test/test_stressgraphics_interpreted/. The relevant part of the output is:; ```; Test 28: TGraph 3 (Fitting and log scales)......................... OK; PDF output......................................... 28 FAILED; Result = 16465; Reference = 16889; Error = 424 (was 400); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12728
https://github.com/root-project/root/issues/12729:1201,Availability,error,error,1201,"OOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to fit some synthesized data with 1 normalization, 1 signal, and 2 background templates. All templates are 3D templates.; Our baseline fit in ROOT 6.28 resulted in non-convergent fit (small EDM, but all nuisance parameters hitting boundaries and model did not describe data well at all). ; The fit in ROOT 6.24 was fine. The baseline fit contains no shape variations so all nuisance parameters are `NormFactor`s. Below is the fitter output (the `DEBUG` lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12729
https://github.com/root-project/root/issues/12729:2011,Availability,avail,available,2011,"lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes` so all shape variations are turned off. ### Setup. 1. ROOT version: 6.28.02; 2. Operating system: NixOS (Linux) with `gcc12`; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. We build our self with the help of `nix`. ### Additional information. We noticed that newer ROOT started to use `RooBinWidthFunction` to support histogram templates with arbitrary binning scheme:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. Maybe there's a bug when introducing `RooBinWidthFunction`?. FYI @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12729
https://github.com/root-project/root/issues/12729:2376,Availability,down,download,2376,"lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes` so all shape variations are turned off. ### Setup. 1. ROOT version: 6.28.02; 2. Operating system: NixOS (Linux) with `gcc12`; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. We build our self with the help of `nix`. ### Additional information. We noticed that newer ROOT started to use `RooBinWidthFunction` to support histogram templates with arbitrary binning scheme:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. Maybe there's a bug when introducing `RooBinWidthFunction`?. FYI @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12729
https://github.com/root-project/root/issues/12729:2358,Deployability,install,install,2358,"lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes` so all shape variations are turned off. ### Setup. 1. ROOT version: 6.28.02; 2. Operating system: NixOS (Linux) with `gcc12`; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. We build our self with the help of `nix`. ### Additional information. We noticed that newer ROOT started to use `RooBinWidthFunction` to support histogram templates with arbitrary binning scheme:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. Maybe there's a bug when introducing `RooBinWidthFunction`?. FYI @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12729
https://github.com/root-project/root/issues/12729:2158,Performance,perform,performed,2158,"lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes` so all shape variations are turned off. ### Setup. 1. ROOT version: 6.28.02; 2. Operating system: NixOS (Linux) with `gcc12`; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. We build our self with the help of `nix`. ### Additional information. We noticed that newer ROOT started to use `RooBinWidthFunction` to support histogram templates with arbitrary binning scheme:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. Maybe there's a bug when introducing `RooBinWidthFunction`?. FYI @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12729
https://github.com/root-project/root/issues/12729:1873,Usability,clear,clear,1873,"lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes` so all shape variations are turned off. ### Setup. 1. ROOT version: 6.28.02; 2. Operating system: NixOS (Linux) with `gcc12`; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. We build our self with the help of `nix`. ### Additional information. We noticed that newer ROOT started to use `RooBinWidthFunction` to support histogram templates with arbitrary binning scheme:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. Maybe there's a bug when introducing `RooBinWidthFunction`?. FYI @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12729
https://github.com/root-project/root/pull/12733:86,Deployability,patch,patches,86,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12725; 2. https://github.com/root-project/root/pull/12141. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12733
https://github.com/root-project/root/pull/12735:140,Safety,avoid,avoid,140,"Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code using a templated class. The functionality is completely unchanged, this is only to avoid code repetition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12735
https://github.com/root-project/root/pull/12736:156,Performance,optimiz,optimized,156,"On macOS 13.3 with Xcode 14.3, vector construction begin begin/end iterators -to-dofferent-type (here, casting char to UniChar aka unsigned short) fails in optimized mode for seemingly dubious reasons (i.e. likely an optimizer bug). Short-circuit this by returning 0 early for an extent of 0 characters - which is the only case where this construction (i.e. end==begin) is known to fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12736
https://github.com/root-project/root/pull/12736:217,Performance,optimiz,optimizer,217,"On macOS 13.3 with Xcode 14.3, vector construction begin begin/end iterators -to-dofferent-type (here, casting char to UniChar aka unsigned short) fails in optimized mode for seemingly dubious reasons (i.e. likely an optimizer bug). Short-circuit this by returning 0 early for an extent of 0 characters - which is the only case where this construction (i.e. end==begin) is known to fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12736
https://github.com/root-project/root/issues/12738:512,Availability,down,downloads,512,"- [x] Checked for duplicates. ### Describe the bug; Build fails due to one of these:; ```; FAILED: io/xml/G__XMLIO.cxx bin/libXMLIO_rdict.pcm bin/libXMLIO.rootmap E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/io/xml/G__XMLIO.cxx E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/bin/libXMLIO_rdict.pcm E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/bin/libXMLIO.rootmap ; cmd.exe /C ""cd /D E:\vcpkg_folders\new_master\buildtrees\root\x64-windows-dbg\io\xml && E:\vcpkg_cache\downloads\tools\cmake-3.25.1-windows\cmake-3.25.1-windows-i386\bin\cmake.exe -E env LD_LIBRARY_PATH=E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/lib: ROOTIGNOREPREFIX=1 E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/bin/rootcling.exe -rootbuild -v2 -f G__XMLIO.cxx -s E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/bin/libXMLIO.dll -m libRIO_rdict.pcm -excludePath E:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc -excludePath E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/ginclude -excludePath E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/externals -excludePath E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/builtins -rml libXMLIO.dll -rmf E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/bin/libXMLIO.rootmap -IE:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/include -IE:/vcpkg_folders/new_master/installed/x64-windows/include -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/io/xml/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/winnt/inc -IE:/vcpkg_folders/new_master/installed/x64-windows/include -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/zstd/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/lz4/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/lzma/inc -IE:/vcpkg_folders/new_master/buildtrees/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/issues/12738:22300,Availability,error,error,22300,"har **, bool) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:4927:0; #39 0x00007ffef58759d9 ROOT_rootcling_Driver E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:6171:0; #40 0x00007ff6481b2635 main E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\main\src\rootcling.cxx:44:0; #41 0x00007ff6481b2ae9 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:79:0; #42 0x00007ff6481b298e __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0; #43 0x00007ff6481b284e __scrt_common_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:331:0; #44 0x00007ff6481b2b7e mainCRTStartup D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_main.cpp:17:0; #45 0x00007fffb4f47604 (C:\Windows\System32\KERNEL32.DLL+0x17604); #46 0x00007fffb6de26a1 (C:\Windows\SYSTEM32\ntdll.dll+0x526a1); ```; ### Expected behavior; Build succeeds. ### To Reproduce. (if you know how to use vcpkg & git); checkout https://github.com/microsoft/vcpkg/pull/31161; bootstrap vcpkg; vcpkg install root. ### Setup; 1. Ref: 6438fdb78a7d0cc06e2f3dd2dd5bf057b00fa7ea; 2. Windows 10; VS 17.5.4. ### Additional context; I tried debugging the problem and the only thing I found is that in `io\io\src\TStreamerInfoWriteBuffer.cxx:` the call; `proxy->GetFunctionCreateIterators(/*read = */ kFALSE)(obj, &begin, &end, proxy);` returns a start iterator which is higher then the end iterator leading later to a read access violation when trying to (infinitely) iterate over it. So I assume `obj` is somehow bogus but without knowing what that actually should be further steps back are not possible., The error is reproducible but seems to occur at different times of execution if retried (number of breakpoint hits vary). ; The release build however seems fine. ; If you need a full configure/build log I can provide it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/issues/12738:1439,Deployability,install,installed,1439,rootmap -IE:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/include -IE:/vcpkg_folders/new_master/installed/x64-windows/include -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/io/xml/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/winnt/inc -IE:/vcpkg_folders/new_master/installed/x64-windows/include -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/zstd/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/lz4/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/lzma/inc -IE:/vcpkg_folders/new_master/buildtrees/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/issues/12738:1669,Deployability,install,installed,1669,rootmap -IE:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/include -IE:/vcpkg_folders/new_master/installed/x64-windows/include -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/io/xml/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/winnt/inc -IE:/vcpkg_folders/new_master/installed/x64-windows/include -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/zstd/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/lz4/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/lzma/inc -IE:/vcpkg_folders/new_master/buildtrees/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/issues/12738:11192,Deployability,install,installed,11192,,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/issues/12738:11422,Deployability,install,installed,11422,,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/issues/12738:21697,Deployability,install,install,21697,"har **, bool) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:4927:0; #39 0x00007ffef58759d9 ROOT_rootcling_Driver E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:6171:0; #40 0x00007ff6481b2635 main E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\main\src\rootcling.cxx:44:0; #41 0x00007ff6481b2ae9 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:79:0; #42 0x00007ff6481b298e __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0; #43 0x00007ff6481b284e __scrt_common_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:331:0; #44 0x00007ff6481b2b7e mainCRTStartup D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_main.cpp:17:0; #45 0x00007fffb4f47604 (C:\Windows\System32\KERNEL32.DLL+0x17604); #46 0x00007fffb6de26a1 (C:\Windows\SYSTEM32\ntdll.dll+0x526a1); ```; ### Expected behavior; Build succeeds. ### To Reproduce. (if you know how to use vcpkg & git); checkout https://github.com/microsoft/vcpkg/pull/31161; bootstrap vcpkg; vcpkg install root. ### Setup; 1. Ref: 6438fdb78a7d0cc06e2f3dd2dd5bf057b00fa7ea; 2. Windows 10; VS 17.5.4. ### Additional context; I tried debugging the problem and the only thing I found is that in `io\io\src\TStreamerInfoWriteBuffer.cxx:` the call; `proxy->GetFunctionCreateIterators(/*read = */ kFALSE)(obj, &begin, &end, proxy);` returns a start iterator which is higher then the end iterator leading later to a read access violation when trying to (infinitely) iterate over it. So I assume `obj` is somehow bogus but without knowing what that actually should be further steps back are not possible., The error is reproducible but seems to occur at different times of execution if retried (number of breakpoint hits vary). ; The release build however seems fine. ; If you need a full configure/build log I can provide it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/issues/12738:22424,Deployability,release,release,22424,"har **, bool) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:4927:0; #39 0x00007ffef58759d9 ROOT_rootcling_Driver E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:6171:0; #40 0x00007ff6481b2635 main E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\main\src\rootcling.cxx:44:0; #41 0x00007ff6481b2ae9 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:79:0; #42 0x00007ff6481b298e __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0; #43 0x00007ff6481b284e __scrt_common_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:331:0; #44 0x00007ff6481b2b7e mainCRTStartup D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_main.cpp:17:0; #45 0x00007fffb4f47604 (C:\Windows\System32\KERNEL32.DLL+0x17604); #46 0x00007fffb6de26a1 (C:\Windows\SYSTEM32\ntdll.dll+0x526a1); ```; ### Expected behavior; Build succeeds. ### To Reproduce. (if you know how to use vcpkg & git); checkout https://github.com/microsoft/vcpkg/pull/31161; bootstrap vcpkg; vcpkg install root. ### Setup; 1. Ref: 6438fdb78a7d0cc06e2f3dd2dd5bf057b00fa7ea; 2. Windows 10; VS 17.5.4. ### Additional context; I tried debugging the problem and the only thing I found is that in `io\io\src\TStreamerInfoWriteBuffer.cxx:` the call; `proxy->GetFunctionCreateIterators(/*read = */ kFALSE)(obj, &begin, &end, proxy);` returns a start iterator which is higher then the end iterator leading later to a read access violation when trying to (infinitely) iterate over it. So I assume `obj` is somehow bogus but without knowing what that actually should be further steps back are not possible., The error is reproducible but seems to occur at different times of execution if retried (number of breakpoint hits vary). ; The release build however seems fine. ; If you need a full configure/build log I can provide it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/issues/12738:22479,Modifiability,config,configure,22479,"har **, bool) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:4927:0; #39 0x00007ffef58759d9 ROOT_rootcling_Driver E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:6171:0; #40 0x00007ff6481b2635 main E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\main\src\rootcling.cxx:44:0; #41 0x00007ff6481b2ae9 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:79:0; #42 0x00007ff6481b298e __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0; #43 0x00007ff6481b284e __scrt_common_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:331:0; #44 0x00007ff6481b2b7e mainCRTStartup D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_main.cpp:17:0; #45 0x00007fffb4f47604 (C:\Windows\System32\KERNEL32.DLL+0x17604); #46 0x00007fffb6de26a1 (C:\Windows\SYSTEM32\ntdll.dll+0x526a1); ```; ### Expected behavior; Build succeeds. ### To Reproduce. (if you know how to use vcpkg & git); checkout https://github.com/microsoft/vcpkg/pull/31161; bootstrap vcpkg; vcpkg install root. ### Setup; 1. Ref: 6438fdb78a7d0cc06e2f3dd2dd5bf057b00fa7ea; 2. Windows 10; VS 17.5.4. ### Additional context; I tried debugging the problem and the only thing I found is that in `io\io\src\TStreamerInfoWriteBuffer.cxx:` the call; `proxy->GetFunctionCreateIterators(/*read = */ kFALSE)(obj, &begin, &end, proxy);` returns a start iterator which is higher then the end iterator leading later to a read access violation when trying to (infinitely) iterate over it. So I assume `obj` is somehow bogus but without knowing what that actually should be further steps back are not possible., The error is reproducible but seems to occur at different times of execution if retried (number of breakpoint hits vary). ; The release build however seems fine. ; If you need a full configure/build log I can provide it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/issues/12738:13953,Safety,Abort,Abort,13953,ter/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/base/v7/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/base/inc -IE:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/ginclude -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/io/io/v7/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/io/io/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/clib/res TBufferXML.h TKeyXML.h TXMLEngine.h TXMLFile.h TXMLPlayer.h TXMLSetup.h E:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/io/xml/inc/LinkDef.h; #0 0x00007ffefe214d7b HandleAbort E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\interpreter\llvm\src\lib\Support\Windows\Signals.inc:408:0; #1 0x00007fff6c0690ed (C:\Windows\SYSTEM32\ucrtbased.dll+0xa90ed); #2 0x00007fff6c06ae49 (C:\Windows\SYSTEM32\ucrtbased.dll+0xaae49); #3 0x00007fff20c79818 TWinNTSystem::Abort(int) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\winnt\src\TWinNTSystem.cxx:3902:0; #4 0x00007fff20c7897c TWinNTSystem::DispatchSignals(enum ESignals) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\winnt\src\TWinNTSystem.cxx:1781:0; #5 0x00007fff20c81f52 `anonymous namespace'::SigHandler E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\winnt\src\TWinNTSystem.cxx:456:0; #6 0x00007fff20c81d8e `anonymous namespace'::sighandler E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\winnt\src\TWinNTSystem.cxx:398:0; #7 0x00007fff6c067ade (C:\Windows\SYSTEM32\ucrtbased.dll+0xa7ade); #8 0x00007ff6481b6f38 `__scrt_common_main_seh'::`1'::filt$0 D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:304:0; #9 0x00007fffaa5bc96b (C:\Windows\SYSTEM32\VCRUNTIME140D.dll+0x1c96b); #10 0x00007fffb6e323df (C:\Windows\SYSTEM32\ntdll.dll+0xa23df); #11 0x00007fffb6de14a4 (C:\Windows\SYSTEM32\ntdll.dll+0x514a4); #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/issues/12738:22112,Security,access,access,22112,"har **, bool) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:4927:0; #39 0x00007ffef58759d9 ROOT_rootcling_Driver E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:6171:0; #40 0x00007ff6481b2635 main E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\main\src\rootcling.cxx:44:0; #41 0x00007ff6481b2ae9 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:79:0; #42 0x00007ff6481b298e __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0; #43 0x00007ff6481b284e __scrt_common_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:331:0; #44 0x00007ff6481b2b7e mainCRTStartup D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_main.cpp:17:0; #45 0x00007fffb4f47604 (C:\Windows\System32\KERNEL32.DLL+0x17604); #46 0x00007fffb6de26a1 (C:\Windows\SYSTEM32\ntdll.dll+0x526a1); ```; ### Expected behavior; Build succeeds. ### To Reproduce. (if you know how to use vcpkg & git); checkout https://github.com/microsoft/vcpkg/pull/31161; bootstrap vcpkg; vcpkg install root. ### Setup; 1. Ref: 6438fdb78a7d0cc06e2f3dd2dd5bf057b00fa7ea; 2. Windows 10; VS 17.5.4. ### Additional context; I tried debugging the problem and the only thing I found is that in `io\io\src\TStreamerInfoWriteBuffer.cxx:` the call; `proxy->GetFunctionCreateIterators(/*read = */ kFALSE)(obj, &begin, &end, proxy);` returns a start iterator which is higher then the end iterator leading later to a read access violation when trying to (infinitely) iterate over it. So I assume `obj` is somehow bogus but without knowing what that actually should be further steps back are not possible., The error is reproducible but seems to occur at different times of execution if retried (number of breakpoint hits vary). ; The release build however seems fine. ; If you need a full configure/build log I can provide it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/issues/12738:22495,Testability,log,log,22495,"har **, bool) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:4927:0; #39 0x00007ffef58759d9 ROOT_rootcling_Driver E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:6171:0; #40 0x00007ff6481b2635 main E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\main\src\rootcling.cxx:44:0; #41 0x00007ff6481b2ae9 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:79:0; #42 0x00007ff6481b298e __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0; #43 0x00007ff6481b284e __scrt_common_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:331:0; #44 0x00007ff6481b2b7e mainCRTStartup D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_main.cpp:17:0; #45 0x00007fffb4f47604 (C:\Windows\System32\KERNEL32.DLL+0x17604); #46 0x00007fffb6de26a1 (C:\Windows\SYSTEM32\ntdll.dll+0x526a1); ```; ### Expected behavior; Build succeeds. ### To Reproduce. (if you know how to use vcpkg & git); checkout https://github.com/microsoft/vcpkg/pull/31161; bootstrap vcpkg; vcpkg install root. ### Setup; 1. Ref: 6438fdb78a7d0cc06e2f3dd2dd5bf057b00fa7ea; 2. Windows 10; VS 17.5.4. ### Additional context; I tried debugging the problem and the only thing I found is that in `io\io\src\TStreamerInfoWriteBuffer.cxx:` the call; `proxy->GetFunctionCreateIterators(/*read = */ kFALSE)(obj, &begin, &end, proxy);` returns a start iterator which is higher then the end iterator leading later to a read access violation when trying to (infinitely) iterate over it. So I assume `obj` is somehow bogus but without knowing what that actually should be further steps back are not possible., The error is reproducible but seems to occur at different times of execution if retried (number of breakpoint hits vary). ; The release build however seems fine. ; If you need a full configure/build log I can provide it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12738
https://github.com/root-project/root/pull/12741:320,Deployability,update,updated,320,"# This Pull request:. improves the handling of combined Pdfs and Datasets in HS3. ## Changes or fixes:. removes the assumption of exactly one simPdf/combData/ModelConfig being present, instead allowing to mix&match multiple possible modelConfigs, combData and simPdfs. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12741
https://github.com/root-project/root/pull/12741:290,Testability,test,tested,290,"# This Pull request:. improves the handling of combined Pdfs and Datasets in HS3. ## Changes or fixes:. removes the assumption of exactly one simPdf/combData/ModelConfig being present, instead allowing to mix&match multiple possible modelConfigs, combData and simPdfs. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12741
https://github.com/root-project/root/issues/12742:188,Availability,error,errors,188,"### Describe the bug; Reported by Marcin Nowak (@Nowakus) by e-mail (see below).; > I ran a bigger production job today (1000 events) writing to RNTuple. It seems to work OK, but I saw 18 errors printed like this; > ```; > FATAL fWritePage[fWritePageIdx].IsEmpty() violated at line 87 of `/build/jenkins/workspace/lcg_nightly_pipeline; > /build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/inc/ROOT/RColumn.hxx'; > ```. ### Setup; 1. ROOT version: master; 2. Operating system: CentOS 7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12742
https://github.com/root-project/root/pull/12743:763,Deployability,update,updated,763,"This pull request fixes a defect in the implementation of `RColumn::AppendV()`, which resulted in `FlushShadowWritePage()` not being called in certain circumstances. This in turn resulted in a [failed assertion](https://github.com/root-project/root/blob/master/tree/ntuple/v7/inc/ROOT/RColumn.hxx#L87) in the next call to `SwapWritePagesIfFull()`:; ```; Fatal: fWritePage[otherIdx].IsEmpty() violated at line 87 of `/home/jalopezg/CERN/repos/root/tree/ntuple/v7/inc/ROOT/RColumn.hxx'; ```. Given that `RPage::GrowUnchecked()` affects the number of elements returned by `RPage::GetNElements()`, the main write page should only be grown after the check for flushing the shadow page. ## Checklist:; - [X] tested changes locally; - [X] `ntuple_storage` test has been updated accordingly against this bug. This PR fixes #12742.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12743
https://github.com/root-project/root/pull/12743:201,Testability,assert,assertion,201,"This pull request fixes a defect in the implementation of `RColumn::AppendV()`, which resulted in `FlushShadowWritePage()` not being called in certain circumstances. This in turn resulted in a [failed assertion](https://github.com/root-project/root/blob/master/tree/ntuple/v7/inc/ROOT/RColumn.hxx#L87) in the next call to `SwapWritePagesIfFull()`:; ```; Fatal: fWritePage[otherIdx].IsEmpty() violated at line 87 of `/home/jalopezg/CERN/repos/root/tree/ntuple/v7/inc/ROOT/RColumn.hxx'; ```. Given that `RPage::GrowUnchecked()` affects the number of elements returned by `RPage::GetNElements()`, the main write page should only be grown after the check for flushing the shadow page. ## Checklist:; - [X] tested changes locally; - [X] `ntuple_storage` test has been updated accordingly against this bug. This PR fixes #12742.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12743
https://github.com/root-project/root/pull/12743:702,Testability,test,tested,702,"This pull request fixes a defect in the implementation of `RColumn::AppendV()`, which resulted in `FlushShadowWritePage()` not being called in certain circumstances. This in turn resulted in a [failed assertion](https://github.com/root-project/root/blob/master/tree/ntuple/v7/inc/ROOT/RColumn.hxx#L87) in the next call to `SwapWritePagesIfFull()`:; ```; Fatal: fWritePage[otherIdx].IsEmpty() violated at line 87 of `/home/jalopezg/CERN/repos/root/tree/ntuple/v7/inc/ROOT/RColumn.hxx'; ```. Given that `RPage::GrowUnchecked()` affects the number of elements returned by `RPage::GetNElements()`, the main write page should only be grown after the check for flushing the shadow page. ## Checklist:; - [X] tested changes locally; - [X] `ntuple_storage` test has been updated accordingly against this bug. This PR fixes #12742.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12743
https://github.com/root-project/root/pull/12743:749,Testability,test,test,749,"This pull request fixes a defect in the implementation of `RColumn::AppendV()`, which resulted in `FlushShadowWritePage()` not being called in certain circumstances. This in turn resulted in a [failed assertion](https://github.com/root-project/root/blob/master/tree/ntuple/v7/inc/ROOT/RColumn.hxx#L87) in the next call to `SwapWritePagesIfFull()`:; ```; Fatal: fWritePage[otherIdx].IsEmpty() violated at line 87 of `/home/jalopezg/CERN/repos/root/tree/ntuple/v7/inc/ROOT/RColumn.hxx'; ```. Given that `RPage::GrowUnchecked()` affects the number of elements returned by `RPage::GetNElements()`, the main write page should only be grown after the check for flushing the shadow page. ## Checklist:; - [X] tested changes locally; - [X] `ntuple_storage` test has been updated accordingly against this bug. This PR fixes #12742.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12743
https://github.com/root-project/root/issues/12744:1892,Availability,avail,available,1892," 'import ROOT'; Traceback (most recent call last):; File ""/opt/root/install/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); File ""/usr/lib/python3.10/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1050, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 1027, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 1004, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'libcppyy3_10'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/install/lib/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/opt/root/install/lib/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. ### Optional: share how it could be improved. Can Python 3 version be found checking symlinks of `/usr/bin/python`, and not its highest version available?; I also use Python 2, hope it won't break its search. ### To Reproduce. Steps to reproduce the behavior:; 1. Install Python version newer than the system one.; 2. Build root.; 3. Import Python ROOT (it will fail). ### Setup. 1. ROOT version: ROOT Version: 6.29/01, From heads/master@v6-29-01-1273-g360c0c7c54.; 2. Operating system: Arch Linux, Built for linuxx8664gcc.; 3. Build myself from this repo. ### Additional context; I create software packages, that's why I use several Python versions (to provide better experience to users with different tools). It would not be very convenient to remove some python version in order to build ROOT. I have no idea where this search is being performed. Yesterday I left a comment on an old issue, but can't find it. On another system of mine it is also written that ""Python 3 not found"", and then it is built fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12744
https://github.com/root-project/root/issues/12744:828,Deployability,install,install,828,"### Explain what you would like to see improved. I've compiled ROOT from this repository, but then it failed to launch with Python 3. Upon further investigation, I found lines. > _Python3_INTERPRETER_PROPERTIES:INTERNAL=Python;3;11;2;64;;cpython-311-x86_64-linux-gnu;abi3;/usr/lib/python3.11;/usr/lib/python3.11;/usr/lib/python3.11/site-packages;/usr/lib/python3.11/site-packages; > _Python3_LIBRARY_RELEASE:INTERNAL=/usr/lib/libpython3.11.so. in *CMakeCache.txt*. However, my main Python version is 3.10. $ python -V; Python 3.10.10; $ls -l /usr/bin/python; lrwxrwxrwx 1 root root 7 Mar 5 23:26 /usr/bin/python -> python3; $ls -l /usr/bin/python3; lrwxrwxrwx 1 root root 10 Mar 5 23:26 /usr/bin/python3 -> python3.10. that's why I get a crash,. ```; python -c 'import ROOT'; Traceback (most recent call last):; File ""/opt/root/install/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); File ""/usr/lib/python3.10/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1050, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 1027, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 1004, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'libcppyy3_10'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/install/lib/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/opt/root/install/lib/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. ### Optional: share how it could be improved. Can Python 3 version be found checking symlinks of `/usr/bin/python`, and not its highest version available?; I also use Python 2, hope it won't break its search. ### To Reproduce. Steps to reproduce the beh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12744
https://github.com/root-project/root/issues/12744:1487,Deployability,install,install,1487,"ache.txt*. However, my main Python version is 3.10. $ python -V; Python 3.10.10; $ls -l /usr/bin/python; lrwxrwxrwx 1 root root 7 Mar 5 23:26 /usr/bin/python -> python3; $ls -l /usr/bin/python3; lrwxrwxrwx 1 root root 10 Mar 5 23:26 /usr/bin/python3 -> python3.10. that's why I get a crash,. ```; python -c 'import ROOT'; Traceback (most recent call last):; File ""/opt/root/install/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); File ""/usr/lib/python3.10/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1050, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 1027, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 1004, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'libcppyy3_10'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/install/lib/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/opt/root/install/lib/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. ### Optional: share how it could be improved. Can Python 3 version be found checking symlinks of `/usr/bin/python`, and not its highest version available?; I also use Python 2, hope it won't break its search. ### To Reproduce. Steps to reproduce the behavior:; 1. Install Python version newer than the system one.; 2. Build root.; 3. Import Python ROOT (it will fail). ### Setup. 1. ROOT version: ROOT Version: 6.29/01, From heads/master@v6-29-01-1273-g360c0c7c54.; 2. Operating system: Arch Linux, Built for linuxx8664gcc.; 3. Build myself from this repo. ### Additional context; I create software packages, that's why I use several Python versions (to provide better experience to users with different too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12744
https://github.com/root-project/root/issues/12744:1570,Deployability,install,install,1570,"on; lrwxrwxrwx 1 root root 7 Mar 5 23:26 /usr/bin/python -> python3; $ls -l /usr/bin/python3; lrwxrwxrwx 1 root root 10 Mar 5 23:26 /usr/bin/python3 -> python3.10. that's why I get a crash,. ```; python -c 'import ROOT'; Traceback (most recent call last):; File ""/opt/root/install/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); File ""/usr/lib/python3.10/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1050, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 1027, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 1004, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'libcppyy3_10'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/install/lib/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/opt/root/install/lib/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. ### Optional: share how it could be improved. Can Python 3 version be found checking symlinks of `/usr/bin/python`, and not its highest version available?; I also use Python 2, hope it won't break its search. ### To Reproduce. Steps to reproduce the behavior:; 1. Install Python version newer than the system one.; 2. Build root.; 3. Import Python ROOT (it will fail). ### Setup. 1. ROOT version: ROOT Version: 6.29/01, From heads/master@v6-29-01-1273-g360c0c7c54.; 2. Operating system: Arch Linux, Built for linuxx8664gcc.; 3. Build myself from this repo. ### Additional context; I create software packages, that's why I use several Python versions (to provide better experience to users with different tools). It would not be very convenient to remove some python version in order to build ROOT. I have no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12744
https://github.com/root-project/root/issues/12744:2012,Deployability,Install,Install,2012," 'import ROOT'; Traceback (most recent call last):; File ""/opt/root/install/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); File ""/usr/lib/python3.10/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1050, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 1027, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 1004, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'libcppyy3_10'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/install/lib/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/opt/root/install/lib/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. ### Optional: share how it could be improved. Can Python 3 version be found checking symlinks of `/usr/bin/python`, and not its highest version available?; I also use Python 2, hope it won't break its search. ### To Reproduce. Steps to reproduce the behavior:; 1. Install Python version newer than the system one.; 2. Build root.; 3. Import Python ROOT (it will fail). ### Setup. 1. ROOT version: ROOT Version: 6.29/01, From heads/master@v6-29-01-1273-g360c0c7c54.; 2. Operating system: Arch Linux, Built for linuxx8664gcc.; 3. Build myself from this repo. ### Additional context; I create software packages, that's why I use several Python versions (to provide better experience to users with different tools). It would not be very convenient to remove some python version in order to build ROOT. I have no idea where this search is being performed. Yesterday I left a comment on an old issue, but can't find it. On another system of mine it is also written that ""Python 3 not found"", and then it is built fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12744
https://github.com/root-project/root/issues/12744:2588,Performance,perform,performed,2588," 'import ROOT'; Traceback (most recent call last):; File ""/opt/root/install/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); File ""/usr/lib/python3.10/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1050, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 1027, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 1004, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'libcppyy3_10'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/install/lib/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/opt/root/install/lib/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. ### Optional: share how it could be improved. Can Python 3 version be found checking symlinks of `/usr/bin/python`, and not its highest version available?; I also use Python 2, hope it won't break its search. ### To Reproduce. Steps to reproduce the behavior:; 1. Install Python version newer than the system one.; 2. Build root.; 3. Import Python ROOT (it will fail). ### Setup. 1. ROOT version: ROOT Version: 6.29/01, From heads/master@v6-29-01-1273-g360c0c7c54.; 2. Operating system: Arch Linux, Built for linuxx8664gcc.; 3. Build myself from this repo. ### Additional context; I create software packages, that's why I use several Python versions (to provide better experience to users with different tools). It would not be very convenient to remove some python version in order to build ROOT. I have no idea where this search is being performed. Yesterday I left a comment on an old issue, but can't find it. On another system of mine it is also written that ""Python 3 not found"", and then it is built fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12744
https://github.com/root-project/root/pull/12746:201,Deployability,configurat,configuration,201,Compilers (at least clang) configure this internally; at least with the current efforts on compiler and CMake sides to put this into action our build system should keep away from interfering with this configuration. Oh and it also does not work with macOS and builtin_glew. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12746
https://github.com/root-project/root/pull/12746:369,Deployability,update,updated,369,Compilers (at least clang) configure this internally; at least with the current efforts on compiler and CMake sides to put this into action our build system should keep away from interfering with this configuration. Oh and it also does not work with macOS and builtin_glew. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12746
https://github.com/root-project/root/pull/12746:27,Modifiability,config,configure,27,Compilers (at least clang) configure this internally; at least with the current efforts on compiler and CMake sides to put this into action our build system should keep away from interfering with this configuration. Oh and it also does not work with macOS and builtin_glew. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12746
https://github.com/root-project/root/pull/12746:201,Modifiability,config,configuration,201,Compilers (at least clang) configure this internally; at least with the current efforts on compiler and CMake sides to put this into action our build system should keep away from interfering with this configuration. Oh and it also does not work with macOS and builtin_glew. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12746
https://github.com/root-project/root/pull/12746:339,Testability,test,tested,339,Compilers (at least clang) configure this internally; at least with the current efforts on compiler and CMake sides to put this into action our build system should keep away from interfering with this configuration. Oh and it also does not work with macOS and builtin_glew. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12746
https://github.com/root-project/root/issues/12747:1752,Availability,failure,failures,1752,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:996,Deployability,configurat,configuration,996,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:1128,Deployability,configurat,configuration,1128,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:1520,Deployability,configurat,configuration,1520,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:1652,Deployability,configurat,configuration,1652,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:996,Modifiability,config,configuration,996,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:1128,Modifiability,config,configuration,1128,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:1520,Modifiability,config,configuration,1520,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:1652,Modifiability,config,configuration,1652,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:60,Testability,test,test,60,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:548,Testability,test,test,548,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:640,Testability,assert,asserts-,640,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:723,Testability,assert,asserts-,723,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:804,Testability,assert,asserts-,804,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:879,Testability,assert,asserts-,879,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:1247,Testability,assert,asserts-,1247,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:1328,Testability,assert,asserts-,1328,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:1403,Testability,assert,asserts-,1403,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/issues/12747:1747,Testability,test,test,1747,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12747
https://github.com/root-project/root/pull/12748:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12748
https://github.com/root-project/root/pull/12748:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12748
https://github.com/root-project/root/issues/12749:336,Testability,test,test,336,"Not a major issue, but saving to a PDF can result in shifted text. Here is an example where the generated PDF has two printed texts offset from each other a little, while the in-ROOT graphics show the two texts well-aligned with each other. This is in ROOT 6.25/01 and appears to be independent of whether TTF are used or not . `; void test() {; gStyle->SetGridColor(1);; TH2I* h1 = new TH2I(""hh"",""test"",1,-1,1,1,-1,1);; TText* t1 = new TText();. TCanvas* c1 = new TCanvas(""c1"",""c1"",1000,1000);; h1->Draw();; gPad->SetGrid();; t1->SetTextColor(1);; t1->SetTextAlign(32);; t1->SetTextAngle(0);; t1->DrawText(-0.6,-0.6,""100"");; t1->SetTextColor(2);; t1->SetTextAlign(12);; t1->SetTextAngle(180);; t1->DrawText(-0.6,-0.6,""100"");; c1->SaveAs(""test1.pdf"");; }; `. -Gene",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12749
https://github.com/root-project/root/issues/12749:398,Testability,test,test,398,"Not a major issue, but saving to a PDF can result in shifted text. Here is an example where the generated PDF has two printed texts offset from each other a little, while the in-ROOT graphics show the two texts well-aligned with each other. This is in ROOT 6.25/01 and appears to be independent of whether TTF are used or not . `; void test() {; gStyle->SetGridColor(1);; TH2I* h1 = new TH2I(""hh"",""test"",1,-1,1,1,-1,1);; TText* t1 = new TText();. TCanvas* c1 = new TCanvas(""c1"",""c1"",1000,1000);; h1->Draw();; gPad->SetGrid();; t1->SetTextColor(1);; t1->SetTextAlign(32);; t1->SetTextAngle(0);; t1->DrawText(-0.6,-0.6,""100"");; t1->SetTextColor(2);; t1->SetTextAlign(12);; t1->SetTextAngle(180);; t1->DrawText(-0.6,-0.6,""100"");; c1->SaveAs(""test1.pdf"");; }; `. -Gene",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12749
https://github.com/root-project/root/issues/12750:147,Availability,error,error,147,"See https://root-forum.cern.ch/t/open-gui-failed-on-latest-macos-13-3-1/54474. ```; root [0] new TBrowser; root.exe(29254,0x16d62f000) malloc: *** error for object 0x600002e1a980: pointer being freed was not allocated; root.exe(29254,0x16d62f000) malloc: *** set a breakpoint in malloc_error_break to debug; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12750
https://github.com/root-project/root/issues/12750:208,Energy Efficiency,allocate,allocated,208,"See https://root-forum.cern.ch/t/open-gui-failed-on-latest-macos-13-3-1/54474. ```; root [0] new TBrowser; root.exe(29254,0x16d62f000) malloc: *** error for object 0x600002e1a980: pointer being freed was not allocated; root.exe(29254,0x16d62f000) malloc: *** set a breakpoint in malloc_error_break to debug; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12750
https://github.com/root-project/root/pull/12751:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12751
https://github.com/root-project/root/pull/12751:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12751
https://github.com/root-project/root/pull/12753:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12753
https://github.com/root-project/root/pull/12753:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12753
https://github.com/root-project/root/pull/12754:22,Integrability,wrap,wrapper,22,"* `RooInt` was only a wrapper class to save unit test integer results to reference files (like `RooDouble`), but it is unused by now. * `RooTFoamBinding` is an implementation detail of the `RooFoamGenerator` and should not be part of the public interface. * `RooConvIntegrandBinding` is an implementation detail of `RooNumConvPdf`/`RooNumConvolution` and should not be part of the public interface. * Some unnecessary includes are removed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12754
https://github.com/root-project/root/pull/12754:245,Integrability,interface,interface,245,"* `RooInt` was only a wrapper class to save unit test integer results to reference files (like `RooDouble`), but it is unused by now. * `RooTFoamBinding` is an implementation detail of the `RooFoamGenerator` and should not be part of the public interface. * `RooConvIntegrandBinding` is an implementation detail of `RooNumConvPdf`/`RooNumConvolution` and should not be part of the public interface. * Some unnecessary includes are removed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12754
https://github.com/root-project/root/pull/12754:388,Integrability,interface,interface,388,"* `RooInt` was only a wrapper class to save unit test integer results to reference files (like `RooDouble`), but it is unused by now. * `RooTFoamBinding` is an implementation detail of the `RooFoamGenerator` and should not be part of the public interface. * `RooConvIntegrandBinding` is an implementation detail of `RooNumConvPdf`/`RooNumConvolution` and should not be part of the public interface. * Some unnecessary includes are removed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12754
https://github.com/root-project/root/pull/12754:49,Testability,test,test,49,"* `RooInt` was only a wrapper class to save unit test integer results to reference files (like `RooDouble`), but it is unused by now. * `RooTFoamBinding` is an implementation detail of the `RooFoamGenerator` and should not be part of the public interface. * `RooConvIntegrandBinding` is an implementation detail of `RooNumConvPdf`/`RooNumConvolution` and should not be part of the public interface. * Some unnecessary includes are removed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12754
https://github.com/root-project/root/issues/12755:952,Availability,down,download,952,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12755
https://github.com/root-project/root/issues/12755:934,Deployability,install,install,934,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12755
https://github.com/root-project/root/issues/12755:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12755
https://github.com/root-project/root/issues/12755:489,Usability,clear,clear,489,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12755
https://github.com/root-project/root/pull/12757:137,Testability,test,testReport,137,TGraph does not always have a list of functions.; fixes: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173815/testReport/projectroot/runtutorials/tutorial_graphics_AtlasExample/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12757
https://github.com/root-project/root/issues/12758:1535,Availability,failure,failure,1535,"### Describe the bug. cling crashes when running some LHCb process involving using python within C++ code called from python; Here is the top of the stack trace :; ```; #11 0x00007f10460f38cc in clang::Sema::getTemplateDepth(clang::Scope*) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #12 0x00007f1045b8e15f in clang::Sema::EnterTemplatedContext(clang::Scope*, clang::DeclContext*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #13 0x00007f1045a8a95c in clang::Sema::ActOnCXXEnterDeclaratorScope(clang::Scope*, clang::CXXScopeSpec&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; ```. ### Expected behavior. No crash obviously. ### To Reproduce. files lhcbRunEnv and test-XMLSummary-exception.py are attached to the report. I had to zip together into material.zip to please github... ```; source /cvmfs/lhcb.cern.ch/lib/LbEnv.sh; source lhcbRunEnv; python /tmp/test-XMLSummary-exception.py; ```. ### Setup; 1. ROOT version : LCG 103, hence ROOT 6.28.00-a8528; 2. Linux, centos7; 3. cvmfs. ### Additional context; The same is working under LCG 102. Also it seems to be related to using a complicated stack where python calls C++ which calls python which calls C++ again, with ROOT dictionary at pretty much all levels. Moreover, no LHCb code is used in the example, only Gaudi, but of course LHCb dictionaries are still loaded and a key point to the failure.; [material.zip](https://github.com/root-project/root/files/11397560/material.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12758
https://github.com/root-project/root/issues/12758:282,Deployability,release,releases,282,"### Describe the bug. cling crashes when running some LHCb process involving using python within C++ code called from python; Here is the top of the stack trace :; ```; #11 0x00007f10460f38cc in clang::Sema::getTemplateDepth(clang::Scope*) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #12 0x00007f1045b8e15f in clang::Sema::EnterTemplatedContext(clang::Scope*, clang::DeclContext*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #13 0x00007f1045a8a95c in clang::Sema::ActOnCXXEnterDeclaratorScope(clang::Scope*, clang::CXXScopeSpec&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; ```. ### Expected behavior. No crash obviously. ### To Reproduce. files lhcbRunEnv and test-XMLSummary-exception.py are attached to the report. I had to zip together into material.zip to please github... ```; source /cvmfs/lhcb.cern.ch/lib/LbEnv.sh; source lhcbRunEnv; python /tmp/test-XMLSummary-exception.py; ```. ### Setup; 1. ROOT version : LCG 103, hence ROOT 6.28.00-a8528; 2. Linux, centos7; 3. cvmfs. ### Additional context; The same is working under LCG 102. Also it seems to be related to using a complicated stack where python calls C++ which calls python which calls C++ again, with ROOT dictionary at pretty much all levels. Moreover, no LHCb code is used in the example, only Gaudi, but of course LHCb dictionaries are still loaded and a key point to the failure.; [material.zip](https://github.com/root-project/root/files/11397560/material.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12758
https://github.com/root-project/root/issues/12758:485,Deployability,release,releases,485,"### Describe the bug. cling crashes when running some LHCb process involving using python within C++ code called from python; Here is the top of the stack trace :; ```; #11 0x00007f10460f38cc in clang::Sema::getTemplateDepth(clang::Scope*) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #12 0x00007f1045b8e15f in clang::Sema::EnterTemplatedContext(clang::Scope*, clang::DeclContext*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #13 0x00007f1045a8a95c in clang::Sema::ActOnCXXEnterDeclaratorScope(clang::Scope*, clang::CXXScopeSpec&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; ```. ### Expected behavior. No crash obviously. ### To Reproduce. files lhcbRunEnv and test-XMLSummary-exception.py are attached to the report. I had to zip together into material.zip to please github... ```; source /cvmfs/lhcb.cern.ch/lib/LbEnv.sh; source lhcbRunEnv; python /tmp/test-XMLSummary-exception.py; ```. ### Setup; 1. ROOT version : LCG 103, hence ROOT 6.28.00-a8528; 2. Linux, centos7; 3. cvmfs. ### Additional context; The same is working under LCG 102. Also it seems to be related to using a complicated stack where python calls C++ which calls python which calls C++ again, with ROOT dictionary at pretty much all levels. Moreover, no LHCb code is used in the example, only Gaudi, but of course LHCb dictionaries are still loaded and a key point to the failure.; [material.zip](https://github.com/root-project/root/files/11397560/material.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12758
https://github.com/root-project/root/issues/12758:696,Deployability,release,releases,696,"### Describe the bug. cling crashes when running some LHCb process involving using python within C++ code called from python; Here is the top of the stack trace :; ```; #11 0x00007f10460f38cc in clang::Sema::getTemplateDepth(clang::Scope*) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #12 0x00007f1045b8e15f in clang::Sema::EnterTemplatedContext(clang::Scope*, clang::DeclContext*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #13 0x00007f1045a8a95c in clang::Sema::ActOnCXXEnterDeclaratorScope(clang::Scope*, clang::CXXScopeSpec&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; ```. ### Expected behavior. No crash obviously. ### To Reproduce. files lhcbRunEnv and test-XMLSummary-exception.py are attached to the report. I had to zip together into material.zip to please github... ```; source /cvmfs/lhcb.cern.ch/lib/LbEnv.sh; source lhcbRunEnv; python /tmp/test-XMLSummary-exception.py; ```. ### Setup; 1. ROOT version : LCG 103, hence ROOT 6.28.00-a8528; 2. Linux, centos7; 3. cvmfs. ### Additional context; The same is working under LCG 102. Also it seems to be related to using a complicated stack where python calls C++ which calls python which calls C++ again, with ROOT dictionary at pretty much all levels. Moreover, no LHCb code is used in the example, only Gaudi, but of course LHCb dictionaries are still loaded and a key point to the failure.; [material.zip](https://github.com/root-project/root/files/11397560/material.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12758
https://github.com/root-project/root/issues/12758:1505,Performance,load,loaded,1505,"### Describe the bug. cling crashes when running some LHCb process involving using python within C++ code called from python; Here is the top of the stack trace :; ```; #11 0x00007f10460f38cc in clang::Sema::getTemplateDepth(clang::Scope*) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #12 0x00007f1045b8e15f in clang::Sema::EnterTemplatedContext(clang::Scope*, clang::DeclContext*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #13 0x00007f1045a8a95c in clang::Sema::ActOnCXXEnterDeclaratorScope(clang::Scope*, clang::CXXScopeSpec&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; ```. ### Expected behavior. No crash obviously. ### To Reproduce. files lhcbRunEnv and test-XMLSummary-exception.py are attached to the report. I had to zip together into material.zip to please github... ```; source /cvmfs/lhcb.cern.ch/lib/LbEnv.sh; source lhcbRunEnv; python /tmp/test-XMLSummary-exception.py; ```. ### Setup; 1. ROOT version : LCG 103, hence ROOT 6.28.00-a8528; 2. Linux, centos7; 3. cvmfs. ### Additional context; The same is working under LCG 102. Also it seems to be related to using a complicated stack where python calls C++ which calls python which calls C++ again, with ROOT dictionary at pretty much all levels. Moreover, no LHCb code is used in the example, only Gaudi, but of course LHCb dictionaries are still loaded and a key point to the failure.; [material.zip](https://github.com/root-project/root/files/11397560/material.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12758
https://github.com/root-project/root/issues/12758:853,Testability,test,test-XMLSummary-exception,853,"### Describe the bug. cling crashes when running some LHCb process involving using python within C++ code called from python; Here is the top of the stack trace :; ```; #11 0x00007f10460f38cc in clang::Sema::getTemplateDepth(clang::Scope*) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #12 0x00007f1045b8e15f in clang::Sema::EnterTemplatedContext(clang::Scope*, clang::DeclContext*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #13 0x00007f1045a8a95c in clang::Sema::ActOnCXXEnterDeclaratorScope(clang::Scope*, clang::CXXScopeSpec&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; ```. ### Expected behavior. No crash obviously. ### To Reproduce. files lhcbRunEnv and test-XMLSummary-exception.py are attached to the report. I had to zip together into material.zip to please github... ```; source /cvmfs/lhcb.cern.ch/lib/LbEnv.sh; source lhcbRunEnv; python /tmp/test-XMLSummary-exception.py; ```. ### Setup; 1. ROOT version : LCG 103, hence ROOT 6.28.00-a8528; 2. Linux, centos7; 3. cvmfs. ### Additional context; The same is working under LCG 102. Also it seems to be related to using a complicated stack where python calls C++ which calls python which calls C++ again, with ROOT dictionary at pretty much all levels. Moreover, no LHCb code is used in the example, only Gaudi, but of course LHCb dictionaries are still loaded and a key point to the failure.; [material.zip](https://github.com/root-project/root/files/11397560/material.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12758
https://github.com/root-project/root/issues/12758:1047,Testability,test,test-XMLSummary-exception,1047,"### Describe the bug. cling crashes when running some LHCb process involving using python within C++ code called from python; Here is the top of the stack trace :; ```; #11 0x00007f10460f38cc in clang::Sema::getTemplateDepth(clang::Scope*) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #12 0x00007f1045b8e15f in clang::Sema::EnterTemplatedContext(clang::Scope*, clang::DeclContext*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #13 0x00007f1045a8a95c in clang::Sema::ActOnCXXEnterDeclaratorScope(clang::Scope*, clang::CXXScopeSpec&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; ```. ### Expected behavior. No crash obviously. ### To Reproduce. files lhcbRunEnv and test-XMLSummary-exception.py are attached to the report. I had to zip together into material.zip to please github... ```; source /cvmfs/lhcb.cern.ch/lib/LbEnv.sh; source lhcbRunEnv; python /tmp/test-XMLSummary-exception.py; ```. ### Setup; 1. ROOT version : LCG 103, hence ROOT 6.28.00-a8528; 2. Linux, centos7; 3. cvmfs. ### Additional context; The same is working under LCG 102. Also it seems to be related to using a complicated stack where python calls C++ which calls python which calls C++ again, with ROOT dictionary at pretty much all levels. Moreover, no LHCb code is used in the example, only Gaudi, but of course LHCb dictionaries are still loaded and a key point to the failure.; [material.zip](https://github.com/root-project/root/files/11397560/material.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12758
https://github.com/root-project/root/pull/12759:52,Deployability,Update,Update,52,Also fix several small issues in `TScatter` itself. Update JSROOT with `TScatter` support,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12759
https://github.com/root-project/root/issues/12761:657,Energy Efficiency,reduce,reduce,657,"The improvement at https://github.com/root-project/root/pull/10318 which stresses file opening in multi-thread RDF reported:; ```; With 256 threads (on partly loaded machine, but still representative):. Baseline:; Percent of CPU this job got: 1557%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11; ```; This 'surprising' increase of CPU time by a factor 9 leading to only a factor 2 improvement in elapsed time is due to the bottleneck migrating from the ([re]moved mutex) to the (many) spin locks. The test can be tweaked (increase number of files, reduce number of entries per file) to stress the file opening more. On ntpl-perf01.cern.ch (single AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; inde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:4114,Integrability,wrap,wrapped,4114,"; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::GetBaseOffset (this=0x555558a126a0, base=0x555555c8b500, address=0x0, isDerivedObject=true) at /home/pcanal/root_working/code/root/core/metacling/src/TClingClassInfo.cxx:616; ```. Note: that those in themselves are not sufficient to improve performance (which could also be bottlenecked by the posix system).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:98,Performance,multi-thread,multi-thread,98,"The improvement at https://github.com/root-project/root/pull/10318 which stresses file opening in multi-thread RDF reported:; ```; With 256 threads (on partly loaded machine, but still representative):. Baseline:; Percent of CPU this job got: 1557%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11; ```; This 'surprising' increase of CPU time by a factor 9 leading to only a factor 2 improvement in elapsed time is due to the bottleneck migrating from the ([re]moved mutex) to the (many) spin locks. The test can be tweaked (increase number of files, reduce number of entries per file) to stress the file opening more. On ntpl-perf01.cern.ch (single AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; inde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:159,Performance,load,loaded,159,"The improvement at https://github.com/root-project/root/pull/10318 which stresses file opening in multi-thread RDF reported:; ```; With 256 threads (on partly loaded machine, but still representative):. Baseline:; Percent of CPU this job got: 1557%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11; ```; This 'surprising' increase of CPU time by a factor 9 leading to only a factor 2 improvement in elapsed time is due to the bottleneck migrating from the ([re]moved mutex) to the (many) spin locks. The test can be tweaked (increase number of files, reduce number of entries per file) to stress the file opening more. On ntpl-perf01.cern.ch (single AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; inde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:532,Performance,bottleneck,bottleneck,532,"The improvement at https://github.com/root-project/root/pull/10318 which stresses file opening in multi-thread RDF reported:; ```; With 256 threads (on partly loaded machine, but still representative):. Baseline:; Percent of CPU this job got: 1557%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11; ```; This 'surprising' increase of CPU time by a factor 9 leading to only a factor 2 improvement in elapsed time is due to the bottleneck migrating from the ([re]moved mutex) to the (many) spin locks. The test can be tweaked (increase number of files, reduce number of entries per file) to stress the file opening more. On ntpl-perf01.cern.ch (single AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; inde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:1829,Performance,bottleneck,bottlenecking,1829,"gle AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; index 4112e7aeb8..8d92534015 100644; --- a/tree/dataframe/src/RLoopManager.cxx; +++ b/tree/dataframe/src/RLoopManager.cxx; @@ -495,6 +495,7 @@ void RLoopManager::RunTreeProcessorMT(); const auto entryRange = r.GetEntriesRange(); // we trust TTreeProcessorMT to call SetEntriesRange; const auto nEntries = entryRange.second - entryRange.first;; auto count = entryCount.fetch_add(nEntries);; + // TDirectory::TContext ctxt(nullptr);; try {; // recursive call to check filters and conditionally execute actions; while (r.Next()) {; diff --git a/tree/treeplayer/src/TTreeProcessorMT.cxx b/tree/treeplayer/src/TTreeProcessorMT.cxx; index ad0100e377..f29a67b65b 100644; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx; +++ b/tree/treeplayer/src/TTreeProcessorMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:3578,Performance,bottleneck,bottleneck,3578,"cxx; index ad0100e377..f29a67b65b 100644; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::GetBaseOffset (this=0x555558a126a0, base=0x555555c8b500, address=0x0, isDerivedObject=true) at /home/pcanal/root_working/code/root/core/metacling/src/TClingClassInfo.cxx:616; ```. Note: that those in themselves are not su",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:4175,Performance,bottleneck,bottleneck,4175,"; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::GetBaseOffset (this=0x555558a126a0, base=0x555555c8b500, address=0x0, isDerivedObject=true) at /home/pcanal/root_working/code/root/core/metacling/src/TClingClassInfo.cxx:616; ```. Note: that those in themselves are not sufficient to improve performance (which could also be bottlenecked by the posix system).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:4640,Performance,perform,performance,4640,"; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::GetBaseOffset (this=0x555558a126a0, base=0x555555c8b500, address=0x0, isDerivedObject=true) at /home/pcanal/root_working/code/root/core/metacling/src/TClingClassInfo.cxx:616; ```. Note: that those in themselves are not sufficient to improve performance (which could also be bottlenecked by the posix system).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:4673,Performance,bottleneck,bottlenecked,4673,"; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::GetBaseOffset (this=0x555558a126a0, base=0x555555c8b500, address=0x0, isDerivedObject=true) at /home/pcanal/root_working/code/root/core/metacling/src/TClingClassInfo.cxx:616; ```. Note: that those in themselves are not sufficient to improve performance (which could also be bottlenecked by the posix system).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:1223,Safety,avoid,avoid,1223,":; Percent of CPU this job got: 1557%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11; ```; This 'surprising' increase of CPU time by a factor 9 leading to only a factor 2 improvement in elapsed time is due to the bottleneck migrating from the ([re]moved mutex) to the (many) spin locks. The test can be tweaked (increase number of files, reduce number of entries per file) to stress the file opening more. On ntpl-perf01.cern.ch (single AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; index 4112e7aeb8..8d92534015 100644; --- a/tree/dataframe/src/RLoopManager.cxx; +++ b/tree/dataframe/src/RLoopManager.cxx; @@ -495,6 +495,7 @@ void RLoopManager::RunTreeProcessorMT(); const auto entryRange = r.GetEn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:1239,Safety,Avoid,Avoid,1239,") time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11; ```; This 'surprising' increase of CPU time by a factor 9 leading to only a factor 2 improvement in elapsed time is due to the bottleneck migrating from the ([re]moved mutex) to the (many) spin locks. The test can be tweaked (increase number of files, reduce number of entries per file) to stress the file opening more. On ntpl-perf01.cern.ch (single AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; index 4112e7aeb8..8d92534015 100644; --- a/tree/dataframe/src/RLoopManager.cxx; +++ b/tree/dataframe/src/RLoopManager.cxx; @@ -495,6 +495,7 @@ void RLoopManager::RunTreeProcessorMT(); const auto entryRange = r.GetEntriesRange(); // we trust TTreeProcessorMT to call SetEnt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:1823,Safety,avoid,avoid,1823,"gle AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; index 4112e7aeb8..8d92534015 100644; --- a/tree/dataframe/src/RLoopManager.cxx; +++ b/tree/dataframe/src/RLoopManager.cxx; @@ -495,6 +495,7 @@ void RLoopManager::RunTreeProcessorMT(); const auto entryRange = r.GetEntriesRange(); // we trust TTreeProcessorMT to call SetEntriesRange; const auto nEntries = entryRange.second - entryRange.first;; auto count = entryCount.fetch_add(nEntries);; + // TDirectory::TContext ctxt(nullptr);; try {; // recursive call to check filters and conditionally execute actions; while (r.Next()) {; diff --git a/tree/treeplayer/src/TTreeProcessorMT.cxx b/tree/treeplayer/src/TTreeProcessorMT.cxx; index ad0100e377..f29a67b65b 100644; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx; +++ b/tree/treeplayer/src/TTreeProcessorMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:3405,Safety,Avoid,Avoid,3405,"ry::TContext ctxt(nullptr);; try {; // recursive call to check filters and conditionally execute actions; while (r.Next()) {; diff --git a/tree/treeplayer/src/TTreeProcessorMT.cxx b/tree/treeplayer/src/TTreeProcessorMT.cxx; index ad0100e377..f29a67b65b 100644; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::Ge",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:4103,Security,Access,Access,4103,"; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::GetBaseOffset (this=0x555558a126a0, base=0x555555c8b500, address=0x0, isDerivedObject=true) at /home/pcanal/root_working/code/root/core/metacling/src/TClingClassInfo.cxx:616; ```. Note: that those in themselves are not sufficient to improve performance (which could also be bottlenecked by the posix system).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:610,Testability,test,test,610,"The improvement at https://github.com/root-project/root/pull/10318 which stresses file opening in multi-thread RDF reported:; ```; With 256 threads (on partly loaded machine, but still representative):. Baseline:; Percent of CPU this job got: 1557%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11; ```; This 'surprising' increase of CPU time by a factor 9 leading to only a factor 2 improvement in elapsed time is due to the bottleneck migrating from the ([re]moved mutex) to the (many) spin locks. The test can be tweaked (increase number of files, reduce number of entries per file) to stress the file opening more. On ntpl-perf01.cern.ch (single AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; inde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12761:795,Testability,test,test,795,"The improvement at https://github.com/root-project/root/pull/10318 which stresses file opening in multi-thread RDF reported:; ```; With 256 threads (on partly loaded machine, but still representative):. Baseline:; Percent of CPU this job got: 1557%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11; ```; This 'surprising' increase of CPU time by a factor 9 leading to only a factor 2 improvement in elapsed time is due to the bottleneck migrating from the ([re]moved mutex) to the (many) spin locks. The test can be tweaked (increase number of files, reduce number of entries per file) to stress the file opening more. On ntpl-perf01.cern.ch (single AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; inde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12761
https://github.com/root-project/root/issues/12762:241,Deployability,patch,patches,241,"When running:. ```c++; #include <boost/program_options.hpp>; ```. I get the following [crash](https://github.com/root-project/root/files/11401279/crash.txt). This is on a macOS 13.3.1 M1 machine, using XCode 14.3 and the tip of the v6-28-00-patches branch, without any modifications on my side.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12762
https://github.com/root-project/root/pull/12763:8,Testability,test,test,8,"In that test, using `f->SetParameters(par)` gives a compiler warning, becaues internally, this does `std::copy(par, par + npars, ...)`. The `par + npars` gives an out-of-bounds warning, because par is a C-style array with compile-time size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12763
https://github.com/root-project/root/issues/12770:118,Availability,error,errors,118,When building latest ROOT (6.28.02) with latest Protobuf 22.4 tmva/sofie_parsers build fails during linking step with errors of the type:; ```; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::log_internal::LogMessage::OstreamView::~OstreamView()...; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::Mutex::~Mutex()'; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `utf8_range::IsStructurallyValid(...; ```; The problem seems to be caused by adding new dependency of Protobuf on Abseil in Protobuf 22.x (https://protobuf.dev/news/2022-08-03/). To make the code build I needed to:; Add in file `cmake/modules/SearchInstalledSoftware.cmake` after line ; ```; find_package(Protobuf); ```; lines (probably this should be dependent on version of Protobuf); ```; find_package(absl REQUIRED); find_package(utf8_range REQUIRED); ```; In file `tmva/sofie_parsers/CMakeLists.txt` add inside linking after line; ```; ${Protobuf_LIBRARIES}; ```; lines; ```; absl::str_format_internal; absl::log_internal_message; absl::hash; absl::flat_hash_set; absl::log_internal_check_op; utf8_range::utf8_validity; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12770
https://github.com/root-project/root/issues/12770:530,Integrability,depend,dependency,530,When building latest ROOT (6.28.02) with latest Protobuf 22.4 tmva/sofie_parsers build fails during linking step with errors of the type:; ```; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::log_internal::LogMessage::OstreamView::~OstreamView()...; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::Mutex::~Mutex()'; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `utf8_range::IsStructurallyValid(...; ```; The problem seems to be caused by adding new dependency of Protobuf on Abseil in Protobuf 22.x (https://protobuf.dev/news/2022-08-03/). To make the code build I needed to:; Add in file `cmake/modules/SearchInstalledSoftware.cmake` after line ; ```; find_package(Protobuf); ```; lines (probably this should be dependent on version of Protobuf); ```; find_package(absl REQUIRED); find_package(utf8_range REQUIRED); ```; In file `tmva/sofie_parsers/CMakeLists.txt` add inside linking after line; ```; ${Protobuf_LIBRARIES}; ```; lines; ```; absl::str_format_internal; absl::log_internal_message; absl::hash; absl::flat_hash_set; absl::log_internal_check_op; utf8_range::utf8_validity; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12770
https://github.com/root-project/root/issues/12770:794,Integrability,depend,dependent,794,When building latest ROOT (6.28.02) with latest Protobuf 22.4 tmva/sofie_parsers build fails during linking step with errors of the type:; ```; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::log_internal::LogMessage::OstreamView::~OstreamView()...; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::Mutex::~Mutex()'; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `utf8_range::IsStructurallyValid(...; ```; The problem seems to be caused by adding new dependency of Protobuf on Abseil in Protobuf 22.x (https://protobuf.dev/news/2022-08-03/). To make the code build I needed to:; Add in file `cmake/modules/SearchInstalledSoftware.cmake` after line ; ```; find_package(Protobuf); ```; lines (probably this should be dependent on version of Protobuf); ```; find_package(absl REQUIRED); find_package(utf8_range REQUIRED); ```; In file `tmva/sofie_parsers/CMakeLists.txt` add inside linking after line; ```; ${Protobuf_LIBRARIES}; ```; lines; ```; absl::str_format_internal; absl::log_internal_message; absl::hash; absl::flat_hash_set; absl::log_internal_check_op; utf8_range::utf8_validity; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12770
https://github.com/root-project/root/issues/12770:1084,Security,hash,hash,1084,When building latest ROOT (6.28.02) with latest Protobuf 22.4 tmva/sofie_parsers build fails during linking step with errors of the type:; ```; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::log_internal::LogMessage::OstreamView::~OstreamView()...; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::Mutex::~Mutex()'; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `utf8_range::IsStructurallyValid(...; ```; The problem seems to be caused by adding new dependency of Protobuf on Abseil in Protobuf 22.x (https://protobuf.dev/news/2022-08-03/). To make the code build I needed to:; Add in file `cmake/modules/SearchInstalledSoftware.cmake` after line ; ```; find_package(Protobuf); ```; lines (probably this should be dependent on version of Protobuf); ```; find_package(absl REQUIRED); find_package(utf8_range REQUIRED); ```; In file `tmva/sofie_parsers/CMakeLists.txt` add inside linking after line; ```; ${Protobuf_LIBRARIES}; ```; lines; ```; absl::str_format_internal; absl::log_internal_message; absl::hash; absl::flat_hash_set; absl::log_internal_check_op; utf8_range::utf8_validity; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12770
https://github.com/root-project/root/issues/12770:239,Testability,Log,LogMessage,239,When building latest ROOT (6.28.02) with latest Protobuf 22.4 tmva/sofie_parsers build fails during linking step with errors of the type:; ```; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::log_internal::LogMessage::OstreamView::~OstreamView()...; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::Mutex::~Mutex()'; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `utf8_range::IsStructurallyValid(...; ```; The problem seems to be caused by adding new dependency of Protobuf on Abseil in Protobuf 22.x (https://protobuf.dev/news/2022-08-03/). To make the code build I needed to:; Add in file `cmake/modules/SearchInstalledSoftware.cmake` after line ; ```; find_package(Protobuf); ```; lines (probably this should be dependent on version of Protobuf); ```; find_package(absl REQUIRED); find_package(utf8_range REQUIRED); ```; In file `tmva/sofie_parsers/CMakeLists.txt` add inside linking after line; ```; ${Protobuf_LIBRARIES}; ```; lines; ```; absl::str_format_internal; absl::log_internal_message; absl::hash; absl::flat_hash_set; absl::log_internal_check_op; utf8_range::utf8_validity; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12770
https://github.com/root-project/root/issues/12771:201,Availability,error,errors,201,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:243,Availability,error,errors,243,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:761,Availability,error,error,761,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:1269,Availability,error,error,1269,"rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:44,Deployability,patch,patches,44,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:265,Deployability,patch,patches,265,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:418,Deployability,integrat,integration,418,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:418,Integrability,integrat,integration,418,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:14653,Integrability,Wrap,WrapperCall,14653,"ests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:26566,Integrability,Wrap,WrapperCall,26566,"OT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:15271,Modifiability,variab,variable,15271,"ta"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:13879,Performance,load,load,13879,"tBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f724",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:14215,Performance,load,load,14215,"s=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:25792,Performance,load,load,25792,"tBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f724",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:26128,Performance,load,load,26128,"OT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:3827,Safety,abort,abort,3827,".28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /poo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:15753,Safety,abort,abort,15753,"50, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /poo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:22,Testability,test,test,22,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:452,Testability,log,log,452,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:644,Testability,test,tests,644,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:650,Testability,test,testBuildDir,650,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:944,Testability,test,tests,944,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:950,Testability,test,testBuildDir,950,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:1740,Testability,test,tests,1740,"a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:1746,Testability,test,testBuildDir,1746,"a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:1913,Testability,test,tests,1913,"r/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:1919,Testability,test,testBuildDir,1919,"r/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:2172,Testability,test,tests,2172,"ed here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:2178,Testability,test,testBuildDir,2178,"ed here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:2431,Testability,test,tests,2431," entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:2437,Testability,test,testBuildDir,2437," entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:2774,Testability,test,tests,2774,"enkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:2780,Testability,test,testBuildDir,2780,"enkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:3092,Testability,test,tests,3092,"xx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:3098,Testability,test,testBuildDir,3098,"xx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:3338,Testability,test,tests,3338,"2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:3344,Testability,test,testBuildDir,3344,"2395; #4 0x00002b4bd1896496 in (anonymous namespace)::do_trace (sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:3575,Testability,test,tests,3575,"oot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:3581,Testability,test,testBuildDir,3581,"oot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00002b4bd1896526 in (anonymous namespace)::TExceptionHandlerImp::HandleException (this=0x2a96890, sig=5) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:201; #6 0x00002b4bd1d276e5 in TUnixSystem::DispatchSignals (this=0x7472d0, sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:4161,Testability,test,tests,4161,"621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3610; #7 0x00002b4bd1d1f654 in SigHandler (sig=kSigAbort) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:4383,Testability,test,tests,4383,"Dir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:395; #8 0x00002b4bd1d2763b in sighandler (sig=6) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:4873,Testability,test,tests,4873,"3586; #9 <signal handler called>; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #18 0x00002b4bd39ea96d in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/ext",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:5372,Testability,test,tests,5372,"r-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #18 0x00002b4bd39ea96d in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #19 0x00002b4bd39ee7d1 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:5663,Testability,test,tests,5663,"bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #18 0x00002b4bd39ea96d in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #19 0x00002b4bd39ee7d1 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:6145,Testability,test,tests,6145,"lang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #18 0x00002b4bd39ea96d in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #19 0x00002b4bd39ee7d1 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:6644,Testability,test,tests,6644,"ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #19 0x00002b4bd39ee7d1 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:6875,Testability,test,tests,6875,"Collector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:7147,Testability,test,tests,7147,"m /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:7384,Testability,test,tests,7384,"(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:7602,Testability,test,tests,7602,"nstprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:8063,Testability,test,tests,8063,"2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""\n#line 1 \""DataFormatsBTauReco_xr dictionary payload\""\n\n#ifndef CMS_DICT_IMPL\n #define CMS_DICT_IMPL 1\n#endif\n#ifndef _REENTRANT\n #define _REENTRANT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:8318,Testability,test,tests,8318,"ctionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""\n#line 1 \""DataFormatsBTauReco_xr dictionary payload\""\n\n#ifndef CMS_DICT_IMPL\n #define CMS_DICT_IMPL 1\n#endif\n#ifndef _REENTRANT\n #define _REENTRANT 1\n#endif\n#ifndef GNUSOURCE\n #define GNUSOURCE 1\n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:8611,Testability,test,tests,8611," from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""\n#line 1 \""DataFormatsBTauReco_xr dictionary payload\""\n\n#ifndef CMS_DICT_IMPL\n #define CMS_DICT_IMPL 1\n#endif\n#ifndef _REENTRANT\n #define _REENTRANT 1\n#endif\n#ifndef GNUSOURCE\n #define GNUSOURCE 1\n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:9064,Testability,test,tests,9064,"orkspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""\n#line 1 \""DataFormatsBTauReco_xr dictionary payload\""\n\n#ifndef CMS_DICT_IMPL\n #define CMS_DICT_IMPL 1\n#endif\n#ifndef _REENTRANT\n #define _REENTRANT 1\n#endif\n#ifndef GNUSOURCE\n #define GNUSOURCE 1\n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:9070,Testability,test,testBuildDir,9070,"orkspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""\n#line 1 \""DataFormatsBTauReco_xr dictionary payload\""\n\n#ifndef CMS_DICT_IMPL\n #define CMS_DICT_IMPL 1\n#endif\n#ifndef _REENTRANT\n #define _REENTRANT 1\n#endif\n#ifndef GNUSOURCE\n #define GNUSOURCE 1\n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:9565,Testability,test,tests,9565,"from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""\n#line 1 \""DataFormatsBTauReco_xr dictionary payload\""\n\n#ifndef CMS_DICT_IMPL\n #define CMS_DICT_IMPL 1\n#endif\n#ifndef _REENTRANT\n #define _REENTRANT 1\n#endif\n#ifndef GNUSOURCE\n #define GNUSOURCE 1\n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:9571,Testability,test,testBuildDir,9571,"from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""\n#line 1 \""DataFormatsBTauReco_xr dictionary payload\""\n\n#ifndef CMS_DICT_IMPL\n #define CMS_DICT_IMPL 1\n#endif\n#ifndef _REENTRANT\n #define _REENTRANT 1\n#endif\n#ifndef GNUSOURCE\n #define GNUSOURCE 1\n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:10040,Testability,test,tests,10040,"nkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:10046,Testability,test,testBuildDir,10046,"nkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:10514,Testability,test,tests,10514,"t /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:10520,Testability,test,testBuildDir,10520,"t /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:10869,Testability,test,tests,10869,"o::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:10875,Testability,test,testBuildDir,10875,"o::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:11308,Testability,test,tests,11308,"o<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:11314,Testability,test,testBuildDir,11314,"o<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:11694,Testability,test,tests,11694,"ils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:11700,Testability,test,testBuildDir,11700,"ils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:12036,Testability,test,tests,12036,"6/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:12042,Testability,test,testBuildDir,12042,"6/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:12338,Testability,test,tests,12338,"LD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:12344,Testability,test,testBuildDir,12344,"LD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:12618,Testability,test,tests,12618,"5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:12624,Testability,test,testBuildDir,12624,"5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:12908,Testability,test,tests,12908,"r const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:12914,Testability,test,testBuildDir,12914,"r const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:13295,Testability,test,tests,13295,"8) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:13301,Testability,test,testBuildDir,13301,"8) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:13650,Testability,test,tests,13650," /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:13656,Testability,test,testBuildDir,13656," /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:13996,Testability,test,tests,13996,"tBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f724",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:14002,Testability,test,testBuildDir,14002,"tBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f724",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:14294,Testability,test,tests,14294,"s=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:14300,Testability,test,testBuildDir,14300,"s=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:14832,Testability,test,tests,14832,"ests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:14838,Testability,test,testBuildDir,14838,"ests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:16087,Testability,test,tests,16087,"nt at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:16309,Testability,test,tests,16309," before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:16799,Testability,test,tests,16799,"================================; #10 0x00002b4bd102eaff in raise () from /lib64/libc.so.6; #11 0x00002b4bd1001ea5 in abort () from /lib64/libc.so.6; #12 0x00002b4bd1001d79 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #13 0x00002b4bd1027456 in __assert_fail () from /lib64/libc.so.6; #14 0x00002b4bd679065b in getLambdaCallOperatorHelper(clang::CXXRecordDecl const&) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #15 0x00002b4bd67915cb in clang::CXXRecordDecl::getLambdaCallOperator() const () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #18 0x00002b4bd39ea96d in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/ext",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:17298,Testability,test,tests,17298,"r-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #16 0x00002b4bd39f6a20 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #18 0x00002b4bd39ea96d in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #19 0x00002b4bd39ee7d1 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:17589,Testability,test,tests,17589,"bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #17 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #18 0x00002b4bd39ea96d in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #19 0x00002b4bd39ee7d1 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:18071,Testability,test,tests,18071,"lang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #18 0x00002b4bd39ea96d in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*) [clone .part.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #19 0x00002b4bd39ee7d1 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:18570,Testability,test,tests,18570,"ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #19 0x00002b4bd39ee7d1 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:18801,Testability,test,tests,18801,"Collector>::dataTraverseNode(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:19073,Testability,test,tests,19073,"m /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #20 0x00002b4bd39ef4d5 in clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:19310,Testability,test,tests,19310,"(clang::Stmt*, llvm::SmallVectorImpl<llvm::PointerIntPair<clang::Stmt*, 1u, bool, llvm::PointerLikeTypeTraits<clang::Stmt*>, llvm::PointerIntPairInfo<clang::Stmt*, 1u, llvm::PointerLikeTypeTraits<clang::Stmt*> > > >*) [clone .constprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:19528,Testability,test,tests,19528,"nstprop.0] () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #21 0x00002b4bd39ef9be in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:19989,Testability,test,tests,19989,"2300/external/el8_amd64_gcc11/lib/libCling.so; #22 0x00002b4bd39bf764 in cling::TransactionUnloader::unloadDeserializedDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #23 0x00002b4bd39bfc86 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""n#line 1 ""DataFormatsBTauReco_xr dictionary payload""nn#ifndef CMS_DICT_IMPLn #define CMS_DICT_IMPL 1n#endifn#ifndef _REENTRANTn #define _REENTRANT 1n#endifn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:20244,Testability,test,tests,20244,"ctionUnloader::RevertTransaction(cling::Transaction*) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #24 0x00002b4bd39a4afe in cling::Interpreter::unload(cling::Transaction&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""n#line 1 ""DataFormatsBTauReco_xr dictionary payload""nn#ifndef CMS_DICT_IMPLn #define CMS_DICT_IMPL 1n#endifn#ifndef _REENTRANTn #define _REENTRANT 1n#endifn#ifndef GNUSOURCEn #define GNUSOURCE 1n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:20537,Testability,test,tests,20537," from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #25 0x00002b4bd3a28bcf in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""n#line 1 ""DataFormatsBTauReco_xr dictionary payload""nn#ifndef CMS_DICT_IMPLn #define CMS_DICT_IMPL 1n#endifn#ifndef _REENTRANTn #define _REENTRANT 1n#endifn#ifndef GNUSOURCEn #define GNUSOURCE 1n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:20977,Testability,test,tests,20977,"945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""n#line 1 ""DataFormatsBTauReco_xr dictionary payload""nn#ifndef CMS_DICT_IMPLn #define CMS_DICT_IMPL 1n#endifn#ifndef _REENTRANTn #define _REENTRANT 1n#endifn#ifndef GNUSOURCEn #define GNUSOURCE 1n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:20983,Testability,test,testBuildDir,20983,"945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #26 0x00002b4bd3a2b9b9 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #27 0x00002b4bd39a1b64 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""n#line 1 ""DataFormatsBTauReco_xr dictionary payload""nn#ifndef CMS_DICT_IMPLn #define CMS_DICT_IMPL 1n#endifn#ifndef _REENTRANTn #define _REENTRANT 1n#endifn#ifndef GNUSOURCEn #define GNUSOURCE 1n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:21478,Testability,test,tests,21478,"> const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""n#line 1 ""DataFormatsBTauReco_xr dictionary payload""nn#ifndef CMS_DICT_IMPLn #define CMS_DICT_IMPL 1n#endifn#ifndef _REENTRANTn #define _REENTRANT 1n#endifn#ifndef GNUSOURCEn #define GNUSOURCE 1n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:21484,Testability,test,testBuildDir,21484,"> const&) () from /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-05-04-2300/external/el8_amd64_gcc11/lib/libCling.so; #28 0x00002b4bd37824e9 in ExecAutoParse (what=0x2b4bf4038162 ""n#line 1 ""DataFormatsBTauReco_xr dictionary payload""nn#ifndef CMS_DICT_IMPLn #define CMS_DICT_IMPL 1n#endifn#ifndef _REENTRANTn #define _REENTRANT 1n#endifn#ifndef GNUSOURCEn #define GNUSOURCE 1n#e""..., header=false, interpreter=0x681b00) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:21953,Testability,test,tests,21953,"nkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:21959,Testability,test,testBuildDir,21959,"nkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6318; #29 0x00002b4bd3782d71 in TCling::AutoParseImplRecurse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""..., topLevel=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:22427,Testability,test,tests,22427,"t /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:22433,Testability,test,testBuildDir,22433,"t /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6423; #30 0x00002b4bd37833f1 in TCling::AutoParse (this=0x5628c0, cls=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:22782,Testability,test,tests,22782,"o::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:22788,Testability,test,testBuildDir,22788,"o::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:6508; #31 0x00002b4bd376ab6b in TClingLookupHelper__AutoParse (cname=0xc1cf750 ""reco::TemplatedSecondaryVertexTagInfo<reco::IPTagInfo<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:23221,Testability,test,tests,23221,"o<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:23227,Testability,test,testBuildDir,23227,"o<edm::RefVector<vector<reco::Track>,reco::Track,edm::refhelper::FindUsingAdvance<vector<reco::Track>,reco::Track> >,reco::JTATagInfo>,reco::Vertex>""...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/metacling/src/TCling.cxx:901; #32 0x00002b4bd35c4955 in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:23607,Testability,test,tests,23607,"ils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:23613,Testability,test,testBuildDir,23613,"ils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x2528130, tname=..., result=..., dropstd=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:23949,Testability,test,tests,23949,"6/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:23955,Testability,test,testBuildDir,23955,"6/root-6.28.03/core/clingutils/src/TClingUtils.cxx:581; #33 0x00002b4bd1c8ca31 in ResolveTypedefProcessType (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", cursor=39, constprefix=false, start_of_type=0, end_of_type=0, mod_start_of_type=0, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:24251,Testability,test,tests,24251,"LD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:24257,Testability,test,testBuildDir,24257,"LD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1477; #34 0x00002b4bd1c8e68e in ResolveTypedefImpl (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"", len=39, cursor=; 0x7ffd951b5fec: 39, modified=; 0x7ffd951b5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:24531,Testability,test,tests,24531,"5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:24537,Testability,test,testBuildDir,24537,"5feb: true, result=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1741; #35 0x00002b4bd1c8ec12 in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:24821,Testability,test,tests,24821,"r const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:24827,Testability,test,testBuildDir,24827,"r const*, bool) (tname=0x438fe30 ""reco::SecondaryVertexTagInfo::TrackData"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:1775; #36 0x00002b4bd1c885f9 in TClassEdit::TSplitType::ShortType (this=0x7ffd951b61c0, answ=..., mode=3618) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:25208,Testability,test,tests,25208,"8) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:25214,Testability,test,testBuildDir,25214,"8) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:442; #37 0x00002b4bd1c89e1b in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:25563,Testability,test,tests,25563," /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:25569,Testability,test,testBuildDir,25569," /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/foundation/src/TClassEdit.cxx:871; #38 0x00002b4bd1cedb74 in ROOT::TSchemaRule::SetSourceClass (this=0xc24c900, classname=...) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:25909,Testability,test,tests,25909,"tBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f724",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:25915,Testability,test,testBuildDir,25915,"tBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f724",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:26207,Testability,test,tests,26207,"OT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:26213,Testability,test,testBuildDir,26213,"OT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:26745,Testability,test,tests,26745,"OT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/issues/12771:26751,Testability,test,testBuildDir,26751,"OT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12771
https://github.com/root-project/root/pull/12773:287,Deployability,update,updated,287,"In some cases gPad can be set to tmpGuideLinePad, which is deleted any time ShowGuidelines method is called. In that case pointer on this temporary pad should be removed from TContext object. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12773
https://github.com/root-project/root/pull/12773:257,Testability,test,tested,257,"In some cases gPad can be set to tmpGuideLinePad, which is deleted any time ShowGuidelines method is called. In that case pointer on this temporary pad should be removed from TContext object. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12773
https://github.com/root-project/root/pull/12776:359,Deployability,update,updated,359,e.g.; ```; bitwise operation between different enumeration types ‘TBranch::EStatusBits’ and ‘TBranchElement::EStatusBits’ is deprecated [-Wdeprecated-enum-enum-conversion]; ```; ```; implicit capture of ‘this’ via ‘[=]’ is deprecated in C++20 [-Wdeprecated]. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12776
https://github.com/root-project/root/pull/12776:329,Testability,test,tested,329,e.g.; ```; bitwise operation between different enumeration types ‘TBranch::EStatusBits’ and ‘TBranchElement::EStatusBits’ is deprecated [-Wdeprecated-enum-enum-conversion]; ```; ```; implicit capture of ‘this’ via ‘[=]’ is deprecated in C++20 [-Wdeprecated]. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12776
https://github.com/root-project/root/issues/12778:234,Availability,failure,failure,234,"`#include <foo.h>` isn't looked up again after calling `gInterpreter->AddIncludePath()`. We also need a test for a file that gets included, isn't found, is then created by the user, and must then be successfully included (i.e. lookup failure must not be cached.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12778
https://github.com/root-project/root/issues/12778:254,Performance,cache,cached,254,"`#include <foo.h>` isn't looked up again after calling `gInterpreter->AddIncludePath()`. We also need a test for a file that gets included, isn't found, is then created by the user, and must then be successfully included (i.e. lookup failure must not be cached.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12778
https://github.com/root-project/root/issues/12778:104,Testability,test,test,104,"`#include <foo.h>` isn't looked up again after calling `gInterpreter->AddIncludePath()`. We also need a test for a file that gets included, isn't found, is then created by the user, and must then be successfully included (i.e. lookup failure must not be cached.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12778
https://github.com/root-project/root/issues/12779:143,Security,Hash,Hashable,143,"### Describe the bug; An interactive ROOT session crashes on definition of a simple C++20 concept, e.g.; ```c++; template <typename T> concept Hashable = requires(T a) {; { std::hash<T>{}(a) } -> std::convertible_to<std::size_t>;; };; ```. For reference, the relevant stack trace frames is provided below.; ```; #5 0x00007f388ee59180 in cling::isDefinition(clang::Decl const*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #6 0x00007f388ee59c60 in cling::DefinitionShadower::invalidatePreviousDefinitions(clang::NamedDecl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #7 0x00007f388ee5b37b in cling::DefinitionShadower::Transform(clang::Decl*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #8 0x00007f388ee509c2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #9 0x00007f388ee50b75 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #10 0x00007f388ee50d41 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #11 0x00007f388ee11089 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #12 0x00007f388ee118ac in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #13 0x00007f388ed6e87c in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #14 0x00007f388ed71e7e in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/jalopezg/CERN/root/_b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12779
https://github.com/root-project/root/issues/12779:178,Security,hash,hash,178,"### Describe the bug; An interactive ROOT session crashes on definition of a simple C++20 concept, e.g.; ```c++; template <typename T> concept Hashable = requires(T a) {; { std::hash<T>{}(a) } -> std::convertible_to<std::size_t>;; };; ```. For reference, the relevant stack trace frames is provided below.; ```; #5 0x00007f388ee59180 in cling::isDefinition(clang::Decl const*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #6 0x00007f388ee59c60 in cling::DefinitionShadower::invalidatePreviousDefinitions(clang::NamedDecl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #7 0x00007f388ee5b37b in cling::DefinitionShadower::Transform(clang::Decl*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #8 0x00007f388ee509c2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #9 0x00007f388ee50b75 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #10 0x00007f388ee50d41 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #11 0x00007f388ee11089 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #12 0x00007f388ee118ac in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #13 0x00007f388ed6e87c in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #14 0x00007f388ed71e7e in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/jalopezg/CERN/root/_b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12779
https://github.com/root-project/root/issues/12779:77,Usability,simpl,simple,77,"### Describe the bug; An interactive ROOT session crashes on definition of a simple C++20 concept, e.g.; ```c++; template <typename T> concept Hashable = requires(T a) {; { std::hash<T>{}(a) } -> std::convertible_to<std::size_t>;; };; ```. For reference, the relevant stack trace frames is provided below.; ```; #5 0x00007f388ee59180 in cling::isDefinition(clang::Decl const*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #6 0x00007f388ee59c60 in cling::DefinitionShadower::invalidatePreviousDefinitions(clang::NamedDecl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #7 0x00007f388ee5b37b in cling::DefinitionShadower::Transform(clang::Decl*) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #8 0x00007f388ee509c2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #9 0x00007f388ee50b75 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #10 0x00007f388ee50d41 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #11 0x00007f388ee11089 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #12 0x00007f388ee118ac in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #13 0x00007f388ed6e87c in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /home/jalopezg/CERN/root/_build.cxx20/lib/libCling.so; #14 0x00007f388ed71e7e in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/jalopezg/CERN/root/_b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12779
https://github.com/root-project/root/pull/12781:300,Deployability,update,update,300,"The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12781
https://github.com/root-project/root/pull/12781:412,Deployability,update,updated,412,"The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12781
https://github.com/root-project/root/pull/12781:325,Testability,test,test,325,"The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12781
https://github.com/root-project/root/pull/12781:382,Testability,test,tested,382,"The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12781
https://github.com/root-project/root/pull/12782:333,Deployability,update,update,333,"This PR is a backport of #12781. The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12782
https://github.com/root-project/root/pull/12782:445,Deployability,update,updated,445,"This PR is a backport of #12781. The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12782
https://github.com/root-project/root/pull/12782:358,Testability,test,test,358,"This PR is a backport of #12781. The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12782
https://github.com/root-project/root/pull/12782:415,Testability,test,tested,415,"This PR is a backport of #12781. The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12782
https://github.com/root-project/root/issues/12783:1969,Availability,error,errors,1969,"asurement meas(name.c_str(), name.c_str());; meas.SetOutputFilePrefix((name + ""/WS"").c_str());; meas.SetPOI(""mu"");; meas.SetLumi(1);; meas.AddConstantParam(""Lumi"");; meas.SetExportOnly(true);; RooStats::HistFactory::Channel chan(""SR"");; chan.SetData("""", """");; RooStats::HistFactory::Sample sample(""samp"");; sample.SetHistoName(""myHist"");; sample.SetInputFile(""myFile.root"");; sample.AddNormFactor(""mu"", 1, 0, 100);; chan.AddSample(sample);; meas.AddChannel(chan);; meas.CollectHistograms();; //if(name == ""ws2""); //delete RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; }; ```; 2. Validate the file sizes:; ```bash; ls -lah ws1 ws2; ```; 4. Try to open the second workspace with any ROOT 6.28 version:; ```bash; root ws2/WS_combined_ws2_model.root -b -q -e ""combined->GetName()""; ```. There will be errors such as:; ```; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 2 of the class RooAbsReal, object skipped at offset 6484979; Error in <TBufferFile::CheckByteCount>: object of class RooAbsReal read too few bytes: 2 instead of 336; ```. ## Information on the origin of the problem. The first bad commit in the 6.26 branch is 00ca5ca9b23f2 from the PR https://github.com/root-project/root/pull/10215.; The comes from a backport of https://github.com/root-project/root/pull/9486 to the 6.26 patch release branch. Before that commit, when you run the reproducer script above, the `ws1` and `ws2` files are compatible:; ```bash; ls -lah ws1 ws2; ```; ```txt; ws1:; total 88K; drwxr-xr-x 2 rembserj rembserj 4.0K May 7 23:31 .; drwxr-xr-x 4 rembserj rembserj 4.0K May 7 23:31 ..; -rw-r--r-- 1 rembserj rembserj 36K May 7 23:31 WS_combined_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 14 May 7 23:31 WS_results.table; -rw-r--r-- 1 rembserj rembserj 34K May 7 23:31 WS_SR_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 423 May 7 23:31 WS_ws1.root. ws2:; total 88K; drwxr-xr-x 2 rembserj rembserj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12783
https://github.com/root-project/root/issues/12783:1991,Availability,Error,Error,1991,"asurement meas(name.c_str(), name.c_str());; meas.SetOutputFilePrefix((name + ""/WS"").c_str());; meas.SetPOI(""mu"");; meas.SetLumi(1);; meas.AddConstantParam(""Lumi"");; meas.SetExportOnly(true);; RooStats::HistFactory::Channel chan(""SR"");; chan.SetData("""", """");; RooStats::HistFactory::Sample sample(""samp"");; sample.SetHistoName(""myHist"");; sample.SetInputFile(""myFile.root"");; sample.AddNormFactor(""mu"", 1, 0, 100);; chan.AddSample(sample);; meas.AddChannel(chan);; meas.CollectHistograms();; //if(name == ""ws2""); //delete RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; }; ```; 2. Validate the file sizes:; ```bash; ls -lah ws1 ws2; ```; 4. Try to open the second workspace with any ROOT 6.28 version:; ```bash; root ws2/WS_combined_ws2_model.root -b -q -e ""combined->GetName()""; ```. There will be errors such as:; ```; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 2 of the class RooAbsReal, object skipped at offset 6484979; Error in <TBufferFile::CheckByteCount>: object of class RooAbsReal read too few bytes: 2 instead of 336; ```. ## Information on the origin of the problem. The first bad commit in the 6.26 branch is 00ca5ca9b23f2 from the PR https://github.com/root-project/root/pull/10215.; The comes from a backport of https://github.com/root-project/root/pull/9486 to the 6.26 patch release branch. Before that commit, when you run the reproducer script above, the `ws1` and `ws2` files are compatible:; ```bash; ls -lah ws1 ws2; ```; ```txt; ws1:; total 88K; drwxr-xr-x 2 rembserj rembserj 4.0K May 7 23:31 .; drwxr-xr-x 4 rembserj rembserj 4.0K May 7 23:31 ..; -rw-r--r-- 1 rembserj rembserj 36K May 7 23:31 WS_combined_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 14 May 7 23:31 WS_results.table; -rw-r--r-- 1 rembserj rembserj 34K May 7 23:31 WS_SR_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 423 May 7 23:31 WS_ws1.root. ws2:; total 88K; drwxr-xr-x 2 rembserj rembserj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12783
https://github.com/root-project/root/issues/12783:2137,Availability,Error,Error,2137,"asurement meas(name.c_str(), name.c_str());; meas.SetOutputFilePrefix((name + ""/WS"").c_str());; meas.SetPOI(""mu"");; meas.SetLumi(1);; meas.AddConstantParam(""Lumi"");; meas.SetExportOnly(true);; RooStats::HistFactory::Channel chan(""SR"");; chan.SetData("""", """");; RooStats::HistFactory::Sample sample(""samp"");; sample.SetHistoName(""myHist"");; sample.SetInputFile(""myFile.root"");; sample.AddNormFactor(""mu"", 1, 0, 100);; chan.AddSample(sample);; meas.AddChannel(chan);; meas.CollectHistograms();; //if(name == ""ws2""); //delete RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; }; ```; 2. Validate the file sizes:; ```bash; ls -lah ws1 ws2; ```; 4. Try to open the second workspace with any ROOT 6.28 version:; ```bash; root ws2/WS_combined_ws2_model.root -b -q -e ""combined->GetName()""; ```. There will be errors such as:; ```; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 2 of the class RooAbsReal, object skipped at offset 6484979; Error in <TBufferFile::CheckByteCount>: object of class RooAbsReal read too few bytes: 2 instead of 336; ```. ## Information on the origin of the problem. The first bad commit in the 6.26 branch is 00ca5ca9b23f2 from the PR https://github.com/root-project/root/pull/10215.; The comes from a backport of https://github.com/root-project/root/pull/9486 to the 6.26 patch release branch. Before that commit, when you run the reproducer script above, the `ws1` and `ws2` files are compatible:; ```bash; ls -lah ws1 ws2; ```; ```txt; ws1:; total 88K; drwxr-xr-x 2 rembserj rembserj 4.0K May 7 23:31 .; drwxr-xr-x 4 rembserj rembserj 4.0K May 7 23:31 ..; -rw-r--r-- 1 rembserj rembserj 36K May 7 23:31 WS_combined_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 14 May 7 23:31 WS_results.table; -rw-r--r-- 1 rembserj rembserj 34K May 7 23:31 WS_SR_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 423 May 7 23:31 WS_ws1.root. ws2:; total 88K; drwxr-xr-x 2 rembserj rembserj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12783
https://github.com/root-project/root/issues/12783:2499,Deployability,patch,patch,2499," 100);; chan.AddSample(sample);; meas.AddChannel(chan);; meas.CollectHistograms();; //if(name == ""ws2""); //delete RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; }; ```; 2. Validate the file sizes:; ```bash; ls -lah ws1 ws2; ```; 4. Try to open the second workspace with any ROOT 6.28 version:; ```bash; root ws2/WS_combined_ws2_model.root -b -q -e ""combined->GetName()""; ```. There will be errors such as:; ```; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 2 of the class RooAbsReal, object skipped at offset 6484979; Error in <TBufferFile::CheckByteCount>: object of class RooAbsReal read too few bytes: 2 instead of 336; ```. ## Information on the origin of the problem. The first bad commit in the 6.26 branch is 00ca5ca9b23f2 from the PR https://github.com/root-project/root/pull/10215.; The comes from a backport of https://github.com/root-project/root/pull/9486 to the 6.26 patch release branch. Before that commit, when you run the reproducer script above, the `ws1` and `ws2` files are compatible:; ```bash; ls -lah ws1 ws2; ```; ```txt; ws1:; total 88K; drwxr-xr-x 2 rembserj rembserj 4.0K May 7 23:31 .; drwxr-xr-x 4 rembserj rembserj 4.0K May 7 23:31 ..; -rw-r--r-- 1 rembserj rembserj 36K May 7 23:31 WS_combined_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 14 May 7 23:31 WS_results.table; -rw-r--r-- 1 rembserj rembserj 34K May 7 23:31 WS_SR_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 423 May 7 23:31 WS_ws1.root. ws2:; total 88K; drwxr-xr-x 2 rembserj rembserj 4.0K May 7 23:31 .; drwxr-xr-x 4 rembserj rembserj 4.0K May 7 23:31 ..; -rw-r--r-- 1 rembserj rembserj 36K May 7 23:31 WS_combined_ws2_model.root; -rw-r--r-- 1 rembserj rembserj 14 May 7 23:31 WS_results.table; -rw-r--r-- 1 rembserj rembserj 34K May 7 23:31 WS_SR_ws2_model.root; -rw-r--r-- 1 rembserj rembserj 423 May 7 23:31 WS_ws2.root; ```. from 00ca5ca9b23f2 onward, the second workspace files are smal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12783
https://github.com/root-project/root/issues/12783:2505,Deployability,release,release,2505," 100);; chan.AddSample(sample);; meas.AddChannel(chan);; meas.CollectHistograms();; //if(name == ""ws2""); //delete RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; }; ```; 2. Validate the file sizes:; ```bash; ls -lah ws1 ws2; ```; 4. Try to open the second workspace with any ROOT 6.28 version:; ```bash; root ws2/WS_combined_ws2_model.root -b -q -e ""combined->GetName()""; ```. There will be errors such as:; ```; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 2 of the class RooAbsReal, object skipped at offset 6484979; Error in <TBufferFile::CheckByteCount>: object of class RooAbsReal read too few bytes: 2 instead of 336; ```. ## Information on the origin of the problem. The first bad commit in the 6.26 branch is 00ca5ca9b23f2 from the PR https://github.com/root-project/root/pull/10215.; The comes from a backport of https://github.com/root-project/root/pull/9486 to the 6.26 patch release branch. Before that commit, when you run the reproducer script above, the `ws1` and `ws2` files are compatible:; ```bash; ls -lah ws1 ws2; ```; ```txt; ws1:; total 88K; drwxr-xr-x 2 rembserj rembserj 4.0K May 7 23:31 .; drwxr-xr-x 4 rembserj rembserj 4.0K May 7 23:31 ..; -rw-r--r-- 1 rembserj rembserj 36K May 7 23:31 WS_combined_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 14 May 7 23:31 WS_results.table; -rw-r--r-- 1 rembserj rembserj 34K May 7 23:31 WS_SR_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 423 May 7 23:31 WS_ws1.root. ws2:; total 88K; drwxr-xr-x 2 rembserj rembserj 4.0K May 7 23:31 .; drwxr-xr-x 4 rembserj rembserj 4.0K May 7 23:31 ..; -rw-r--r-- 1 rembserj rembserj 36K May 7 23:31 WS_combined_ws2_model.root; -rw-r--r-- 1 rembserj rembserj 14 May 7 23:31 WS_results.table; -rw-r--r-- 1 rembserj rembserj 34K May 7 23:31 WS_SR_ws2_model.root; -rw-r--r-- 1 rembserj rembserj 423 May 7 23:31 WS_ws2.root; ```. from 00ca5ca9b23f2 onward, the second workspace files are smal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12783
https://github.com/root-project/root/issues/12783:1751,Security,Validat,Validate,1751,"ue could fix these problems. ## To reproduce. 1. Run the following script with ROOT 6.26.02 (or any newer 6.26 commit):; ```c++; {; TFile f(""myFile.root"", ""RECREATE"");; TH1D h(""myHist"", """", 10, 0, 10);; h.Write();; }; std::vector<std::string> names = {""ws1"", ""ws2""};; for (auto name : names) {; RooStats::HistFactory::Measurement meas(name.c_str(), name.c_str());; meas.SetOutputFilePrefix((name + ""/WS"").c_str());; meas.SetPOI(""mu"");; meas.SetLumi(1);; meas.AddConstantParam(""Lumi"");; meas.SetExportOnly(true);; RooStats::HistFactory::Channel chan(""SR"");; chan.SetData("""", """");; RooStats::HistFactory::Sample sample(""samp"");; sample.SetHistoName(""myHist"");; sample.SetInputFile(""myFile.root"");; sample.AddNormFactor(""mu"", 1, 0, 100);; chan.AddSample(sample);; meas.AddChannel(chan);; meas.CollectHistograms();; //if(name == ""ws2""); //delete RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; }; ```; 2. Validate the file sizes:; ```bash; ls -lah ws1 ws2; ```; 4. Try to open the second workspace with any ROOT 6.28 version:; ```bash; root ws2/WS_combined_ws2_model.root -b -q -e ""combined->GetName()""; ```. There will be errors such as:; ```; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 2 of the class RooAbsReal, object skipped at offset 6484979; Error in <TBufferFile::CheckByteCount>: object of class RooAbsReal read too few bytes: 2 instead of 336; ```. ## Information on the origin of the problem. The first bad commit in the 6.26 branch is 00ca5ca9b23f2 from the PR https://github.com/root-project/root/pull/10215.; The comes from a backport of https://github.com/root-project/root/pull/9486 to the 6.26 patch release branch. Before that commit, when you run the reproducer script above, the `ws1` and `ws2` files are compatible:; ```bash; ls -lah ws1 ws2; ```; ```txt; ws1:; total 88K; drwxr-xr-x 2 rembserj rembserj 4.0K May 7 23:31 .; drwxr-xr-x 4 rembserj rembserj 4.0K May 7 23:31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12783
https://github.com/root-project/root/pull/12785:246,Availability,failure,failures,246,"This pull request fixes an issue introduced accidentally in PR #12751. In particular, the `.exe` suffix is not expected in non-Windows builds. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes some failures seen in the nightly builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12785
https://github.com/root-project/root/pull/12785:194,Deployability,update,updated,194,"This pull request fixes an issue introduced accidentally in PR #12751. In particular, the `.exe` suffix is not expected in non-Windows builds. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes some failures seen in the nightly builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12785
https://github.com/root-project/root/pull/12785:164,Testability,test,tested,164,"This pull request fixes an issue introduced accidentally in PR #12751. In particular, the `.exe` suffix is not expected in non-Windows builds. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes some failures seen in the nightly builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12785
https://github.com/root-project/root/issues/12786:169,Availability,error,error,169,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12786
https://github.com/root-project/root/issues/12786:1021,Availability,error,error,1021,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12786
https://github.com/root-project/root/issues/12786:420,Modifiability,config,config,420,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12786
https://github.com/root-project/root/issues/12786:508,Modifiability,config,config,508,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12786
https://github.com/root-project/root/issues/12786:453,Testability,Test,Test,453,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12786
https://github.com/root-project/root/issues/12786:467,Testability,Test,TestAnalysis,467,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12786
https://github.com/root-project/root/issues/12786:493,Testability,Test,Test,493,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12786
https://github.com/root-project/root/issues/12786:568,Testability,Test,Test,568,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12786
https://github.com/root-project/root/issues/12786:234,Usability,clear,clear,234,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12786
https://github.com/root-project/root/issues/12787:935,Availability,down,download,935,"- [x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:7266,Availability,fault,fault,7266,ualPadEditor.h TVirtualPad.h TVirtualPadPainter.h TVirtualPerfStats.h TVirtualPS.h TVirtualQConnection.h TVirtualRWMutex.h TVirtualTableInterface.h TVirtualViewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/mkrzewic/src/root_src/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:32925: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:7350,Availability,Error,Error,7350,ualPadEditor.h TVirtualPad.h TVirtualPadPainter.h TVirtualPerfStats.h TVirtualPS.h TVirtualQConnection.h TVirtualRWMutex.h TVirtualTableInterface.h TVirtualViewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/mkrzewic/src/root_src/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:32925: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:7435,Availability,Error,Error,7435,ualPadEditor.h TVirtualPad.h TVirtualPadPainter.h TVirtualPerfStats.h TVirtualPS.h TVirtualQConnection.h TVirtualRWMutex.h TVirtualTableInterface.h TVirtualViewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/mkrzewic/src/root_src/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:32925: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:7475,Availability,Error,Error,7475,ualPadEditor.h TVirtualPad.h TVirtualPadPainter.h TVirtualPerfStats.h TVirtualPS.h TVirtualQConnection.h TVirtualRWMutex.h TVirtualTableInterface.h TVirtualViewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/mkrzewic/src/root_src/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:32925: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:917,Deployability,install,install,917,"- [x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:1015,Deployability,RELEASE,RELEASE,1015,"icates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSigna",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:1061,Deployability,install,installed,1061,"GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:1208,Deployability,install,installs,1208,"u find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x000000000446eba6 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000826961b60 (/lib/libthr.so.3+0x19b60); #4 0x000000082696111f (/lib/libthr.so.3+0x1911f); #5 0x00007ffffffff8a3 ([vdso]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:1575,Deployability,patch,patches,1575,"ast a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x000000000446eba6 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000826961b60 (/lib/libthr.so.3+0x19b60); #4 0x000000082696111f (/lib/libthr.so.3+0x1911f); #5 0x00007ffffffff8a3 ([vdso]+0x2d3); #6 0x000000082da5f7b4 strlen (/lib/libc.so.7+0x1587b4); #7 0x00000000016482c9 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<std::nullptr_t>(char const*) rootcling_stage1.cxx:0:0; #8 0x0000000001648213 GetEtcDir() rootcling_stage1.cxx:0:0; #9 0x00000000016b2792 RootClingMain(int, cha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:1660,Deployability,release,releases,1660,"uired input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x000000000446eba6 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000826961b60 (/lib/libthr.so.3+0x19b60); #4 0x000000082696111f (/lib/libthr.so.3+0x1911f); #5 0x00007ffffffff8a3 ([vdso]+0x2d3); #6 0x000000082da5f7b4 strlen (/lib/libc.so.7+0x1587b4); #7 0x00000000016482c9 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<std::nullptr_t>(char const*) rootcling_stage1.cxx:0:0; #8 0x0000000001648213 GetEtcDir() rootcling_stage1.cxx:0:0; #9 0x00000000016b2792 RootClingMain(int, char**, bool) (/home/mkrzewic/src/root_build/core/rootcling_stage1/src/rootcling_stage1+0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:1048,Integrability,depend,dependencies,1048,"GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:1420,Integrability,depend,dependencies,1420,"## Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x000000000446eba6 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000826961b60 (/lib/libthr.so.3+0x19b60); #4 0x000000082696111f (/lib/libthr.so.3+0x1911f); #5 0x00007ffffffff8a3 ([vdso]+0x2d3); #6 0x000000082da5f7b4 strlen (/lib/libc.so.7+0x1587b4); #7 0x00000000016482c9 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:4525,Integrability,Message,MessageTypes,4525,de -compilerI/usr/lib/clang/14.0.5/include -compilerI/usr/include -I/home/mkrzewic/src/root_build/include -I/home/mkrzewic/src/root_build/ginclude -I/home/mkrzewic/src/root_src/core/base/inc -I/home/mkrzewic/src/root_src/core/foundation/inc -I/home/mkrzewic/src/root_src/core/cont/inc -I/home/mkrzewic/src/root_src/core/gui/inc -I/home/mkrzewic/src/root_src/core/meta/inc -I/home/mkrzewic/src/root_src/core/clib/inc -I/home/mkrzewic/src/root_src/core/rint/inc -I/home/mkrzewic/src/root_src/core/zip/inc -I/home/mkrzewic/src/root_src/core/thread/inc -I/home/mkrzewic/src/root_src/core/textinput/inc -I/home/mkrzewic/src/root_src/core/clingutils/inc -I/home/mkrzewic/src/root_src/core/base/v7/inc -I/home/mkrzewic/src/root_src/core/foundation/v7/inc -I/home/mkrzewic/src/root_src/core/unix/inc -I/usr/local/include -I/home/mkrzewic/src/root_src/builtins/xxhash -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:1294,Testability,test,test,1294,"u find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x000000000446eba6 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000826961b60 (/lib/libthr.so.3+0x19b60); #4 0x000000082696111f (/lib/libthr.so.3+0x1911f); #5 0x00007ffffffff8a3 ([vdso]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12787:816,Usability,guid,guide,816,"- [x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12787
https://github.com/root-project/root/issues/12788:192,Availability,error,error,192,On macOS 13.3 Xcode 14 we get; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: error: 'std::reverse_iterator<unsigned long long *>::operator->' from module 'std.iterator.__iterator.reverse_iterator' is not present in definition of 'std::reverse_iterator<unsigned long long *>' in module 'std.iterator.__iterator.reverse_iterator'; constexpr pointer operator->() const; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: note: declaration of 'operator->' does not match; ```; when generating `./tree/ntupleutil/G__ROOTNTupleUtil.cxx` yet the exit code is 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12788
https://github.com/root-project/root/pull/12789:253,Performance,load,loaded,253,"With previous chrome it was possible to launch it as fork of main root process. With very recent chrome it is no longer possible. Therefore use exec instead. Moreover, one need to add artificial `--dump-dom >/dev/null` to really let chrome wait for not-loaded `root_batch_holder.js` script while headless session is running. Should fix problem with `macphsft26` and latest OpenSUSE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12789
https://github.com/root-project/root/pull/12791:253,Performance,load,loaded,253,"With previous chrome it was possible to launch it as fork of main root process. With very recent chrome it is no longer possible. Therefore use exec instead. Moreover, one need to add artificial `--dump-dom >/dev/null` to really let chrome wait for not-loaded `root_batch_holder.js` script while headless session is running. Should fix problem with `macphsft26` and latest OpenSUSE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12791
https://github.com/root-project/root/pull/12792:117,Security,expose,expose,117,"The feature test `__cpp_lib_three_way_comparison` is for library support of the three-way comparison. libc++ doesn't expose this yet, presumably because the operator has not been added yet for all classes. However, some classes already use it, which requires us to implement the operator as discussed in https://github.com/root-project/root/pull/12525.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12792
https://github.com/root-project/root/pull/12792:12,Testability,test,test,12,"The feature test `__cpp_lib_three_way_comparison` is for library support of the three-way comparison. libc++ doesn't expose this yet, presumably because the operator has not been added yet for all classes. However, some classes already use it, which requires us to implement the operator as discussed in https://github.com/root-project/root/pull/12525.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12792
https://github.com/root-project/root/pull/12793:332,Availability,error,error,332,"Since adding `bits/utility.h` in commit e9a8c48e4f, a C++14 build with GCC 12 (and potentially also other compiler versions) failed with; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:38:; /opt/gcc/12.2.0/include/c++/12.2.0/functional:337:35: error: missing '#include <bits/utility.h>'; 'tuple_size' must be declared before it is used; = typename enable_if<(__i < tuple_size<_Tuple>::value),; ^; /opt/gcc/12.2.0/include/c++/12.2.0/bits/utility.h:49:12: note: declaration here is not visible; struct tuple_size;; ^; ```. Apparently, once the module is declared, it must also be enabled for C++14 and not restricted with `cplusplus17`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12793
https://github.com/root-project/root/pull/12796:41,Security,Hash,Hash,41,All derived classes should also redefine Hash and call recursive remove,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12796
https://github.com/root-project/root/pull/12797:50,Modifiability,plugin,plugin,50,1. Using latest libpng; 2. Redefine Hash in image plugin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12797
https://github.com/root-project/root/pull/12797:36,Security,Hash,Hash,36,1. Using latest libpng; 2. Redefine Hash in image plugin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12797
https://github.com/root-project/root/pull/12798:9,Energy Efficiency,reduce,reduce,9,Also fix/reduce library dependency for libRHTTP. Resolves #12766,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12798
https://github.com/root-project/root/pull/12798:24,Integrability,depend,dependency,24,Also fix/reduce library dependency for libRHTTP. Resolves #12766,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12798
https://github.com/root-project/root/pull/12800:49,Availability,down,down,49,This is the continuation of the campaign to slim down the public RooFit interface:. 1. Remove deprecated `RooCatType`; 2. Make `RooGenProdProj` private; 3. Get rid of `RooScaledFunc`.; 4. Remove RooAbsRootFinder; 5. Remove deprecated RooAbsString; 6. Remove internal `RooFormula` from public RooFit interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12800
https://github.com/root-project/root/pull/12800:72,Integrability,interface,interface,72,This is the continuation of the campaign to slim down the public RooFit interface:. 1. Remove deprecated `RooCatType`; 2. Make `RooGenProdProj` private; 3. Get rid of `RooScaledFunc`.; 4. Remove RooAbsRootFinder; 5. Remove deprecated RooAbsString; 6. Remove internal `RooFormula` from public RooFit interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12800
https://github.com/root-project/root/pull/12800:299,Integrability,interface,interface,299,This is the continuation of the campaign to slim down the public RooFit interface:. 1. Remove deprecated `RooCatType`; 2. Make `RooGenProdProj` private; 3. Get rid of `RooScaledFunc`.; 4. Remove RooAbsRootFinder; 5. Remove deprecated RooAbsString; 6. Remove internal `RooFormula` from public RooFit interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12800
https://github.com/root-project/root/issues/12801:47,Performance,load,load-library-,47,See https://root-forum.cern.ch/t/rootlogon-c-r-load-library-mca8000a-cxx/50565,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12801
https://github.com/root-project/root/pull/12803:115,Security,expose,expose,115,"The feature test __cpp_lib_three_way_comparison is for library support of the three-way comparison. libc++ doesn't expose this yet, presumably because the operator has not been added yet for all classes. However, some classes already use it, which requires us to implement the operator as discussed in https://github.com/root-project/root/pull/12525. (cherry picked from commit b85231d2ad62645f0fe7291a64284f61bb8a83c2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12803
https://github.com/root-project/root/pull/12803:12,Testability,test,test,12,"The feature test __cpp_lib_three_way_comparison is for library support of the three-way comparison. libc++ doesn't expose this yet, presumably because the operator has not been added yet for all classes. However, some classes already use it, which requires us to implement the operator as discussed in https://github.com/root-project/root/pull/12525. (cherry picked from commit b85231d2ad62645f0fe7291a64284f61bb8a83c2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12803
https://github.com/root-project/root/pull/12809:201,Testability,test,test,201,"I discovered that RooDataSets that contain RooStringVar aren't cloneable, because the SetBranchAddress method of TTree expects the address of a string pointer, not the address of the string. I added a test that would crash before I implemented the fix in RooStringVar. Should be backported to 6.28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12809
https://github.com/root-project/root/pull/12811:563,Availability,error,error,563,"This is a partial backport of the changes to `isSameEntity` from commit https://github.com/llvm/llvm-project/commit/2408f97652caadf733a879e1d7d9c0702a80d609 (which lives in a different file in LLVM 13 and was moved to `ASTContext` at a later point). The gist of the change is that during template instantiation, the constraint / requires clause also gets instantiated and potentially changed. This means that if a function with constraints is used in one module, but included as-is in another, the two of them could not be merged. This change fixes the following error seen on macOS 13 with C++20:; ```; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: error: 'std::reverse_iterator<std::string *>::operator->' from module 'std.iterator.__iterator.reverse_iterator' is not present in definition of 'std::reverse_iterator<std::string *>' in module 'std.iterator.__iterator.reverse_iterator'; constexpr pointer operator->() const; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: note: declaration of 'operator->' does not match; ```. Note that this particular code was recently reverted in commit https://github.com/llvm/llvm-project/commit/aeee4ebd689171c963aa5d973e14cb6e731eb147 However, as far as I can tell, this relies on the implementation of deferred concept instantiation which solves the problem from a different angle, but cannot be easily backported to our copy of LLVM: https://github.com/llvm/llvm-project/commit/babdef27c503c0bbbcc017e9f88affddda90ea4e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12811
https://github.com/root-project/root/pull/12811:713,Availability,error,error,713,"This is a partial backport of the changes to `isSameEntity` from commit https://github.com/llvm/llvm-project/commit/2408f97652caadf733a879e1d7d9c0702a80d609 (which lives in a different file in LLVM 13 and was moved to `ASTContext` at a later point). The gist of the change is that during template instantiation, the constraint / requires clause also gets instantiated and potentially changed. This means that if a function with constraints is used in one module, but included as-is in another, the two of them could not be merged. This change fixes the following error seen on macOS 13 with C++20:; ```; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: error: 'std::reverse_iterator<std::string *>::operator->' from module 'std.iterator.__iterator.reverse_iterator' is not present in definition of 'std::reverse_iterator<std::string *>' in module 'std.iterator.__iterator.reverse_iterator'; constexpr pointer operator->() const; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: note: declaration of 'operator->' does not match; ```. Note that this particular code was recently reverted in commit https://github.com/llvm/llvm-project/commit/aeee4ebd689171c963aa5d973e14cb6e731eb147 However, as far as I can tell, this relies on the implementation of deferred concept instantiation which solves the problem from a different angle, but cannot be easily backported to our copy of LLVM: https://github.com/llvm/llvm-project/commit/babdef27c503c0bbbcc017e9f88affddda90ea4e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12811
https://github.com/root-project/root/pull/12812:303,Deployability,update,updated,303,"Even if the test collection comment is conveying it, it's important to make those platforms fail that have failing tests, for visibility reasons. This fixes https://github.com/root-project/root/issues/12307. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12812
https://github.com/root-project/root/pull/12812:12,Testability,test,test,12,"Even if the test collection comment is conveying it, it's important to make those platforms fail that have failing tests, for visibility reasons. This fixes https://github.com/root-project/root/issues/12307. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12812
https://github.com/root-project/root/pull/12812:115,Testability,test,tests,115,"Even if the test collection comment is conveying it, it's important to make those platforms fail that have failing tests, for visibility reasons. This fixes https://github.com/root-project/root/issues/12307. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12812
https://github.com/root-project/root/pull/12812:273,Testability,test,tested,273,"Even if the test collection comment is conveying it, it's important to make those platforms fail that have failing tests, for visibility reasons. This fixes https://github.com/root-project/root/issues/12307. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12812
https://github.com/root-project/root/pull/12815:468,Security,access,accessed,468,"Provides support for both 32bit and 64bit cardinality fields. This has no implication on the width of the on-disk offsets but the cardinality field width (32bit or 64bit) is for the width of the collection sizes that are computed from the offsets. For converted TTree files with leaf count arrays, 32bit widths cardinality fields must be used because the count leaf is 32bit. This makes sure that the (projected) leaf count field in the RNTuple (e.g., `nJets`) can be accessed with the same type than the TTree branch, e.g. in RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12815
https://github.com/root-project/root/issues/12817:345,Availability,error,errors,345,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12817
https://github.com/root-project/root/issues/12817:384,Availability,error,error,384,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12817
https://github.com/root-project/root/issues/12817:415,Availability,Error,Error,415,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12817
https://github.com/root-project/root/issues/12817:579,Availability,error,error,579,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12817
https://github.com/root-project/root/issues/12817:610,Availability,Error,Error,610,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12817
https://github.com/root-project/root/issues/12817:774,Availability,error,error,774,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12817
https://github.com/root-project/root/issues/12817:255,Deployability,patch,patches,255,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12817
https://github.com/root-project/root/issues/12817:931,Deployability,release,releases,931,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12817
https://github.com/root-project/root/issues/12817:398,Energy Efficiency,allocate,allocate,398,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12817
https://github.com/root-project/root/issues/12817:593,Energy Efficiency,allocate,allocate,593,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12817
https://github.com/root-project/root/issues/12817:788,Energy Efficiency,allocate,allocate,788,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12817
https://github.com/root-project/root/pull/12819:128,Availability,avail,available,128,This Pull request updates the ROOT::Math::Minimizer reference documentation and adds the list of all Minimizer plugins that are available in ROOT. . This PR fixes the JIRA issue [3452](https://sft.its.cern.ch/jira/browse/ROOT-3452),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12819
https://github.com/root-project/root/pull/12819:18,Deployability,update,updates,18,This Pull request updates the ROOT::Math::Minimizer reference documentation and adds the list of all Minimizer plugins that are available in ROOT. . This PR fixes the JIRA issue [3452](https://sft.its.cern.ch/jira/browse/ROOT-3452),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12819
https://github.com/root-project/root/pull/12819:111,Modifiability,plugin,plugins,111,This Pull request updates the ROOT::Math::Minimizer reference documentation and adds the list of all Minimizer plugins that are available in ROOT. . This PR fixes the JIRA issue [3452](https://sft.its.cern.ch/jira/browse/ROOT-3452),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12819
https://github.com/root-project/root/issues/12820:173,Availability,error,error,173,"At the very end of the build, there is a problem with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12820
https://github.com/root-project/root/issues/12820:287,Availability,Error,Error,287,"At the very end of the build, there is a problem with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12820
https://github.com/root-project/root/issues/12820:347,Availability,Error,Error,347,"At the very end of the build, there is a problem with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12820
https://github.com/root-project/root/issues/12820:372,Availability,Error,Error,372,"At the very end of the build, there is a problem with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12820
https://github.com/root-project/root/issues/12820:1927,Availability,down,download,1927,"m with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12820
https://github.com/root-project/root/issues/12820:1909,Deployability,install,install,1909,"m with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12820
https://github.com/root-project/root/issues/12820:1366,Usability,clear,clear,1366,"m with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12820
https://github.com/root-project/root/issues/12820:1464,Usability,clear,clear,1464,"m with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12820
https://github.com/root-project/root/pull/12822:63,Availability,error,error,63,Commit c8c0ea7c59 made the step and job fail in case of a test error. We still want the results to be uploaded to show them on GitHub.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12822
https://github.com/root-project/root/pull/12822:58,Testability,test,test,58,Commit c8c0ea7c59 made the step and job fail in case of a test error. We still want the results to be uploaded to show them on GitHub.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12822
https://github.com/root-project/root/pull/12823:257,Deployability,update,updated,257,"now that failed roottest causes the ROOT CI workflow to fail, reporing needs to happen also if the workflow failed, otherwise only successful tests are reported. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12823
https://github.com/root-project/root/pull/12823:142,Testability,test,tests,142,"now that failed roottest causes the ROOT CI workflow to fail, reporing needs to happen also if the workflow failed, otherwise only successful tests are reported. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12823
https://github.com/root-project/root/pull/12823:227,Testability,test,tested,227,"now that failed roottest causes the ROOT CI workflow to fail, reporing needs to happen also if the workflow failed, otherwise only successful tests are reported. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12823
https://github.com/root-project/root/pull/12824:417,Deployability,update,updated,417,"In the `RPageStorage` destructor: wait for unterminated tasks, if any, as they may still hold a reference to `this`. This is known to happen, e.g. in `RPageSinkBuf` if `CommitClusterImpl()` is not called after committing some pages via `CommitPageImpl()` and the `RPageSinkBuf` is immediately destructed. This fixes the ntuple_extended:`RNTuple.SmallClusters` test. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12824
https://github.com/root-project/root/pull/12824:360,Testability,test,test,360,"In the `RPageStorage` destructor: wait for unterminated tasks, if any, as they may still hold a reference to `this`. This is known to happen, e.g. in `RPageSinkBuf` if `CommitClusterImpl()` is not called after committing some pages via `CommitPageImpl()` and the `RPageSinkBuf` is immediately destructed. This fixes the ntuple_extended:`RNTuple.SmallClusters` test. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12824
https://github.com/root-project/root/pull/12824:387,Testability,test,tested,387,"In the `RPageStorage` destructor: wait for unterminated tasks, if any, as they may still hold a reference to `this`. This is known to happen, e.g. in `RPageSinkBuf` if `CommitClusterImpl()` is not called after committing some pages via `CommitPageImpl()` and the `RPageSinkBuf` is immediately destructed. This fixes the ntuple_extended:`RNTuple.SmallClusters` test. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12824
https://github.com/root-project/root/pull/12826:1273,Availability,error,errors,1273,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12826:108,Integrability,interface,interface,108,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12826:257,Integrability,interface,interface,257,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12826:378,Integrability,depend,depends,378,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12826:494,Integrability,interface,interface,494,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12826:568,Integrability,depend,dependents,568,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12826:351,Modifiability,variab,variables,351,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12826:518,Modifiability,variab,variables,518,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12826:740,Modifiability,variab,variables,740,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12826:767,Modifiability,variab,variables,767,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12826:271,Security,access,access,271,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12826:832,Security,access,access,832,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12826
https://github.com/root-project/root/pull/12827:103,Deployability,release,release,103,The alias was deprecated with `numpy-1.20` and now expired in `numpy-1.24`:; https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations; https://numpy.org/devdocs/release/1.24.0-notes.html#expired-deprecations. This change also works with older versions (tested with `numpy-1.19`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12827
https://github.com/root-project/root/pull/12827:169,Deployability,release,release,169,The alias was deprecated with `numpy-1.20` and now expired in `numpy-1.24`:; https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations; https://numpy.org/devdocs/release/1.24.0-notes.html#expired-deprecations. This change also works with older versions (tested with `numpy-1.19`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12827
https://github.com/root-project/root/pull/12827:261,Testability,test,tested,261,The alias was deprecated with `numpy-1.20` and now expired in `numpy-1.24`:; https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations; https://numpy.org/devdocs/release/1.24.0-notes.html#expired-deprecations. This change also works with older versions (tested with `numpy-1.19`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12827
https://github.com/root-project/root/issues/12828:552,Deployability,configurat,configurations,552,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12828
https://github.com/root-project/root/issues/12828:1000,Deployability,install,install,1000,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12828
https://github.com/root-project/root/issues/12828:552,Modifiability,config,configurations,552,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12828
https://github.com/root-project/root/issues/12828:32,Testability,Test,TestSupport,32,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12828
https://github.com/root-project/root/issues/12828:128,Testability,test,tests,128,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12828
https://github.com/root-project/root/issues/12828:150,Testability,test,test,150,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12828
https://github.com/root-project/root/issues/12828:192,Testability,test,test,192,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12828
https://github.com/root-project/root/issues/12828:314,Testability,Test,TestSupport,314,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12828
https://github.com/root-project/root/issues/12828:427,Testability,test,test,427,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12828
https://github.com/root-project/root/issues/12828:695,Testability,Test,TestSupport,695,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12828
https://github.com/root-project/root/issues/12828:1088,Testability,Test,TestSupport,1088,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12828
https://github.com/root-project/root/pull/12829:60,Availability,error,error,60,"* Protect `EnableImplicitMT()` with `R__USE_IMT`.; * Expect error about non existent file in `readspeed` test. Those should have been caught by the `TestSupport` library, but that one doesn't work at the moment (see https://github.com/root-project/root/issues/12828).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12829
https://github.com/root-project/root/pull/12829:105,Testability,test,test,105,"* Protect `EnableImplicitMT()` with `R__USE_IMT`.; * Expect error about non existent file in `readspeed` test. Those should have been caught by the `TestSupport` library, but that one doesn't work at the moment (see https://github.com/root-project/root/issues/12828).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12829
https://github.com/root-project/root/pull/12829:149,Testability,Test,TestSupport,149,"* Protect `EnableImplicitMT()` with `R__USE_IMT`.; * Expect error about non existent file in `readspeed` test. Those should have been caught by the `TestSupport` library, but that one doesn't work at the moment (see https://github.com/root-project/root/issues/12828).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12829
https://github.com/root-project/root/pull/12830:57,Testability,test,testing,57,"We want to upload any successful build, even if it fails testing (which makes the step and job fail since commit c8c0ea7c59).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12830
https://github.com/root-project/root/pull/12831:158,Deployability,update,updated,158,This reverts commit 0363aed.; Use llvm-upstream commit instead!# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12831
https://github.com/root-project/root/pull/12831:128,Testability,test,tested,128,This reverts commit 0363aed.; Use llvm-upstream commit instead!# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12831
https://github.com/root-project/root/issues/12832:461,Availability,error,errors,461,"Following #12389, we should also change the `EXPECT_EQ`s in the two `EventSections` test cases in `testRooAbsL` to `EXPECT_DOUBLE_EQ`. The same explanation as for that case applies to them and should be added as a comment to the tests:. ```; // We cannot EXPECT_EQ in this test, because we compare actually different; // calculations. The multiple additions and FMA operations involved in the; // calculation of the multiple parts introduces different rounding errors; // on the CPU level than the single calculation over all events at once.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12832
https://github.com/root-project/root/issues/12832:84,Testability,test,test,84,"Following #12389, we should also change the `EXPECT_EQ`s in the two `EventSections` test cases in `testRooAbsL` to `EXPECT_DOUBLE_EQ`. The same explanation as for that case applies to them and should be added as a comment to the tests:. ```; // We cannot EXPECT_EQ in this test, because we compare actually different; // calculations. The multiple additions and FMA operations involved in the; // calculation of the multiple parts introduces different rounding errors; // on the CPU level than the single calculation over all events at once.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12832
https://github.com/root-project/root/issues/12832:99,Testability,test,testRooAbsL,99,"Following #12389, we should also change the `EXPECT_EQ`s in the two `EventSections` test cases in `testRooAbsL` to `EXPECT_DOUBLE_EQ`. The same explanation as for that case applies to them and should be added as a comment to the tests:. ```; // We cannot EXPECT_EQ in this test, because we compare actually different; // calculations. The multiple additions and FMA operations involved in the; // calculation of the multiple parts introduces different rounding errors; // on the CPU level than the single calculation over all events at once.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12832
https://github.com/root-project/root/issues/12832:229,Testability,test,tests,229,"Following #12389, we should also change the `EXPECT_EQ`s in the two `EventSections` test cases in `testRooAbsL` to `EXPECT_DOUBLE_EQ`. The same explanation as for that case applies to them and should be added as a comment to the tests:. ```; // We cannot EXPECT_EQ in this test, because we compare actually different; // calculations. The multiple additions and FMA operations involved in the; // calculation of the multiple parts introduces different rounding errors; // on the CPU level than the single calculation over all events at once.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12832
https://github.com/root-project/root/issues/12832:273,Testability,test,test,273,"Following #12389, we should also change the `EXPECT_EQ`s in the two `EventSections` test cases in `testRooAbsL` to `EXPECT_DOUBLE_EQ`. The same explanation as for that case applies to them and should be added as a comment to the tests:. ```; // We cannot EXPECT_EQ in this test, because we compare actually different; // calculations. The multiple additions and FMA operations involved in the; // calculation of the multiple parts introduces different rounding errors; // on the CPU level than the single calculation over all events at once.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12832
https://github.com/root-project/root/pull/12833:20,Availability,error,error,20,Fixes Windows patch error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12833
https://github.com/root-project/root/pull/12833:14,Deployability,patch,patch,14,Fixes Windows patch error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12833
https://github.com/root-project/root/pull/12834:27,Availability,failure,failures,27,Should fix the out-of-sync failures :crossed_fingers:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12834
https://github.com/root-project/root/pull/12835:404,Modifiability,refactor,refactored,404,"The new test statistic tests with the BatchMode were disabled for quite; some time, because they didn't support the new BatchMode with the; RooFitDriver yet. Initial support for the BatchMode in `RooUnbinnedL` is added in this; commit, such that the tests are passing again and can be enabled. To make the propagation of the batch mode option to `RooUnbinnedL` easier, the `buildLikelihood` function was refactored to use the C++ builder pattern. With this, it gets easier to manage a growing set of likelihood creation options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12835
https://github.com/root-project/root/pull/12835:8,Testability,test,test,8,"The new test statistic tests with the BatchMode were disabled for quite; some time, because they didn't support the new BatchMode with the; RooFitDriver yet. Initial support for the BatchMode in `RooUnbinnedL` is added in this; commit, such that the tests are passing again and can be enabled. To make the propagation of the batch mode option to `RooUnbinnedL` easier, the `buildLikelihood` function was refactored to use the C++ builder pattern. With this, it gets easier to manage a growing set of likelihood creation options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12835
https://github.com/root-project/root/pull/12835:23,Testability,test,tests,23,"The new test statistic tests with the BatchMode were disabled for quite; some time, because they didn't support the new BatchMode with the; RooFitDriver yet. Initial support for the BatchMode in `RooUnbinnedL` is added in this; commit, such that the tests are passing again and can be enabled. To make the propagation of the batch mode option to `RooUnbinnedL` easier, the `buildLikelihood` function was refactored to use the C++ builder pattern. With this, it gets easier to manage a growing set of likelihood creation options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12835
https://github.com/root-project/root/pull/12835:250,Testability,test,tests,250,"The new test statistic tests with the BatchMode were disabled for quite; some time, because they didn't support the new BatchMode with the; RooFitDriver yet. Initial support for the BatchMode in `RooUnbinnedL` is added in this; commit, such that the tests are passing again and can be enabled. To make the propagation of the batch mode option to `RooUnbinnedL` easier, the `buildLikelihood` function was refactored to use the C++ builder pattern. With this, it gets easier to manage a growing set of likelihood creation options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12835
https://github.com/root-project/root/pull/12837:212,Deployability,update,updated,212,"We *know* C++20 is failing the test suite, make the builds green by adding C++20 support to a PR rather than master. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12837
https://github.com/root-project/root/pull/12837:59,Energy Efficiency,green,green,59,"We *know* C++20 is failing the test suite, make the builds green by adding C++20 support to a PR rather than master. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12837
https://github.com/root-project/root/pull/12837:31,Testability,test,test,31,"We *know* C++20 is failing the test suite, make the builds green by adding C++20 support to a PR rather than master. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12837
https://github.com/root-project/root/pull/12837:182,Testability,test,tested,182,"We *know* C++20 is failing the test suite, make the builds green by adding C++20 support to a PR rather than master. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12837
https://github.com/root-project/root/pull/12838:121,Availability,error,error,121,"A one-line fix, but should be backported!. If the parameter was negative, it was slipping past this line and causing nan error to come back from the function!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12838
https://github.com/root-project/root/pull/12839:9,Testability,benchmark,benchmark,9,Turn the benchmark used to obtain results for CHEP 2023 into a roofit test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12839
https://github.com/root-project/root/pull/12839:70,Testability,test,test,70,Turn the benchmark used to obtain results for CHEP 2023 into a roofit test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12839
https://github.com/root-project/root/issues/12840:1202,Availability,down,download,1202,"- [ √ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. If the parameter list of a function has a trailing comma (e.g. funct(int a, int b,){} ) then the second parameter cannot be specified from the command line (e.g. root 'funct.C(1,2)' ). ### Expected behavior. Both parameters should be usable. ### To Reproduce. /* Bug Report; * This works:; * root -b -q 'bug.C(""asdf"")'; * This does not:; * root -b -q 'bug.C(""asdf"",""xyzzy"")'; *; * You must remove the comma after param2 to fix this.; */. void bug(; 		 const Char_t *param1 = ""input Text 1"",; 		 const Char_t *param2 = ""input Text 2"", // The comma here breaks the code; ); {; cout << param1 << endl;; cout << param2 << endl;; }. ### Setup. 1. ROOT version; Version 5.34/38 12 March 2018 ; 3. Operating system; NAME=""Scientific Linux""; VERSION=""7.3 (Nitrogen)""; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Installed on rcas node at Brookhaven National Lab. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12840
https://github.com/root-project/root/issues/12840:1184,Deployability,install,install,1184,"- [ √ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. If the parameter list of a function has a trailing comma (e.g. funct(int a, int b,){} ) then the second parameter cannot be specified from the command line (e.g. root 'funct.C(1,2)' ). ### Expected behavior. Both parameters should be usable. ### To Reproduce. /* Bug Report; * This works:; * root -b -q 'bug.C(""asdf"")'; * This does not:; * root -b -q 'bug.C(""asdf"",""xyzzy"")'; *; * You must remove the comma after param2 to fix this.; */. void bug(; 		 const Char_t *param1 = ""input Text 1"",; 		 const Char_t *param2 = ""input Text 2"", // The comma here breaks the code; ); {; cout << param1 << endl;; cout << param2 << endl;; }. ### Setup. 1. ROOT version; Version 5.34/38 12 March 2018 ; 3. Operating system; NAME=""Scientific Linux""; VERSION=""7.3 (Nitrogen)""; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Installed on rcas node at Brookhaven National Lab. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12840
https://github.com/root-project/root/issues/12840:1237,Deployability,Install,Installed,1237,"- [ √ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. If the parameter list of a function has a trailing comma (e.g. funct(int a, int b,){} ) then the second parameter cannot be specified from the command line (e.g. root 'funct.C(1,2)' ). ### Expected behavior. Both parameters should be usable. ### To Reproduce. /* Bug Report; * This works:; * root -b -q 'bug.C(""asdf"")'; * This does not:; * root -b -q 'bug.C(""asdf"",""xyzzy"")'; *; * You must remove the comma after param2 to fix this.; */. void bug(; 		 const Char_t *param1 = ""input Text 1"",; 		 const Char_t *param2 = ""input Text 2"", // The comma here breaks the code; ); {; cout << param1 << endl;; cout << param2 << endl;; }. ### Setup. 1. ROOT version; Version 5.34/38 12 March 2018 ; 3. Operating system; NAME=""Scientific Linux""; VERSION=""7.3 (Nitrogen)""; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Installed on rcas node at Brookhaven National Lab. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12840
https://github.com/root-project/root/issues/12840:619,Usability,usab,usable,619,"- [ √ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. If the parameter list of a function has a trailing comma (e.g. funct(int a, int b,){} ) then the second parameter cannot be specified from the command line (e.g. root 'funct.C(1,2)' ). ### Expected behavior. Both parameters should be usable. ### To Reproduce. /* Bug Report; * This works:; * root -b -q 'bug.C(""asdf"")'; * This does not:; * root -b -q 'bug.C(""asdf"",""xyzzy"")'; *; * You must remove the comma after param2 to fix this.; */. void bug(; 		 const Char_t *param1 = ""input Text 1"",; 		 const Char_t *param2 = ""input Text 2"", // The comma here breaks the code; ); {; cout << param1 << endl;; cout << param2 << endl;; }. ### Setup. 1. ROOT version; Version 5.34/38 12 March 2018 ; 3. Operating system; NAME=""Scientific Linux""; VERSION=""7.3 (Nitrogen)""; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Installed on rcas node at Brookhaven National Lab. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12840
https://github.com/root-project/root/issues/12842:224,Availability,avail,available,224,"A follow-up from the [discussion on #12664](https://github.com/root-project/root/pull/12664#discussion_r1175726403). The main questions are:. 1. Is a ""dense representation"" (bit vector + default constructed elements for non-available items) really needed; 2. Where is the break-even for the dense representation vs. the sparse representation; 3. Does a ""modified dense"" representation make sense? The modified dense representation would skip creating unavailable items. In order to avoid counting all the 1-bits from the start of the cluster, this representation would need to additionally store the cumulative number of 1 bits per page, e.g. in the page meta-data or in a separate column. To help answer the question, we should fill a table with size figures for the following tests with a few MB of data:. - Nullable field of `bool`, `char`, `float`, `double`, `struct` of a few tens of bytes; - Fill levels 0%, 10%, 50%, 90%, 100%; - Using sparse, dense, modified dense representation; - zstd compressed and uncompressed. For typical compression ratios, the data should follow a typical distribution, e.g. Gauss.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12842
https://github.com/root-project/root/issues/12842:482,Safety,avoid,avoid,482,"A follow-up from the [discussion on #12664](https://github.com/root-project/root/pull/12664#discussion_r1175726403). The main questions are:. 1. Is a ""dense representation"" (bit vector + default constructed elements for non-available items) really needed; 2. Where is the break-even for the dense representation vs. the sparse representation; 3. Does a ""modified dense"" representation make sense? The modified dense representation would skip creating unavailable items. In order to avoid counting all the 1-bits from the start of the cluster, this representation would need to additionally store the cumulative number of 1 bits per page, e.g. in the page meta-data or in a separate column. To help answer the question, we should fill a table with size figures for the following tests with a few MB of data:. - Nullable field of `bool`, `char`, `float`, `double`, `struct` of a few tens of bytes; - Fill levels 0%, 10%, 50%, 90%, 100%; - Using sparse, dense, modified dense representation; - zstd compressed and uncompressed. For typical compression ratios, the data should follow a typical distribution, e.g. Gauss.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12842
https://github.com/root-project/root/issues/12842:778,Testability,test,tests,778,"A follow-up from the [discussion on #12664](https://github.com/root-project/root/pull/12664#discussion_r1175726403). The main questions are:. 1. Is a ""dense representation"" (bit vector + default constructed elements for non-available items) really needed; 2. Where is the break-even for the dense representation vs. the sparse representation; 3. Does a ""modified dense"" representation make sense? The modified dense representation would skip creating unavailable items. In order to avoid counting all the 1-bits from the start of the cluster, this representation would need to additionally store the cumulative number of 1 bits per page, e.g. in the page meta-data or in a separate column. To help answer the question, we should fill a table with size figures for the following tests with a few MB of data:. - Nullable field of `bool`, `char`, `float`, `double`, `struct` of a few tens of bytes; - Fill levels 0%, 10%, 50%, 90%, 100%; - Using sparse, dense, modified dense representation; - zstd compressed and uncompressed. For typical compression ratios, the data should follow a typical distribution, e.g. Gauss.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12842
https://github.com/root-project/root/pull/12843:45,Deployability,release,release,45,Python 3.11 is supported by the latest Numba release https://numba.readthedocs.io/en/stable/release-notes.html#version-0-57-0-1-may-2023,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12843
https://github.com/root-project/root/pull/12843:92,Deployability,release,release-notes,92,Python 3.11 is supported by the latest Numba release https://numba.readthedocs.io/en/stable/release-notes.html#version-0-57-0-1-may-2023,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12843
https://github.com/root-project/root/pull/12844:145,Deployability,update,updated,145,# This Pull request:. ## Changes or fixes:; https://github.com/root-project/root/issues/6438. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12844
https://github.com/root-project/root/pull/12844:115,Testability,test,tested,115,# This Pull request:. ## Changes or fixes:; https://github.com/root-project/root/issues/6438. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12844
https://github.com/root-project/root/pull/12845:157,Availability,error,error,157,"In v6-30 we no longer record the kIsOnHeap and kNotDeleted, however older version of ROOT do not yet set them properly when reading. This leads to spurrious error message like:. ```; Error in <TList::Clear>: A list is accessing an object (0x2d77b50) already deleted (list name = TList); ```. But also failure in some case where action is not taken because the object is incorrect thought to be already deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12845
https://github.com/root-project/root/pull/12845:183,Availability,Error,Error,183,"In v6-30 we no longer record the kIsOnHeap and kNotDeleted, however older version of ROOT do not yet set them properly when reading. This leads to spurrious error message like:. ```; Error in <TList::Clear>: A list is accessing an object (0x2d77b50) already deleted (list name = TList); ```. But also failure in some case where action is not taken because the object is incorrect thought to be already deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12845
https://github.com/root-project/root/pull/12845:301,Availability,failure,failure,301,"In v6-30 we no longer record the kIsOnHeap and kNotDeleted, however older version of ROOT do not yet set them properly when reading. This leads to spurrious error message like:. ```; Error in <TList::Clear>: A list is accessing an object (0x2d77b50) already deleted (list name = TList); ```. But also failure in some case where action is not taken because the object is incorrect thought to be already deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12845
https://github.com/root-project/root/pull/12845:163,Integrability,message,message,163,"In v6-30 we no longer record the kIsOnHeap and kNotDeleted, however older version of ROOT do not yet set them properly when reading. This leads to spurrious error message like:. ```; Error in <TList::Clear>: A list is accessing an object (0x2d77b50) already deleted (list name = TList); ```. But also failure in some case where action is not taken because the object is incorrect thought to be already deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12845
https://github.com/root-project/root/pull/12845:218,Security,access,accessing,218,"In v6-30 we no longer record the kIsOnHeap and kNotDeleted, however older version of ROOT do not yet set them properly when reading. This leads to spurrious error message like:. ```; Error in <TList::Clear>: A list is accessing an object (0x2d77b50) already deleted (list name = TList); ```. But also failure in some case where action is not taken because the object is incorrect thought to be already deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12845
https://github.com/root-project/root/pull/12845:200,Usability,Clear,Clear,200,"In v6-30 we no longer record the kIsOnHeap and kNotDeleted, however older version of ROOT do not yet set them properly when reading. This leads to spurrious error message like:. ```; Error in <TList::Clear>: A list is accessing an object (0x2d77b50) already deleted (list name = TList); ```. But also failure in some case where action is not taken because the object is incorrect thought to be already deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12845
https://github.com/root-project/root/pull/12846:219,Deployability,update,update,219,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12846
https://github.com/root-project/root/pull/12846:488,Deployability,update,update,488,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12846
https://github.com/root-project/root/pull/12846:888,Deployability,update,update,888,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12846
https://github.com/root-project/root/pull/12846:129,Modifiability,extend,extended,129,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12846
https://github.com/root-project/root/pull/12846:168,Security,hash,hashing,168,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12846
https://github.com/root-project/root/pull/12847:219,Deployability,update,update,219,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12847
https://github.com/root-project/root/pull/12847:488,Deployability,update,update,488,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12847
https://github.com/root-project/root/pull/12847:888,Deployability,update,update,888,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12847
https://github.com/root-project/root/pull/12847:129,Modifiability,extend,extended,129,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12847
https://github.com/root-project/root/pull/12847:168,Security,hash,hashing,168,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12847
https://github.com/root-project/root/pull/12848:204,Energy Efficiency,efficient,efficient,204,This is related to https://github.com/root-project/root/issues/12783 (the symptom descriptions) and https://github.com/root-project/root/pull/12846 (the underlying fix) and as a side effect of being more efficient works around the issue (which is related to updating a file).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12848
https://github.com/root-project/root/pull/12849:204,Energy Efficiency,efficient,efficient,204,This is related to https://github.com/root-project/root/issues/12783 (the symptom descriptions) and https://github.com/root-project/root/pull/12846 (the underlying fix) and as a side effect of being more efficient works around the issue (which is related to updating a file).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12849
https://github.com/root-project/root/issues/12852:175,Availability,error,error,175,"- [x] Checked for duplicates. ### Describe the bug; Calling `Display` on an RDataFrame created from an RNTuple that contains user-defined classes causes ROOT to crash with an error message `No on-disk column information for for field X`, where `X` is a data member of the class in question. Other methods appear to be working correctly, as well as explicitly specifying which data member should be read (i.e. `df.Display({""electrons.pt""})`). ### Expected behavior; Nothing crashes and an `RDisplay` object is returned. ### To Reproduce; Minimal reproducer:; ```c++; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleDS.hxx>; #include <ROOT/RNTupleModel.hxx>. #include <iostream>. using ROOT::Experimental::RNTupleModel;; using ROOT::Experimental::RNTupleWriteOptions;; using ROOT::Experimental::RNTupleWriter;. const std::string kNTupleName = ""N"";; const std::string kNTupleFileName = ""ntuple_electrons.root"";. struct Electron {; float pt = 0;; };. void write() {; auto model = RNTupleModel::Create();; auto fldElectrons = model->MakeField<Electron>(""electrons"");. auto ntuple = RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. fldElectrons->pt = 42.;; ntuple->Fill();; }. void read() {; auto df = ROOT::RDF::Experimental::FromRNTuple(kNTupleName, kNTupleFileName);; auto dfDef = df.Define(""ptSquared"", ""electrons.pt * electrons.pt"");. dfDef.Describe().Print();. auto dfDisp = df.Display();; dfDisp->Print();; }. void ntuple_rdf_custom_class() {; write();; read();; }; ``` . ### Setup; 1. ROOT version: master; 2. Operating system: Ubuntu 22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12852
