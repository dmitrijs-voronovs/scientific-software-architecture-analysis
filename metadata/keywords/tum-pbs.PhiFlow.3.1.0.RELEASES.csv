quality_attribute,keyword,matched_word,sentence,source,author,repo,version,wiki,url
Availability,error,error,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0
Deployability,release,release,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0
Modifiability,flexible,flexible,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0
Performance,load,loaded,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0
Security,hash,hash,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0
Usability,simpl,simplifying,"Version 3.0 marks a milestone release for Φ-Flow, introducing many new features and simplifying the API. #165 . **Highlights**. * Support for unstructured meshes. This includes many field and physics operations, allowing grid simulations to be ported to FVM with little effort. Meshes can be loaded from `.su2` and `.gmsh` files.; * Major plotting improvements: new plot types, such as bar charts, histograms, streamlines, points clouds with cmap. More flexible arguments, e.g. error bars, color, alpha, same_scale.; * Improved documentation: The GitHub page now lists a collection of examples in the form of Jupyter notebooks.; * Sparse neighborhood search using GPU-enabled hash grids. This enables simulations with interacting particles, such as SPH.; * All linear solves can now use the ILU preconditioner.; * The `phi.math` package is now stand-along as the `phiml` library.; * All types of fields have been merge into the `Field` class which makes a lot of functionality more easily accessible. The legacy constructors still work but now return `Field` instances.; * Boundaries are now easier to define, e.g. `{'x-': 0, 'x+': 1}`; * Support for geometries defined by SDF grids.",MatchSource.RELEASES,tum-pbs,PhiFlow,3.1.0,,https://github.com/tum-pbs/PhiFlow/releases/tag/3.0.0
